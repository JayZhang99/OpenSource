commit_msg,labels
"KAFKA-8305; Support default partitions & replication factor in AdminClient#createTopic (KIP-464) (#6728)This commit makes three changes:- Adds a constructor for NewTopic(String, Optional<Integer>, Optional<Short>)which allows users to specify Optional.empty() for numPartitions orreplicationFactor in order to use the broker default.- Changes AdminManager to accept -1 as valid options for replicationfactor and numPartitions (resolving to broker defaults).- Makes --partitions and --replication-factor optional arguments when creatingtopics using kafka-topics.sh.- Adds a dependency on scalaJava8Compat library to make it simpler toconvert Scala Option to Java OptionalReviewers: Ismael Juma <ismael@juma.me.uk>, Ryanne Dolan <ryannedolan@gmail.com>, Jason Gustafson <jason@confluent.io>",5
KAFKA-4000; Collect and record per-topic consumer metricsImprove consumer metric collection by collecting and recording metrics per topic.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #1684 from vahidhashemian/KAFKA-4000,5
"KAFKA-3286: Add plugin to quickly check for outdated dependenciesAdds a gradle task to generate a report of outdate release dependencies:`gradle dependencyUpdates`Updates a few minor versions.Author: Grant Henke <granthenke@gmail.com>Reviewers: Ismael Juma, Gwen ShapiraCloses #973 from granthenke/outdated-deps",5
"MINOR: Change getMessage to toString (#4790)Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-12635: Don't emit checkpoints for partitions without offset-syncs (#11748)Reviewers: Luke Chen <showuon@gmail.com>,  Viktor Somogyi-Vass <viktorsomogyi@gmail.com>, Dániel Urbán <urb.daniel7@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",1
"KAFKA-9778: Add methods to validate and assert connector configurations in integration tests with EmbeddedConnectCluster (#8359)* Add validateConnector functionality to the EmbeddedConnectCluster* PR Revision - added ConnectException conversion, validateConnectorConfig calls to ExampleConnectIntegrationTest* PR revision - Added method to EmbeddedConnectClusterAssertionsReviewers: Konstantine Karantasis <konstantine@confluent.io>, Chia-Ping Tsai <chia7712@gmail.com>",5
"KAFKA-8602: Fix bug in stand-by task creation (#7008)Reviewers: Matthias J. Sax <mjsax@apache.org>,  John Roesler <john@confluent.io>, Boyang Chen <boyang@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
KAFKA-3817: handle null keys in KTableRepartitionMapAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Jeff Klukas <jeff@klukas.net>Closes #1488 from guozhangwang/K3817-handle-null-groupedkey,0
"KAFKA-2070; Replace Offset{Request,Response} with o.a.k.c requests equivalent…uivalentAuthor: Grant Henke <granthenke@gmail.com>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #663 from granthenke/offset-list",1
"MINOR: Change type of StreamsConfig.BOOTSTRAP_SERVERS_CONFIG to ListThis is an improved version of https://github.com/apache/kafka/pull/1374, where we include a unit test./cc ijuma and guozhangwangAuthor: Guozhang Wang <wangguoz@gmail.com>Author: Michael G. Noll <michael@confluent.io>Reviewers: Michael G. Noll <michael@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #1377 from miguno/streamsconfig-multiple-bootstrap-servers",5
"KAFKA-2578; Client Metadata internal state should be synchronizedAuthor: Edward Ribeiro <edward.ribeiro@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #659 from ijuma/KAFKA-2578",5
"KAFKA-10632; Raft client should push all committed data to state machines (#9482)In #9418, we add a listener to the `RaftClient` interface. In that patch, we used it only to send commit notifications for writes from the leader. In this PR, we extend the `handleCommit` API to accept all committed data and we remove the pull-based `read` API. Additionally, we add two new callbacks to the listener interface in order to notify the state machine when the raft client has claimed or resigned leadership.Finally, this patch allows the `RaftClient` to support multiple listeners. This is necessary for KIP-500 because we will have one listener for the controller role and one for the broker role.Reviewers: José Armando García Sancio <jsancio@users.noreply.github.com>, Boyang Chen <boyang@confluent.io>",5
"KAFKA-12190: Fix setting of file permissions on non-POSIX filesystems (#9947)Previously, StateDirectory used PosixFilePermissions to configure its directories' permissions which fails on Windows as its file system is not POSIX-compliant. This PR updates StateDirectory to fall back to the File API on non-POSIX-compliant file systems. Reviewers: Luke Chen <43372967+showuon@users.noreply.github.com>, Anna Sophie Blee-Goldman <ableegoldman@apache.org>",1
Update docs to reflect kafka trademark statusUpdated a couple places in docs with the 'registered' trademark symbol.Author: Derrick Or <derrickor@gmail.com>Reviewers: Jun Rao <junrao@gmail.com>Closes #4028 from derrickdoo/kafka-trademark-status,2
"KAFKA-9360: Allow disabling MM2 heartbeat and checkpoint emissions (#7887)`emit.heartbeats.enabled` and `emit.checkpoints.enabled` are supposed tobe the knobs to control if the heartbeat message or checkpoint messagewill be sent or not to the topics respectively. In our experiments,setting them to false will not suspend the activity in their SourceTasks,e.g. MirrorHeartbeatTask, MirrorCheckpointTask.The observations are, when setting those knobs to false, huge volume of`SourceRecord` are being sent without interval, causing significantly highCPU usage and GC time  of MirrorMaker 2 instance and congesting the singlepartition of the heartbeat topic and checkpoint topic.The proposed fix in the following PR is to (1) explicitly check if `interval`is set to negative (e.g. -1), when the `emit.heartbeats.enabled` or`emit.checkpoints.enabled` is off. (2) if `interval` is indeed set to negative,no task is created.Reviewers: Mickael Maison <mickael.maison@gmail.com>, Ryanne Dolan <ryannedolan@gmail.com>",1
Code clean up in FetcherRunnable and ZookeeperConsumerConnector; KAFKA-120; patched by junrao; reviewed by nehanarkhedegit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1160953 13f79535-47bb-0310-9956-ffa450edef68,1
KAFKA-1723; make the metrics name in new producer more standard; patched by Manikumar Reddy; reviewed by Jay Kreps and Jun Rao,1
"MINOR; Add producer id in exceptions thrown by ProducerStateManager (#9827)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, Jason Gustafson <jason@confluent.io>",5
"KAFKA-13037: ""Thread state is already PENDING_SHUTDOWN"" log spamDemote this from INFO to debug since it's absolutely spamming the logsReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",2
"KAFKA-8644; The Kafka protocol generator should allow null defaults for bytes and array fieldsAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Stanislav Kozlovski, Gwen ShapiraCloses #7059 from cmccabe/KAFKA-8644",5
"MINOR: Fix BaseHashTable sizing (#10334)The array backing BaseHashTable is intended to be sized as a power oftwo.  Due to a bug, the initial array size was calculated incorrectlyin some cases.Also make the maximum array size the largest possible 31-bit power oftwo.  Previously it was a smaller size but this was due to a typo.Reviewers: Ismael Juma <ismael@juma.me.uk>, Jose Sancio <jsancio@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",2
"MINOR: Fix Partition::toString method (#6971)The AllReplicas was only printing remote replica ids. This change printsall ids, including local one.Reviewers: José Armando García Sancio <jsancio@users.noreply.github.com>, Jason Gustafson <jason@confluent.io>",5
"MINOR: Re-use counter in mocking of LogSegment.size (#12021)When migrating from Easymock to Mockito, the mockito implemetnationdidn't have the same semantic as the Easymock implementation.Without this fix the mocking of LogSegment.size() always returns 0 becausea new AtomicInteger was getting created for each invocation ofLogSegment.size()Reviewers: Mickael Maison <mimaison@users.noreply.github.com>",1
"KAFKA-133 publish kafka to maven - patch by Maxime Brugidou with updates for depen by Otis Gospodnetic, reviewed by Joe Stein",5
MINOR: Move compression stream construction into CompressionTypeAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2536 from hachikuji/minor-move-compression-io-construction,4
"MINOR: Fix failing ConsumeBenchTest:test_multiple_consumers_specified_group_partitions_should_raise (#6015)This is the error message we're after:""You may not specify an explicit partition assignment when using multiple consumers in the same group.""We apparently changed it midway through #5810 and forgot to update the test.Reviewers: Dhruvil Shah <dhruvil@confluent.io>, Ismael Juma <ismael@juma.me.uk>",5
"KAFKA-8986: Allow null as a valid default for tagged fields. (#7585)Allow null as a valid default for tagged fields.  Fix a bunch of cases where this would previously result in null pointer dereferences.Also allow inferring FieldSpec#versions based on FieldSpec#taggedVersions.  Prefix 'key' with an underscore when it is used in the generated code, to avoid potential name collisions if someone names an RPC field ""key"".Allow setting setting hexadecimal constants and 64-bit contstants.Add a lot more test cases to SimpleExampleMessage.json.Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-4765; Fixed Intentionally Broken Hosts Resolving to 127.0.53.53 in testsWe are now using  artificially broken hosts that are not resolved as potentialcollisions (127.0.53.53s) by some DNS servers.This change is the only way to build while using Google's `8.8.8.8` (at least in my network).Author: Armin Braun <me@obrown.io>Reviewers: Dong Lin <lindong28@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #2552 from original-brownbear/KAFKA-4765",1
MINOR: Fix the doc of scheduled.rebalance.max.delay.ms config property (#7242)Author: Konstantine Karantasis <konstantine@confluent.io>Reviewer: Randall Hauch <rhauch@gmail.com>,5
"KAFKA-10847: Fix spurious results on left/outer stream-stream joins (#10462)Fixes the issue with https://issues.apache.org/jira/browse/KAFKA-10847.To fix the above problem, the left/outer stream-stream join processor uses a buffer to hold non-joined records for some time until the window closes, so they are not processed if a join is found during the join window time. If the window of a record closes and a join was not found, then this should be emitted and processed by the consequent topology processor.A new time-ordered window store is used to temporary hold records that do not have a join and keep the records keys ordered by time. The KStreamStreamJoin has a reference to this new store . For every non-joined record seen, the processor writes it to this new state store without processing it. When a joined record is seen, the processor deletes the joined record from the new state store to prevent further processing.Records that were never joined at the end of the window + grace period are emitted to the next topology processor. I use the stream time to check for the expiry time for determinism results . The KStreamStreamJoin checks for expired records and emit them every time a new record is processed in the join processor.The new state store is shared with the left and right join nodes. The new store needs to serialize the record keys using a combined key of <joinSide-recordKey>. This key combination helps to delete the records from the other join if a joined record is found. Two new serdes are created for this, KeyAndJoinSideSerde which serializes a boolean value that specifies the side where the key is found, and ValueOrOtherValueSerde that serializes either V1 or V2 based on where the key was found.Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-6100: Down-grade RocksDB to 5.7.3Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Vahid Hashemian <vahidhashemian@us.ibm.com>, Damian Guy <damian.guy@gmail.com>, Bill Bejeck <bill@confluent.io>Closes #4136 from guozhangwang/K6100-rocksdb-580-regression",5
KAFKA-7768: Use absolute paths for javadoc (#6100)Reviewers: Guozhang Wang <wangguoz@gmail.com>,2
"KAFKA-3307; Add ApiVersions Request/Response and server side handling.The patch does the following.1. Adds ApiVersionsRequest/Response.2. Adds UNSUPPORTED_VERSION error and UnsupportedVersionException.3. Adds broker side handling of ApiVersionsRequest.Author: Ashish Singh <asingh@cloudera.com>Reviewers: Gwen Shapira, Ismael Juma, Magnus EdenhillCloses #986 from SinghAsDev/KAFKA-3307",1
"KAFKA-7005: Remove duplicate resource class. (#5184)This is a follow-on change requested as part of the initial PR for KIP-290 #5117.  @cmccabe requested that the `resource.Resource` class be factored out in favour of `ConfigResource` to avoid confusion between all the `Resource` implementations.Colin Patrick McCabe <colin@cmccabe.xyz>, Jun Rao <junrao@gmail.com>",5
MINOR: Enable broker/client compatibility tests for 2.5.0 release- Add missing broker/client compatibility tests for 2.5.0 releaseAuthor: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #9041 from omkreddy/compat,5
kafka-1337 followup to fix system tests,3
"KAFKA-3579; Reference both old and new consumer properties in `TopicCommand`Add references to the new consumer property 'max.partition.fetch.bytes' along with the old consumer property 'fetch.message.max.bytes' in the corresponding warning messages of TopicCommand.Also, create and leverage a static variable for the default value of the new consumer property.Also, use 'DEFAULT_...' for default propoerty constant names in the code instead of '..._DEFAULT'.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Manikumar reddy O <manikumar.reddy@gmail.com>, Ashish Singh <asingh@cloudera.com>, Grant Henke <granthenke@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #1239 from vahidhashemian/KAFKA-3579",1
"KAFKA-2447: Add capability to KafkaLog4jAppender to be able to use SSLAuthor: Ashish Singh <asingh@cloudera.com>Reviewers: Gwen Shapira, Ismael JumaCloses #175 from SinghAsDev/KAFKA-2447",1
MINOR: Word count should account for extra whitespaces between words (#10044)Reviewers: Matthias J. Sax <matthias@confluent.io>,5
"KAFKA-12369; Implement `ListTransactions` API (#10206)This patch implements the `ListTransactions` API as documented in KIP-664: https://cwiki.apache.org/confluence/display/KAFKA/KIP-664%3A+Provide+tooling+to+detect+and+abort+hanging+transactions.Reviewers: Tom Bentley <tbentley@redhat.com>, Chia-Ping Tsai <chia7712@gmail.com>",5
KAFKA-687; Provide a roundrobin partition assignment strategy that considers partitions from all topics; reviewed by Jun Rao and Guozhang Wang.,1
"KAFKA-12471: Implement createPartitions in KIP-500 mode (#10343)Implement the createPartitions RPC which adds more partitions to a topicin the KIP-500 controller.  Factor out some of the logic for validatingmanual partition assignments, so that it can be shared betweencreateTopics and createPartitions.  Add a startPartition argument to thereplica placer.Reviewers: Jason Gustafson <jason@confluent.io>",5
KAFKA-714: ConsoleConsumer throws SocketTimeoutException when fetching topic metadata; reviewed by Neha Narkhede,5
MINOR: Changed port of bootstrap server to defaultKafka is typically running on port 9092. The example named a different port what makes it difficult to run a bootstrap example without any further configuration.Author: Rafael Winterhalter <rafael.wth@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1074 from raphw/trunk,1
MINOR: Avoid compiler warnings when registering metrics in KafkaServerAuthor: Liquan Pei <liquanpei@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1280 from Ishiihara/minor-warning-fix,2
KAFKA-4301; Add more trace for SSL handshakeAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2027 from rajinisivaram/KAFKA-4301,5
"KAFKA-2452: Add new consumer option to mirror maker.Author: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Ben Stopford, Guozhang WangCloses #266 from becketqin/KAFKA-2452",1
KAFKA-6514; Add API version as a tag for the RequestsPerSec metric (#4506)Updated `RequestChannel` to include `version` as a tag for all RequestsPerSec metrics (KIP-272). Updated tests to verify that the extra tag exists.,3
MINOR: remove redundant parentheses from ControllerApis (#10546)Reviewers: Ismael Juma <ismael@juma.me.uk>,4
KAFKA-1005 Shutdown consumer at the end of consumer performance test.,3
"KAFKA-5251; Producer should cancel unsent AddPartitions and Produce requests on abortAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Apurva Mehta <apurva@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3161 from hachikuji/KAFKA-5251",5
"KAFKA-4319; Parallelize shutdown of fetchers in AbstractFetcherManager to speedup shutdownAuthor: Alexey Ozeritsky <aozeritsky@yandex-team.ru>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>Closes #2023 from resetius/AbstractFetcherManager-shutdown-speedup",1
"MINOR: mirror integration tests should not call System.exit (#9200)Reviewers: Ron Dagostino <rdagostino@confluent.io>, Rajini Sivaram <rajinisivaram@googlemail.com>",5
KAFKA-2246; UnknownTopicOrPartitionException should be an instance of InvalidMetadataException; reviewed by Ewen Cheslack-Postava and Joel Koshy,5
KAFKA-10572 mirror-maker config changes for KIP-629 (#9429)Author: Xavier Léauté <xavier@confluent.io>Reviewer: Randall Hauch <rhauch@gmail.com>,5
MINOR: Make the state change log more consistentUse logIdent to achieve this.Also fixed an issue where we were logging about replicas going offline withan empty set of replicas (i.e. no replicas had gone offline so no need to log).Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Jason Gustafson <jason@confluent.io>Closes #3869 from ijuma/improve-state-change-log,4
"KAFKA-4959; Remove controller concurrent access to non-threadsafe NetworkClient, Selector, and SSLEngineThis brought down a cluster by causing continuous controller moves.ZkClient's ZkEventThread and a RequestSendThread can concurrently use objects that aren't thread-safe:* Selector* NetworkClient* SSLEngine (this was the big one for us. We turn on SSL for interbroker communication).As per the ""Concurrency Notes"" section from https://docs.oracle.com/javase/7/docs/api/javax/net/ssl/SSLEngine.html:> two threads must not attempt to call the same method (either wrap() or unwrap()) concurrentlySSLEngine.wrap gets called in:* SslTransportLayer.write* SslTransportLayer.handshake* SslTransportLayer.closeIt turns out that the ZkEventThread and RequestSendThread can concurrently call SSLEngine.wrap:* ZkEventThread calls SslTransportLayer.close from ControllerChannelManager.removeExistingBroker* RequestSendThread can call SslTransportLayer.write or SslTransportLayer.handshake from NetworkClient.pollSuppose the controller moves for whatever reason. The former controller could have had a RequestSendThread whowas in the middle of sending out messages to the cluster while the ZkEventThread began executingKafkaController.onControllerResignation, which calls ControllerChannelManager.shutdown, which sequentially cleansup the controller-to-broker queue and connection for every broker in the cluster. This cleanup includes the callto ControllerChannelManager.removeExistingBroker as mentioned earlier, causing the concurrent call to SSLEngine.wrap.This concurrent call throws a BufferOverflowException which ControllerChannelManager.removeExistingBroker catches sothe ControllerChannelManager.shutdown moves onto cleaning up the next controller-to-broker queue and connection,skipping the cleanup steps such as clearing the queue, stopping the RequestSendThread, and removing the entry from itsbrokerStateInfo map.By failing out of the Selector.close, the sensors corresponding to the broker connection has not been cleaned up. Anylater attempt at initializing an identical Selector will result in a sensor collision and therefore cause Selectorinitialization to throw an exception. In other words, any later attempts by this broker to become controller againwill fail on initialization. When controller initialization fails, the controller deletes the /controller znode andlets another broker take over.Now suppose the controller moves enough times such that every broker hits the BufferOverflowException concurrencyissue. We're now guaranteed to fail controller initialization due to the sensor collision on every controllertransition, so the controller will move across brokers continuously.This patch avoids the concurrent use of non-threadsafe classes in ControllerChannelManager.removeExistingBrokerby shutting down the RequestSendThread before closing the NetworkClient.Author: Onur Karaman <okaraman@linkedin.com>Reviewers: Joel Koshy <jjkoshy.w@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #2746 from onurkaraman/KAFKA-4959",2
"MINOR: Make PushHttpMetricsReporter API compatible with releases back to 0.8.2.2This is follow up to #4072 which added the PushHttpMetricsReporter and converted some services to use it. We somehow missed some compatibility issues that made the ProducerPerformance tool fail when using a newer tools jar with older common/clients jar, which we do with some system tests so we have all the features we need in the tool but can build compatibility tests for older releases.This just adjusts some API usage to make the tool compatible with all previous releases.I have a full run of the tests starting [here](https://jenkins.confluent.io/job/system-test-kafka-branch-builder/1122/)Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #4214 from ewencp/fix-compatibility-sanity-check-tests",3
"KAFKA-7781; Add validation check for retention.ms topic property.Using AdminClient#alterConfigs, topic `retention.ms` property can be assigned to a value lesser than -1. This leads to inconsistency while describing the topic configuration. We should not allow values lesser than -1.Author: Kamal Chandraprakash <kamal.chandraprakash@gmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,Matthias J. Sax <matthias@confluent.io>Closes #6082 from kamalcph/KAFKA-7781",5
"KAFKA-7773; Add end to end system test relying on verifiable consumer (#6070)This commit creates an EndToEndTest base class which relies on the verifiable consumer. This will ultimately replace ProduceConsumeValidateTest which depends on the console consumer. The advantage is that the verifiable consumer exposes more information to use for validation. It also allows for a nicer shutdown pattern. Rather than relying on the console consumer idle timeout, which requires a minimum wait time, we can halt consumption after we have reached the last acked offsets. This should be more reliable and faster. The downside is that the verifiable consumer only works with the new consumer, so we cannot yet convert the upgrade tests. This commit converts only the replication tests and a flaky security test to use EndToEndTest.",3
"KAFKA-8319: Make KafkaStreamsTest a non-integration test class (#7382)Previous KafkaStreamsTest takes 2min20s on my local laptop, because lots of its integration test which is producing / consuming records, and checking state directory file system takes lots of time. On the other hand, these tests should be well simplified with mocks.This test reduces the test from a clumsy integration test class into a unit tests with mocks of its internal modules. And some other test functions should not be in KafkaStreamsTest actually and have been moved to other modular test classes. Now it takes 2s.Also it helps removing the potential flakiness of the following (some of them are claimed resolved only because we have not seen them recently, but after looking at the test code I can verify they are still flaky):* KAFKA-5818 (the original JIRA ticket indeed exposed a real issue that has been fixed, but the test itself remains flaky)* KAFKA-6215* KAFKA-7921* KAFKA-7990* KAFKA-8319* KAFKA-8427Reviewers: Bill Bejeck <bill@confluent.io>, John Roesler <john@confluent.io>, Bruno Cadonna <bruno@confluent.io>",5
"MINOR: ConsumerRecords are organized per topic partitionConsumerRecords has records organized per topic partition, not per topic as ConsumerRecords javadoc suggested.Author: Stevo Slavić <sslavic@gmail.com>Reviewers: Jason, GuozhangCloses #92 from sslavic/patch-6 and squashes the following commits:b08a58d [Stevo Slavić] MINOR: ConsumerRecords are organized per topic partition",2
"KAFKA-6054: Fix upgrade path from Kafka Streams v0.10.0 (#4779)Reviewers: Guozhang Wang <guozhang@confluent.io>, Bill Bejeck <bill@confluent.io>, John Roesler <john@confluent.io>, Damian Guy <damian@confluent.io>",5
"MINOR: checkstyle version upgrade: 8.20 -> 8.36.2 (#10656)Details:* Release notes: https://checkstyle.org/releasenotes.html#Release_8.36.2* Checkstyle version 8.42 should be skipped (lots of false positives, see here: https://github.com/checkstyle/checkstyle/issues/9957)* More recent Checkstyle versions (i.e. 8.37 and above) are imposing more strict indentationrules.",0
"KAFKA-7228: Set errorHandlingMetrics for dead letter queueDLQ reporter does not get a `errorHandlingMetrics` object when created by the worker. This results in an NPE.Signed-off-by: Arjun Satish <arjunconfluent.io>*More detailed description of your change,if necessary. The PR title and PR message becomethe squashed commit message, so use a separatecomment to ping reviewers.**Summary of testing strategy (including rationale)for the feature or bug fix. Unit and/or integrationtests are expected for any behaviour change andsystem tests should be considered for larger changes.*Author: Arjun Satish <arjun@confluent.io>Reviewers: Konstantine Karantasis <konstantine@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #5440 from wicknicks/KAFKA-7228",5
KAFKA-4266; ReassignPartitionsClusterTest: ensure ZK publication is completed before startIncrease the reliability of the one temporal comparison in ReassignPartitionsClusterTest by imposing a delay after ZK is updated. This should be more reliable than just increasing the amount of data.This relates to a previous PR: https://github.com/apache/kafka/pull/1982Author: Ben Stopford <benstopford@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1997 from benstopford/KAFKA-4266,5
"KAFKA-4037: Make Connect REST API retries aware of 409 CONFLICT errorsAuthor: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #1733 from ewencp/rest-api-retries",5
"KAFKA-3382: Add system test for ReplicationVerificationToolAuthor: Ashish Singh <asingh@cloudera.com>Reviewers: Geoff Anderson <geoff@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1160 from SinghAsDev/KAFKA-3382",5
MINOR: Relax Percentiles test (#8748)Decrease test sensitivity to +/- 20% to hopefully eliminate flakiness.Reviewers: John Roesler <vvcephei@apache.org>,3
"KAFKA-7460: Fix Connect Values converter date format patternSwitches to normal year format instead of week date years and day of month instead of day of year.This is directly from #4820, but separated into a different JIRA/PR to keep the fixes independent. Original authorship should be maintained in the commit.Author: Amit Sela <amitsela33@gmail.com>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #5718 from ewencp/fix-header-converter-date-format",5
System Test - Log Retention Cases should wait longer before getting the common starting offset in replica log segments; patched by John Fung; reviewed by Jun Rao; KAFKA-605git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1410547 13f79535-47bb-0310-9956-ffa450edef68,2
"MINOR: add upgrade note for KIP-173 topic configsAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3921 from dguy/minor-kip-173-docs",2
"kafka-2210; KafkaAuthorizer: Add all public entities, config changes and changes to KafkaAPI and kafkaServer to allow pluggable authorizer implementation; patched by Parth Brahmbhatt; reviewed Ismael Juma and Jun Rao",1
MINOR: Update Trogdor ConnectionStressWorker status at the end of execution (#6445)Reviewers: Colin P. McCabe <cmccabe@apache.org>,1
"KAFKA-3850: WorkerSinkTask commit prior to rebalance should be retried on wakeupAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Liquan Pei <liquanpei@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1511 from hachikuji/retry-commit-on-wakeup-in-sinks",1
MINOR: Update LICENSE for 3.1 (#11622)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,5
"KAFKA-2061; Offer a --version flag to print the kafka version [KIP-278] (#639)Reviewers: Andy Lindeman, Jeremy Donahue, Jason Gustafson <jason@confluent.io>",5
"KAFKA-9375: Add names to all Connect threads (#7901)Reviewers: Mickael Maison <mickael.maison@gmail.com>, Ryanne Dolan <ryannedolan@gmail.com>, gcsaba2",1
"MINOR: Add thread dumps if broker node cannot be stopped (#5373)In system tests, it is useful to have the thread dumps if a broker cannot be stopped using SIGTERM.Reviewers: Xavier Léauté <xl+github@xvrl.net>, Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>",5
"MINOR: Fix comment in FinalizedFeatureChangeListener.initOrThrow (#9562)Fixed the param doc in FinalizedFeatureChangeListener.initOrThrow method. The parameter waitOnceForCacheUpdateMs is expected to be > 0, but the doc was incorrect.Reviewers: Chia-Ping Tsai <chia7712@gmail.com>",2
HOTFIX: Fix unsafe dependence on class name in VerifiableClientJavaAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #2736 from hachikuji/hotfix-verifiable-clients,0
"MINOR: Use kill_java_processes when killing ConsoleConsumer in system tests (#5297)Use `kill_java_processes` to stop the console consumer service since it uses jcmd instead of grep to find pids, which is more reliable.",1
KAFKA-2932: Adjust importance level of Kafka Connect configsewencp I went down the list of connect configs and it looks like only the internal converter configs are mismarked.  It looks like the `cluster` config that is present in the current docs is already gone.  The only other values I can see arguing to change importance on are the ssl configs (marked high) but they are consistent with the producer/consumer config docs so that's at least consistent.  Everything else marked high looks either mandatory or requires consideration in a production deployment to me.Author: Dustin Cote <dustin@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1653 from cotedm/KAFKA-2932,5
MINOR: Remove usage of deprecated junit.framework.AssertAuthor: Grant Henke <granthenke@gmail.com>Reviewers: Gwen ShapiraCloses #938 from granthenke/junit-dep,3
"MINOR: modify config specification of topic leveltopic level config delete config optionsuse --delete-config instead of --deleteConfigAuthor: eamon <zhang.eamon@hotmail.com>Reviewers: Ismael Juma, Grant Henke, Guozhang WangCloses #612 from EamonZhang/trunk",1
KAFKA-10418: Improve kafka-topics help text for altering configsReviewers: Colin P. McCabe <cmccabe@apache.org>,5
"MINOR: Correct logging and Javadoc in FetchSessionHandler (#11843)Reviewers: Justine Olshan <jolshan@confluent.io>, David Jacot <david.jacot@gmail.com>, Luke Chen <showuon@gmail.com>",5
"MINOR: rework JavaDoc for windowing related public API - also some code refactoring and bug fixesAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Eno Thereska, Guozhang WangCloses #2337 from mjsax/javaDocImprovements4",2
confusing reference to zk.connect in config/producer.properties; patched by yazgoo; reviewed by Jun Rao; kafka-553git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1396652 13f79535-47bb-0310-9956-ffa450edef68,5
KAFKA-13718: kafka-topics describe topic with default config will show `segment.bytes` overridden config (#12246)Reviewers: Luke Chen <showuon@gmail.com>,5
"KAFKA-9841: Revoke duplicate connectors and tasks when zombie workers return with an outdated assignment (#8453)With Incremental Cooperative Rebalancing, if a worker returns after it's been out of the group for sometime (essentially as a zombie worker) and hasn't voluntarily revoked its own connectors and tasks in the meantime, there's the possibility that these assignments have been distributed to other workers and redundant connectors and tasks might be running now in the Connect cluster. This PR complements previous fixes such as KAFKA-9184, KAFKA-9849 and KAFKA-9851 providing a last line of defense against zombie tasks: if at any rebalance round the leader worker detects that there are duplicate assignments in the group, it revokes them completely and resolves duplication with a correct assignment in the rebalancing round that will follow task revocation. Author: Wang <ywang50@ebay.com>Reviewer: Konstantine Karantasis <konstantine@confluent.io>",5
"KAFKA-6796; Fix surprising UNKNOWN_TOPIC error from requests to non-replicas (#4883)Currently if the client sends a produce request or a fetch request to a broker which isn't a replica,we return UNKNOWN_TOPIC_OR_PARTITION. This is a bit surprising to see when the topic actuallyexists. It would be better to return NOT_LEADER to avoid confusion. Clients typically handle both errors by refreshing metadata and retrying, so changing this should not cause any change in behavior on the client. This case can be hit following a partition reassignment after the leader is moved and the local replica is deleted.To validate the current behavior and the fix, I've added integration tests for the fetch and produce APIs.",3
KAFKA-983; Expose MirrorMaker cleanShutdown method. Patched by Swapnil Ghike.,4
MINOR: MetadataCache brokerId is not set on first run with generated broker id…broker idThis is because the id passed into the MetadataCache is the value from the config before the real broker id is generated.Author: Grant Henke <granthenke@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1632 from granthenke/metadata-id,5
"KAFKA-4032; Uncaught exceptions when autocreating topicshandled by adding a catch all for any unhandled exception. Because the jira specifically mentions the InvalidReplicationFactor exception, a test was added for that specific case.Author: Grant Henke <granthenke@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #1739 from granthenke/create-errors",0
"KAFKA-8399: bring back internal.leave.group.on.close config for KStream (#6779)As title states. We plan to merge this to both trunk and 2.3 if it could fix the stream system tests globally.Reference implementation: #6673Reviewers: Guozhang Wang <wangguoz@gmail.com>, Matthias J. Sax <mjsax@apache.org>",3
MINOR: Update Jetty to 9.4.11 (#5377),5
"KAFKA-4173; SchemaProjector should successfully project missing Struct field when target field is optionalAuthor: Shikhar Bhushan <shikhar@confluent.io>Reviewers: Konstantine Karantasis <konstantine@confluent.io>, Jason Gustafson <jason@confluent.io>Closes #1865 from shikhar/kafka-4173",5
"KAFKA-3662; Fix timing issue in SocketServerTest.tooBigRequestIsRejectedTest sends large request using multiple writes of length followed by request body. The first write should succeed, but since the server closes the connection on processing the length that is too big, subsequent writes may fail. Modified test to handle this exception.Author: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1349 from rajinisivaram/KAFKA-3662",5
KAFKA-3447; partitionState in UpdateMetadataRequest not logged properly state-change logAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Jun Rao <junrao@gmail.com>Closes #1117 from ijuma/kafka-3447-metadata-cache-logging,5
"MINOR: Add Streams landing pageContent and assets for the updated Streams API landing pageAuthor: Derrick Or <derrickor@gmail.com>Reviewers: Michael G. Noll <michael@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3540 from derrickdoo/streams-landing-page",5
"MINOR: Modified Exception handling for KIP-470 (#7461)Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KIP-543: Expand ConfigCommand's non-ZK functionality (#7780)Allow ConfigCommand to handle more operations without using direct ZooKeeper access, as described by KIP-543.  Also allow specifying entity type and name via a single flag-- again, as the KIP describes.Reviewers: Colin P. McCabe <cmccabe@apache.org>",1
kafka-954; tidy up README file for better general availability; patched by Jun Rao; reviewed by Joe Stein and Neha Narkhede,1
"KAFKA-8345: KIP-455 Protocol changes (part 1) (#7114)Add a new exception, NoReassignmentInProgressException.  Modify LeaderAndIsrRequest to include the AddingRepicas and RemovingReplicas fields.  Add the ListPartitionReassignments and AlterPartitionReassignments RPCs.Reviewers: Colin P. McCabe <cmccabe@apache.org>, Viktor Somogyi <viktorsomogyi@gmail.com>",1
"MINOR: Fixes for adding new DSL naming page (#7899)Added re-direct for new page and added link to Developer Guide pageReviewers:  Matthias J. Sax <mjsax@apache.org>, Sophie Blee-Goldman <sophie@confluent.io>,",5
MINOR: add unit test for Utils.murmur2 (#5926),3
KAFKA-9617 Replica Fetcher can mark partition as failed when max.message.bytes is changed (#8659)Skip to check the size of record if the record is already accepted by leader.Reviewers: Guozhang Wang <wangguoz@gmail.com>,4
"MINOR: Clarify acceptable recovery lag config doc (#11411)Reviewers: A. Sophie Blee-Goldman <ableegoldman@apache.org>, Andrew Eugene Choi < @andrewchoi5 >",2
"MINOR: MemoryRecords.sizeInBytes throws NPE when non-writable.I just noticed that `MemoryRecords.sizeInBytes` throws NPE when MemoryRecords is non-writable. `compressor` is explicitly set to null when `writable` is false (L56) at the construction time, for instance when `MemoryRecords.readableRecords` is used.guozhangwang Could you take a look when you have time?Author: David Jacot <david.jacot@gmail.com>Reviewers: Guozhang WangCloses #786 from dajac/kafka-npe",1
MINOR: fix error in quota_test.py system tests (#9443),3
KAFKA-9714; Eliminate unused reference to IBP in `TransactionStateManager` (#8293)Reviewers: Jason Gustafson <jason@confluent.io>,5
"MINOR: Update HttpClient to ""4.5.13""Update HttpClient to recent bug fix version 4.5.13.Author: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Chia-Ping Tsai <chia7712@gmail.com>Closes #10188 from omkreddy/http-client",0
MINOR: add equals and hashCode to WindowedguozhangwangAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #808 from ymatsuda/windowed_key,5
"KAFKA-8592; Fix for resolving variables for dynamic config as per KIP-421. (#7031)Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, Stanislav Kozlovski <familyguyuser192@windowslive.com>",1
kafka-1881; transient unit test failure in testDeleteTopicWithCleaner due to OOME; patched by Ewen Cheslack-Postava; reviewed by Jun Rao,3
"KAFKA-3257: disable bootstrap-test-env.sh --colour optionbecketqin, when you get a chance, could you take a look at the patch?Author: zhuchen1018 <amandazhu19620701@gmail.com>Reviewers: Grant Henke <granthenke@gmail.com>, Jiangjie Qin <becket.qin@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #969 from zhuchen1018/KAFKA-3257",5
"MINOR: set replication.factor to 1 to make StreamsBrokerCompatibilityService work with old broker (#10673)Reviewers: Matthias J. Sax <mjsax@conflunet.io>, A. Sophie Blee-Goldman <sophie@confluent.io>",5
"MINOR: Add system configuration to zk security exception messages (#7280)This patch ensures that relevant system configurations are included in exception messages when zk security validation fails.Reviewers: Vikas Singh <soondenana@users.noreply.github.com>,  José Armando García Sancio <jsancio@users.noreply.github.com>, Manikumar Reddy <manikumar.reddy@gmail.com>",1
MINOR: Remove staticmethod tag to be able to use logger of instance (#9086)A system test failed with the following error: global name 'self' is not definedThe reason was that `self` was accessed to log a message in a static method. This commit makes the method an instance method.Reviewer: Matthias J. Sax <matthias@confluent.io>,5
"Update note on upgrade from log4j to reload4j (#12164)Reviewers: Nikhil Bhatia <rite2nikhil@gmail.com>, Bruno Cadonna <cadonna@apache.org>",1
"KAFKA-10158: Fix flaky testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress (#9022)Set `replica.fetch.max.bytes` to `1` and produce multiple record batches to allowfor throttling to take place. This helps avoid a race condition where thereassignment would complete more quickly than expected causing anassertion to fail some times.Reviewers: Lucas Bradstreet <lucas@confluent.io>, Jason Gustafson <jason@confluent.io>, Chia-Ping Tsai <chia7712@gmail.com>, Ismael Juma <ismael@juma.me.uk>",5
"KAFKA-6360: Clear RocksDB Segments when store is closedNow that we support re-initializing state stores, we need to clear the segments when the store is closed so that they can be re-opened.Author: Damian Guy <damian.guy@gmail.com>Reviewers: Bill Bejeck <bbejeck@gmail.com>, Guozhang Wang <wangguoz@gmail.com>, Ted Yu <yuzhihong@gmail.com>Closes #4324 from dguy/kafka-6360",5
"KAFKA-2993: Calculate compression rate at close() callBuffer is rewound before the compression rate metric is updated which results in 0 compress rate. The fix is to include a new compressRate field to record the latest compression rate in ```close()``` and return it to sensorAuthor: Xiao, Tao <taxiao@ebay.com>Reviewers: Guozhang WangCloses #784 from xiaotao183/kafka-2993",3
Merge remote branch 'origin/0.8' into trunk,1
MINOR: Simplify the timeout logic to handle  protocol in Connect distributed system tests (#7806),3
"KAFKA-1356 Topic metadata requests takes too long to process; reviewed by Neha Narkhede, Joel Koshy and Guozhang Wang",5
"KAFKA-13079: Forgotten Topics in Fetch Requests may incorrectly use topic IDs (#11104)The FetchSessionHandler had a small bug in the session build method where we did not consider building a session where no partitions were added and the session previously did not use topic IDs. (ie, it was relying on at least one partition being added to signify whether topic IDs were present)Due to this, we could send forgotten partitions with the zero UUID. This would always result in an exception and closed session.This patch fixes the logic to check that any forgotten partitions have topic IDs. There is also a test added for the empty session situation when topic IDs are used and when topic names are used.Reviewers: David Jacot <djacot@confluent.io>, Jun Rao <junrao@gmail.com>",5
"MINOR: Fix Typo in MirrorMaker README file (#10144)Fix Typo in metric name of MirrorMaker README file from 'replication-latecny-ms' to 'replication-latency-ms'Reviewers: Mickael Maison <mickael.maison@gmail.com>, Eric Beaudet <galpha@gmail.com>",2
MINOR: replace by org.junit.jupiter.api.Tag by net.jqwik.api.Tag for raft module (#10791)The command `./gradlew raft:integrationTest`  can't run any integration test since `org.junit.jupiter.api.Tag` does not work for jqwik engine (see https://github.com/jlink/jqwik/issues/36#issuecomment-436535760). Reviewers: Ismael Juma <ismael@juma.me.uk>,2
KAFKA-2862: Fix MirrorMaker's message.handler.args descriptionAuthor: Ashish Singh <asingh@cloudera.com>Reviewers: Guozhang WangCloses #561 from SinghAsDev/KAFKA-2862,0
"KAFKA-13198: Stop replicas when reassigned (#11216)Stop the replica and resign the coordinators when a replica gets reassigned away from a topic partition.1. Implement localChanges in TopicsDelta and TopicDelta to return all of the partitions that were deleted, became leader and became follower for the given broker id.2. Add tests for TopicsDelta::localChanges3. Resign coordinators that were moved away from the consumer offset and transaction topic partitions.4. Add replica manager tests for testing reassignment of replicas and removal of topic.5. Add a new type LocalReplicaChanges that encapsulates topic partitions deleted, became leader and became follower.Reviewers: Jun Rao <junrao@gmail.com>",4
"MINOR: remove unneeded size and add lock coarsening to inMemoryKeyValueStore (#11370)Reviewers: Matthias J. Sax <matthias@confluent.io>, A. Sophie Blee-Goldman <sophie@confluent.io>",5
"KAFKA-13396: Allow create topic without partition/replicaFactor (#11429)[KIP-464](https://cwiki.apache.org/confluence/display/KAFKA/KIP-464%3A+Defaults+for+AdminClient%23createTopic) (PR: https://github.com/apache/kafka/pull/6728)made it possible to create topics without passing partition count and/or replica factor when usingthe admin client. We incorrectly disallowed this via https://github.com/apache/kafka/pull/10457 whiletrying to ensure validation was consistent between ZK and the admin client (in this case theinconsistency was intentional).Fix this regression and add tests for the command lines in quick start (i.e. create topic and describetopic) to make sure it won't be broken in the future.Reviewers: Lee Dongjin <dongjin@apache.org>, Ismael Juma <ismael@juma.me.uk>",1
"MINOR: Fix standby streamTime (#5288)#5253 broke standby restoration for windowed stores.Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-12426: Missing logic to create partition.metadata files in RaftReplicaManager (#10282)KIP-516 introduced partition.metadata file to persist the topic ID on the broker. It is created through handling the LeaderAndIsrRequest in ReplicaManager. (See https://github.com/apache/kafka/pull/10143 for the code path.) RaftReplicaManager was missing the analogue code path for Kip-500 code. Like in ReplicaManager, RaftReplicaManager will now check the partition.metadata file when handling metadata records.However, since we know that all raft topics will have topic IDs, we can simply set the ID in the log upon the log's creation.Updated the ReplicaManager path to do the same on newly created topics.There are also some tweaks to the checking logic to better handle the scenario when the log exists but is not yet associated to Partition (for example, upon startup after a shutdown).Tests added to ensure the file is created and that the correct error is thrown when the id is inconsistent.Added tests for creating the log with the new topic ID parameter.Also adds a few methods to get topic ID from MetadataImageBuilder as this is the most convenient way to get topic ID from RaftReplicaManager.Reviewers: Ron Dagostino <rdagostino@confluent.io>, Jason Gustafson <jason@confluent.io>",5
"MINOR: Adjust 'release.py' script to use shell when using gradlewAll and PGP signing, which were required to build the 2.6.0 RCs (#9045)",1
"MINOR: Preserve the assignment order from the LeaderAndIsr request (#7010)Leaders should make changes to the assignment and the ISR at the same time as part of processing the LeaderAndIsr requests. The leader should also preserve the order of assignment mainly for consistency with the Controller's code and data representation.Reviewers: Vikas Singh, David Arthur <mumrah@gmail.com>, Jason Gustafson <jason@confluent.io>",5
fix merge conflicts,5
"KAFKA-13046: add test coverage for AbstractStickyAssignorTest (#11156)1) Add tests for partitionsTransferringOwnership  a. it should include revoked partitions and partitions claimed by multiple consumers.  b. for non-equal assignment case (general case), it should be null so that the cooperative assignor knows to compute it from scratch2) Small optimization for allPreviousPartitionsToOwner check.Reviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",3
"Revert ""KAFKA-9533: ValueTransform forwards `null` values (#8108)"" (#8167)This reverts commit a41d3d8.Reviewers: Matthias J. Sax <mjsax@apache.org>,  John Roesler <john@confluent.io>",5
HOTFIX: Tools for releases prior to 0.10.1 need --new-consumer flagAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1931 from hachikuji/fix-broken-upgrade-tests,3
"kafka-1359; Followup on K1359: change nanoTime to currentTimeMillis in metrics; patched by Guozhang Wang; reviewed by Neha Narkhede, Jun Rao",4
"KAFKA-10270: A broker to controller channel manager (#9012)Add a broker to controller channel manager for use cases such as redirection and AlterIsr.Reviewers: David Arthur <mumrah@gmail.com>, Colin P. McCabe <cmccabe@apache.org>, Ismael Juma <ismael@juma.me.uk>Co-authored-by: Viktor Somogyi <viktorsomogyi@gmail.com>Co-authored-by: Boyang Chen <boyang@confluent.io>",5
"KAFKA-10469: Respect logging hierarchy (KIP-676) (#9266)Previously the root logger level was used, ignoring intervening loggers withdifferent levels.This was initially applied via fda67018375 and reverted via 75e53585255a0due to the fact that the previous behavior was specified in KIP-412. Ithas been been reapplied since KIP-676 has been approved.Reviewers: Stanislav Kozlovski <stanislav_kozlovski@outlook.com>, Lee Dongjin <dongjin@apache.org>, Ismael Juma <ismael@juma.me.uk>",4
kafka-1870; Cannot commit with simpleConsumer on Zookeeper only with Java API; patched by Jun Rao; reviewed by Jeol Koshy and Sriharsha Chintalapani,5
KAFKA-6087: Scanning plugin.path needs to support relative symlinks.Author: Konstantine Karantasis <konstantine@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #4092 from kkonstantine/KAFKA-6087-Scanning-plugin.path-needs-to-support-relative-symlinks,5
"KAFKA-9000: fix flaky FK join test by using TTD (#7517)Migrate this integration test to use TopologyTestDriver instead of running 3 Streams instances.Dropped one test that was attempting to produce specific interleavings. If anything, these should be verified deterministically by unit testing.Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-1119 Kafka 0.8.1 overwrites previous per topic config changes; reviewed by Joel Koshy, Guozhang Wang, Swapnil Ghike, Jay Kreps",4
"KAFKA-4018; Streams causing older slf4j-log4j library to be packaged along with newer versionThis is a regression caused by 0bb1d3ae.After that commit, Streams no longer has a direct dependency on slf4j-log4j12, but zkclienthas a dependency on an older version of slf4j-log4j12, so we get a transitive dependency onthe older version.The fix is to simply exclude the undesired dependencies from the zkclient dependency.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1704 from ijuma/kafka-4018-streams-duplicate-slf4j-log4j",2
"KAFKA-7198: Enhance KafkaStreams start method javadoc. (#5763)Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
KAFKA-6752: Enable unclean leader election metric (#4838)Reviewers: Jun Rao <junrao@gmail.com>,4
"KAFKA-8208: Change paper link directly to ASM (#6572)Reviewers: Matthias J. Sax <mjsax@apache.org>, Victoria Bialas <vicky@confluent.io>",5
"MINOR: Fix race condition in TestVerifiableProducer sanity test## Fixes race condition in TestVerifiableProducer sanity test:The test starts a producer, waits for at least 5 acks, and thenlogs in to the worker to grep for the producer process to figureout what version it is running.The problem was that the producer was set up to produce 1000 messagesat a rate of 1000 msgs/s and then exit. This means it will have atypical runtime slightly above 1 second.Logging in to the vagrant instance might take longer than that thusresulting in the process grep to fail, failing the test.This commit doesn't really fix the issue - a proper fix would be to tellthe producer to stick around until explicitly killed - but it increasesthe chances of the test passing, at the expense of a slightly longerruntime.## Improves error reporting when is_version() failsAuthor: Magnus Edenhill <magnus@edenhill.se>Reviewers: Apurva Mehta <apurva@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #2765 from edenhill/trunk",1
"KAFKA-5697: revert wakeup-based impl (#5035)The wakeup-based strategy caused more problems than itsolved, so we'll instead focus on KIP-266.Revert commit 2d8049b.Keep the metrics addition and the new test util.Also keep the tests for shutdown, although they must be ignored untilpoll(Duration) is done in the scope of KIP-266.Reviewers: Guozhang Wang <wangguoz@gmail.com>",3
KAFKA-3520: Add system tests for REST APIs of list connector plugins and config validationewen granders Ready for review.Author: Liquan Pei <liquanpei@gmail.com>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1195 from Ishiihara/system-test,5
kafka-1103; Consumer uses two zkclients; patched by Guozhang Wang; reviewed by Joel Koshy and Jun Rao,1
"KAFKA-5342; Clarify producer fatal/abortable errors and fix inconsistenciesThis patch improves documentation on the handling of errors for the idempotent/transactional producer. It also fixes a couple minor inconsistencies and improves test coverage. In particular:- UnsupportedForMessageFormat should be a fatal error for TxnOffsetCommit responses- UnsupportedVersion should be fatal for Produce responses and should be returned instead of InvalidRequestAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Apurva Mehta <apurva@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #3716 from hachikuji/KAFKA-5342",5
"MINOR: Remove redundant clause in secureAclsEnabled checkAlso include a few minor clean-ups.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Manikumar reddy O <manikumar.reddy@gmail.com>, Grant Henke <granthenke@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1623 from ijuma/fix-zk-inconsistent-security-check",0
"KAFKA-9338; Fetch session should cache request leader epoch (#7970)Since the leader epoch was not maintained in the fetch session cache, no validation would be done except for the initial (full) fetch request. This patch adds the leader epoch to the session cache and addresses the testing gaps.Reviewers: Ismael Juma <ismael@juma.me.uk>, Colin Patrick McCabe <cmccabe@apache.org>",3
"KAFKA-4840; BufferPool errors can cause buffer pool to go into a bad stateAuthor: Sean McCauliff <smccauliff@linkedin.com>Reviewers: Dong Lin <lindong28@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Jiangjie Qin <becket.qin@gmail.com>Closes #2659 from smccauliff/kafka-4840",2
KAFKA-4581; Fail early if multiple client login modules in sasl.jaas.configValidate and fail client connection if multiple login modules are specified in sasl.jaas.config to avoid harder-to-debug authentication failures later on.Author: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2356 from rajinisivaram/KAFKA-4581,5
"KAFKA-6070; add ipaddress and enum34 dependencies to docker imageAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>, Alex Ayars <alex.ayars@confluent.io>Closes #4084 from cmccabe/KAFKA-6070",5
"MINOR: Improve on reset integration test (#4436)* Parameterize abstract reset integration testReviewers: Damian Guy <damian.guy@gmail.com>, Matthias J. Sax <mjsax@apache.org>",3
"KAFKA-696 Fix toString() API for all requests to make logging easier to read; reviewed by Neha Narkhede, Jun Rao",2
KAFKA-13225: Controller skips sending UpdateMetadataRequest when no change in partition state. (#11255)The controller can skip sending updateMetadataRequest during the broker failure callback if there are offline partitions and the deleted brokers don't host any partitions.Reviewers: Jun Rao <junrao@gmail.com>,4
"KAFKA-6145: Pt 2.5 Compute overall task lag per client (#8252)Once we have encoded the offset sums per task for each client, we can compute the overall lag during assign by fetching the end offsets for all changelog and subtracting.If the listOffsets request fails, we simply return a ""completely sticky"" assignment, ie all active tasks are given to previous owners regardless of balance.Builds (but does not yet use) the statefulTasksToRankedCandidates map with the ranking:Rank -1: active running taskRank 0: standby or restoring task whose overall lag is within acceptableRecoveryLagRank 1: tasks whose lag is unknown (eg during version probing)Rank 1+: all other tasks are ranked according to their actual total lagImplements: KIP-441Reviewers: Bruno Cadonna <bruno@confluent.io>, John Roesler <vvcephei@apache.org>",5
"MINOR: add unit test for StateStoreSerdesAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #4064 from mjsax/minor-add-state-serdes-test",3
"KAFKA-2100; Client Error doesn't preserve or display original server error code when it is an unknown code; Reviewed by Gwen, Guozhang and Ewen",0
MINOR: Create case class to encapsulate fetch parameters and simplify handling (#12082)This patch adds a new case class `FetchParams` which encapsulates the parameters of the fetch request. It then uses this class in `DelayedFetch` directly instead of `FetchMetadata`. The intent is to reduce the number of things we need to change whenever we need to pass through new parameters. The patch also cleans up `ReplicaManagerTest` for more consistent usage.Reviewers: David Jacot <djacot@confluent.io>,5
Mirroring should use multiple producers; add producer retries to DefaultEventHandler; patched by Joel Koshy; reviewed by Jun Rao; KAFKA-332git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1330083 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-4485; Follower should be in the isr if its FetchRequest has fetched up to the logEndOffset of leaderAuthor: Dong Lin <lindong28@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>Closes #2208 from lindong28/KAFKA-4485",2
"KAFKA-3073: Add topic regex support for Connect sinksThere are more methods that had to be touched than I anticipated when writing [the KIP](https://cwiki.apache.org/confluence/display/KAFKA/KIP-215%3A+Add+topic+regex+support+for+Connect+sinks).The implementation here is now complete and includes a test that verifies that there's a call to `consumer.subscribe(Pattern, RebalanceHandler)` when `topics.regex` is provided.Author: Jeff Klukas <jeff@klukas.net>Reviewers: Randall Hauch <rhauch@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #4151 from jklukas/connect-topics.regex",5
"KAFKA-9996: Upgrade zookeeper to 3.5.8 (#8674)It fixes 30 issues, including third party CVE fixes, several leader-electionrelated fixes and a compatibility issue with applications built against earlier3.5 client libraries (by restoring a few non public APIs).See ZooKeeper 3.5.8 Release Notes for details: https://zookeeper.apache.org/doc/r3.5.8/releasenotes.htmlReviewers: Manikumar Reddy <manikumar@confluent.io>",5
KAFKA-13066: Replace EasyMock with Mockito for FileStreamSinkConnectorTest (#11027)Reviewers: Ismael Juma <ismael@juma.me.uk>,3
"MINOR: Java 9 version handling improvements- Upgrade Gradle to 4.2.1, which handles Azul Zulu 9's versioncorrectly.- Add tests to our Java version handling code- Refactor the code to make it possible to add tests- Rename `isIBMJdk` method to use consistent namingconvention.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4007 from ijuma/java-9-version-handling-improvements",1
MINOR: support ImplicitLinkedHashCollection#sort (#10456)Support sorting the elements in ImplicitLinkedHashCollection.This is useful sometimes in unit tests for comparing collections.Reviewers: Ismael Juma <ismael@juma.me.uk>,3
KAFKA-10251: increase timeout for consuming records (#10228)Bump the `pollUntilAtLeastNumRecords` timeout from 15s to 30sReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>,1
"KAFKA-2146: Fix adding partition did not find the correct startIndex.TopicCommand provide a tool to add partitions for existing topics. It try to find the startIndex from existing partitions. There's a minor flaw in this process, it try to use the first partition fetched from zookeeper as the start partition, and use the first replica id in this partition as the startIndex.One thing, the first partition fetched from zookeeper is not necessary to be the start partition. As partition id begin from zero, we should use partition with id zero as the start partition.The other, broker id does not necessary begin from 0, so the startIndex is not necessary to be the first replica id in the start partition.Author: chenshangan <chenshangan@meituan.com>Reviewers: Guozhang WangCloses #329 from shangan/trunk-KAFKA-2146",1
KAFKA-6065; Latency metric for KafkaZkClientMeasures the latency of each request.Updated existing `ZkUtils` test to use `KafkaZkClient`instead.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Jun Rao <junrao@gmail.com>Closes #4265 from ijuma/kafka-6065-async-zk-metrics,1
KAFKA-13082: Replace EasyMock with Mockito for ProcessorContextTest (#11045)Reviewers: Matthias J. Sax <matthias@confluent.io>,5
MINOR: Fix open file leak in log cleaner integration testsAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2870 from hachikuji/fix-log-cleaner-test-leak,3
"KAFKA-12820: Upgrade maven-artifact dependency to resolve CVE-2021-26291CVE-2021-26291, which makes Man-In-The-Middle-Attack possible, was fixed in maven 3.8.1.Reviewers: Luke Chen <showuon@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>",0
"MINOR: create KafkaConfigSchema and TimelineObject (#11809)Create KafkaConfigSchema to encapsulate the concept of determining the types of configuration keys.This is useful in the controller because we can't import KafkaConfig, which is part of core. Alsointroduce the TimelineObject class, which is a more generic version of TimelineInteger /TimelineLong.Reviewers: David Arthur <mumrah@gmail.com>",5
"KAFKA-4393: Improve invalid/negative TS handlingAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Michael G. Noll, Eno Thereska, Damian Guy, Guozhang WangCloses #2117 from mjsax/kafka-4393-improveInvalidTsHandling",1
"MINOR: Add expected Error Codes to ProduceResponse documentationThis is a documentation-only patch discussed on the mailing list. Theintent is to have these changes propagated to the protocol wiki(https://cwiki.apache.org/confluence/display/KAFKA/A+Guide+To+The+Kafka+Protocol) .Author: Dana Powers <dana.powers@gmail.com>Reviewers: Grant Henke <granthenke@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #918 from dpkp/produce_response_errors",0
HOTFIX: ChangeLoggingKeyValueStore.name() returns nullThis class doesn't need to override this method as it is handled appropriately by the super classAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #2397 from dguy/hotfix-npe-state-store,0
"KAFKA-12877: Make flexibleVersions mandatory (#10804)Many Kafka protocol JSON files were accidentally configured to not useflexible versions, since it was not on by default.  This PR requiresJSON files to specify a flexibleVersions value. If the JSON file doesnot specify the flexibleVersions value, display an error messagesuggesting the correct value to use for new messages.Reviewers: Jason Gustafson <jason@confluent.io>",5
"MINOR: Depend on streams:test-utils for streams and examples tests (#4760)Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-3111; Fix ConsumerPerformance reporting to use time-based instead of message-based intervalsInterval lengths for ConsumerPerformance could sometime be calculated as zero. In such cases, when the bytes read or messages read are also zero a NaN output is returned for mbRead per second or for nMsg per second, whereas zero would be a more appropriate output.In cases where interval length is zero but there have been data and messages to read, an output of Infinity is returned, as expected.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Dong Lin <lindong28@gmail.com>, Jun Rao <junrao@gmail.com>Closes #788 from vahidhashemian/KAFKA-3111",5
"KAFKA-14195: Fix KRaft AlterConfig policy usage for Legacy/Full case (#12578)#12374 adjusted the invocation of the alter configs policy check in KRaft to match the behavior in ZooKeeper, which is to only provide the configs that were explicitly sent in the request. While the code was correct for the incremental alter configs case, the code actually included the implicit deletions for the legacy/non-incremental alter configs case, and those implicit deletions are not included in the ZooKeeper-based invocation. This patch adds a test to check for this and adjusts ConfigurationControlManager code so that the test passes -- the adjusted test is confirmed to fail locally otherwise. We also add a log statement to emit any unexpected stack traces in the alter config code path.Reviewers: José Armando García Sancio <jsancio@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",5
"KAFKA-734 Migration tool needs a revamp, it was poorly written and has many performance bugs; reviewed by Jun Rao",0
KAFKA-5344; set message.timestamp.difference.max.ms back to Long.MaxValueAuthor: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3163 from becketqin/KAFKA-5344,1
"KAFKA-7255: Fix timing issue with create/update in SimpleAclAuthorizer (#5478)ACL updates currently get `(currentAcls, currentVersion)` for the resource from ZK and do a conditional update using `(currentAcls+newAcl, currentVersion)`. This supports concurrent atomic updates if the resource path already exists in ZK. If the path doesn't exist, we currently do a conditional createOrUpdate using `(newAcl, -1)`. But `-1` has a special meaning in ZooKeeper for update operations - it means match any version. So two brokers adding acls using `(newAcl1, -1)` and `(newAcl2, -1)` will result in one broker creating the path and setting newAcl1, while the other broker can potentially update the path with `(newAcl2, -1)`, losing newAcl1. The timing window is very small, but we have seen intermittent failures in `SimpleAclAuthorizerTest.testHighConcurrencyModificationOfResourceAcls` as a result of this window.This commit fixes the version used for conditional updates in ZooKeeper. It also replaces the confusing `ZkVersion.NoVersion=-1` used for `set(any-version)` and `get(return not-found)` with `ZkVersion.MatchAnyVersion` for `set(any-version)` and `ZkVersion.UnknownVersion` for `get(return not-found)` to avoid the return value from `get` matching arbitrary values in `set`.",1
"KAFKA-10199: Shutdown state updater on task manager shutdown (#12569)When the task manager is shutdown, the state updater should alsoshutdown. After the shutdown of the state updater, the tasksin its output queues should be closed.Reviewer: Guozhang Wang <wangguoz@gmail.com>",5
MINOR: fix release.py script (#6317)Reviewer: Ewen Cheslack-Postava <ewen@confluent.io>,5
Revert KAFKA-1485 Upgrade to Zookeeper 3.4.6 since system tests are failing,0
"MINOR: Follow-up from KAFKA-3842 to fix tempDir…p directories, waitForConditionAuthor: bbejeck <bbejeck@gmail.com>Reviewers: Guozhang Wang, Ismael JumaCloses #1554 from bbejeck/follow_up_for_KAFKA-3842",0
"KAFKA-5282; Use a factory method to create producers/consumers and close them in tearDownAuthor: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Apurva Mehta <apurva@confluent.io>, Ismael Juma <ismael@juma.me.uk>This patch had conflicts when merged, resolved byCommitter: Ismael Juma <ismael@juma.me.uk>Closes #3129 from vahidhashemian/KAFKA-5282",0
KAFKA-3209: KIP-66: more single message transformsRenames `HoistToStruct` SMT to `HoistField`.Adds the following SMTs:`ExtractField``MaskField``RegexRouter``ReplaceField``SetSchemaMetadata``ValueToKey`Adds HTML doc generation and updates to `connect.html`.Author: Shikhar Bhushan <shikhar@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #2374 from shikhar/more-smt,5
"KAFKA-12191 SslTransportTls12Tls13Test can replace 'assumeTrue' by (junit 5) conditional test (#9899)Reviewers: Ismael Juma <ismael@juma.me.uk>, Chia-Ping Tsai <chia7712@gmail.com>",3
KAFKA-4296; Fix LogCleaner statistics rollingAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2016 from hachikuji/KAFKA-4296,5
KAFKA-1650; (Follow-up patch) to support no data loss in mirror maker; reviewed by Joel Koshy,1
"MINOR: speed up connect startup when full connector class name is providedAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Liquan Pei <liquanpei@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #746 from hachikuji/worker-startup-improvement",1
"KAFKA-10144: clean up corrupted standby tasks before attempting a commit (#8849)We need to make sure that corrupted standby tasks are actually cleaned up upon a TaskCorruptedException. However due to the commit prior to invoking handleCorruption, it's possible to throw a TaskMigratedException before actually cleaning up any of the corrupted tasks.This is fine for active tasks since handleLostAll will finish up the job, but it does nothing with standby tasks. We should make sure that standby tasks are handled before attempting to commit (which we can do, since we don't need to commit anything for the corrupted standbys)Reviewers: Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-7559: Correct standalone system tests to use the correct external file (#5883)This fixes the Connect standalone system tests. See branch builder: https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2021/This should be backported to the 2.0 branch, since that's when the tests were firstmodified to use the external property file.Reviewers: Magesh Nandakumar <magesh.n.kumar@gmail.com>, Ismael Juma <ismael@juma.me.uk>",2
KAFKA-5713; Shutdown brokers in testsAdd broker shutdown for `LeaderEpochIntegrationTest`.Move broker shutdown in other tests to `tearDown` toensure brokers are shutdown even if tests fail.Also added assertion to `ZooKeeperTestHarness` toverify that controller event thread is not runningsince this thread may load JAAS configuration if ZKports are reused.Author: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3026 from rajinisivaram/KAFKA-5173,5
MINOR: Make release notes script check resolutions to avoid spurious inclusion of non-fix 'fixes' in release notes.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2174 from ewencp/release-notes-resolution-filters,0
"KAFKA-5531; throw concrete exceptions in streams tests1. Now instead of just generic `Exception` methods declare more concreteexceptions throwing or don't declare any throwing at all, if not needed.2. `SimpleBenchmark.run()` throws `RuntimeException`3. `SimpleBenchmark.produce()` throws `IllegalArgumentException`4. Expect `ProcessorStateException` in`StandbyTaskTest.testUpdateNonPersistentStore()`/cc enothereskaAuthor: Evgeny Veretennikov <evg.veretennikov@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>Closes #3485 from evis/5531-throw-concrete-exceptions",5
KAFKA-13583; Fix FetchRequestBetweenDifferentIbpTest flaky tests (#11699)Co-authored-by: Kvicii <Karonazaba@gmail.com>Reviewers: David Jacot <djacot@confluent.io>,5
KAFKA-6157; Fix repeated words words in JavaDoc and comments.Author: Adem Efe Gencer <agencer@linkedin.com>Reviewers: Jiangjie Qin <becket.qin@gmail.com>Closes #4170 from efeg/bug/typoFix,2
KAFKA-7972: Use automatic RPC generation in SaslHandshakeAuthor: Mickael Maison <mickael.maison@gmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #6301 from mimaison/sasl-handshake,1
MINOR: Update docs for version 0.10.2.0Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Jason Gustafson <jason@confluent.io>Closes #2480 from ewencp/docs-version-0.10.2.0,2
"MINOR: Disable those flaky tests (#11895)I collected a list of the most flaky tests observed lately, checked / created their corresponding tickets, and mark them as ignored for now. Many of these failures are:0. Failing very frequently in the past (at least in my observations).1. not investigated for some time.2. have a PR for review (mostly thanks to @showuon !), but not reviewed for some time.Since 0), these tests failures are hindering our development; and from 1/2) above, people are either too busy to look after them, or honestly the tests are not considered as providing values since otherwise people should care enough to panic and try to resolve. So I think it's reasonable to disable all these tests for now. If we later learned our lesson a hard way, it would motivate us to tackle flaky tests more diligently as well.I'm only disabling those tests that have been failed for a while, and if for such time no one have been looking into them, I'm concerned that just gossiping around about those flakiness would not bring people's attention to them either. So my psychological motivation is that ""if people do not care about those failed tests for weeks (which, is not a good thing! :P), let's teach ourselves the lesson a hard way when it indeed buries a bug that bites us, or not learn the lesson at all --- that indicates those tests are indeed not valuable"". For tests that I only very recently saw I did not disable them.Reviewers: John Roesler <vvcephei@apache.org>, Matthias J. Sax <mjsax@apache.org>, Luke Chen <showuon@gmail.com>, Randall Hauch <rhauch@gmail.com>",3
KAFKA-6999: Add description on read-write lock vulnerability of ReadOnlyKeyValueStore (#5351)Reviewers: Guozhang Wang <wangguoz@gmail.com>,1
"MINOR: implement BrokerRegistrationChangeRecord (#12195)Implement BrokerRegistrationChangeRecord as specified in KIP-746. This is a more flexible record than thesingle-purpose Fence / Unfence records.Reviewers: José Armando García Sancio <jsancio@gmail.com>, dengziming <dengziming1993@gmail.com>",4
"KAFKA-4275: Check of State-Store-assignment to Processor-Nodes is not enabledAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Guozhang WangCloses #1992 from mjsax/kafka-4275-stateStoreCheck",3
"MINOR: Update documentation and DumpLogSegments tool for addition of `deleteHorizonMs` in batch format (#11694)This PR updates the documentation and tooling to match https://github.com/apache/kafka/pull/10914, which added support for encoding `deleteHorizonMs` in the record batch schema. The changes include adding the new attribute and updating field names. We have also updated stale references to the old `FirstTimestamp` field in the code and comments. Finally, In the `DumpLogSegments` tool, when record batch information is printed, it will also include the value of `deleteHorizonMs` is (e.g. `OptionalLong.empty` or `OptionalLong[123456]`).Reviewers: Vincent Jiang <84371940+vincent81jiang@users.noreply.github.com>, Kvicii <42023367+Kvicii@users.noreply.github.com>, Jason Gustafson <jason@confluent.io>",5
KAFKA-3443: support for adding sources to KafkaStreams via Pattern.This PR is the follow on to the closed PR #1410.Author: bbejeck <bbejeck@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1477 from bbejeck/KAFKA-3443_streams_support_for_regex_sources,1
KAFKA-9274: Revert deprecation of `retries` for producer and admin clients (#9333)Reviewer: John Roesler <john@confluent.io>,5
"KAFKA-13714: Fix cache flush position (#11926)The caching store layers were passing down writes into lower store layers upon eviction, but not setting the context to the evicted records' context. Instead, the context was from whatever unrelated record was being processed at the time.Reviewers: Matthias J. Sax <mjsax@apache.org>",1
"MINOR: reduce impact of trace logging in replica hot path (#8468)The impact of trace logging is normally small, on the order of 40ns per getEffectiveLevel check, however this adds up with trace is called multiple times per partition in the replica fetch hot path.This PR removes some trace logs that are not very useful and reduces cases where the level is checked over and over for one fetch request.Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>",1
"HOTFIX: renamed test so it is picked up by ducktapeAuthor: Eno Thereska <eno@confluent.io>Reviewers: Matthias J. Sax, Guozhang WangCloses #2517 from enothereska/hotfix-broker-test",3
"KAFKA-12602: Fix LICENSE file (#10474)Fixes the LICENSE files that we ship with our releases:* the source-distribution license included wrong and unnecessary dependencies* the binary-distribution license was missing most of our actual dependenciesReviewers: A. Sophie Blee-Goldman <ableegoldman@apache.org>, Ewen Cheslack-Postava <ewencp@apache.org>, Justin Mclean <jmclean@apache.org>",4
KAFKA-8265: Fix config name to match KIP-458. (#6755)Return a copy of the ConfigDef in Client Configs. Related to KIP-458.Author: Magesh Nandakumar <magesh.n.kumar@gmail.comReviewer: Randall Hauch <rhauch@gmail.com>,5
KAFKA-1762; Update max-inflight-requests doc-string in producer config to note risk of reordering in the presence of retries,5
"KAFKA-9294: Add tests for Named parameter (#7874)Part 1 -- tests for stateless KStream operators onlyReviewers: John Roesler <john@confluent.io>, Bill Bejeck <bill@confluent.io>",5
MINOR: add setUncaughtExceptionHandler to KafkaStreamsAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #894 from ymatsuda/minor,5
"KAFKA-10514: Advance mock time for state directory cleanup (#9323)The test did not update the MockTime, so the state directory cleaner couldn't run.Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, John Roesler <vvcephei@apache.org>",1
kafka-924 (follow-up); Specify console consumer properties via a single --property command line parameter;;  patched by Sriharsha Chintalapani; reviewed by Jun Rao,2
KAFKA-4025; make sure file.encoding system property is set to UTF-8 when calling rathttps://issues.apache.org/jira/browse/KAFKA-4025this patch sets the file.encoding system property to UTF-8 before invoking rat during the build process and resets it to the original value afterwardsAuthor: radai-rosenblatt <radai.rosenblatt@gmail.com>Reviewers: Joel Koshy <jjkoshy.w@gmail.com>Closes #1710 from radai-rosenblatt/fix-build-on-windows,0
"KIP-835: metadata.max.idle.interval.ms shoud be much bigger than broker.heartbeat.interval.ms (#12238)The active quorum controller will append NoOpRecord periodically to increase metadata LEO, however, when a broker startup, we will wait until its metadata LEO catches up with the controller LEO, we generate NoOpRecord every 500ms and send heartbeat request every 2000ms.It's almost impossible for a broker to catch up with the controller LEO if the broker sends a query request every 2000ms but the controller LEO increases every 500ms, so the tests in KRaftClusterTest will fail.Reviewers: José Armando García Sancio <jsancio@users.noreply.github.com>, showuon <43372967+showuon@users.noreply.github.com>, Colin Patrick McCabe <cmccabe@confluent.io>",5
"MINOR: Increase max.poll time for streams consumersAuthor: Eno Thereska <eno@confluent.io>Reviewers: Damian Guy, Matthias J. Sax, Guozhang WangCloses #2770 from enothereska/minor-increase-max-poll",1
"MINOR: Remove redundant access specifiers from metrics interfaces (#6527)Reviewers: Sönke Liebau <soenke.liebau@opencore.com>, Ismael Juma <ismael@juma.me.uk>",4
KAFKA-1158 run rat is not needed this is documented now in the release not part of the server running,1
"MINOR: rename wrong topic id variable name and description (#10598)Reviewers: Luke Chen <showuon@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",0
"KAFKA-8995: delete all topics before recreating (#8208)I think the root cause of KAFKA-8893, KAFKA-8894, KAFKA-8895 and KSTREAMS-3779 are the same: some intermediate topics are not deleted in the setup logic before recreating the user topics, which could cause the waitForDeletion (that check exact match of all existing topics) to fail, and also could cause more records to be returned because of the intermediate topics that are not deleted from the previous test case.Also inspired by https://github.com/apache/kafka/pull/5418/files I used a longer timeout (120 secs) for deleting all topics.Reviewers: John Roesler <vvcephei@apache.org>",4
"KAFKA-12206: o.a.k.common.Uuid should implement Comparable (#9896)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, Ismael Juma <ismael@juma.me.uk>",5
"KAFKA-5759; Allow user to specify relative path as log directoryAuthor: Dong Lin <lindong28@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jiangjie Qin<becket.qin@gmail.com>Closes #3709 from lindong28/KAFKA-5759",2
"MINOR: Improve READMEMention Java 7 requirement, fix and improve formatting and remove obsolete reference to SVN website.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Sriharsha Chintalapani <harsha@hortonworks.com>, Jason Gustafson <jason@confluent.io>Closes #677 from ijuma/mention-java-requirement-in-readme",1
SimpleConsumer throws UnsupportedOperationException: empty.head; patched by Yang Ye; reviewed by Jun Rao; kafka-576git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1401704 13f79535-47bb-0310-9956-ffa450edef68,1
KAFKA-6593; Fix livelock with consumer heartbeat thread in commitSync (#4625)Contention for the lock in ConsumerNetworkClient can lead to a livelock situation in which an active commitSync is unable to make progress because its completion is blocked in the heartbeat thread. The fix is twofold:1) We change ConsumerNetworkClient to use a fair lock to reduce the chance of each thread getting starved.2) We eliminate the dependence on the lock in ConsumerNetworkClient for callback completion so that callbacks will not be blocked by an active poll().Reviewers: Guozhang Wang <wangguoz@gmail.com>,1
"KAFKA-2837: Fix transient failure of kafka.api.ProducerBounceTest.testBrokerFailureI can reproduced this transient failure, it seldom happen;code is like below: // rolling bounce brokers    for (i <- 0 until numServers) {      for (server <- servers) {        server.shutdown()        server.awaitShutdown()        server.startup()        Thread.sleep(2000)      }      // Make sure the producer do not see any exception      // in returned metadata due to broker failures      assertTrue(scheduler.failed == false)      // Make sure the leader still exists after bouncing brokers      (0 until numPartitions).foreach(partition => TestUtils.waitUntilLeaderIsElectedOrChanged(zkUtils, topic1, partition))Brokers keep rolling restart, and producer keep sending messages;In every loop, it will wait for election of partition leader;But if the election is slow, more messages will be buffered in RecordAccumulator's BufferPool;The limit for buffer is set to be 30000;TimeoutException(""Failed to allocate memory within the configured max blocking time"") will show up when out of memory;Since for every restart of the broker, it will sleep for 2000 ms,  so this transient failure seldom happen;But if I reduce the sleeping period, the bigger chance failure happens;for example if the broker with role of controller suffered a restart, it will take time to select controller first, then select leader, which will lead to more messges blocked in KafkaProducer:RecordAccumulator:BufferPool;In this fix, I just enlarge the producer's buffer size to be 1MB;guozhangwang , Could you give some comments?Author: jinxing <jinxing@fenbi.com>Author: ZoneMayor <jinxing6042@126.com>Reviewers: Guozhang WangCloses #648 from ZoneMayor/trunk-KAFKA-2837",1
MINOR; Bump trunk to 3.4.0-SNAPSHOT (#12463)Version bumps in trunk after the creation of the 3.3 branch.Reviewers: David Arthur <mumrah@gmail.com>,1
"KAFKA-13035  updated documentation for connector restart REST API to … (#10975)Updated documentation for connector restart REST API to include the tasks restart behavior, including calling out that by default the same behavior of previous versions is preserved.Author: Kalpesh Patel <kpatel@confluent.io>Reviewer: Randall Hauch <rhauch@gmail.com>",5
"KAFKA-4151; Update public docs for Cluster Id (KIP-78)- Updated implementation docs with details on Cluster Id generation.- Mention cluster id in ""noteworthy changes for 0.10.1.0"" in upgrade docs.Author: Sumit Arrawatia <sumit.arrawatia@gmail.com>Author: arrawatia <sumit.arrawatia@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1895 from arrawatia/kip-78-docs",2
"MINOR: fix typo in TestInputTopic.getTimestampAndAdvance (#7553)Reviewers: Bill Bejeck <bill@confluent.io>, John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-3282; Change tools to use new consumer if zookeeper is not specifiedAuthor: Arun Mahadevan <aiyer@hortonworks.com>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #1376 from arunmahadevan/cons-consumer-fix",0
"MINOR: Remove ReplicaManagerTest.initializeLogAndTopicId (#12276)The workaround is not required with mockito.Reviewers: José Armando García Sancio <jsancio@users.noreply.github.com>, Divij Vaidya <diviv@amazon.com>, Kvicii <42023367+Kvicii@users.noreply.github.com>",1
"MINOR: Doc individual partition must fit on the server that host itAuthor: sahil kharb <sahilkharb@iitj.ac.in>Reviewers: Ismael Juma, Guozhang WangCloses #1709 from bitfurry/trunk",1
"KAFKA-2910: Close Zookeeper clients in unit testsZookeeper clients that are not closed after the server is shutdown keep trying to reconnect, reloading JAAS configuration. This impacts subsequent tests which rely on JAAS config to be reset.Author: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Flavio Junqueira <fpj@apache.org>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1171 from rajinisivaram/KAFKA-2910",5
KAFKA-1729; (followup patch)Add constructor to javaapi to allowconstructing explicitly versioned offset fetch requests; reviewed by Jun Rao,1
"KAFKA-2425; Copy latest docs to kafka repo docs/ directoryThis PR copies the latest kafka docs to kafka repo docs directory. Here I have copied 0.8.3/ directory contents from svn website repo to kafka/docs repository.Some questions: This PR contains generated javadocs also.  Do we need to copy javadocs here?Author: Manikumar reddy O <manikumar.reddy@gmail.com>Reviewers: Gwen Shapira, Ismael JumaCloses #171 from omkreddy/KAFKA-2425-MOVE-DOCS-TO-KAFKA-REPO",4
HOTFIX: Add missing file for KeyValue unit testAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Gwen ShapiraCloses #960 from guozhangwang/KCountP1,3
MINOR: Switch ZK client logging to INFOAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Jun Rao <junrao@gmail.com>Closes #3409 from ijuma/tweak-log-config,5
"KAFKA-5059: Implement Transactional CoordinatorAuthor: Damian Guy <damian.guy@gmail.com>Author: Guozhang Wang <wangguoz@gmail.com>Author: Apurva Mehta <apurva@confluent.io>Reviewers: Guozhang Wang, Jason Gustafson, Apurva Mehta, Jun RaoCloses #2849 from dguy/exactly-once-tc",5
"KAFKA-5787: StoreChangelogReader needs to restore partitions that were added post initializationIf a task fails during initialization due to a LockException, its changelog partitions are not immediately added to the StoreChangelogReader as the thread doesn't hold the lock. However StoreChangelogReader#restore will be called and it sets the initialized flag. On a subsequent successfull call to initialize the new tasks the partitions are added to the StoreChangelogReader, however as it is already initialized these new partitions will never be restored. So the task would remain in a non-running state forever.Author: Damian Guy <damian.guy@gmail.com>Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3736 from dguy/kafka-5787",5
"MINOR: Generator config-specific HTML ids (#8878)Currently the docs have HTML ids for each config key. That doesn't workcorrectly for config keys like bootstrap.servers which occur acrossproducer, consumer, admin configs: We generate duplicate ids. So arrangefor each config to prefix the ids it generates with the HTML id of itssection heading.Reviewers: Mickael Maison <mickael.maison@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>",0
"MINOR: Fix an uncompatible bug in GetOffsetShell (#11936)In KIP-815 we replaced KafkaConsumer with AdminClient in GetOffsetShell. In the previous implementation, partitions were just ignored if there is no offset for them, however, we will print -1 instead now, This PR fix this inconsistency.Reviewers: David Jacot <djacot@confluent.io>, Luke Chen <showuon@gmail.com>",5
"KAFKA-5043; Rename GroupCoordinator to FindCoordinator (KIP-98)Also:1. FindCoordinator is more general and takes a coordinator_typeso that it can be used for the group and transaction coordinators.2. Include an error message in FindCoordinatorResponse to make theerrors at the client side more informative. We have just added thefield to the protocol in this PR, a subsequent PR will update thecode to use it.3. Rename `Errors` names for FindCoordinator to be more generic. Thisis a compatible change as the ids remain the same.4. Since the exception classes for the error codes are in a publicpackage, we introduce new ones and deprecate the old ones.The classes were not thrown back to the user (KAFKA-5052 aside),so this is a compatible change.5. Update InitPidRequest for transactions. Since this protocol APIwas introduced recently and is not used by default, we did not bumpits version.Author: Apurva Mehta <apurva@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2825 from apurvam/exactly-once-rpc-stubs",5
"KAFKA-2745: Update JavaDoc for new / updated consumer APIsAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Jeff Holoman, Jason Gustafson, Gwen ShapiraCloses #425 from guozhangwang/K2745",5
KAFKA-5742: support ZK chroot in system testsAuthor: Xavier Léauté <xavier@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #3677 from xvrl/support-zk-chroot-in-tests,3
MINOR: remove unnecessary test stubbing (#12445)Reviewers: John Roesler <vvcephei@apache.org>,3
KAFKA-1720; Renamed Delayed Operations after KAFKA-1583; reviewed by Gwen Shapira and Joel Koshy,5
KAFKA-1298 (followup); Controlled shutdown tool doesn't seem to work out of the box;  patched by Sriharsha Chintalapani; reviewed by Jun Rao,1
"KAFKA-6577: Fix Connect system tests and add debug messages**NOTE: This should be backported to the `1.1` branch, and is currently a blocker for 1.1.**The `connect_test.py::ConnectStandaloneFileTest.test_file_source_and_sink` system test is failing with the SASL configuration without a sufficient explanation. During the test, the Connect worker fails to start, but the Connect log contains no useful information. There are actual several things compounding to cause the failure and make it difficult to understand the problem.First, the `tests/kafkatest/tests/connect/templates/connect_standalone.properties` is only adding in the broker's security configuration with the `producer.` and `consumer.` prefixes, but is not adding them with no prefix. The worker uses the AdminClient to connect to the broker to get the Kafka cluster ID and to manage the three internal topics, and the AdminClient is configured via top-level properties. Because the SASL test requires the clients all connect using SASL, the lack of broker security configs means the AdminClient was attempting and failing to connect to the broker. This is corrected by adding the broker's security configuration to the Connect worker configuration file at the top-level. (This was already being done in the `connect_distributed.properties` file.)Second, the default `request.timeout.ms` for the AdminClient (and the other clients) is 120 seconds, so the AdminClient was retrying for 120 seconds before it would give up and thrown an error. However, the test was only waiting for 60 seconds before determining that the service failed to start. This can be corrected by setting `request.timeout.ms=10000` in the Connect distributed and standalone worker configurations.Third, the Connect workers were recently changed to lookup the Kafka cluster ID before it started the herder. This is unlike the older uses of the AdminClient to find and manage the internal topics, where failure to connect was not necessarily logged correctly but nevertheless still skipped over, relying upon broker auto-topic creation to create the internal topics. (This may be why the test did not fail prior to the recent change to always require a successful AdminClient connection.) Although the worker never got this far in its startup process, the fact that we missed such an error since the prior releases means that failure to connect with the AdminClient was not being properly reported.The `ConnectStandaloneFileTest.test_file_source_and_sink` system tests were run locally prior to this fix, and they failed as with the nightlies. Once these fixes were made, the locally run system tests passed.Author: Randall Hauch <rhauch@gmail.com>Reviewers: Konstantine Karantasis <konstantine@confluent.io>, Ewen Cheslack-Postava <me@ewencp.org>Closes #4610 from rhauch/kafka-6577-trunk",1
MINOR: Remove unused server exceptions (#4701),1
"KAFKA-9330: Skip `join` when `AdminClient.close` is called in callback thread (#7866)The close method calls `Thread.join` to wait for AdminClient thread todie, but if the close is called in the api completion callback, `join`waits forever, as the thread calling `join` is same as the thread itwants to wait to die.This change checks for this condition and skips the join. The threadwill then return to main loop, where it will check for this conditionand exit.Reviewers: Jason Gustafson <jason@confluent.io>",5
KAFKA-2902: streaming config use get base consumer configs.Changes made for using getBaseConsumerConfigs from StreamingConfig.getConsumerConfigs.Author: bbejeck <bbejeck@gmail.com>Author: Bill Bejeck <bbejeck@gmail.com>Reviewers: Guozhang WangCloses #596 from bbejeck/KAFKA-2902-StreamingConfig-use-getBaseConsumerConfigs,5
"MINOR: fixed missing close of Iterator, used try-with-resource where appropriate (#6562)Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
MINOR: Small cleanups in mirror/mirror-client (#11749)Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-2846: Add Ducktape test for kafka-consumer-groupsAuthor: Ashish Singh <asingh@cloudera.com>Reviewers: Geoff Anderson <geoff@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #555 from SinghAsDev/KAFKA-2846",5
"KAFKA-10150: task state transitions/management and committing cleanup (#8856)* KAFKA-10150: always transition to SUSPENDED during suspend, no matter the current state only call prepareCommit before closing if task.commitNeeded is true* Don't commit any consumed offsets during handleAssignment -- revoked active tasks (and any others that need committing) will be committed during handleRevocation so we only need to worry about cleaning them up in handleAssignment* KAFKA-10152: when recycling a task we should always commit consumed offsets (if any), but don't need to write the checkpoint (since changelog offsets are preserved across task transitions)* Make sure we close all tasks during shutdown, even if an exception is thrown during commitReviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-3751; SASL/SCRAM implementationImplementation of KIP-84: https://cwiki.apache.org/confluence/display/KAFKA/KIP-84%3A+Support+SASL+SCRAM+mechanismsAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Jun Rao <junrao@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #2086 from rajinisivaram/KAFKA-3751",5
"KAFKA-12460; Do not allow raft truncation below high watermark (#10310)Initially we want to be strict about the loss of committed data for the `@metadata` topic. This patch ensures that truncation below the high watermark is not allowed. Note that `MockLog` already had the logic to do so, so the patch adds a similar check to `KafkaMetadataLog`. Reviewers: David Jacot <djacot@confluent.io>, Boyang Chen <boyang@confluent.io>",5
kafka-2189; Snappy compression of message batches less efficient in 0.8.2.1; patched by Ismael Juma; reviewed by Jun Rao,5
MINOR: Fix verification in StreamsUpgradeTest.test_version_probing_upgrade (#9530)The system test StreamsUpgradeTest.test_version_probing_upgrade tries to verify the wrong version for version probing.Reviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>,0
MINOR: More efficient midpoint calc for AbstractIndex (#5378)Reviewers: Ismael Juma <ismael@juma.me.uk>,5
Support deep iteration in DumpLogSegments tool; patched by Jun Rao; reviewed by Neha Narkhede; kafka-812,2
"MINOR: add upgrade note for KIP-336Author: Viktor Somogyi <viktorsomogyi@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Andras Katona <41361962+akatona84@users.noreply.github.com>, Dong Lin <lindong28@gmail.com>Closes #5685 from viktorsomogyi/upgrade-notes-for-serializer-consolidation",5
KAFKA-2449: Update mirror maker docs…s to multiple source clustersAuthor: Gwen Shapira <cshapi@gmail.com>Reviewers: Ismael JumaCloses #356 from gwenshap/KAFKA-2449,2
MINOR: Print the cached broker epoch (#11005)When the broker epochs do not match make sure to print both broker epochs.,1
"KAFKA-3720: Change TimeoutException to BufferExhaustedException when no memory can be allocated for a record within max.block.ms (#8399)Change TimeoutException to BufferExhaustedException when no memory can be allocated for a record within max.block.msRefactored BufferExhaustedException to be a subclass of TimeoutException so existing code that catches TimeoutExceptions keeps working.Added handling to count these Exceptions in the metric ""buffer-exhausted-records"".Test StrategyThere were existing test cases to check this behavior, which I refactored.I then added an extra case to check whether the expected Exception is actually thrown, which was not covered by current tests.Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>",3
"MINOR: Call logSegments.toBuffer only when required (#9971)Reviewers: Ismael Juma <ismael@juma.me.uk>, Satish Duggana <satishd@apache.org>, Chia-Ping Tsai <chia7712@gmail.com>",1
KAFKA-705 Allow restarted replicas to follow a leader that is on a shutting down broker; reviewed by Neha Narkhede.,1
"MINOR Replaced File with Path in LogSegmentData. (#10424)Replaced File with Path in LogSegment Data.This is a followup of #10173Reviewers: Kowshik Prakasam <kprakasam@confluent.io>, Jun Rao <junrao@gmail.com>",5
"KAFKA-2327; broker doesn't start if config defines advertised.host but not advertised.portAdded unit tests as well. These fail without the fix, but pass with the fix.Author: Geoff Anderson <geoff@confluent.io>Closes #73 from granders/KAFKA-2327 and squashes the following commits:52a2085 [Geoff Anderson] Cleaned up unecessary toString calls23b3340 [Geoff Anderson] Fixes KAFKA-2327",0
"KAFKA-8911: Using proper WindowSerdes constructors in their implicit definitions (#7352)Detailed info is available in the ticket: https://issues.apache.org/jira/browse/KAFKA-8911Briefly, implicit defs are calling empty constructors, which exists only for reflection object creation.Therefore, while using the implicit definitons, a NPE occurs when Serde is called.Reviewers: John Roesler <john@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
"KAFKA-5651; Follow-up: add with method to MaterializedAdd a `with(Serde keySerde, Serde valSerde)` to `Materialized` for cases where people don't care about the state store name.Author: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Matthias J. Sax <matthias@confluent.io>Closes #4009 from dguy/materialized",5
MINOR: Fix missing copyright in config file added in KAFKA-2640.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Guozhang WangCloses #377 from ewencp/minor-jaas-config-copyright,5
MINOR: Fix log message error of loadTransactionMetadata (#6571)Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-4613: Treat null-key records the same way for joins and aggreationsAuthor: Jeyhun Karimov <je.karimov@gmail.com>Reviewers: Matthias J. Sax, Eno Thereska, Damian Guy, Guozhang WangCloses #2420 from jeyhunkarimov/KAFKA-4613",4
KAFKA-800 inSyncReplica in Partition needs some tweaks; reviewed by Jun Rao and Neha Narkhede,2
"KAFKA-2209; Change quotas dynamically using DynamicConfigManagerChanges in this patch are:1. ClientIdConfigHandler now passes through the config changes to the quota manager.2. Removed static KafkaConfigs for quota overrides. These are no longer needed since we can override configs through ZooKeeper.3. Added testcases to verify that the config changes are propogated from ZK (written using AdminTools) to the actual Metric objects.Author: Aditya Auradkar <aauradka@aauradka-mn1.(none)>Author: Aditya Auradkar <aauradka@aauradka-mn1.linkedin.biz>Reviewers: Dong Lin <lindong28@gmail.com>, Jun Rao <junrao@gmail.com>Closes #298 from auradkar/K-2209",2
"MINOR: Avoid calling interceptors.onSendError() with null TopicPartitionAssign non-null tp as soon as possible once we know the partition. This isso that if ensureValidRecordSize() throws, theinterceptors.onSendError() call is made with a non-null tp.Author: Tom Bentley <tbentley@redhat.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3280 from tombentley/tp-assign",0
"KAFKA-12403; Ensure local state deleted on `RemoveTopicRecord` received (#10252)This patch implements additional handling logic for `RemoveTopic` records:- Update `MetadataPartitions` to ensure addition of deleted partitions to `localRemoved` set- Ensure topic configs are removed from `ConfigRepository`- Propagate deleted partitions to `GroupCoordinator` so that corresponding offset commits can be removedThis patch also changes the controller topic id generation logic to use `Uuid.randomUuid` rather than `Random`.Reviewers: Ismael Juma <ismael@juma.me.uk>, Chia-Ping Tsai <chia7712@gmail.com>",1
kafka-1320; Change compression.codec to compression.type in new producer configs of system tests; patched by Guozhang Wang; reviewed by Jun Rao,3
KAFKA-1028 per topic configuration of preference for consistency over availability; reviewed by Neha Narkhede and Jay Kreps,5
kafka-1400; transient unit test failure in SocketServerTest; patched by Neha Narkhede; reviewed by Guozhang and Jun Rao,3
KAFKA-309 Bug in FileMessageSet's append API can corrupt on disk log; patched by nehanarkhede; reviewed by junraogit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1303890 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-9451: Enable producer per thread for Streams EOS (#8318)- KIP-447- add new configs to enable producer per thread EOS- updates TaskManager to use single shared producer for eos-betaReviewers: Boyang Chen <boyang@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
"MINOR: fix a bug in removing elements from an ImplicitLinkedHashColle… (#9428)Fix a bug that was introduced by change 86013dc that resulted in incorrect behavior whendeleting through an iterator.The bug is that the hash table relies on a denseness invariant... if you remove something,you might have to move some other things. Calling removeElementAtSlot will do this.Calling removeFromList is not enough.Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-8635; Skip client poll in Sender loop when no request is sent (#7085)This patch changes maybeSendTransactionalRequest to handle both sending and polling transactional requests (and renames it to maybeSendAndPollTransactionalRequest), and skips the call to poll if no request is actually sent. It also removes the inner loop inside maybeSendAndPollTransactionalRequest and relies on the main Sender loop for retries.Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-12211: don't change perm for base/state dir when no persistent store (#9904) If a user doesn't have Persistent Stores, we won't create base dir and state dir and should not try to set permissions on them.Reviewers: Bruno Cadonna <cadonna@confluent.io>, Guozhang Wang <guozhang@confluent.io>, Anna Sophie Blee-Goldman <ableegoldman@apache.org>",5
kafka-1400; transient unit test failure in SocketServerTest; patched by Jun Rao; reviewed by Ewen Cheslack-Postava and Jiangjie Qin,3
KAFKA-2438; add maxParallelForks to build.gradle to speedup tests.Author: Sriharsha Chintalapani <harsha@hortonworks.com>Reviewers: Gwen ShapiraCloses #143 from harshach/KAFKA-2438,1
MINOR: Complete inflight requests in order on disconnect (#4642)NetworkClient should use FIFO order when completing inflight requests following a disconnect.I've added new unit tests for `InFlightRequests` and `NetworkClient` which verify completion order.Reviewers: Jun Rao <junrao@gmail.com>,1
"MINOR: Log encountered exception during rebalanceSome other minor changes:1. Do not throw the exception form callback as it would only be swallowed by consumer coordinator; remembering it and re-throw in the next loop is good enough.2. Change Creating to Defining in Stores to avoid confusions that the stores have already been successfully created at that time.3. Do not need unAssignChangeLogPartitions as the restore consumer will be unassigned already inside changelog reader.Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Matthias J. Sax <matthias@confluent.io>, Damian Guy <damian.guy@gmail.com>Closes #3769 from guozhangwang/KMinor-logging-before-throwing",2
KAFKA-1337 Rationalize the producer configs.,5
"MINOR: Minor reduce unnecessary calls to time.millisecond (part 2)Avoid calling time.milliseconds more often than necessary. Cleaning and committing logic can use the timestamp at the start of the loop with minimal consequences. 5-10% improvements noticed with request rates of 450K records/second.Also tidy up benchmark code a bit more.Author: Eno Thereska <eno.thereska@gmail.com>Author: Eno Thereska <eno@confluent.io>Reviewers: Matthias J. Sax, Damian Guy, Guozhang WangCloses #2603 from enothereska/minor-reduce-milliseconds2",5
"MINOR: Rolling bounce upgrade fixed broker system test (#4690)Reviewers: Guozhang Wang <guozhang@confluent.io>, John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-14188; Getting started for Kafka with KRaft (#12604)Update the quickstart HTML pages for Kafka and Kafka Stream to include how to quickly start andexperiment with a Kafka cluster using KRaft in addition to ZooKeeper.Reviews: Colin Patrick McCabe <cmccabe@apache.org>,  Chase Thomas <forlack@users.noreply.github.com>, Luke Chen <showuon@gmail.com>",1
"MINOR: Fix potential bug in LogConfig.getConfigValue and improve test coverage (#7159)LogConfig.getConfigValue would throw a NoSuchElementException if any logconfig was defined without a server default mapping.Added a unit test for `getConfigValue` and a sanity test for`toHtml`/`toRst`/`toEnrichedRst`, which were previously not exercised duringthe test suite.Reviewers: Jason Gustafson <jason@confluent.io>, José Armando García Sancio <jsancio@users.noreply.github.com>",1
"KAFKA-5413; Log cleaner fails due to large offset in segment filethe contribution is my original work and I license the work to the project under the project's open source license.junrao , I had already made the code change before your last comment.  I've done pretty much what you said, except that I've not used the current segment because I wasn't sure if it will always be available.I'm happy to change it if you prefer.I've run all the unit and integration tests which all passed.Author: Kelvin Rutt <ruttkelvin@gmail.com>Author: Kelvin Rutt <kelvin.rutt@sky.com>Reviewers: Jun Rao <junrao@gmail.com>Closes #3357 from kelvinrutt/kafka_5413_bugfix",0
"KAFKA-6195: Resolve DNS aliases in bootstrap.server (KIP-235) (#4485)Adds `client.dns.lookup=resolve_canonical_bootstrap_servers_only` option to perform full dns resolution of bootstrap addressesReviewers: Colin Patrick McCabe <colin@cmccabe.xyz>, Sriharsha Chintalapani <sriharsha@apache.org>, Edoardo Comar <ecomar@uk.ibm.com>, Mickael Maison <mickael.maison@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>, Rajini Sivaram <rajinisivaram@googlemail.com>",5
MINOR: Fix unrelated types comparison in MetadataRequestTest (#8195)The type of `leaderId` was changed to `Optional` in a recent change.Reviewers: Ismael Juma <ismael@juma.me.uk>,4
MINOR: Replace EasyMock with Mockito in test-utils module (#11157)Reviewers: Matthias J. Sax <matthias@confluent.io>,5
KAFKA-2301: Warn ConsumerOffsetChecker as deprecated; reviewed by Ewen Cheslack-Postava and Guozhang Wang,1
"MINOR: InFlightRequests#isEmpty(node) method corrected.- In clearAll method, get operation is removed.- variable name `requestTimeout` changed to `requestTimeoutMs` for clarityAuthor: Kamal C <kamal.chandraprakash@gmail.com>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #3467 from Kamal15/frequest",5
TRIVIAL: change to API doc for seekToEnd() to clarify lazy evaluationSmall clarification to docs. Current behaviour could confuse when doing something like:consumer.seekToEnd()consumer.send(msg)consumer.poll() //would return msg as seek evaluates lazilyAuthor: Ben Stopford <benstopford@gmail.com>Reviewers: Gwen ShapiraCloses #199 from benstopford/minor-stuff,5
"KAFKA-12384: stabilize ListOffsetsRequestTest#testResponseIncludesLeaderEpoch (#10389)Reviewers: Luke Chen <showuon@gmail.com>, dengziming <swzmdeng@163.com>, Ismael Juma <ismael@juma.me.uk>",3
"KAFKA-5541: Follow-up; Try to clean uncleanly upon clean close failure before throwing the exceptionAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #4046 from mjsax/kafka-5541-minor-follow-up",5
"MINOR: improve JavaDocs about global state stores (#6359)Improve JavaDocs about global state stores.Reviewers: Guozhang Wang <wangguoz@gmail.com>, Sophie Blee-Goldman <sophie@confluent.io>,  Bill Bejeck <bbejeck@gmail.com>",5
"KAFKA-9533: ValueTransform forwards `null` values (#8108)Fixes a bug where KStream#transformValues would forward null values from the provided ValueTransform#transform operation.A test was added for verification KStreamTransformValuesTest#shouldEmitNoRecordIfTransformReturnsNull. A parallel test for non-key ValueTransformer was not added, as they share the same code path.Reviewers: Bruno Cadonna <bruno@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
"KAFKA-5324; AdminClient: add close with timeout, fix some timeout bugsAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3141 from cmccabe/KAFKA-5324",5
MINOR: fix system test TestSecurityRollingUpgrade (#10694)Ensure security protocol and sasl mechanism are updated in the cached SecurityConfig during rolling system tests. Also explicitly indicate which SASL mechanisms we wish to expose during the tests.Reviewers: David Arthur <mumrah@gmail.com>,3
"KAFKA-5171; TC should not accept empty string transactional idThis is a rebase version of [PR#2973](https://github.com/apache/kafka/pull/2973).guozhangwang , please review this updated PR.Author: umesh chaudhary <umesh9794@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Jason Gustafson <jason@confluent.io>Closes #3086 from umesh9794/mylocal",5
"KAFKA-10000: Add all public-facing config properties (#11775)Reviewers: Luke Chen <showuon@gmail.com>, Tom Bentley <tbentley@redhat.com>, Andrew Eugene Choi <andrew.choi@uwaterloo.ca>",5
KAFKA-3782: Fix transient failure in connect distributed bounce testAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1650 from hachikuji/KAFKA-3782,5
"KAFKA-7259; Remove deprecated ZKUtils usage from ZkSecurityMigrator- Remove ZKUtils usage from various testsAuthor: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Sriharsha Chintalapani <sriharsha@apache.org>, Ismael Juma <ismael@juma.me.uk>, Satish Duggana <satishd@apache.org>, Jun Rao <junrao@gmail.com>, Ryanne Dolan <ryannedolan@gmail.com>Closes #5480 from omkreddy/zkutils",3
KAFKA-8150: Fix bugs in handling null arrays in generated RPC code (#6489)ToString functions must not get a NullPointException.  read() functionsmust properly translate a negative array length to a null field.Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,1
"KAFKA-5576: RocksDB upgrade to 5.8, plus one bug fix on Bytes.wrapAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Damian Guy <damian.guy@gmail.com>Closes #3819 from guozhangwang/KMinor-rocksDB-573",5
MINOR: log start and end offsets for state store restorationDebug loggin of the start and end offsets used during state store restorationAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #2718 from dguy/log-restore-offsets,2
"KAFKA-4672; fix source compatibility for lambda expressionsVariance changes introduced in KIP-100 cause compilation failures with lambda expression in Java 8. To my knowledge this only affects the following method`KStreams.transform(TransformerSupplier<...>, String...)`prior to the changes it was possible to write:`streams.transform(MyTransformer::new)`where `MyTransformer` extends `Transformer`After the changes the Java compiler is unable to infer correct return types for the lambda expressions. This change fixed this by reverting to invariant return types for transformer suppliers.please cherry-pick into 0.10.2.xAuthor: Xavier Léauté <xavier@confluent.io>Reviewers: Ismael Juma, Damian Guy, Guozhang WangCloses #2402 from xvrl/lambdas-oh-my",5
KAFKA-9499; Improve deletion process by batching more aggressively (#8053)This PR speeds up the deletion process by doing the following:- Batch whenever possible to minimize the number of requests sent out to other brokers;- Refactor `onPartitionDeletion` to remove the usage of `allLiveReplicas`.Reviewers: Jason Gustafson <jason@confluent.io>,5
KAFKA-4548; Add ClientCompatibilityTest to verify features against older brokersAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2262 from cmccabe/KAFKA-4548,5
"KAFKA-5338: fix a miss-spell in ResetIntegrationTestThere is a Misspell in Annotations of ResetIntegrationTest.Author: hejiefang <he.jiefang@zte.com.cn>Reviewers: Matthias J. Sax, Guozhang WangCloses #3159 from hejiefang/KAFKA-5338",3
"KAFKA-5330: Use per-task converters in ConnectInstead of sharing the same converter instance within the worker, use a converter per task.More details:- https://github.com/confluentinc/schema-registry/issues/514- https://issues.apache.org/jira/browse/KAFKA-5330Author: Thibaud Chardonnens <Thibaud.Chardonnens@swisscom.com>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #3196 from tbcdns/KAFKA-5330",5
MINOR: Update test classes to use KafkaZkClient methods (#4367)Remove ZkUtils reference form ZooKeeperTestHarness plus some minor cleanups.,4
"KAFKA-9925: decorate pseudo-topics with app id (#8574)Reviewers: Boyang Chen <boyang@confluent.io>, Kin Siu",5
KAFKA-2941: Clarify docs for key and value ConvertersAuthor: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Gwen ShapiraCloses #1599 from ewencp/kafka-2941-explain-converter-configs,5
Updating the KEYS file with the correct public keysgit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1179911 13f79535-47bb-0310-9956-ffa450edef68,1
MINOR: Update vagrant/tests readme (#9650)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,3
"KAFKA-13388; Kafka Producer nodes stuck in CHECKING_API_VERSIONS (#11671)At the moment, the `NetworkClient` will remain stuck in the `CHECKING_API_VERSIONS` state forever if the `Channel` does not become ready. To prevent this from happening, this patch changes the logic to transition to the `CHECKING_API_VERSIONS` only when the `ApiVersionsRequest` is queued to be sent out. With this, the connection will timeout if the `Channel` does not become ready within the connection setup timeout. Once the `ApiVersionsRequest` is queued up, the request timeout takes over.Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",5
KAFKA-2674: clarify onPartitionsRevoked behaviorAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Guozhang WangCloses #467 from hachikuji/KAFKA-2674,5
KAFKA-10605: Deprecate old PAPI registration methods (#9448)Add deprecation annotations to the methods replaced in KIP-478.Reviewers: Bill Bejeck <bbejeck@apache.org>,1
kafka-819; System Test : Add validation of log segment index to offset; patched by John Fung; reviewed by Jun Rao,1
"KAFKA-7044; Fix Fetcher.fetchOffsetsByTimes and NPE in describe consumer group (#5627)A call to `kafka-consumer-groups --describe --group ...` can result in NullPointerException for two reasons:1)  `Fetcher.fetchOffsetsByTimes()` may return too early, without sending list offsets request for topic partitions that are not in cached metadata.2) `ConsumerGroupCommand.getLogEndOffsets()` and `getLogStartOffsets()` assumed that endOffsets()/beginningOffsets() which eventually call Fetcher.fetchOffsetsByTimes(), would return a map with all the topic partitions passed to endOffsets()/beginningOffsets() and that values are not null. Because of (1), null values were possible if some of the topic partitions were already known (in metadata cache) and some not (metadata cache did not have entries for some of the topic partitions). However, even with fixing (1), endOffsets()/beginningOffsets() may return a map with some topic partitions missing, when list offset request returns a non-retriable error. This happens in corner cases such as message format on broker is before 0.10, or maybe in cases of some other errors. Testing:-- added unit test to verify fix in Fetcher.fetchOffsetsByTimes() -- did some manual testing with `kafka-consumer-groups --describe`, causing NPE. Was not able to reproduce any NPE cases with DescribeConsumerGroupTest.scala,Reviewers: Jason Gustafson <jason@confluent.io>",5
kafka-1152; ReplicaManager's handling of the leaderAndIsrRequest should gracefully handle leader == -1; patched by Swapnil Ghike; reviewed by Jun Rao,0
"MINOR: improve the Kafka RPC code generator (#7340)Move the generator checkstyle suppressions to a special section, ratherthan mixing them in with the other sections.  For generated code, do notcomplain about variable names or cyclic complexity.FieldType.java: remove isInteger since it isn't used anywhere.  This way, wedon't have to decide whether a UUID is an integer or not (there are argumentsfor both choices).  Add FieldType#serializationIsDifferentInFlexibleVersionsand FieldType#isVariableLength.HeaderGenerator: add the ability to generate static imports.  AddIsNullConditional, VersionConditional, and ClauseGenerator as easier ways ofgenerating ""if"" statements.",1
"MINOR: Remove unused variable to fix spotBugs failure (#8779)Fixed spotBugs error introduced by c6633a1:>Dead store to isFreshAssignment in org.apache.kafka.clients.consumer.internals.AbstractStickyAssignor.generalAssign(Map, Map)Reviewers: Ismael Juma <ismael@juma.me.uk>",0
MINOR: Move `Os` class to utils package and rename it to OperatingSystemThe `common` package is public and this class isinternal.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Jason Gustafson <jason@confluent.io>Closes #2759 from ijuma/move-os-to-utils,4
"MINOR: Fix the negative time difference value from Log (#10553)Reviewers: Lucas Bradstreet <lucas@confluent.io>, Chia-Ping Tsai <chia7712@gmail.com>, David Jacot <djacot@confluent.io>",5
KAFKA-3477: extended KStream/KTable API to specify custom partitioner for sinksAuthor: mjsax <matthias@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1180 from mjsax/kafka-3477-streamPartitioner-DSL,5
MINOR: removed obsolete classguozhangwangAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #843 from ymatsuda/remove_unused,4
"MINOR: Adding system test for named repartition topics (#5913)This is a system test for doing a rolling upgrade of a topology with a named repartition topic.1. An initial Kafka Streams application is started on 3 nodes. The topology has one operation forcing a repartition and the repartition topic is explicitly named.2. Each node is started and processing of data is validated3. Then one node is stopped (full stop is verified)4. A property is set signaling the node to add operations to the topology before the repartition node which forces a renumbering of all operators (except repartition node)5. Restart the node and confirm processing records6. Repeat the steps for the other 2 nodes completing the rolling upgradeI ran two runs of the system test with 25 repeats in each run for a total of 50 test runs.All test runs passedReviewers: John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
KAFKA-3785; Fetcher spending unnecessary time during metrics recordingAuthor: Greg Fodor <gfodor@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1464 from gfodor/gfodor/kafka-3785,5
"KAFKA-6263; Expose metrics for group and transaction metadata loading duration[JIRA](https://issues.apache.org/jira/browse/KAFKA-6263)- Add metrics to provide visibility for how long group metadata and transaction metadata take to load in order to understand some inactivity seen in the consumer groups- Tests include mocking load times by creating a delay after each are loaded and ensuring the measured JMX metric is as it should beAuthor: anatasiavela <anastasiavela@berkeley.edu>Reviewers: Gwen Shapira, Jason GustafsonCloses #7045 from anatasiavela/KAFKA-6263",1
MINOR: Temporarily disable a few flaky testsAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Ewen Cheslack-Postava <me@ewencp.org>Closes #2978 from ijuma/disable-some-flaky-tests,3
"MINOR: Only invoke hw update logic for follower fetches (#7064)We noticed a lot of messages like the following in the broker logs recently:```[2019-07-10 02:01:23,946] WARN [ReplicaManager broker=0] While updating the HW for follower -1 for partition connect-storage-topic-connect-cluster-0, the replica could not be found. (kafka.server.ReplicaManager:70)```In the KIP-392 PR, we added logic to track the high watermark of followers, but it is invoked even for consumer fetches. This doesn't cause any harm other than all the log noise. This patch just adds the missing follower check.Reviewers: David Arthur <mumrah@gmail.com>",1
"MINOR: Add property to configure showing of standard streams in GradleThis is handy when debugging certain kinds of Jenkins failures.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #739 from ijuma/gradle-show-standard-streams",5
"MINOR: Update JavaDoc for DSL PAPI-APIAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Guozhang WangCloses #2413 from mjsax/javaDocImprovements6",2
"KAFKA-10097: Internalize checkpoint data (#8820)Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
"KAFKA-5416; TC should not reset pending state if log append is retriedIn `TransationStateManager`, we reset the pending state if an error occurred while appending to log; this is correct except that for the `TransactionMarkerChannelManager`, as it will retry appending to log and if eventually it succeeded, the transaction metadata's completing transition will throw an IllegalStateException since pending state is None, this will be thrown all the way to the `KafkaApis` and be swallowed.1. Do not reset the pending state if the append will be retried (as is the case when write the complete transition).2. A bunch of log4j improvements based the debugging experience. The main principle is to make sure all error codes that is about to sent to the client will be logged, and unnecessary log4j entries to be removed.3. Also moved some log entries in ReplicationUtils.scala to `trace`: this is rather orthogonal to this PR but I found it rather annoying while debugging the logs.4. A couple of unrelated bug fixes as pointed by hachikuji and apurvam.Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Apurva Mehta <apurva@confluent.io>, Jason Gustafson <jason@confluent.io>Closes #3287 from guozhangwang/KHotfix-transaction-coordinator-append-callback",0
"KAFKA-5362; Follow up to Streams EOS system test - improve tests to get rid of calls to `sleep` in Python - fixed some flaky test conditions - improve debuggingAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy <damian.guy@gmail.com>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3542 from mjsax/failing-eos-system-tests",5
kafka-832; 0.8 Consumer prevents rebalance if consumer thread is blocked or slow; patched by Jun Rao; reviewed by Neha Narkhede,5
"MINOR: KAFKA-3260 follow up, fix commitRecord calls in testsAuthor: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1080 from ewencp/minor-kafka-3260-followup-tests",3
"KAFKA-2946; DeleteTopic - protocol and server side implementationAuthor: Grant Henke <granthenke@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Ewen Cheslack-Postava <me@ewencp.org>, Jun Rao <junrao@gmail.com>Closes #1616 from granthenke/delete-wire-new",4
"MINOR: ZkMetadataCache should be in kafka.server.metadata #10956Put ZkMetadataCache in the kafka.server.metadata package rather than the kafka.server package, sothat its package is consistent with its position in the source directory hierarchy.Reviewers: Colin P. McCabe <cmccabe@apache.org>",5
"KAFKA-6008: Sanitize the app id before creating app id metricAuthor: Jakub Scholz <www@scholzj.com>Reviewers: Randall Hauch <rhauch@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #4012 from scholzj/KAFKA-6008",5
KAFKA-239 Refactoring code to wire new ZK data structures and making partitions logical; patched by Neha Narkhede; reviewed by Jun Raogit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1295861 13f79535-47bb-0310-9956-ffa450edef68,2
HOTFIX: Compilation error in GroupMetadataManagerTest (#5752)Accidentally broke after merging KAFKA-7395 which had not been updated for #5727.Reviewers:Matthias J. Sax <matthias@confluent.io>,5
"KAFKA-930 leader auto rebalance feature; reviewed by Neha Narkhede, Jun Rao and Guozhang Wang",5
KAFKA-771 NPE in handleOffsetCommitRequest; reviewed by Neha Narkhede,0
"MINOR Refactored the existing CheckpointFile in core module, moved to server-common module and introduced it as SnapshotFile. (#11060)MINOR Refactored the existing CheckpointFile in core module, moved to server-common module.Refactored CheckpointFile to server-common module as a Java class and it is reused by LeaderCheckpointFile, OffsetCheckpointFile.This will be used by CommittedOffsetsFile which checkpoints remote log metadata partitions with respective offsets in the default RemoteLogMetadataManager implementation.Existing tests are available for LeaderCheckpointFile, OffsetCheckpointFile.Reviewers: Jun Rao <junrao@gmail.com>",2
KAFKA-12700: override toString method to show correct value in doc (#10574)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,2
"MINOR: Configure owasp.dependencycheck gradle pluginIt seems to output a few false positives, but stillworth verifying.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4117 from ijuma/dependency-check",5
"KAFKA-13011; Update deleteTopics Admin API  (#10892)This patch adds two new apis to support topic deletion using topic IDs or names. It uses a new class `TopicCollection` to keep a collection of topics defined either by names or IDs. Finally, it modifies `DeleteTopicsResult` to support both names and IDs and deprecates the old methods which have become ambiguous. Eventually we will want to deprecate the old `deleteTopics` apis as well, but this patch does not do so.Reviewers: Jason Gustafson <jason@confluent.io>",5
"Revert ""KAFKA-7657: Fixing thread state change to instance state change (#6018)"" (#6090)This reverts commit d6698308194625e7921b9c3ace27a918f42f26f1.",4
"KAFKA-5244; Refactor BrokerTopicStats and ControllerStats so that they are classesThis removes the need to force object initialisation via hacks to registerthe relevant Yammer metrics during start-up.It also works around issues caused by tests that delete JVM-wide singletonmetrics (like `MetricsDuringTopicCreationDeletionTest`). Without thischange, they would never be registered again. After this change, they willbe registered again during KafkaServer start-up.It would be even better not to rely on JVM side singleton metrics (like we dofor Kafka Metrics), but that's a bigger change that should be consideredseparately.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #3059 from ijuma/kafka-5244-broker-static-stats-and-controller-stats-as-classes",5
kafka-1698; Validator.ensureValid() only validates default config value; patched by Ewen Cheslack-Postava; reviewed by Jun Rao,5
"KAFKA-7979 - Clean up threads and increase timeout in PartitionTest (#6378)Stack trace generated from the test failure shows that test failed even though threads were runnable and making progress, indicating that the timeout may be too small when test machine is slow. Increasing timeout from 10 to 15 seconds, consistent with the default wait in other tests. Thread dump also showed a lot of left over threads from other tests, so added clean up of those as well.Reviewers: Ismael Juma <ismael@juma.me.uk>",4
KAFKA-14178 Don't record queue time for deferred events (#12551),5
"KAFKA-12749: Changelog topic config on suppressed KTable lost (#10664)Refactored logConfig to be passed appropriately when using shutDownWhenFull or emitEarlyWhenFull. Removed the constructor that doesn't accept a logConfig parameter so you're forced to specify it explicitly, whether it's empty/unspecified or not.Co-authored-by: Bruno Cadonna <cadonna@apache.org>Reviewers: Walker Carlson <wcarlson@confluent.io>, Bruno Cadonna <cadonna@apache.org>",1
"KAFKA-7223: Make suppression buffer durable (#5724)This is Part 4 of suppression (durability)Part 1 was #5567 (the API)Part 2 was #5687 (the tests)Part 3 was #5693 (in-memory buffering)Implement a changelog for the suppression buffer so that the buffer state may be recovered on restart or recovery.As of this PR, suppression is suitable for general usage.Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-13324: KRaft: fix validateOnly in CreateTopics (#11361)Fix a bug where the validateOnly flag for createTopics was being ignored.Reviewers: David Arthur <mumrah@gmail.com>, José Armando García Sancio <jsancio@gmail.com>, singingMan <3schwartz@users.noreply.github.com>",1
KAFKA-6453: Document how timestamps are computed for aggregations and joins (#9009)Reviewer: Matthias J. Sax <matthias@confluent.io>,5
Separate out Kafka mirroring into a stand-alone app; patched by Joel Koshy; reviewed by Jun Rao and Neha Narkhede; KAFKA-249git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1310645 13f79535-47bb-0310-9956-ffa450edef68,1
"MINOR: Move log statement stating producer closed after possible exception (#6606)In the KafkaProducer#close method we have a debug log statement Kafka producer has been closed then a few lines later a KafkaException can occur.This could be confusing to users, so this PR simply moves the log statement to after the possible exception to avoid confusing information in the logs.Reviewers:  Guozhang Wang <wangguoz@gmail.com>",2
"MINOR: Fix potential deadlock in consumer close testFixes deadlock scenario found during local test run:The main thread was waiting for the coordinator lock.The thread performing close() was holding thecoordinator lock and polling to find coordinator.The test expected close() to timeout, but for timingout, the main thread had to update time, which itcouldn't since it was waiting for the lock. This fixavoids using coordinator in the main thread duringthe close task.Author: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2792 from rajinisivaram/MINOR-closetest-deadlock",5
"KAFKA-6726: Fine Grained ACL for CreateTopics (KIP-277) (#4795)- CreateTopicsRequest now requires Create auth on Topic resourceor Create on Cluster resource.- AclCommand --producer option adjusted- Existing unit and Integration tests adjusted accordingly andnew tests added.Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Ismael Juma <ismael@juma.me.uk>Co-authored-by: Edoardo Comar <ecomar@uk.ibm.com>Co-authored-by: Mickael Maison <mickael.maison@gmail.com>",1
"KAFKA-5876: Apply UnknownStateStoreException for Interactive Queries (#9821)KIP-216: IQ should throw different exceptions for different errors, Part 2Reviewers: Matthias J. Sax <mjsax@confluent.io>, Anna Sophie Blee-Goldman <ableegoldman@apache.org>, Bruno Cadonna <cadonna@confluent.io>",5
MINOR: fix backwards incompatibility in JmxReporter introduced by KIP-606cc omkreddy this should also get backported to 2.6.xAuthor: Xavier Léauté <xvrl@apache.org>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #8813 from xvrl/fix-jmx-reset,0
"MINOR: Refactor the MetadataCache interface (#10887)Remove getNonExistingTopics, which was not necessary. MetadataCachealready lets callers check for the existence of topics by callingMetadataCache#contains.Add MetadataCache#getAliveBrokerNode and getAliveBrokerNodes. Thissimplifies the calling code, which always wants a Node.Fix a case where we were calling getAliveBrokers and filtering by id,rather than simply calling getAliveBroker(id) and making use of the hashmap.Reviewers: Jason Gustafson <jason@confluent.io>, Jose Sancio <jsancio@gmail.com>",5
"KAFKA-8698: Fix typo in ListOffsetResponse v0 protocol field nameAuthor: asutosh936 <asutosh.pandya@hotmail.com>Reviewers: Mickael Maison <mickael.maison@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>, Vahid Hashemian <vahid.hashemian@gmail.com>, Jason Gustafson <jason@confluent.io>Closes #7141 from asutosh936/KAFKA-8698",5
"MINOR: Turn off caching in demos for more understandable outputsAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Matthias J Sax <matthias@confluent.io>, Bill Bejeck <bbejeck@gmail.com>Closes #3403 from guozhangwang/KMinor-turn-off-caching-in-demo",5
KAFKA-4211; Update system test services to use the new consumer by defaultUpdate system test method signatures and method calls to use the new consumer by default.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #2060 from vahidhashemian/KAFKA-4211,5
HOTFIX: call consumer.poll() even when no task is assignedStreamThread should keep calling consumer.poll() even when no task is assigned. This is necessary to get a task.guozhangwangAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #373 from ymatsuda/no_task,5
"KAFKA-9987: optimize sticky assignment algorithm for same-subscription case (#8668)Motivation and pseudo code algorithm in the ticket.Added a scale test with large number of topic partitions and consumers and 30s timeout.With these changes, assignment with 2,000 consumers and 200 topics with 2,000 each completes within a few seconds.Porting the same test to trunk, it took 2 minutes even with a 100x reduction in the number of topics (ie, 2 minutes for 2,000 consumers and 2 topics with 2,000 partitions)Should be cherry-picked to 2.6, 2.5, and 2.4Reviewers: Guozhang Wang <wangguoz@gmail.com>",1
MINOR: Bump to version 0.10.2,5
KAFKA-1036 Close checkpoint file before renaming it for Windows compatibility.,2
"Reverting accidental commit 1180110, which is pending review for KAFKA-141git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1180117 13f79535-47bb-0310-9956-ffa450edef68",1
Bump trunk to 2.7.0-SNAPSHOT (#8746),1
kafka-992; follow-up patch; Double Check on Broker Registration to Avoid False NodeExist Exception; patched by Guozhang Wang; reviewed by Neha Narkhede and Jun Rao,5
MINOR: Update to Scala 2.11.12 (part 2)Missed a few places in the previous commit.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4200 from ijuma/scala-2.11.12-part2,5
"KAFKA-5037 Follow-up: move Scala test to Java (#5399)Reviewers: Ted Yu <yuzhihong@gmail.com>, Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
MINOR: change log.dirs for config/kraft/controller.properties (#11028)Change log.dirs for config/kraft/controller.properties to be more consistent with the otherexample config files for kraft.Reviewers: Colin P. McCabe <cmccabe@apache.org>,2
"KAFKA-10427:  Fetch snapshot API (#9553)Implements the code necessary for the leader to response to fetch snapshot requests and for the follower to fetch snapshots. This API is described in more detail in KIP-630: https://cwiki.apache.org/confluence/display/KAFKA/KIP-630%3A+Kafka+Raft+Snapshot.  More specifically, this patch includes the following changes:Leader Changes:1. Raft leader response to FetchSnapshot request by reading the local snapshot and sending the requested bytes in the response. This implementation currently copies the bytes to memory. This will be fixed in a future PR.Follower Changes:1. Raft followers will start fetching snapshot if the leader sends a Fetch response that includes a SnapshotId.2. Raft followers send FetchSnapshot requests if there is a pending download. The same timer is used for both Fetch and FetchSnapshot requests.3. Raft follower handle FetchSnapshot responses by comping the bytes to the pending SnapshotWriter. This implementation doesn't fix the replicated log after the snapshot has been downloaded. This will be implemented in a future PR.Reviewers: Jason Gustafson <jason@confluent.io>",5
"MINOR: default implementation for new window store overloads (#5759)Reviewers: Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>, Nikolay Izhikov <nizhikov@apache.org>",5
"KAFKA-10546: Deprecate old PAPI (#10869)* Deprecate the old Processor API* Suppress warnings on all internal usages of the old API  (which will be migrated in other child tickets of KAFKA-8410)* Add new KStream#process methods, since KAFKA-10603 has not seen any action.",1
"MINOR: Use ""new line"" delimeters in a portable way in a unit testThis fixes failure of the FileStreamSinkTaskTest unit test on WindowsSigned-off-by: glikson <gliksonil.ibm.com>Author: glikson <glikson@il.ibm.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #708 from glikson/file-ut-newline",2
"KAFKA-9892; Producer state snapshot should be forced to disk (#9621)FileChannel.close() does not guarantee modified buffer would be written on the file system. We are changing  it with force() semantics to enforce file buffer and metadata written to filesystem (FileChannel.force(true) updates buffer and metadata).Reviewers: Jun Rao <junrao@gmail.com>, Jason Gustafson <jason@confluent.io>",5
"KAFKA-5867: Log Kafka Connect worker info during startupAuthor: Konstantine Karantasis <konstantine@confluent.io>Reviewers: Randall Hauch <rhauch@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #3932 from kkonstantine/KAFKA-5867-Kafka-Connect-applications-should-log-info-message-when-starting-up",5
"MINOR: Configure reconnect backoff in `BrokerToControllerChannelManager` (#9709)We should configure a reconnect backoff for controller connections to prevent tight reconnect loops when the controller cannot be reached. I have borrowed the same configuration we use in `TransactionMarkerChannelManager`.Reviewers: David Arthur <mumrah@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>, Boyang Chen <boyang@confluent.io>",5
MINOR: A few cleanups in BrokerToControllerChannelManager (#11937)Make the code style more consistentReviewers: Luke Chen <showuon@gmail.com>,1
"MINOR: add equals to SessionWindowsAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Matthias J. Sax<matthias@confluent.io>, Bill Bejeck <bill@confluent.io>Closes #4074 from dguy/minor-session-window-equals",5
KAFKA-6927; Chunked down-conversion to prevent out of memory errors on broker [KIP-283] (#4871)Implementation for lazy down-conversion in a chunked manner for efficient memory usage during down-conversion. This pull request is mainly to get initial feedback on the direction of the patch. The patch includes all the main components from KIP-283.Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-13305: fix NullPointerException in LogCleanerManager ""uncleanable-bytes"" gauge (#11327)Reviewers: David Jacot <djacot@confluent.io>, Jun Rao <junrao@gmail.com>",5
KAFKA-1096 An old controller coming out of long GC could update its epoch to the latest controller's epoch; reviewed by Neha Narkhede,3
Fix streams quickstart in Jenkinsfile (#9285),2
"MINOR: Add cluster-metadata-decoder to DumpLogSegments (#10212)Add the --cluster-metadata-decoder and --skip-record-metadata options tothe DumpLogSegments command-line tool, as described in KIP-631.Co-authored-by: David Arthur <mumrah@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-6958: Overload KTable methods to allow to name operation name using the new Named class (#6412)Sub-task required to allow to define custom processor names with KStreams DSL(KIP-307). This is the 4th PR for KIP-307. Reviewers: John Roesler <john@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
MINOR: Wrong command line suggestion in kafka.Kafka (#9637)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,0
broker failure system test broken on replication branch; patched by John Fung; reviewed by Joel Koshy and Jun Rao; KAFKA-306git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1359812 13f79535-47bb-0310-9956-ffa450edef68,3
"KAFKA-6106: Postpone normal processing of tasks within a thread until restoration of all tasks have completed. (#4651)Author:  Kamal Chandraprakash <kamal.chandraprakash@gmail.com>Reviewer: Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bill@confluent.io>",5
MINOR: Upgrade jetty-server to 9.4.44.v20210927 (#11692)Release notes: https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.44.v20210927Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>,5
"KAFKA-9545: Fix subscription bugs from Stream refactoring (#8109)This PR fixes two bugs related to stream refactoring:1. The subscribed topics are not updated correctly when topic gets removed from broker.2. The remainingPartitions computation doesn't account the case when one task has a pattern subscription of multiple topics. Then the input partition change will not be assumed as containsAllThe bugs are exposed from integration test testRegexMatchesTopicsAWhenDeleted and could be used to verify the fix works.Reviewers: A. Sophie Blee-Goldman <sophie@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-3522: Add internal RecordConverter interface (#6150)Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
MINOR: some code cleanups in the controller,4
Update kafka-run-class.bat (#6291)Removed quotes from LogDir variable generation as there are additional quotes in Line 127.This caused problems when those batch files are invoked from a path that contains space characters.,2
"MINOR: single Jackson serde for PageViewTypedDemo (#5590)Previously, we depicted creating a Jackson serde for every pojo class, which becomes a burden in practice. There are many ways to avoid this and just have a single serde, so we've decided to model this design choice instead.Reviewers: Viktor Somogyi <viktorsomogyi@gmail.com>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
KAFKA-2702: ConfigDef toHtmlTable() sorts in a way that is a bit conf……usingAuthor: Grant Henke <granthenke@gmail.com>Reviewers: Gwen ShapiraCloses #379 from granthenke/config-html,5
"KAFKA-5526; Additional `--describe` views for ConsumerGroupCommand (KIP-175)The `--describe` option of ConsumerGroupCommand is expanded, as proposed in [KIP-175](https://cwiki.apache.org/confluence/display/KAFKA/KIP-175%3A+Additional+%27--describe%27+views+for+ConsumerGroupCommand), to support:* `--describe` or `--describe --offsets`: listing of current group offsets* `--describe --members` or `--describe --members --verbose`: listing of group members* `--describe --state`: group statusExample: With a single partition topic `test1` and a double partition topic `test2`, consumers `consumer1` and `consumer11` subscribed to `test`, consumers `consumer2` and `consumer22` and `consumer222` subscribed to `test2`, and all consumers belonging to group `test-group`, this is an output example of the new options above for `test-group`:```--describe, or --describe --offsets:TOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID                                     HOST            CLIENT-IDtest2           0          0               0               0               consumer2-bad9496d-0889-47ab-98ff-af17d9460382  /127.0.0.1      consumer2test2           1          0               0               0               consumer22-c45e6ee2-0c7d-44a3-94a8-9627f63fb411 /127.0.0.1      consumer22test1           0          0               0               0               consumer1-d51b0345-3194-4305-80db-81a68fa6c5bf  /127.0.0.1      consumer1``````--describe --membersCONSUMER-ID                                      HOST            CLIENT-ID       #PARTITIONSconsumer2-bad9496d-0889-47ab-98ff-af17d9460382   /127.0.0.1      consumer2       1consumer222-ed2108cd-d368-41f1-8514-5b72aa835bcc /127.0.0.1      consumer222     0consumer11-dc8295d7-8f3f-4438-9b11-7270bab46760  /127.0.0.1      consumer11      0consumer22-c45e6ee2-0c7d-44a3-94a8-9627f63fb411  /127.0.0.1      consumer22      1consumer1-d51b0345-3194-4305-80db-81a68fa6c5bf   /127.0.0.1      consumer1       1``````--describe --members --verboseCONSUMER-ID                                      HOST            CLIENT-ID       #PARTITIONS     ASSIGNMENTconsumer2-bad9496d-0889-47ab-98ff-af17d9460382   /127.0.0.1      consumer2       1               test2(0)consumer222-ed2108cd-d368-41f1-8514-5b72aa835bcc /127.0.0.1      consumer222     0               -consumer11-dc8295d7-8f3f-4438-9b11-7270bab46760  /127.0.0.1      consumer11      0               -consumer22-c45e6ee2-0c7d-44a3-94a8-9627f63fb411  /127.0.0.1      consumer22      1               test2(1)consumer1-d51b0345-3194-4305-80db-81a68fa6c5bf   /127.0.0.1      consumer1       1               test1(0)``````--describe --stateCOORDINATOR (ID)         ASSIGNMENT-STRATEGY       STATE                #MEMBERSlocalhost:9092 (0)       range                     Stable               5```Note that this PR also addresses the issue reported in [KAFKA-6158](https://issues.apache.org/jira/browse/KAFKA-6158) by dynamically setting the width of columns `TOPIC`, `CONSUMER-ID`, `HOST`, `CLIENT-ID` and `COORDINATOR (ID)`. This avoid truncation of column values when they go over the current fixed width of these columns.The code has been restructured to better support testing of individual values and also the console output. Unit tests have been updated and extended to take advantage of this restructuring.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #4271 from vahidhashemian/KAFKA-5526",5
KAFKA-2208; add consumer side error handling upon coordinator failure; reviewed by Onur Karaman,0
"KAFKA-9752; New member timeout can leave group rebalance stuck (#8339)Older versions of the JoinGroup rely on a new member timeout to keep the group from growing indefinitely in the case of client disconnects and retrying. The logic for resetting the heartbeat expiration task following completion of the rebalance failed to account for an implicit expectation that shouldKeepAlive would return false the first time it is invoked when a heartbeat expiration is scheduled. This patch fixes the issue by making heartbeat satisfaction logic explicit.Reviewers:  Chia-Ping Tsai <chia7712@gmail.com>, Guozhang Wang <wangguoz@gmail.com>, Rajini Sivaram <rajinisivaram@googlemail.com>",5
"KAFKA-4923: Modify compatibility test for Exaclty-Once Semantics in Streams - add broker compatibility system testsAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Eno Thereska, Guozhang WangCloses #2974 from mjsax/kafka-4923-add-eos-to-streams-add-broker-check-and-system-test",5
"MINOR: Fix potential integer overflow and String.format issueAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Apurva Mehta <apurva.1618@gmail.com>, Jason Gustafson <jason@confluent.io>Closes #2585 from ijuma/overflow-and-format-fixes",0
"MINOR: update release script for streams quickstartAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Guozhang Wang <wangguoz@gmail.com>Closes #3846 from dguy/minor-release-script",5
MINOR: Include call name in TimeoutException (#8050)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,5
KAFKA-5094; Replace SCRAM credentials in broker logs with tag hiddenAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2879 from rajinisivaram/KAFKA-5094,5
"KAFKA-5856; AdminClient.createPartitions() follow-up (KIP-195)- Remove DelayedCreatePartitions to reduce code duplication- Avoid unnecessary ZK calls (call it once per request insteadof once per topic, if possible)- Simplify code- A few minor clean-upsAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Tom Bentley <tbentley@redhat.com>, Rajini Sivaram <rajinisivaram@googlemail.com>Closes #3930 from ijuma/kafka-5856-admin-client-creation-partitions",1
MirrorMaker with shallow.iterator.enable=true produces unreadble messages; patched by Jun Rao; reviewed by Neha Narkhede; kafka-732,5
KAFKA-1914; Include total produce/fetch stats in broker topic metrics.,5
"KAFKA-4794: Add access to OffsetStorageReader from SourceConnector (#2604)Added access to OffsetStorageReader from SourceConnector per KIP-131. Added two interfaces SinkConnectorContext/SourceConnectContext that extend ConnectorContext in order to expose an OffsetStorageReader instance.Added unit tests for Connector, SinkConnector and SourceConnector default methodsAuthor: Florian Hussonnois <florian.hussonnois@gmail.com>, Randall Hauch <rhauch@gmail.com>Reviewers: Randall Hauch <rhauch@gmail.com>, Konstantine Karantasis <konstantine@confluent.io>",5
"KAFKA-3710: MemoryOffsetBackingStore shutdownExecutorService needs to be shutdown on close, lest a zombie threadprevent clean shutdown.ewencpAuthor: Peter Davis <peter.davis@expeditors.com>Reviewers: Liquan Pei <liquanpei@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1383 from davispw/KAFKA-3710",5
"KAFKA-9642: Change ""BigDecimal(double)"" constructor to ""BigDecimal.valueOf(double)"" (#8212)Co-authored-by: Soontaek Lim <soontaek.lim@ultratendency.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>",4
"KAFKA-8264: decrease the record size for flaky testThis flaky test exists for a long time, and it happened more frequently recently. (also happened in my PR testing!! :(  ) In KAFKA-8264 and KAFKA-8460, it described the issue for this test is that> Timed out before consuming expected 2700 records. The number consumed was xxxxI did some investigation. This test is to test:> we consume all partitions if fetch max bytes and max.partition.fetch.bytes are low.And what it did, is to create 3 topics and 30 partitions for each. And then, iterate through all 90 partitions to send 30 records for each. Finally, verify the we can consume all the records successfully.What the error message saying is that it cannot consume all the records in time (might be the busy system) So, we can actually decrease the record size to avoid it. I checked all the error messages we collected in KAFKA-8264 and KAFKA-8460, the failed cases can always consume at least 1440 up (total is 2700). So, I set the records half size of the original setting, it'll become 1350 records in total. It should make this test more stable.Author: Luke Chen <showuon@gmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #8885 from showuon/KAFKA-8264",3
"KAFKA-13728: fix PushHttpMetricsReporter no longer pushes metrics when network failure is recovered. (#11879)The class PushHttpMetricsReporter no longer pushes metrics when network failure is recovered.I debugged the code and found the problem here: when we submit a task to the ScheduledThreadPoolExecutor that needs to be executed periodically, if the task throws an exception and is not swallowed, the task will no longer be scheduled to execute.So when an IO exception occasionally occurs on the network, we should swallow it rather than throw it in task HttpReporter.Reviewers: Guozhang Wang <wangguoz@gmail.com>",1
"MINOR: Add docs for ReplicationBytesInPerSec and ReplicationBytesOutPerSec (#4595)Add docs for the ReplicationBytesInPerSec and ReplicationBytesOutPerSec metrics. These metrics were introduced in KIP-153 (KAFKA-5194) but the docs were not updated.Built site-docs, and viewed them in a web browser to confirm.Reviewers: Mickael Maison <mickael.maison@gmail.com>, Ismael Juma <ismael@juma.me.uk>",5
MINOR: bump 2.5 versions to 2.5.1 (#9165)Reviewers: Bill Bejeck <bbejeck@apache.org>,2
"KAFKA-10601; Add support for append linger to Raft implementation (#9418)The patch adds `quorum.append.linger.ms` behavior to the raft implementation. This gives users a powerful knob to tune the impact of fsync.  When an append is accepted from the state machine, it is held in an accumulator (similar to the producer) until the configured linger time is exceeded. This allows the implementation to amortize fsync overhead at the expense of some write latency.The patch also improves our methodology for testing performance. Up to now, we have relied on the producer performance test, but it is difficult to simulate expected controller loads because producer performance is limited by other factors such as the number of producer clients and head-of-line blocking. Instead, this patch adds a workload generator which runs on the leader after election.Finally, this patch brings us nearer to the write semantics expected by the KIP-500 controller. It makes the following changes:- Introduce `RecordSerde<T>` interface which abstracts the underlying log implementation from `RaftClient`. The generic type is carried over to `RaftClient<T>` and is exposed through the read/write APIs.- `RaftClient.append` is changed to `RaftClient.scheduleAppend` and returns the last offset of the expected log append.- `RaftClient.scheduleAppend` accepts a list of records and ensures that the full set are included in a single batch.- Introduce `RaftClient.Listener` with a single `handleCommit` API which will eventually replace `RaftClient.read` in order to surface committed data to the controller state machine. Currently `handleCommit` is only used for records appended by the leader.Reviewers: José Armando García Sancio <jsancio@users.noreply.github.com>, Guozhang Wang <wangguoz@gmail.com>",1
MINOR: Adjust parameter ordering of `waitForCondition` and `retryOnExceptionWithTimeout` (#10759)New parameters in overloaded methods should appear later apart fromlambdas that should always be last.,2
Revert 4e311 KAFKA-5690 since KIP-357 has not passed vote,4
"MINOR: update release.py (#5374)Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>, Dong Lin <dolin@linkedin.com>",2
KAFKA-4945; Suppress findbugs warnings about machine-generated code in jmh-benchmarksAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2729 from cmccabe/KAFKA-4945,5
"MINOR: Bump timeout for sending records (#5843)Reviewers: John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
KAFKA-593 Empty log index file created when it shouldn't be empty; Patched by Yang Ye; reviewed by Jun and Jaygit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1406036 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-4936: Add dynamic routing in Streams (#5018)implements KIP-303Reviewers: Bill Bejeck <bill@confluent.io>, John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
HOTFIX: Fix NPE after standby task reassignmentBuffered records of change logs must be cleared upon reassignment of standby tasks.Author: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #889 from ymatsuda/hotfix,0
"KAFKA-13511: Add support for different unix precisions in TimestampConverter SMT (#11575)Reviewers: Mickael Maison <mickael.maison@gmail.com>, Tom Bentley <tbentley@redhat.com>",1
"Minor resolve streams scala warnings (#6369)Resolves the compiler warnings when building streams-scala.Reviewers: A. Sophie Blee-Goldman <ableegoldman@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Guozhang Wang <wangguoz@gmail.com>",2
MINOR: Fix re-raise of python error in system testsAuthor: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Jason Gustafson <jason@confluent.io>Closes #2099 from ewencp/fix-python-reraise,0
"KAFKA-3196; Added checksum and size to RecordMetadata and ConsumerRecordThis is the second (remaining) part of KIP-42. See https://cwiki.apache.org/confluence/display/KAFKA/KIP-42%3A+Add+Producer+and+Consumer+InterceptorsAuthor: Anna Povzner <anna@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>, Jun Rao <junrao@gmail.com>Closes #951 from apovzner/kafka-3196",5
Fixing the perf subproject that broker after the sbt upgrade,0
MINOR: Simplify handling of KafkaProducer serializer overridesAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Dong Lin <lindong28@gmail.com>Closes #5781 from ijuma/simplify-producer-constructor,5
"KAFKA-6653; Complete delayed operations even when there is lock contention (#4704)If there is lock contention while multiple threads check if a delayed operation may be completed (e.g. a produce request with acks=-1), the threads perform completion only if the lock is free, to avoid deadlocks. This leaves a timing window when an operation becomes ready to complete after another thread has acquired the lock and performed the check for completion, but not yet released the lock. The PR adds an additional flag to ensure that the operation is completed in this case.",1
Minor: enable index for emit final sliding window (#12461)Enable index for sliding window emit final case as it's faster to fetch windows for particular keyReviewers: Guozhang Wang <wangguoz@gmail.com>,0
"KAFKA-2515: Handle oversized messages properly in new consumerAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Dong Lin, Jun RaoCloses #318 from guozhangwang/K2515",1
"MINOR: Fix stream-join metadata (#11952)#11356 inadvertently changedthe (undefined) header forwarding behavior of stream-stream joins.This change does not define the behavior, but just restores the priorundefined behavior for continuity's sake. Defining the header-forwardingbehavior is future work.Reviewers: Matthias J. Sax <mjsax@apache.org>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>",1
"KAFKA-2467: Fix changes to behavior in ConsoleConsumer: properly parse consumer.config option, handle exceptions during message processing, and print number of processed messages to stderr.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Guozhang WangCloses #166 from ewencp/kafka-2467-fix-console-consumer-behavior-regressions and squashes the following commits:8b5e30c [Ewen Cheslack-Postava] KAFKA-2466: Fix ConsoleConsumer exit process for new consumer to avoid ConcurrentModificationException.c6abe38 [Ewen Cheslack-Postava] Fix missing parameter in test.a6961ee [Ewen Cheslack-Postava] KAFKA-2467: Fix changes to behavior in ConsoleConsumer: properly parse consumer.config option, handle exceptions during message processing, and print number of processed messages to stderr.",0
"KAFKA-2820: systest log levelRestores control over log level in system test service class KafkaService.Author: Geoff Anderson <geoff@confluent.io>Reviewers: Ismael Juma, Ewen Cheslack-PostavaCloses #538 from granders/KAFKA-2820-systest-log-level",5
"KAFKA-3887 Follow-up: add unit test for null checking in KTable aggregatesAlso made a pass over the streams unit tests, with the following changes:1. Removed three integration tests as they are already covered by other integration tests.2. Merged `KGroupedTableImplTest` into `KTableAggregateTest`.3. Use mocks whenever possible to reduce code duplicates.Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #1604 from guozhangwang/Kminor-unit-tests-consolidation",5
KAFKA-4796; Fix some findbugs warnings in Kafka Java clientAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2593 from cmccabe/KAFKA-4796,5
"MINOR: Split at first occurrence of '=' in kafka.py props parsing (#5549)This is a fix to #5226 to account for config properties that have anequal char in the value.   Otherwise if there is oneequal char in the value the following error occurs:dictionary update sequence element #XX has length 3; 2 is requiredReviewers: Colin Patrick McCabe <colin@cmccabe.xyz>, Ismael Juma <ismael@juma.me.uk>",1
"KAFKA-3565; Add documentation to warn user about the potential messag……e throughput drop due to the addition of timestamp field.Author: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>Closes #1372 from becketqin/KAFKA-3565",1
KAFKA-5921; add Materialized overloads to windowed kstreamAdd `Materialized` overloads to `WindowedKStream`. Deprecate existing methods on `KGroupedStream`Author: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #3889 from dguy/kafka-5921,1
"MINOR: Fix throttle usage in reassignment test case (#7822)The replication throttle in `testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress` was not setting the quota on the partition correctly, so the test case was not working as expected. This patch fixes the problem and also fixes a bug in `waitForTopicCreated` which caused the function to always wait for the full timeout.Reviewers: Ismael Juma <ismael@juma.me.uk>",1
MINOR: Remove redundant argument from TaskMetricsGroup#recordCommit (#9642)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,4
HOTFIX: Allow multi-batches for old format and no compression (#6871)Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-5888; System test to check ordering of messages with transactions and max.in.flight > 1To check ordering, we augment the existing transactions test to read and write from topics with one partition. Since we are writing monotonically increasing numbers, the topics should always be sorted, making it very easy to check for out of order messages.Author: Apurva Mehta <apurva@confluent.io>Reviewers: Jason Gustafson <jason@confluent.io>Closes #3969 from apurvam/KAFKA-5888-system-test-which-check-ordering",5
KAFKA-3506: Kafka Connect restart APIsAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1189 from hachikuji/KAFKA-3506,5
MINOR: fix broken links in streams doc (#5025)Reviewers: Guozhang Wang <wangguoz@gmail.com>,2
remove ZK dependency on producer; patched by Yang Ye; reviewed by Jun Rao; KAFKA-369git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1372724 13f79535-47bb-0310-9956-ffa450edef68,4
KAFKA-8880: Docs on upgrade-guide (#7385)Reviewers: Matthias J. Sax <matthias@confluent.io>,5
MINOR: update stream-stream join docs (#11172)Reviewers: Guozhang Wang <guozhang@confluent.io>,5
"Refactor the MetadataCache into two implementations (#10049)Refactor the MetadataCache into two implementations that both implement a common trait.  This will let uscontinue to use the existing implementation when using ZK, but use the new implementation when in kip-500 mode.Reviewers: Colin McCabe <cmccabe@apache.org>, Justine Olshan <jolshan@confluent.io>, Jason Gustafson <jason@confluent.io>",5
MINOR: flush record collector after local state flushguozhangwangFix the order of flushing. Undoing the change I did sometime ago.Author: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #304 from ymatsuda/flush_order,5
"KAFKA-6290: Support casting from logical types in cast transform (#7371)Adds support for the Connect Cast transforms to cast from Connect logical types, such as DATE, TIME, TIMESTAMP, and DECIMAL. Casting to numeric types will produce the underlying numeric value represented in the desired type. For logical types represented by underlying Java Date class, this means the milliseconds since EPOCH. For Decimal, this means the underlying value. If the value does not fit in the desired target type, it may overflow.Casting to String from Date, Time, and Timestamp types will produce their ISO 8601 representation. Casting to String from Decimal will result in the value represented as a string. e.g. 1234 -> ""1234"".Author: Nigel Liang <nigel@nigelliang.com>Reviewer: Randall Hauch <rhauch@gmail.com>",5
"MINOR: Fix connect:mirror checkstyle (#7951)Reviewers: Guozhang Wang <wangguoz@gmail.com>, Jason Gustafson <jason@confluent.io>",5
"MINOR: Improve logging around index files (#6385)This patch adds additional DEBUG statements in AbstractIndex.scala, OffsetIndex.scala, and TimeIndex.scala. It also changes the logging on append from DEBUG to TRACE to make DEBUG logging less disruptive, and it ensures that exceptions raised from index classes include file/offset information.Reviewers: Jason Gustafson <jason@confluent.io>",5
KAFKA-10697: Remove ProduceResponse.responses (#10332)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,4
"KAFKA-2792: Don't wait for a response to the leave group message when closing the new consumer.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Onur Karaman, Gwen ShapiraCloses #480 from ewencp/kafka-2792-fix-blocking-consumer-close",0
"KAFKA-8896: Check group state before completing delayed heartbeat (#7377)This is a defensive fix for KAFKA-8896, which would cause group coordinator crash when the heartbeat member was not found.",1
MINOR: Remove unused field in `ListenerConnectionQuota`Reviewers: Jason Gustafson <jason@confluent.io>,5
"MINOR: Log warn message with details when there's kerberos login issue (#9236)Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>",5
"KAFKA-7311: Reset next batch expiry time on each poll loopSender/RecordAccumulator never resets the next batch expiry time. Its always computed as the min of the current value and the expiry time for all batches being processed. This means that its always set to the expiry time of the first batch, and once that time has passed Sender starts spinning on epoll with a timeout of 0, which consumes a lot of CPU. This patch updates Sender to reset the next batch expiry time on each poll loop so that a new value reflecting the expiry time for the current set of batches is computed.Reviewers: Guozhang Wang <wangguoz@gmail.com>",1
KAFKA-12524: Remove deprecated segments() (#10379)Reviewers: Boyang Chen <boyang@confluent.io>,5
KAFKA-151 Standard .rat-excludes file and rat script;patched by nehanarkhede; reviewed by junraogit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1183190 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-8955: Add an AbstractResponse#errorCounts(Stream) and tidy (#8417)* Add AbstractResponse#errorCounts(Stream) to avoid having to call  AbstractResponse#errorCounts(Collection) with a computed collection.* A microbenchmark showed that using errorCounts(Stream) was   around 7.5 times faster than errorCounts(Collection). Using forEach()   loops with updateErrorCounts() is slightly faster, but is usually more   code.* Use updateErrorMap() consistently.* Replace for statements with forEach() for consistency.* Use singleton errorMap() consistently.Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, Ismael Juma <ismael@juma.me.uk>",0
KAFKA-1737; Enforce ZKSerializer while creating ZkClient; reviewed by Guozhang Wang,1
"MINOR: Fix JavaDocs warnings (#6435)Fix JavaDocs WarningReviewers: uozhang Wang <wangguoz@gmail.com>,  Bill Bejeck <bbejeck@gmail.com>",2
"KAFKA-6782: solved the bug of restoration of aborted messages for GlobalStateStore and KGlobalTable (#4900)Reviewer: Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
"MINOR: Remove Struct from Request/Response classesMore details:* Replaced `struct` field in Request/Response with a `toStruct` method. Thismakes the performance model (including memory usage) easier to understand.Note that requests have `toStruct()` while responses have `toStruct(version)`.* Replaced mutable `version` field in `Request.Builder` with an immutablefield `desiredVersion` and a `version` parameter passed to the `build` method.* Optimised `handleFetchRequest` to avoid unnecessary creation of `Struct`instances (from 4 to 2 in the worst case and 2 to 1 in the best case).* Various clean-ups in request/response classes and their test. In particular,it is now clear what we are testing. Previously, it looked like we were testingmore than we really were.With this in place, we could remove `AbstractRequest.Builder` in the future bydoing the following:* Change `AbstractRequest.toStruct` to accept a version (like responses).* Change `AbstractRequest.version` to be `desiredVersion` (like `Builder`).* Change `ClientRequest` to take `AbstractRequest`.* Move validation from the `build` methods to the request constructors orstatic factory methods.* Anything else required for the code to compile again.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Apurva Mehta <apurva.1618@gmail.com>, Jason Gustafson <jason@confluent.io>Closes #2513 from ijuma/separate-struct",5
"KAFKA-3838; Update zkClient to 0.9 and Zookeeper to 3.4.8Author: Filipe Azevedo <filipe@azevedo.io>Reviewers: Flavio Junqueira <fpj@apache.org>, Ismael Juma <ismael@juma.me.uk>Closes #1512 from mangas/trunk",1
"KAFKA-2677: ensure consumer sees coordinator disconnectsAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma, Guozhang WangCloses #349 from hachikuji/KAFKA-2677",5
MINOR: Fix typo in ConsumerRebalanceListener JavaDoc (#4996),2
"MINOR: Update docs with regards to max.in.flight and idempotent producerThe idempotent producer doesn't change that setting any more and theaccepted range has changed.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Apurva Mehta <apurva@confluent.io>, Jason Gustafson <jason@confluent.io>Closes #4097 from ijuma/fix-javadoc-wrt-max-in-flight-for-idempotent",2
KAFKA-2748: Ensure sink tasks commit offsets upon rebalance and rewind if the SinkTask flush fails.Also fix the incorrect consumer group ID setting which was giving each task itsown group instead of one for the entire sink connector.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: GuozhangCloses #431 from ewencp/kafka-2748-sink-task-rebalance-commit,1
"KAFKA-5893: more logging for investigating ResetIntegrationTest failures - improve stderr output for better debuggingAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3859 from mjsax/kafka-5893-reset-integration-test",3
"MINOR: Make kafka-run-class.sh work under Cygwinkafka-run-class.sh now runs under Cygwin; paths and classpath are set up properly.**WARNING:**  The script was not tested on a Linux machine, only under Cygwin.  Prior to merge it into trunk, if accepted, please run a quick test to ensure nothing broke.  From my own code review, there should not be any problem, but we can never be too sure.I do not have the environment to test it under Linux at this moment.Author: deragon <32nx9812masakjds>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1487 from deragon/trunk",1
"KAFKA-13552: Fix BROKER and BROKER_LOGGER in KRaft (#11657)Currently, KRaft does not support setting BROKER_LOGGER configs (it always fails.) Additionally,there are several bugs in the handling of BROKER configs. They are not properly validated on theforwarding broker, and the way we apply them is buggy as well. This PR fixes those issues.KafkaApis: add support for doing validation and log4j processing on the forwarding broker. Thisinvolves breaking the config request apart and forwarding only part of it. Adjust KafkaApisTest totest the new behavior, rather than expecting forwarding of the full request.MetadataSupport: remove MetadataSupport#controllerId since it duplicates the functionality ofMetadataCache#controllerId. Add support for getResourceConfig and maybeForward.ControllerApis: log an error message if the handler throws an exception, just like we do inKafkaApis.ControllerConfigurationValidator: add JavaDoc.Move some functions that don't involve ZK from ZkAdminManager to DynamicConfigManager. Move somevalidation out of ZkAdminManager and into a new class, ConfigAdminManager, which is not tied to ZK.ForwardingManager: add support for sending new requests, rather than just forwarding existingrequests.BrokerMetadataPublisher: do not try to apply dynamic configurations for brokers other than thecurrent one. Log an INFO message when applying a new dynamic config, like we do in ZK mode. Also,invoke reloadUpdatedFilesWithoutConfigChange when applying a new non-default BROKER config.QuorumController: fix a bug in ConfigResourceExistenceChecker which prevented cluster configs frombeing set. Add a test for this class.Reviews: José Armando García Sancio <jsancio@users.noreply.github.com>",1
KAFKA-1476 Added a ConsumerCommand tool that will replace other consumer related tools in the future; reviewed by Neha Narkhede,1
KAFKA-2867: Fix missing WorkerSourceTask synchronization and handling of InterruptException.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Jun Rao <junrao@gmail.com>Closes #566 from ewencp/kafka-2867-fix-source-sync-and-interrupt,0
recommit kafka-1112 since it's inadvently reverted in the commit of kafka-1135,4
"KAFKA-12778: Fix QuorumController request timeouts and electLeaders (#10688)The QuorumController should honor the timeout for RPC requestswhich feature a timeout. For electLeaders, attempt to trigger a leaderelection for all partitions when the request specifies null for the topicsargument.Reviewers: David Arthur <mumrah@gmail.com>",0
MINOR: Fix broken standalone ReplicationQuotasTestRig test (#5773)* Fix `ZkUtils.getReassignmentJson` to pass Java map to `Json.encodeAsString`* Allow new file creation in ReplicationQuotasTestRig testReviewers: Ismael Juma <ismael@juma.me.uk>,3
"KAFKA-2370: kafka connect pause/resume APIAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Liquan Pei <liquanpei@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1087 from hachikuji/KAFKA-2370",5
"MINOR: Clean up the sticky partitioner code a bit (#7151)Reviewers: Colin P. McCabe <cmccabe@apache.org>, Lucas Bradstreet <lucasbradstreet@gmail.com>",4
"KAFKA-3774: Make 'time' an optional argument of GetOffsetShellSince the 'time' argument has a default value of -1, it makes sense to make it an optional argument.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1457 from vahidhashemian/KAFKA-3774",5
"KAFKA-6805: Enable broker configs to be stored in ZK before broker start (#4898)Support configuration of dynamic broker configs in ZooKeeper before starting brokers using ConfigCommand. This will allow password configs to be encrypted and stored in ZooKeeper, without requiring clear passwords in server.properties to bootstrap the broker first.Reviewers: Jason Gustafson <jason@confluent.io>",5
KAFKA-3414; Return of MetadataCache.getAliveBrokers should not be mutated by cache updates`Map.values` returns `DefaultValuesIterable` where the default implementation of `toSeq` is (sadly) `toStream`. `Stream` is a lazy collection and it can reflect changes to the underlying map before it's `forced`.I verified that the test failed before my change.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Gwen ShapiraCloses #1088 from ijuma/kafka-3414-get-alive-brokers-no-mutation,1
MINOR: KStreams SuppressionDurabilityIntegrationTest should set StreamsConfig.STATE_CONFIG_DIR. (#5870),5
MINOR: Enable KRaft in `TransactionsTest` (#12176)Enable support for KRaft in `TransactionsTest`. Reviewers: David Arthur <mumrah@gmail.com>,3
KAFKA-13438: Replace EasyMock and PowerMock with Mockito in WorkerTest (#11817)Reviewers: Mickael Maison <mickael.maison@gmail.com>,3
MINOR: Improve assert in ControllerFailoverTestIt sometimes fails in Jenkins like:```textjava.lang.AssertionError: IllegalStateException was not thrownat org.junit.Assert.fail(Assert.java:88)at org.junit.Assert.assertTrue(Assert.java:41)at kafka.controller.ControllerFailoverTest.testHandleIllegalStateException(ControllerFailoverTest.scala:86)```I ran it locally 100 times with no failure.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #3176 from ijuma/improve-controller-failover-assert,3
"KAFKA-4313; ISRs may thrash when replication quota is enabledAuthor: Jun Rao <junrao@gmail.com>Reviewers: Ben Stopford <benstopford@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #2043 from junrao/kafka-4313",0
"MINOR: improve test cleanup for Streams - call close() on Metrics to join created threadsAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Eno Thereska, Damian Guy, Guozhang WangCloses #2788 from mjsax/minor-improve-test-metric-cleanup",3
KAFKA-1359: Ensure all topic/server metrics registered at once.,5
"MINOR: Fix needless GC + Result time unit in JMHFixes two issues with the JMH benchmark example:* Trivial: The output should be in `ops/ms` for readabilityreasons (it's in the millions of operations per second)* Important: The benchmark is not actually measuring theLRU Cache performance as most of the time in each run iswasted on concatenating `key + counter` as well as`value + counter`. Fixed by pre-generating 10k K-V pairs(100x the cache capacity) and iterating over them. Thisbrings the performance up by a factor of more than 5 ona standard 4 core i7 (`~6k/ms` before goes to `~35k/ms`).Author: Armin Braun <me@obrown.io>Reviewers: Bill Bejeck <bbejeck@gmail.com>, Guozhang Wang <wangguoz@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #2903 from original-brownbear/fix-jmh-example",0
"MINOR: Fix Streams EOS system tests (#4572)Avoid loosing log/stdout/stderr files on restartReenables testsAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Guozhang Wang <guozhang@confluent.io>, Bill Bejeck <bill@confluent.io>",5
"KAFKA-9947; Ensure proper shutdown of services in `TransactionsBounceTest` (#8602)This patch ensures that both clients and the bounce schedule get shutdown properly in this test. Additionally, it fixes the surprising behavior of using the passed delivery timeout to override the request timeout in `createTransactionalProducer`.Reviewers: Ismael Juma <ismael@juma.me.uk>",1
KAFKA-3093: Add Connect status tracking APIAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #920 from hachikuji/KAFKA-3093,5
"Revert ""KAFKA-12887 Skip some RuntimeExceptions from exception handler (#11228)"" (#12421)This reverts commit 4835c64fReviewers: Matthias J. Sax <matthias@confluent.io>",5
"MINOR: Cleanup handling of mixed transactional/idempotent records (#6172)Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, Ismael Juma <ismael@juma.me.uk>, Colin Patrick McCabe <colin@cmccabe.xyz>",5
"KAFKA-7895: Fix stream-time reckoning for suppress (#6278)Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"MINOR: Cancel port forwarding for HttpMetricsCollector during cleanupCurrently port forwarding is setup for HttpMetricsCollector when the Service's start_node method is called, but not canceled during stop. This hasn't presented a problem so far because we don't have tests that use this *and* restart the service. However, if a test/service does that, it will throw an exception since the port is already bound.This just does the cleanup when stopping so a subsequent attempt to start again will succeed.https://jenkins.confluent.io/job/system-test-kafka-branch-builder/1320 is a test run for a Test that uses ProducerPerformanceService, which in turn uses HttpMetricsCollector to validate the change.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Ismael Juma <ismael@juma.me.uk>, Apurva Mehta <apurva@confluent.io>Closes #4604 from ewencp/cleanup-reverse-port-forward",4
"KAFKA-10199: Remove changelog unregister from state updater (#12573)Changelogs are already unregistered when tasks are closed.There is no need to also unregister them in the stateupdater.In future, when we will only have the state updater withoutthe old code path, we should consider registering andunregistering the changelogs within the state updater.Reviewer: Guozhang Wang <wangguoz@gmail.com>",5
"MINOR: typing ProcessorDefguozhangwangThis code change properly types ProcessorDef. This also makes KStream.process() typesafe.Author: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Ismael Juma, Guozhang WangCloses #289 from ymatsuda/typing_ProcessorDef",5
MINOR: Guard against decrementing `totalCommittedSinceLastSummary` during rebalancing. (#12299)Reviewers: Matthias J. Sax <matthias@confluent.io>,5
KAFKA-538 missing apache license header in sbt and util.hgit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1391714 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-5763; Use LogContext in NetworkClient, Selector and brokerAuthor: Andrey Dyachkov <andrey.dyachkov@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>, Manikumar Reddy <manikumar.reddy@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #3761 from adyach/kafka-5763",5
"KAFKA-9930: Adjust ReplicaFetcherThread logging when processing UNKNOWN_TOPIC_OR_PARTITION error (#8579)Log it as a warning and without a stacktrace (instead of error with stacktrace). This error can be seen in thefollowing cases: * Topic creation, a follower broker of a new partition starts replica fetcher before the prospective leader brokerof the new partition receives the leadership information from the controller (see KAFKA-6221). * Topic deletion, a follower broker of a to-be-deleted partition starts replica fetcher after the leader broker of theto-be-deleted partition processes the deletion information from the controller. As expected, clusters with frequent topic creation and deletion report UnknownTopicOrPartitionException withrelatively higher frequency.Despite typically being a transient issue, UnknownTopicOrPartitionException may also indicate real issues if it doesn't fix itself after a short period of time. To ensure detection of such scenarios, we set the log level to warninstead of info.Reviewers: Jun Rao <junrao@gmail.com>, Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>",5
KAFKA-1472; Add the compression ratio metrics in the new producer; patched by Dong Lin; reviewed by Guozhang Wang and Jun Rao,1
"KAFKA-380 Enhance single_host_multi_brokers test with failure to trigger leader re-election in replication; patched by John Fung; reviewed by Neha Narkhede, Jun Rao and Joel Koshygit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1369888 13f79535-47bb-0310-9956-ffa450edef68",0
"MINOR rename kafka.utils.Whitelist to IncludeListrename internal classes, methods, and related constants for KIP-629Author: Xavier Léauté <xvrl@apache.org>Reviewers: Gwen ShapiraCloses #9400 from xvrl/rename-topic-includelist",2
kafka-1411; remove unused test cases; patched by Jun Rao; reviewed by Guozhang Wang,3
"KAFKA-12584; Remove deprecated `Sum` and `Total` classes (#10511)`Sum` and `Total` classes were deprecated and replaced by `WindowedSum` and `CumulativeSum` in 2.4. This patch removes them for 3.0.Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, Ismael Juma <ismael@juma.me.uk>",4
"KAFKA-13687: Limiting the amount of bytes to be read in a segment logs (#11842)This PR allows to limit the output batches while they are inspected via the kafka-dump-log.sh script.The idea is to take samples from the logsegments without affecting a production cluster as the current script will read the whole files, this could create issues related to performance.Please see the KIP-824Reviewers: Jun Rao <junrao@gmail.com>",0
KAFKA-5647; Use KafkaZkClient in ReassignPartitionsCommand and PreferredReplicaLeaderElectionCommand*  Use KafkaZkClient in ReassignPartitionsCommand*  Use KafkaZkClient in PreferredReplicaLeaderElectionCommand*  Updated test classes to use new methods*  All existing tests should passAuthor: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Jun Rao <junrao@gmail.com>Closes #4260 from omkreddy/KAFKA-5647-ADMINCOMMANDS,4
"MINOR: Upgrade to Scala 2.13.4 (#9643)Scala 2.13.4 restores default global `ExecutionContext` to 2.12 behavior(to fix a perf regression in some use cases) and improves pattern matching(especially exhaustiveness checking). Most of the changes are relatedto the latter as I have enabled the newly introduced `-Xlint:strict-unsealed-patmat`.More details on the code changes:* Don't swallow exception in `ReassignPartitionsCommand.topicDescriptionFutureToState`.* `RequestChannel.Response` should be `sealed`.* Introduce sealed ClientQuotaManager.BaseUserEntity to avoid false positiveexhaustiveness warning.* Handle a number of cases where pattern matches were not exhaustive:either by marking them with @unchecked or by adding a catch-all clause.* Workaround scalac bug related to exhaustiveness warnings in ZooKeeperClient* Remove warning suppression annotations related to the optimizer that are nolonger needed in ConsumerGroupCommand and AclAuthorizer.* Use `forKeyValue` in `AclAuthorizer.acls` as the scala bug preventing us fromusing it seems to be fixed.* Also update scalaCollectionCompat to 2.3.0, which includes minor improvements.Full release notes:* https://github.com/scala/scala/releases/tag/v2.13.4* https://github.com/scala/scala-collection-compat/releases/tag/v2.3.0Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",1
"KAFKA-6504: Ensure uniqueness of connect task metric sensor creation (#4514)This change ensures that when sensors are created, they are unique to the metric group associated with the task that created them. Previously the sensors were being shared between task metric groups, causing incorrect metrics.Reviewers: Randall Hauch <rhauch@gmail.com>, Jason Gustafson <jason@confluent.io>",5
MINOR: Test SASL authorization idAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3766 from rajinisivaram/MINOR-sasl,5
"KAFKA-9146: Add option to force delete active members in StreamsResetter (#8589)Implements KIP-571Reviewers: Boyang Chen <boyang@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-13323; Fixed variable name in KafkaConsumer (#11558)Fixes a misspelled variable name in `KafkaConsumer`: `cachedSubscriptionHashAllFetchPositions` -> `cachedSubscriptionHasAllFetchPositions`.Reviewers: Kvicii <Karonazaba@gmail.com>, Jason Gustafson <jason@confluent.io>",5
"KAFKA-12943: update aggregating documentation (#12091)Reviewers: Luke Chen <showuon@gmail.com>, Andrew Eugene Choi <andrew.choi@uwaterloo.ca>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-3434; add old constructor to ConsumerRecordAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Grant Henke <granthenke@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1123 from hachikuji/KAFKA-3434",5
"kafka-1090; testPipelinedRequestOrdering has transient failures; patched by Jun Rao; reviewed by Joel Koshy, Guozhang Wang, and Neha Narkhede",0
MINOR: remove redudant return statement (#9535)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,4
"KAFKA-7604; Fix flaky unit test `testRebalanceAfterTopicUnavailableWithPatternSubscribe` (#5889)The problem is the concurrent metadata updates in the foreground and in the heartbeat thread. Changed the code to use ConsumerNetworkClient.poll, which enforces mutual exclusion when accessing the underlying client.",1
"KAFKA-4735; Fix deadlock issue during MM shutdownIn https://issues.apache.org/jira/browse/KAFKA-4521 we fixed a potential message reorder bug in MM. However, the patch introduced another bug that can cause deadlock during MM shutdown. The deadlock will happen if zookeeper listener thread call requestAndWaitForCommit() after MirrorMaker thread has already exited loop of consuming and producing messages.This patch fixes the problem by setting `iter` to `null` in `MirrorMakerOldConsumer.cleanup()`. If zookeeper listener thread calls `requestAndWaitForCommit()` after `cleanup()`, then it will not block waiting for commit notification since `iter == null`. If zookeeper listener thread calls `requestAndWaitForCommit()` before `cleanup()`, then `cleanup()` will call `notifyAll()` to unblock zookeeper listener thread.Author: Dong Lin <lindong28@gmail.com>Reviewers: Jiangjie Qin <becket.qin@gmail.com>Closes #2504 from lindong28/KAFKA-4735",4
"KAFKA-7801: TopicCommand should not be able to alter transaction topic partition countTo keep align with the way it handles the offset topic, TopicCommand should not be able to alter transaction topic partition count.Author: huxihx <huxi_2b@hotmail.com>Reviewers: Viktor Somogyi <viktorsomogyi@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Manikumar Reddy <manikumar.reddy@gmail.com>Closes #6109 from huxihx/KAFKA-7801",1
MINOR: Fix typos in code commentsThis patch fixes all occurances of two consecutive 'the's in the code comments.Author: Ishita Mandhan (imandhaus.ibm.com)Author: Ishita Mandhan <imandha@us.ibm.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1240 from imandhan/typofixes,2
"MINOR: Avoid dividing by zero (#7143)Reviews: A. Sophie Blee-Goldman <sophie@confluent.io>, Bill Bejeck <bill@confluent.io>, Bruno Cadonna <bruno@confluent.io>, Boyang Chen <boyang@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
KAFKA-2582; ConsumerMetdata authorization error not returned to userAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Jun Rao <junrao@gmail.com>Closes #245 from hachikuji/KAFKA-2582,5
"KAFKA-6003; Accept appends on replicas unconditionally when local producer state doesn't existWithout this patch, if the replica's log was somehow truncated beforethe leader's, it is possible for the replica fetcher thread tocontinuously throw an OutOfOrderSequenceException because theincoming sequence would be non-zero and there is no local state.This patch changes the behavior so that the replica state is updated tothe leader's state if there was no local state for the producer at thetime of the append.Author: Apurva Mehta <apurva@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>Closes #4004 from apurvam/KAFKA-6003-handle-unknown-producer-on-replica",0
"KAFKA-9625: Fix altering and describing dynamic broker configurations (#8260)* Broker throttles were incorrectly marked as sensitive configurations.  Fix this, so that their values can be returned via DescribeConfigs as expected.* Previously, changes to broker configs that consisted only of deletions were ignored by the brokers because of faulty delta calculation logic that didn't consider deletions as changes, only alterations as changes.  Fix this and add a regression test.Reviewers: Colin P. McCabe <cmccabe@apache.org>",3
"KAFKA-13340: Change ZooKeeperTestHarness to QuorumTestHarness (#11417)Change ZooKeeperTestHarness to QuorumTestHarness so that integration tests which inherit fromthis class can test Kafka in both ZK and KRaft mode. Test cases which do this can specify themodes they support by including a ParameterizedTest annotation before each test case, like thefollowing:@ParameterizedTest@valuesource(strings = Array(""zk"", ""kraft""))def testValidCreateTopicsRequests(quorum: String): Unit = { ... }For each value that is specified here (zk, kraft), the test case will be run once in theappropriate mode. So the test shown above is run twice. This allows integration tests to beincrementally converted over to support KRaft mode, rather than rewritten to support it. Fornow, test cases which do not specify a quorum argument will continue to run only in ZK mode.JUnit5 makes the quorum annotation visible in the TestInfo object which each @BeforEeachfunction in a test can optionally take. Therefore, this PR converts over the setUp function ofthe quorum base class, plus every derived class, to take a TestInfo argument. The TestInfoobject gets ""passed up the chain"" to the base class, where it determines which quorum type wecreate (ZK or KRaft). In a few cases, I discovered test cases inheriting from the test harnessthat had more than one @BeforeEach function. Because the JUnit5 framework does not define theorder in which @BeforeEach hooks are run, I changed these to overload setUp() instead, to avoidundefined behavior.The general approach taken here is to make as much as possible work with KRaft, but to leave somethings as ZK-only when appropriate. For example, a test that explicitly requests an AdminZkClientobject will get an exception if it is running in KRaft mode. Similarly, tests which explicitlyrequest KafkaServer rather than KafkaBroker will get an exception when running in KRaft mode.As a proof of concept, this PR converts over kafka.api.MetricsTest to support KRaft.This PR also renames the quorum controller event handler thread to include the text""QuorumControllerEventHandler"". This allows QuorumTestHarness to check for hanging quorumcontroller threads, as it does for hanging ZK-based controller threads.Finally, ConsumerBounceTest#testRollingBrokerRestartsWithSmallerMaxGroupSizeConfigDisruptsBigGroupcaused many failing test runs. Therefore, I disabled it here and filed KAFKA-13421 to fix thetest logic to be more reliable.Reviewers: Jason Gustafson <jason@confluent.io>, Igor Soarez <soarez@apple.com>",5
KAFKA-3767; Add missing license to connect-test.propertiesThis address to https://issues.apache.org/jira/browse/KAFKA-3767.Author: Sasaki Toru <sasakitoa@nttdata.co.jp>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1443 from sasakitoa/test_failure_no_license,3
"KAFKA-4445; PreferredLeaderElectionCommand should query zookeeper only once per topicAuthor: Dong Lin <lindong28@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jiangjie Qin <becket.qin@gmail.com>Closes #2170 from lindong28/KAFAK-4445",5
"MINOR: Update lz4-java to 1.6.0 for 12-18% decompression improvement (#6735)lz4-java 1.6.0 relies on lz4 1.9.1, which includes significantdecompression performance improvements first released as partof 1.9.0:Version | v1.8.3 | v1.9.0 | Improvementenwik8 | 4090 MB/s | 4560 MB/s | +12%calgary.tar | 4320 MB/s | 4860 MB/s | +13%silesia.tar | 4210 MB/s | 4970 MB/s | +18%See https://github.com/lz4/lz4/releases/tag/v1.9.0 for moredetails.Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",1
HOTFIX: Add back the copy-constructor of abstract streamAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>Closes #3428 from guozhangwang/KHotfix-add-copy-constructor-abstract-stream,0
"KAFKA-4197; Make ReassignPartitionsTest System Test move dataThe ReassignPartitionsTest system tests doesn't reassign any replicas (i.e. move data).This is a simple issue. It uses a 3 node cluster with replication factor of 3, so whilst the replicas are jumbled around, nothing actually is moved from machine to machine when the assignment is executed.This fix just ups the number of nodes to 4 so things move.Tests pass locally.There are runs pending on the two branch buildersPasses:https://jenkins.confluent.io/job/system-test-kafka-branch-builder/551/https://jenkins.confluent.io/job/system-test-kafka-branch-builder-2/94/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/553/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/554/https://jenkins.confluent.io/job/system-test-kafka-branch-builder-2/95Failures:https://jenkins.confluent.io/job/system-test-kafka-branch-builder/552 => _RuntimeError: There aren't enough available nodes to satisfy the resource request. Total cluster size: 1, Requested: 4, Already allocated: 1, Available: 0._ Which I assume to do with the test env.Author: Ben Stopford <benstopford@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1892 from benstopford/fix_reassignment_test",3
MINOR: Fix expected output in Streams quickstart (#5280)Reviewers: Guozhang Wang <wangguoz@gmail.com>,0
"KAFKA-4586; Add purgeDataBefore() API (KIP-107)Author: Dong Lin <lindong28@gmail.com>Reviewers: Jun Rao <junrao@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Jiangjie Qin <becket.qin@gmail.com>Closes #2476 from lindong28/KAFKA-4586",5
"MINOR: Code CleanupClean up includes:- Switching try-catch-finally blocks to try-with-resources when possible- Removing some seemingly unnecessary `SuppressWarnings` annotations- Resolving some Java warnings- Closing unclosed Closable objects- Removing unused codeAuthor: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Balint Molnar <balintmolnar91@gmail.com>, Guozhang Wang <wangguoz@gmail.com>, Matthias J. Sax <matthias@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>Closes #3222 from vahidhashemian/minor/code_cleanup_1706",4
MINOR: Clean `Metrics.defaultRegistry` to avoid transient failures in `testSessionExpireListenerMetrics`The failure could manifest itself if the default metrics registry had some entries from other tests:`java.lang.AssertionError: Unexpected meter count expected:<0> but was:<3>`I also removed an unused variable and improved the error message to include the metric name.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Gwen ShapiraCloses #1544 from ijuma/fix-transient-session-expire-listener-metrics-failure,0
MINOR: catch an exception in rebalance and stop the stream threadAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #901 from ymatsuda/minor3,5
"KAFKA-3914: Global discovery of state storesguozhangwang enothereska mjsax miguno  please take a look. A few things that need to be clarified1. I've added StreamsConfig.USER_ENDPOINT_CONFIG, but should we have separate configs for host and port or is this one config ok?2. `HostState` in the KIP has a byte[] field - not sure why and what it would be populated with3. I've changed the API to return `List<KafkaStreamsInstance>` as opposed to `Map<HostInfo, Set<TaskMetadata>>` as i find this far more intuitive to work with.Author: Damian Guy <damian.guy@gmail.com>Reviewers: Matthias J. Sax, Michael G. Noll, Eno Thereska, Guozhang WangCloses #1576 from dguy/kafka-3914v2",1
KAFKA-3501: Console consumer process hangs on exit- replace `System.exit(1)` with a regular `return` in order to release the latch blocking the shutdown hook thread from shutting down the JVM- provide `PrintStream` to the `process` method in order to ease unit testingAuthor: Sebastien Launay <sebastien@opendns.com>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #1185 from slaunay/bugfix/KAFKA-3501-console-consumer-hangs,0
"KAFKA-9433: Use automated protocol for AlterConfigs request and response (#8315)Reviewers: Mickael Maison <mickael.maison@gmail.com>, Boyang Chen <boyang@confluent.io>",5
"HOTFIX: Decrease commit intervalThe original commit interval of 30 seconds might be too large in some cases, e.g., when the verifier finishes before those 30 seconds have elapsed.Author: Eno Thereska <eno.thereska@gmail.com>Reviewers: Damian Guy, Guozhang WangCloses #1899 from enothereska/hotfix-smoke-test-commit-interval",3
MINOR: Check for active controller in UpdateFeatures request processing logic (#9436)Reviewers: Jun Rao <junrao@gmail.com>,2
"MINOR: cleanup some state store code (#5656)Reviewers: John Roesler <john@confluent.io>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
"KAFKA-4793: Connect API to restart connector and tasks (KIP-745) (#10822)Implements KIP-745 https://cwiki.apache.org/confluence/display/KAFKA/KIP-745%3A+Connect+API+to+restart+connector+and+tasks to change connector REST API to restart a connector and its tasks as a whole.Testing strategy - [x]  Unit tests added for all possible combinations of onlyFailed and includeTasks- [x]  Integration tests added for all possible combinations of onlyFailed and includeTasks- [x]  System tests for happy path Reviewers: Randall Hauch <rhauch@gmail.com>, Diego Erdody <erdody@gmail.com>, Konstantine Karantasis <k.karantasis@gmail.com>",3
"KAFKA-2032: validate consumer's partition-assignment config; reviewed by Jason Rosenberg, Sriharsha Chintalapani and Guozhang Wang",5
Trogdor: Fix /coordinator/tasks parameters to accept long values (#5905)Reviewers: Colin McCabe <cmccabe@apache.org>,2
KAFKA-13073: Fix MockLog snapshot implementation (#11032)Fix a simulation test failure by:1. Relaxing the valiation of the snapshot id against the log startoffset when the state machine attempts to create new snapshot. Itis safe to just ignore the request instead of throwing an exceptionwhen the snapshot id is less that the log start offset.2. Fixing the MockLog implementation so that it uses startOffset bothexternally and internally.Reviewers: Colin P. McCabe <cmccabe@apache.org>,1
"KAFKA-3278: concatenate thread name to clientId when producer and consumers config is createdguozhangwang made the changes as requested, I reverted my original commit and that seems to have closed the other pull request - sorry if that mucks up the process a bitAuthor: tomdearman <tom.dearman@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #978 from tomdearman/KAFKA-3278",4
"KAFKA-8513: Add kafka-streams-application-reset.bat for Windows platform (#6909)Reviewers: Boyang Chen <boyang@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bill@confluent.io>",5
"MINOR: Update dynamic broker configuration doc for truststore update (#4954)Reviewers: Manikumar Reddy O <manikumar.reddy@gmail.com>, Jason Gustafson <jason@confluent.io>",5
HOTFIX: Add missing template ref in upgrade section,1
"MINOR: Update error log in `DefaultSslEngineFactory#createTrustStoreFromPem` (#11519)Reviewers: Luke Chen <showuon@gmail.com>, David Jacot <djacot@confluent.io>",5
"KAFKA-12607; Test case for resigned state vote granting (#10510)This patch adds unit tests to verify vote behavior when in the ""resigned"" state.Reviewers: Jason Gustafson <jason@confluent.io>",5
MINOR: Bump js template to 2.2 (#6086)Bump js template to 2.2; update gradle.propertiesReviewers: Jason Gustafson <jason@confluent.io>,5
KAFKA-8284: enable static membership on KStream (#6673)Part of KIP-345 effort. The strategy is to extract user passed in group.instance.id config and pass it in with given thread-id (because consumer is currently per-thread level).Reviewers: Guozhang Wang <wangguoz@gmail.com>,1
MINOR: Bump trunk to 3.3.0-SNAPSHOT (#11925)Version bumps on trunk following the creation of the 3.2 release branch.Reviewer: David Jacot <djacot@confluent.io>,5
"KAFKA-3141: Add checks to catch invalid authorizer porpertiesSkip misformed properties instead of throwing ArrayIndexOutOfBoundsExceptionAuthor: Ashish Singh <asingh@cloudera.com>Reviewers: Ismael Juma, Gwen ShapiraCloses #806 from SinghAsDev/KAFKA-3141",1
KAFKA-12221 remove PowerMock from connect-json module and connect-transforms module (#9924)Reviewers: Ismael Juma <ismael@juma.me.uk>,5
"KAFKA-4537: StreamPartitionAssignor incorrectly adds standby partitions to the partitionsByHostState mapIf a KafkaStreams app is using Standby Tasks then `StreamPartitionAssignor` will add the standby partitions to the partitionsByHostState map for each host. This is incorrect as the partitionHostState map is used to resolve which host is hosting a particular store for a key.The result is that doing metadata lookups for interactive queries can return an incorrect hostAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Eno Thereska, Matthias J. Sax, Guozhang WangCloses #2254 from dguy/KAFKA-4537",5
"MINOR: Fix typos in configuration docs (#11874)Reviewers: Chris Egerton, Weikang Sun, Andrew Eugene Choi, Luke Chen, Guozhang Wang",2
"KAFKA-5176; AdminClient: add controller and clusterId methods to DescribeClusterResultsAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: dan norwood <norwood@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #2977 from cmccabe/KAFKA-5176",5
"KAFKA-4761; Fix producer regression handling small or zero batch sizeAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Apurva Mehta <apurva.1618@gmail.com>, Vahid Hashemian <vahidhashemian@us.ibm.com>, Ismael Juma <ismael@juma.me.uk>, Guozhang Wang <wangguoz@gmail.com>Closes #2545 from hachikuji/KAFKA-4761",5
"Revert ""KAFKA-9165: Fix jersey warnings in Trogdor (#7669)"" (#7721)Reviewers: Stanislav Kozlovski <stanislav_kozlovski@outlook.com>, Jason Gustafson <jason@confluent.io>",5
KAFKA-2724: ZK Auth documentation.Author: Flavio Junqueira <fpj@apache.org>Reviewers: Gwen ShapiraCloses #409 from fpj/KAFKA-2724,2
KAFKA-748 Maintain mmap position after resizing index. Also add a few more assertions.,3
MINOR: Jenkinsfile's `post` needs `agent` to be set (#10479)The `node` block achieves that.Tested that an email was sent to the mailing list for:https://github.com/apache/kafka/pull/10479/commits/592a0c31d5dec5b2d33b6239f6243831b7cca361Added back the condition not to send emails for PR builds aftersuch test.Reviewers: Gwen Shapira <cshapi@gmail.com>,3
"KAFKA-3977; Defer fetch parsing for space efficiency and to ensure exceptions are raised to the userAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ewen Cheslack-Postava <me@ewencp.org>, Ismael Juma <ismael@juma.me.uk>Closes #1656 from hachikuji/KAFKA-3977",5
MINOR: KafkaAdminClient Java 8 code cleanup (#5594)Use lambdas and diamond operator whenever possible.Reviewers: Ismael Juma <ismael@juma.me.uk>,1
"MINOR: Update Scala to 2.12.11 (#8308)Highlights:* Performance improvements in the ollectionslibrary: algorithmic improvements andchanges to avoid unnecessary allocations.* Performance improvements in the compiler.* ASM was upgraded to 7.3.1, allowing theoptimizer to run on JDK 13+.Full release notes: https://github.com/scala/scala/releases/tag/v2.12.11Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",1
"KAFKA-4443; Minor comment clean-upRemoved stale comment left behind, minor fixes (UpdateMetadataRequest instead of MetadataUpdateRequest) and remove redundant comments.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Jiangjie (Becket) Qin <becket.qin@gmail.com>, Dong Lin <lindong28@gmail.com>Closes #2194 from ijuma/kafka-4443-minor-follow-up",4
"KAFKA-3830; getTGT() debug logging exposes confidential informationOnly log the client and server principals, which is what ZooKeeper does after ZOOKEEPER-2405.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Grant Henke <granthenke@gmail.com>, Sriharsha Chintalapani <harsha@hortonworks.com>Closes #1498 from ijuma/kafka-3830-get-tgt-debug-confidential",5
"KAFKA-8164: Add support for retrying failed (#8019)Disabled by default, but enabled for Jenkins PR builds (maximum of 1 retry pertest with up to 5 retries for the test run).Reviewers: Ismael Juma <ismael@juma.me.uk>",1
KAFKA-307 Refactor server code to reduce interdependencies; patched by nehanarkhede; reviewed by junraogit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1304473 13f79535-47bb-0310-9956-ffa450edef68,4
rename produce to produces (#9811)Co-authored-by: 沈文兵 <shenwenbing@qianxin.com>reviewers: Boyang Chen <boyang@confluent.io>,5
"KAFKA-3076; BrokerChangeListener should log the brokers in orderAuthor: Konrad <konkalita@gmail.com>Author: konradkalita <konkalita@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>Closes #749 from konradkalita/kafka-3076",2
KAFKA-9942: ConfigCommand fails to set client quotas for default users with --bootstrap-server. (#8628)Reviewers: Colin P. McCabe <cmccabe@apache.org>,1
kafka-1797; (delta follow-up patch) add the serializer/deserializer api to the new java client; patched by Jun Rao; reviewed by Neha Narkhede,1
HOTFIX: Avoid NPE in StreamsPartitionAssignorAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Michael G. Noll <michael@confluent.io>Closes #1004 from guozhangwang/KStreamPANPE,5
"Revert ""KAFKA-7077: Use default producer settings in Connect Worker (#11475)"" (#11932)This reverts commit 76cf7a5793702b55e2cfd98a375f8f1708ff32c3.Connect already allows users to enable idempotent producers for connectors and the Connect workers. Although Kafka producers enabled idempotency by default in 3.0, due to compatibility requirements and the fact that [KIP-318](https://cwiki.apache.org/confluence/display/KAFKA/KIP-318%3A+Make+Kafka+Connect+Source+idempotent) hasn't been explicitly approved, the changes here are reverted. A separate commit will explicitly disable idempotency in producers instantiated by Connect by default until KIP-318 is approved and scheduled for release.",4
KAFKA-1535 Have the metadata response contain all alive brokers rather than just the ones needed for the given topics.,5
Add admin RPC requests; clean up Response objects; patched by Yang Ye; reviewed by Jun Rao; KAFKA-349; KAFKA-336git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1346697 13f79535-47bb-0310-9956-ffa450edef68,4
"MINOR: Use `--force` instead of `--yes` in `AclCommand`To be consistent with `ConfigCommand` and `TopicCommand`.No release includes this option yet, so we can simply change it.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Mickael Maison, Grant HenkeCloses #1430 from ijuma/use-force-instead-of-yes-in-acl-command and squashes the following commits:bdf3a57 [Ismael Juma] Update `AclCommandTest`78b8467 [Ismael Juma] Change variable name to `forceOpt`0bb27af [Ismael Juma] Use `--force` instead of `--yes` in `AclCommand`",1
"KAFKA-13783; Remove reason prefixing in JoinGroupRequest and LeaveGroupRequest (#11971)KIP-800 introduced a mechanism to pass a reason in the join group request and in the leave group request. A default reason is used unless one is provided by the user. In this case, the custom reason is prefixed by the default one.When we tried to used this in Kafka Streams, we noted a significant degradation of the performances, see https://github.com/apache/kafka/pull/11873. It is not clear wether the prefixing is the root cause of the issue or not. To be on the safe side, I think that we should remove the prefixing. It does not bring much anyway as we are still able to distinguish a custom reason from the default one on the broker side.This patch removes prefixing the user provided reasons. So if a the user provides a reason, the reason is used directly. If the reason is empty or null, the default reason is used.Reviewers: Luke Chen <showuon@gmail.com>, <jeff.kim@confluent.io>, Hao Li <hli@confluent.io>",5
"MINOR: Update to Gradle 6.3 (#7677)* Introduce `gradlewAll` script to replace `*All` tasks since the approachused by the latter doesn't work since Gradle 6.0 and it's unclear when,if ever, it will work again ( see https://github.com/gradle/gradle/issues/11301).* Update release script and README given the above.* Update zinc to 1.3.5.* Update gradle-versions-plugin to 0.28.0.The major improvements in Gradle 6.0 to 6.3 are:- Improved incremental compilation for Scala- Support for Java 14 (although some Gradle pluginslike spotBugs may need to be updated or disabled,will do that separately)- Improved scalac reporting, warnings are clearlymarked as such, which is very helpful.Tested `gradlewAll` manually for the commands listed in the READMEand release script. For `uploadArchive`, I tested it with a local Mavenrepository.Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",3
KAFKA-5949; Follow-up after latest KIP-161 changes - compare KAFKA-5958Author: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy <damian.guy@gmail.com>Closes #3986 from mjsax/kafka-5949-exceptions-user-callbacks-KIP-161-follow-up,1
"KAFKA-5294: PlainSaslServerFactory should allow a null MapIf props is null, use POLICY_NOPLAINTEXT default value: falseAuthor: Mickael Maison <mickael.maison@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Rajini Sivaram <rajinisivaram@googlemail.com>Closes #3105 from mimaison/KAFKA-5294",5
KAFKA-5211; Do not skip a corrupted record in consumerAuthor: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #3114 from becketqin/KAFKA-5211,5
MINOR: Clean up some redundant code from ReplicaManager (#10623)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,4
"MINOR: Work around OpenJDK 11 javadocs issue. (#6747)Some versions of OpenJDK 11 do not properly handle external javadocs links referencing previous Java versions. See: https://bugs.openjdk.java.net/browse/JDK-8212233.Failure symptom:`> Task :connect:api:javadocjavadoc: error - The code being documented uses modules but the packages defined in https://docs.oracle.com/javase/8/docs/api/ are in the unnamed module.1 error`This PR conditionally sets the Java api docs link for the affected Gradle tasks. I verified that the links render correctly in the generated documentation when building with `1.8.0_181` and `11.0.3`. For example, in `build/docs/javadoc/org/apache/kafka/connect/source/SourceTask.html` the hyperlink to `java.nio.channels.Selector` points to a valid page on Oracle's site in both cases.Reviewers: José Armando García Sancio <jsancio@users.noreply.github.com>, Jason Gustafson <jason@confluent.io>",5
kafka-1235; Enable server to indefinitely retry on controlled shutdown; patched by Guozhang Wang; reviewed by Jun Rao,1
"MINOR: updated incorrect JavaDocs for joinsAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Eno Thereska, Guozhang WangCloses #2670 from mjsax/fixJavaDocsRepartitioning",2
"KAFKA-10547; Add TopicId in MetadataResponse (#9622)Includes:- Bump the version of MetadataRequest and MetadataResponse, add topicId in MetadataResponse- Alter describeTopic in AdminClientTopicService and ZookeeperTopicService- TopicMetadata is cached in MetadataCache, so we need to add topicId to MetadataCache- MetadataCache is updated by UpdateMetadataRequest, bump the version of UpdateMetadataReq and UpdateMetadataResp, add topicId in UpdateMetadataReq.Reviewers: Justine Olshan <jolshan@confluent.io>, Rajini Sivaram <rajinisivaram@googlemail.com>",5
"KAFKA-13165: Validate KRaft node id, process role and quorum voters (#11179)Validate that KRaft controllers are members of the KRaft quorum, and non-controllers are not.This validation assumes that controllers and brokers have the same ID only when they areco-located.Reviewers: David Arthur <mumrah@gmail.com>, José Armando García Sancio <jsancio@gmail.com>, Luke Chen <showuon@gmail.com>",5
"KAFKA-46: Message replication feature without failures; patched by Neha Narkhede; reviewed by Jun Rao, Jay Kreps, Prashanth Menongit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1344964 13f79535-47bb-0310-9956-ffa450edef68",0
"KAFKA-4727; A Production server configuration needs to be updated1. Update value for queued.max.requests to 5002. Removed invalid config 'controller.message.queue.size'3. Removed flush configs including 'log.flush.interval.messages', 'log.flush.interval.ms' and 'log.flush.scheduler.interval.ms'Author: huxi <huxi@zhenrongbao.com>Reviewers: Grant Henke <granthenke@gmail.com>, Jun Rao <junrao@gmail.com>Closes #2490 from amethystic/kafka4727_server_config_doc_update",5
"KAFKA-6474: Rewrite tests to use new public TopologyTestDriver [part 4] (#5433)Reviewer: John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-5832; add Consumed and change StreamBuilder to use itAdded `Consumed` class.Updated `StreamBuilder#stream`, `StreamBuilder#table`, `StreamBuilder#globalTable`Author: Damian Guy <damian.guy@gmail.com>Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3784 from dguy/kip-182-stream-builder",5
Standardize Zk data structures for Re-assign partitions and Preferred replication election; patched by Swapnil Ghike; reviewed by Jun Rao; kafka-779,5
KAFKA-2833; print only group offset / metadata according to the formatterAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Jun Rao <junrao@gmail.com>Closes #527 from guozhangwang/K2833,5
"KAFKA-13854 Refactor ApiVersion to MetadataVersion (#12072)Refactoring ApiVersion to MetadataVersion to support both old IBP versioning and new KRaft versioning (feature flags)for KIP-778.IBP versions are now encoded as enum constants and explicitly prefixed w/ IBP_ instead of KAFKA_, and having aLegacyApiVersion vs DefaultApiVersion was not necessary and replaced with appropriate parsing rules for extractingthe correct shortVersions/versions.Co-authored-by: David Arthur <mumrah@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, David Arthur <mumrah@gmail.com>, dengziming <dengziming1993@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",4
KAFKA-7077: Use default producer settings in Connect Worker (#11475)Reviewers: Luke Chen <showuon@gmail.com>,1
"kafka-1244,kafka-1246,kafka-1249; various gradle issues for release; patched by Jun Rao; reviewed by Neha Narkhede",0
"KAFKA-10004: ConfigCommand fails to find default broker configs without ZK (#8675)Reviewers: Brian Byrne <bbyrne@confluent.io>, Colin P. McCabe <cmccabe@apache.org>",5
"KAFKA-3527: Consumer commitAsync should not expose internal exceptionsAuthor: Liquan Pei <liquanpei@gmail.com>Reviewers: Grant Henke <granthenke@gmail.com>, Jason Gustafson <jason@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1300 from Ishiihara/kafka-3527",5
"Revert ""KAFKA-2186; Follow-up to KAFKA-1650 - add selective offset commit to""This reverts commit 23ff851f30bb55e794aefd2fae5367845d9230ee.",4
"MINOR: Fix Streams examples in documentationPerformed minor cleanup and escaped `<` and `>` so code examples are shown correctly in the browser.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Matthias J. Sax, Guozhang WangCloses #2247 from vahidhashemian/doc/fix_streams_doc",2
"KAFKA-9216: Enforce internal config topic settings for Connect workers during startup (#8270)Currently, Kafka Connect creates its config backing topic with a fire and forget approach.This is fine unless someone has manually created that topic already with the wrong partition count.In such a case Kafka Connect may run for some time. Especially if it's in standalone mode and once switched to distributed mode it will almost certainly fail.This commits adds a check when the KafkaConfigBackingStore is starting.This check will throw a ConfigException if there is more than one partition in the backing store.This exception is then caught upstream and logged by either:- DistributedHerder#run- ConnectStandalone#mainA unit tests was added in KafkaConfigBackingStoreTest to verify the behaviour.Author: Evelyn Bayes <evelyn@confluent.io>Co-authored-by: Randall Hauch <rhauch@gmail.com>Reviewer: Konstantine Karantasis <konstantine@confluent.io>",5
KAFKA-1746 System tests don't handle errors well; reviewed by Neha Narkhede,0
KAFKA-2784: swallow exceptions when mirror maker exits.Author: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Gwen ShapiraCloses #478 from becketqin/KAFKA-2784,1
"KAFKA-13029; Set appropriate fields for FindCoordinatorRequest based on version (#10965)KIP-699 added support for batching in FindCoordinatorRequest using a new protocol that changes the wire format for both batched and unbatched requests. Clients were updated to try the new format first and switch irreversibly to the old format if the new format is not supported on one broker. During rolling upgrade (or a downgrade), it is possible that a broker doesn't support new format at some point while other brokers do at a later point. Clients end up in a bad state until restarted since they use new version with old format. This PR changes FindCoordinatorRequest to set data based on actual version when a single group is used. This is always the case for consumer coordinator and transaction manager. For admin API, we still switch to unbatched mode on failure, but the data is set based on actual version, so we never fail even if brokers are upgraded/downgraded.Reviewers: Luke Chen <showuon@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>, David Jacot <djacot@confluent.io>",5
KAFKA-6893; Create processors before starting acceptor in SocketServer (#4999),1
KAFKA-831 Controller does not send the complete list of partitions to a newly started broker; reviewed by Jun Rao and Swapnil Ghike,1
"MINOR: fix Vagrant VM setup (#5178)Reviewers: Max Zheng <max@confluent.io>, Colin P. McCabe <colin@confluent.io>",5
KAFKA-9011: Removed multiple calls to supplier.get() in order to avoid multiple transformer instances being created. (#7685)This is a followup PR for #7520 to address issue of multiple calls to get() as it was pointed out by @bbejeck in #7520 (comment)Reviewers: Bill Bejeck <bbejeck@gmail.com>,1
"KAFKA-6096: Add multi-threaded tests for group coordinator, txn manager (#4122)Reviewers: Jason Gustafson <jason@confluent.io>",5
"Revert ""KAFKA-5098; ProducerRecord should validate the topic name""We need to verify that this doesn't cause a performance regression,so reverting until that is done.This reverts commit 941e2177c0cf57eff818192258300d256971a11e.",4
"KAFKA-14012: Add warning to closeQuietly documentation about method references of null objects (#12321)Reviewers: Kvicii <42023367+Kvicii@users.noreply.github.com>, Chris Egerton <fearthecellos@gmail.com>",1
"KAFKA-10232: MirrorMaker2 internal topics Formatters KIP-597 (#8604)This PR includes 3 MessageFormatters for MirrorMaker2 internal topics:- HeartbeatFormatter- CheckpointFormatter- OffsetSyncFormatterThis also introduces a new public interface org.apache.kafka.common.MessageFormatter that users can implement to build custom formatters.Reviewers: Konstantine Karantasis <k.karantasis@gmail.com>, Ryanne Dolan <ryannedolan@gmail.com>, David Jacot <djacot@confluent.io>Co-authored-by: Mickael Maison <mickael.maison@gmail.com>Co-authored-by: Edoardo Comar <ecomar@uk.ibm.com>",5
HOTFIX: RecordCollector should send a record to the specified partitionguozhangwangAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #887 from ymatsuda/hotfix4,0
MINOR: Remove always-passing validation in TestRecordTest#testProducerRecord (#9930)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,3
"KAFKA-4092: retention.bytes should not be allowed to be less than segment.bytesadding a LogConfig value validator.  gwenshap or junrao would you mind taking a look?Author: Dustin Cote <dustin@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1796 from cotedm/retentionbytesvalidation",5
KAFKA-4193; Fix for intermittent failure in FetcherTestAuthor: Ben Stopford <benstopford@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #1881 from benstopford/KAFKA-4193,5
KAFKA-10036: Improve handling and documentation of Suppliers (#9000)Reviewer: Matthias J. Sax <matthias@confluent.io>,5
Minor logging improvement,1
"MINOR: Fix typos in DefaultSslEngineFactory javadoc (#9413)Fix comment typos.Reviewers: Boyang Chen <boyang@confluent.io>, Lee Dongjin <dongjin@apache.org>",5
"KAFKA-2640; Add tests for ZK authenticationI've added a couple of initial tests to verify the functionality. I've tested that the JAAS config file loads properly and SASL with DIGEST-MD5 works with ZooKeeper.Author: Flavio Junqueira <fpj@apache.org>Author: flavio junqueira <fpj@apache.org>Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>Closes #324 from fpj/KAFKA-2640",1
"KAFKA-6342; Remove unused workaround for JSON parsing of non-escaped strings (#8591)Previously we had fallback logic when parsing ACLs to handle older entries which may contain non-escaped characters. This code became dead after 1.1 since it was no longer used in the parsing of ACLs. This patch removes the fallback logic.Reviewers: Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>",5
"MINOR: Correct typo in test name `TimetampedSegmentsTest` (#7210)Reviewers: Sophie Blee-Goldman <sophie@confluent.io>, Stanislav Kozlovski <stanislav@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
"MINOR: Improve usage of LogCaptureAppender (#8508)Reviewers: Ismael Juma <ismael@confluent.io>, John Roesler <john@confluent.io>",5
"KAFKA-8155: Add 2.2.0 release to system tests (#6597)Reviewers: Bill Bejeck <bill@confluent.io>, Boyang Chen <boyang@confluent.io>, Bruno Cadonna <bruno@confluent.io>, Guozhang Wang <guozhang@confuent.io>",5
MINOR: Fix method javadoc and typo in comments (#12007)Reviewers: Luke Chen <showuon@gmail.com>,2
"MINOR: Improve Admin interface DocumentationThis PR is a follow-up of #7087, fixing typos, styles, etc.cc/ big-andy-coates ijumaAuthor: Lee Dongjin <dongjin@apache.org>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #7217 from dongjinleekr/feature/trivial-admin-javadoc",2
"KAFKA-5415; Remove timestamp check in completeTransitionToThis assertion is hard to get right because the system time can roll backward on a host due to NTP (as shown in the ticket), and also because a transaction can start on one host and complete on another. Getting precise clock times across hosts is virtually impossible, and this check makes things fragile.Author: Apurva Mehta <apurva@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Jason Gustafson <jason@confluent.io>Closes #3286 from apurvam/KAFKA-5415-avoid-timestamp-check-in-completeTransition",5
"KAFKA-7152; Avoid moving a replica out of isr if its LEO equals leader's LEOWhen there are many inactive partitions in the cluster, we observed constant churn of URP in the cluster even if follower can catch up with leader's byte-in-rate because leader broker frequently moves replicas of inactive partitions out of ISR. This PR mitigates this issue by not moving replica out of ISR if follower's LEO == leader's LEO.Author: Zhanxiang (Patrick) Huang <hzxa21@hotmail.com>Reviewers: Dong Lin <lindong28@gmail.com>Closes #5412 from hzxa21/KAFKA-7152",4
System Test should remove the top level data log directory; patched by John Fung; reviewed by Jun Rao; KAFKA-526git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1390052 13f79535-47bb-0310-9956-ffa450edef68,2
"MINOR: improve code encapsulation between StreamThread and TaskManager (#8819)Reviewers: Boyang Chen <boyang@confluent.io>, John Roesler <john@confluent.io>",5
MINOR: Do not override retries for idempotent producers (#8097)The KafkaProducer code would set infinite retries (MAX_INT) if the producer was configured with idempotence and no retries were configured by the user. This is superfluous because KIP-91 changed the retry functionality to both be time-based and the default retries config to be MAX_INT.Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-3960; Committed offset not set after first assignAuthor: Alexey Romanchuk <al.romanchuk@2gis.ru>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #1629 from 13h3r/kafka-3960",5
"KAFKA-7560; PushHttpMetricsReporter should not convert metric value to doubleCurrently PushHttpMetricsReporter will convert value from KafkaMetric.metricValue() to double. This will not work for non-numerical metrics such as version in AppInfoParser whose value can be string. This has caused issue for PushHttpMetricsReporter which in turn caused system test kafkatest.tests.client.quota_test.QuotaTest.test_quota to fail.Since we allow metric value to be object, PushHttpMetricsReporter should also read metric value as object and pass it to the http server.Author: Dong Lin <lindong28@gmail.com>Reviewers: Manikumar Reddy O <manikumar.reddy@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #5886 from lindong28/KAFKA-7560",5
Update readme links.git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1156166 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-12236; New meta.properties logic for KIP-500 (#9967)This patch contains the new handling of `meta.properties` required by the KIP-500 server as specified in KIP-631. When using the self-managed quorum, the `meta.properties` file is required in each log directory with the new `version` property set to 1. It must include the `cluster.id` property and it must have a `node.id` matching that in the configuration.The behavior of `meta.properties` for the Zookeeper-based `KafkaServer` does not change. We treat `meta.properties` as optional and as if it were `version=0`. We continue to generate the clusterId and/or the brokerId through Zookeeper as needed.Reviewers: Ismael Juma <ismael@juma.me.uk>, Chia-Ping Tsai <chia7712@gmail.com>",4
KAFKA-12583: Upgrade netty to 4.1.62.FinalReviewers: Ismael Juma <ismael@juma.me.uk>,5
HOTFIX: Reinstate the placeholder for logPrefix in TransactionManagerAuthor: Apurva Mehta <apurva@confluent.io>Reviewers: Jason Gustafson <jason@confluent.io>Closes #3216 from apurvam/HOTFIX-logging-bug-in-transaction-manager,2
"KAFKA-4734; Trim the time index on old segmentsAuthor: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Dong Lin <lindong28@gmail.com>, Jun Rao <junrao@gmail.com>Closes #2501 from becketqin/KAFKA-4734",5
"KAFKA-9603: Do not turn on bulk loading for segmented stores on stand-by tasks (#8661)Segmented state stores turn on bulk loading of the underlying RocksDBwhen restoring. This is correct for segmented state stores thatare in restore mode on active tasks and the onRestoreStart() andonRestoreEnd() in RocksDBSegmentsBatchingRestoreCallback take careof toggling bulk loading mode on and off. However, restoreAll()in RocksDBSegmentsBatchingRestoreCallback might also turn on bulk loadingmode. When this happens on a stand-by task bulk loading mode is neverturned off. That leads to steadily increasing open file decriptorsin RocksDB because in bulk loading mode RocksDB creates continuously newfiles but never compacts them (which is the intended behaviour).Reviewers: A. Sophie Blee-Goldman <sophie@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
KAFKA-4541; Support for delegation token mechanism- Add capability to create delegation token- Add authentication based on delegation token.- Add capability to renew/expire delegation tokens.- Add units tests and integration testsAuthor: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Jun Rao <junrao@gmail.com>Closes #3616 from omkreddy/KAFKA-4541,3
"KAFKA-9233: Fix IllegalStateException in Fetcher retrieval of beginning or end offsets for duplicate TopicPartition values (#7755)Co-authored-by: Andrew Olson <aolson1@cerner.com>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Guozhang Wang <wangguoz@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>, Rajini Sivaram <rajinisivaram@googlemail.com>",5
MINOR: Small Connect integration test fixes (#8100)Author: Konstantine Karantasis <konstantine@confluent.io>Reviewer: Randall Hauch <rhauch@gmail.com>,5
"KAFKA-10454 / Update copartitionSourceGroups when optimization algorithm is triggered (#9237)Fix KAFKA-10454 bugMain issue was that when optimization algorithm was removing repartition nodes, corresponding copartitionSourceGroups was never updated. As a result, copartition enforcer wasn't able to do the checks and set proper number of partitions.Test ensures that whenever optimization is set, changelog topic for the table is not created. And whenever optimization is turned off, appropriate changelog topic for the table is created.Reviewers: John Roesler <john@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
"KAFKA-9481: Graceful handling TaskMigrated and TaskCorrupted (#8058)1. Removed task field from TaskMigrated; the only caller that encodes a task id from StreamTask actually do not throw so we only log it. To handle it on StreamThread we just always enforce rebalance (and we would call onPartitionsLost to remove all tasks as dirty).2. Added TaskCorruptedException with a set of task-ids. The first scenario of this is the restoreConsumer.poll which throws InvalidOffset indicating that the logs are truncated / compacted. To handle it on StreamThread we first close the corresponding tasks as dirty (if EOS is enabled we would also wipe out the state stores), and then revive them into the CREATED state.3. Also fixed a bug while investigating KAFKA-9572: when suspending / closing a restoring task we should not commit the new offsets but only updating the checkpoint file.4. Re-enabled the unit test.",3
"KAFKA-2203: Getting Java8 to relax about javadoc and let our build passThis patch is different than the one attached to the JIRA - I'm applying the new javadoc rules to all subprojects while the one in the JIRA applies only to ""clients"". We need this since Copycat  has the same issues.Author: Gwen Shapira <cshapi@gmail.com>Reviewers: Ismael Juma, Guozhang WangCloses #147 from gwenshap/KAFKA-2203",0
"KAFKA-6343 Documentation update in OS-level tuning section: add vm.ma… (#4358)Reviewers: Manikumar Reddy O <manikumar.reddy@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>",1
MINOR: fix checkstyle suppressions for generated RPC code to work on WindowsReviewed-by: Colin P. McCabe <cmccabe@apache.org>,1
MINOR: Remove <release> tag from doap fileThe information from this file is displayed in:https://projects.apache.org/project.html?kafkaI removed the tag instead of fixing it because it's one more thing to maintain and neither Hadoop nor ZooKeeper have it (httpd does though).Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1378 from ijuma/remove-release-from-doap,4
"KAFKA-2336: Changing offsets.topic.num.partitions after the offset topic is created breaks consumer group partition assignment; Reviewed by Jiangjie Qin, Gwen Shapira",4
trivial fix to make the default value replica.fetch.min.bytes better for replicationgit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1410125 13f79535-47bb-0310-9956-ffa450edef68,1
MINOR: remove streams config params from producer/consumer configsRemoving streams' specific config params from producer/consumer configs to reduce warning messages.Author: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #906 from ymatsuda/clean_config,5
"Improve kafka client sensor registration performance by lazily calculating JMX attributesWhen any metric (e.g. per-partition metric) is created or deleted,registerMBean() is called which in turn calls getMBeanInfo().getClassName().However, KafkaMbean.getMBeanInfo() instantiates an array of all sensors eventhough we only need the class name. This costs a lot of CPU to registersensors when consumer with large partition assignment starts. For example, ittakes 5 minutes to start a consumer with 35k partitions. This patch reduces theconsumer startup time seconds.Author: radai-rosenblatt <radai.rosenblatt@gmail.com>Reviewers: Satish Duggana <satish.duggana@gmail.com>, Dong Lin <lindong28@gmail.com>Closes #5011 from radai-rosenblatt/fun-with-jmx",5
"MINOR: clean up required setup for StreamsPartitionAssignorTest (#8306)No logical or behavioral changes, just a bit of cleanup in this class before we have to write and fix a lot of these tests for KIP-441:* Moved creation of streamsMetadata mock to setUp (in exactly one test it will be overwritten with a strict mock)* Tried to clean up the use of helper methods for configuring the assignor.Reviewers: Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-9152; Improve Sensor Retrieval (#7928)This ticket shall improve two aspects of the retrieval of sensors:https://issues.apache.org/jira/browse/KAFKA-9152Currently, when a sensor is retrieved with *Metrics.*Sensor() (e.g. ThreadMetrics.createTaskSensor()) after it was created with the same method *Metrics.*Sensor(), the sensor is added again to the corresponding queue in Sensors (e.g. threadLevelSensors) in StreamsMetricsImpl. Those queues are used to remove the sensors when removeAllLevelSensors() is called. Having multiple times the same sensors in this queue is not an issue from a correctness point of view. However, it would reduce the footprint to only store a sensor once in those queues.When a sensor is retrieved, the current code attempts to create a new sensor and to add to it again the corresponding metrics. This could be avoided.Both aspects could be improved by checking whether a sensor already exists by calling getSensor() on the Metrics object and checking the return value.Reviewers: Bruno Cadonna <bruno@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
MINOR: Adding Trivago logo to Streams landing pageguozhangwang Please reviewAuthor: Manjula K <manjula@kafka-summit.org>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #4164 from manjuapu/ny-trivago-logos,2
MINOR: Remove redundant placeholder in log message (#7016)Reviewers: Jason Gustafson <jason@confluent.io>,5
KAFKA-849 Bug in controller's startup/failover logic fails to update in memory leader and isr cache causing other state changes to work incorrectly; reviewed by Jun Rao and Swapnil Ghike,1
"MINOR: Fix flaky testDescribeUnderReplicatedPartitions (#12112)Currently, we are waiting for metadataCache to bookkeeper the partition info, this isn't enough, we should wait until the partition ISR is less than AR.Reviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <divijvaidya13@gmail.com>",5
MINOR: tidy up spacing for ConsumerGroupCommand related to KAFKA-1476 …https://issues.apache.org/jira/browse/KAFKA-1476Let me know if these kind of contributions should have their own requisite JIRA opened in advance.Cheers..Author: Christian Posta <christian.posta@gmail.com>Reviewers: Gwen ShapiraCloses #945 from christian-posta/ceposta-tidy-up-consumer-groups-describe,0
"MINOR: clean stateDirectory in TopologyTestDriver (#4655)Author: John Roeler <john@confluent.io>Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
kafka-1468; (followup) add back inadventently removed commit; patched by Guozhang Wang; reviewed by Jun Rao,4
"MINOR: Correct ""exeption"" to ""exception"" in connect docs (#4709)",2
"MINOR: rename StateStoreProvider.getStores() -> StateStoreProvider.stores()Rename StateStoreProvider.getStores(...) to StateStoreProvider.stores(...) as this is consistent with the naming of other 'getters' in the public API.Author: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #1699 from dguy/minor-method-rename",1
kafka-1461; Replica fetcher thread does not implement any back-off behavior; patched by Sriharsha Chintalapani; reviewed by Jun Rao,5
"KAFKA-4589; SASL/SCRAM documentationAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Gwen Shapira <cshapi@gmail.com>, Sriharsha Chintalapani <harsha@hortonworks.com>, Jun Rao <junrao@gmail.com>Closes #2369 from rajinisivaram/KAFKA-4589",5
trivial change to fix incorrect comment in Message,0
"KAFKA-13319: Do not commit empty offsets on producer (#11362)We observed on the broker side that txn-offset-commit request with empty topics are received. After checking the source code I found there's on place on Streams which is unnecessarily sending empty offsets. This PR cleans up the streams layer logic a bit to not send empty offsets, and at the same time also guard against empty offsets at the producer layer as well.Reviewers: Luke Chen <showuon@gmail.com>, Jason Gustafson <jason@confluent.io>",5
KAFKA-10846: Grow buffer in FileSourceStreamTask only when needed (#9735)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,2
"MINOR: code cleanup (#6055)Reviewers: Bill Bejeck <bill@confluent.io>, John Roesler <john@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
"KAFKA-4222: Adjust timeout in low resource environmentsAuthor: Eno Thereska <eno.thereska@gmail.com>Reviewers: Matthias J. Sax, Guozhang WangCloses #2996 from enothereska/KAFKA-4222-queryOnRebalance",5
"KAFKA-6161 Add default implementation to close() and configure() for Serdes (#5348)Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-2694: Reformat task id as group id and partition idguozhangwang* A task id is now a class, ```TaskId```, that has a topic group id and a partition id fields.* ```TopologyBuilder``` assigns a topic group id to a topic group. Related methods are changed accordingly.* A state store uses the partition id part of the task id as the change log partition id.Author: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #365 from ymatsuda/task_id",5
"KAFKA-4429; Consumer lag metric should be zero if FetchResponse is emptyAuthor: Dong Lin <lindong28@gmail.com>Reviewers: Ewen Cheslack-Postava <me@ewencp.org>, Jason Gustafson <jason@confluent.io>Closes #2155 from lindong28/KAFKA-4429",5
"MINOR: Remove extraneous code in LocalLogManager (#12168)Reviewers: Kvicii <Karonazaba@gmail.com>, dengziming <dengziming1993@gmail.com>, Divij Vaidya <divijvaidya13@gmail.com>",2
"HOTFIX: Remove failing ConnectDistributedTest.test_bad_connector_classSince #1911 was merged it is hard to externally test a connector transitioning to FAILED state due to an initialization failure, which is what this test was attempting to verify.The unit test added in #1778 already exercises exception-handling around Connector instantiation.Author: Shikhar Bhushan <shikhar@confluent.io>Reviewers: Jason Gustafson <jason@confluent.io>Closes #2131 from shikhar/test_bad_connector_class",3
"KAFKA-3721; Put UpdateMetadataRequest V2 in 0.10.0-IV1Author: Jiangjie Qin <becket.qin@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Gwen Shapira <cshapi@gmail.com>, Jun Rao <junrao@gmail.com>Closes #1400 from becketqin/KAFKA-3721",5
KAFKA-13281: add API to expose current NamedTopology set (#11808)List all the named topologies that have been added to this clientReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>,1
"KAFKA-6945: KIP-373, allow users to create delegation token for others (#10738)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",1
KAFKA-709 Default queue.enqueue.timeout.ms to -1; reviewed by Jay Kreps,5
"MINOR. Fix 2.3.0 streams systest dockerfile typo (#7272)As part of commit 4d1ee26a136997d31dbd6ddca07e09b34c41c77d streamsversion 2.3.0 test jar was added, but there was a simple typo in thepath that specified the version.`ducker-ak up` was failing because of that. Fixed that.Reviewers: Guozhang Wang <wangguoz@gmail.com>",0
HOTFIX: fix table-table outer join and left join. more testsguozhangwang* fixed bugs in table-table outer/left joins* added more testsAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang WangCloses #653 from ymatsuda/join_tests,3
MINOR: Fix typo in README.md (#11407)Reviewers: Mickael Maison <mickael.maison@gmail.com>,2
HOTFIX: exclude ConsumerCoordinator from NPathComplexity check (#8447)Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>,5
KAFKA-10169: Error message when transit to Aborting / AbortableError / FatalError (#8880)Reviewers: John Roesler <vvcephei@apache.org>,0
"KAFKA-2927; reduce system test storage footprintSplit kafka logging into two levels - DEBUG and INFO, and do not collect DEBUG by default.Author: Geoff Anderson <geoff@confluent.io>Reviewers: Ben Stopford <ben@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #657 from granders/KAFKA-2927-reduce-log-footprint",2
MINOR: Fix record conversion time in metrics (#4671)Reviewers: Ismael Juma <ismael@juma.me.uk>,0
KAFKA-2328; merge-kafka-pr.py script should not leave user in a detached branchThe right command to get the branch name is `git rev-parse --abbrev-ref HEAD` instead of `git rev-parse HEAD`. The latter gives the commit hash causing a detached branch when we checkout to it. Seems like a bug we inherited from the Spark script.Author: Ismael Juma <ismael@juma.me.uk>Closes #84 from ijuma/kafka-2328-merge-script-no-detached-branch and squashes the following commits:ae201dd [Ismael Juma] KAFKA-2328; merge-kafka-pr.py script should not leave user in a detached branch,1
KAFKA-9589: Enable testLogAppendTimeNonCompressedV2 and fix bug in helper method (#8533)Adjust `checkLogAppendTimeNonCompressed` to assert`shallowOffsetOfMaxTimestamp` correctly for message format 2.Reviewers: Ismael Juma <ismael@juma.me.uk>,3
KAFKA-10755: Should consider commit latency when computing next commit timestamp (#9634)Reviewer: Guozhang Wang <guozhang@confluent.io>,5
KAFKA-1316 Follow-up patch for concurrent modification exception.,5
KAFKA-6615; Add scripts for DumpLogSegments (#4653)Reviewers: Ismael Juma <ismael@juma.me.uk>,2
"KAFKA-7956 In ShutdownableThread, immediately complete the shutdown if the thread has not been started (#6218)In some test cases it's desirable to instantiate a subclass of `ShutdownableThread` without starting it. Since most subclasses of `ShutdownableThread` put cleanup logic in `ShutdownableThread.shutdown()`, being able to call `shutdown()` on the non-running thread would be useful.This change allows us to avoid blocking in `ShutdownableThread.shutdown()` if the thread's `run()` method has not been called. We also add a check that `initiateShutdown()` was called before `awaitShutdown()`, to protect against the case where a user calls `awaitShutdown()` before the thread has been started, and unexpectedly is not blocked on the thread shutting down.Reviewers : Dhruvil Shah <dhruvil@confluent.io>, Jun Rao <junrao@gmail.com>",5
MINOR: Add INFO logging if ZK config is not specifiedAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Ismael JumaCloses #1392 from guozhangwang/Kminor-warn-no-zk-config,5
"KAFKA-9374: Make connector interactions asynchronous (#8069)These changes allow herders to continue to function even when a connector they are running hangs in its start, stop, initialize, validate, and/or config methods.The main idea is to make these connector interactions asynchronous and accept a callback that can be invoked upon the completion (successful or otherwise) of these interactions. The distributed herder handles any follow-up logic by adding a new herder request to its queue in that callback, which helps preserve some synchronization and ordering guarantees provided by the current tick model.If any connector refuses to shut down within a graceful timeout period, the framework will abandon it and potentially start a new connector in its place (in cases such as connector restart or reconfiguration).Existing unit tests for the distributed herder and worker have been modified to reflect these changes, and a new integration test named `BlockingConnectorTest` has been added to ensure that they work in practice.Reviewers: Greg Harris <gregh@confluent.io>, Nigel Liang <nigel@nigelliang.com>, Randall Hauch <rhauch@gmail.com>, Konstantine Karantasis <konstantine@confluent.io>",5
"KAFKA-769 On startup, a brokers highwatermark for every topic partition gets reset to zero; reviewed by Neha Narkhede",1
"KAFKA-6455: Improve DSL operator timestamp semantics (#6725)Basic idea:KTable-KTable join: set max(left-ts,right-ts) for result#agg(...) (stream/table windowed/non-windowed): set max(ts1, ts2, ts3,...) of all input records that contribute to the aggregation resultfor all stateless transformation: input-ts -> output-tsReviewers: Guozhang Wang <wangguoz@gmail.com>,  John Roesler <john@confluent.io>, Andy Coates <andy@confluent.io>,  Bill Bejeck <bbejeck@gmail.com",5
"KAFKA-725: Return OffsetOutOfRange error from ReplicaManager when non-follower attempts reading an offset that's above high watermark.This should make Log.read act the same when startOffset is larger than maxOffset as it would if startOffset was larger than logEndOffset. The current behavior can result in an IllegalArgumentException from LogSegment if a consumer attempts to fetch an offset above the high watermark which is present in the leader's log. It seems more correct if Log.read presents the view of the log to consumers as if it simply ended at maxOffset (high watermark).I've tried to describe an example scenario of this happening here https://issues.apache.org/jira/browse/KAFKA-725?focusedCommentId=15221673&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15221673I'm not sure I understand why ReplicaManager sets maxOffset to the high watermark, and not high watermark + 1. Isn't the high watermark the last committed message, and readable by consumers?Tests passed for me locally on second try, seems like it just hit a flaky test.Author: Stig Rohde Døssing <sdo@it-minds.dk>Reviewers: Jiangjie Qin <becket.qin@gmail.com>, Guozhang Wang <wangguoz@gmail.com>Closes #1178 from srdo/KAFKA-725",3
"KAFKA-1317 KafkaServer 0.8.1 not responding to .shutdown() cleanly, possibly related to TopicDeletionManager or MetricsMeter state; reviewed by Neha Narkhede",4
"KAFKA-5329; Fix order of replica list in metadata cacheAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Colin P. Mccabe <cmccabe@confluent.io>, Jun Rao <junrao@gmail.com>Closes #3257 from ijuma/kafka-5329-fix-order-of-replica-list-in-metadata-cache",5
kafka-1192; Enable DumpLogSegments tool to deserialize messages; patched by Manikumar Reddy; reviewed by Guozhang Wang and Jun Rao,2
MINOR: A few javadoc fixesAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #4076 from hachikuji/javadoc-fixes,2
"KAFKA-12925: adding presfixScan operation for missed implementations (#10877)The new prefixScan API may still throw UnsupportedVersionOperationException due to some missing implementations in vast store hierarchy of Streams, this PR adds those missing overrides and expands the test coverage.Reviewers: Matthias J. Sax <matthias@confluent.io>, Anna Sophie Blee-Goldman <ableegoldman@apache.org>",5
"MINOR: disable Streams system test for broker upgrade/downgrade (#6341)Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
MINOR: Add upgrade docs for 2.4.0 releaseAuthor: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #7530 from omkreddy/2.4-upgrade-docs,2
MINOR: Log constructor: Flip logical NOT for readability (#10756)Reviewers: Jun Rao <junrao@gmail.com>,2
"KAFKA-9113: Extract clients from tasks to record collectors (#7833)This is part1 of a series of PRs for task management cleanup:1. Primarily cleanup MockRecordCollectors: remove unnecessary anonymous inheritance but just consolidate on the NoOpRecordCollector -> renamed to MockRecordCollector. Most relevant changes are unit tests that would be relying on this MockRecordCollector.2. Let StandbyContextImpl#recordCollector() to return null instead of returning a no-op collector, since in standby tasks we should ALWAYS bypass the logging logic and only use the inner store for restoreBatch. Returning null helps us to realize this assertion failed as NPE as early as possible whereas a no-op collector just hides the bug.Reviewers: Guozhang Wang <wangguoz@gmail.com>",0
"KAFKA-7003: Set error context in message headers (KIP-298)If the property `errors.deadletterqueue.context.headers.enable` is set to true, add a set of headers to the message describing the context under which the error took place.A unit test is added to check the correctness of header creation.Signed-off-by: Arjun Satish <arjunconfluent.io>Author: Arjun Satish <arjun@confluent.io>Reviewers: Konstantine Karantasis <konstantine@confluent.io>, Randall Hauch <rhauch@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #5159 from wicknicks/KAFKA-7003",5
MINOR: improve Streams application reset tool to make sure application is downAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1764 from mjsax/improveResetTool,1
MINOR: Fix binary compatibility break in KafkaClientSupplier.getAdminClient (#7157)Changing the return type in an interface is a binary incompatible change.Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-13592; Fix flaky test ControllerIntegrationTest.testTopicIdUpgradeAfterReassigningPartitions (#11687)Fixes several race conditions in the test case causing the flaky failure.Reviewers: Divij Vaidya <divijvaidya13@gmail.com>, Jason Gustafson <jason@confluent.io>Co-authored-by: Kvicii <Karonazaba@gmail.com>",5
KAFKA-9457; Fix flaky test org.apache.kafka.common.network.SelectorTest.testGracefulClose (#7989)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,3
KAFKA-13479: Implement range and scan queries (#11598)Implement the RangeQuery as proposed in KIP-805Reviewers: John Roesler <vvcephei@apache.org>,2
"MINOR; Preserve ThrottlingQuotaExceededException when request timeouts after being retried due to a quota violation (KIP-599) (#9344)This PR adds the logic to preserve the ThrottlingQuotaExceededException when topics are retried. The throttleTimeMs is also adjusted accordingly as the request could remain pending or in-flight for quite a long time.Have run various tests on clusters with enabled quotas and I, indeed, find it better to preserve the exception. Otherwise, the caller does not really understand what is going on. This allows the caller to take the appropriate measure and also to take the throttleTimeMs into consideration.Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",5
kafka-1670; Corrupt log files for segment.bytes values close to Int.MaxInt; patched by Sriharsha Chintalapani; reviewed by Jay Kreps and Jun Rao,2
KAFKA-5484: Refactor kafkatest docker supportAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>Closes #3389 from cmccabe/KAFKA-5484,5
"MINOR: Update command options for kafka-console-consumer.sh in vagrant/README.md (#6689)The following command in vagrant/README.md doesn't work,since `--zookeeper` option has been unsuppored from v2.0.0.This PR updates its command options to fix it.```bin/kafka-console-consumer.sh --zookeeper zk1:2181 --topic sandbox --from-beginning```Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-12841: Fix producer callback handling when partition is missing (#11689)Sometimes, the Kafka producer encounters an error prior to selecting a topic partition. In this case, wewould like to acknowledge the failure in the producer interceptors, if any are configured. We should alsopass a non-null Metadata object to the producer callback, if there is one. This PR implements thatbehavior. It also updates the JavaDoc to clarify that if a partition cannot be selected, we will passback a partition id of -1 in the metadata. This is in keeping with KAFKA-3303.Co-authors: Kirk True <kirk@mustardgrain.com>Reviewers: Colin P. McCabe <cmccabe@apache.org>",5
MINOR: Disable ARM builds (#12220)Also add an additional stage to ARM and PowerPC builds which will fail-fast if the agent is not available.Reviewers: Jason Gustafson <jason@confluent.io>,5
"MINOR: Add 2.7.0 release to broker and client compat tests (#9774)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, Ismael Juma <ismael@confluent.io>",5
"MINOR: Make streams quick start more interactive1. Make the WordCountDemo application to not stop automatically but via ""ctrl-C"".2. Update the quickstart html file to let users type input messages one-by-one, and observe added output in an interactive manner.3. Some minor fixes on the parent documentation page pointing to streams sub-pages, added a new recommended Scala version number.Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Michael G. Noll <michael@confluent.io>, Damian Guy <damian.guy@gmail.com>Closes #3515 from guozhangwang/KMinor-interactive-quickstart",5
"KAFKA-6975; Fix replica fetching from non-batch-aligned log start offset (#5133)It is possible that log start offset may fall in the middle of the batch after AdminClient#deleteRecords(). This will cause a follower starting from log start offset to fail fetching (all records). Use-cases when a follower will start fetching from log start offset includes: 1) new replica due to partition re-assignment; 2) new local replica created as a result of AdminClient#AlterReplicaLogDirs(); 3) broker that was down for some time while AdminClient#deleteRecords() move log start offset beyond its HW. Added two integration tests:1) Produce and then AdminClient#deleteRecords() while one of the followers is down, and then restart of the follower requires fetching from log start offset;2)  AdminClient#AlterReplicaLogDirs() after AdminClient#deleteRecords()Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>, Jason Gustafson <jason@confluent.io>",5
"KAFKA-4289; moved short-lived loggers to companion objectsSigned-off-by: radai-rosenblatt <radai.rosenblattgmail.com>Author: radai-rosenblatt <radai.rosenblatt@gmail.com>Reviewers: Jiangjie Qin <becket.qin@gmail.com>, Onur Karaman <okaraman@linkedin.com>, Joel Koshy <jjkoshy.w@gmail.com>Closes #2006 from radai-rosenblatt/omgsrsly",2
KAFKA-5098; ProducerRecord should validate the topic nameAuthor: huxihx <huxi_2b@hotmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3223 from huxihx/KAFKA-5098_Does_not_check_topic_name_before_sending,5
KAFKA-1028 follow up: New test UncleanLeaderElectionTest,3
KAFKA-2730: use thread-id as metrics tagsAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Gwen ShapiraCloses #416 from guozhangwang/K2730,1
"HOTFIX: Use atomic boolean for inject errors in streams eos integration testOriginally we assume the task will be created exactly three times (twice upon starting up, once for each thread, and then one more time when rebalancing upon the thread failure). However there is a likelihood that upon starting up more than one rebalance will be triggered, and hence the tasks will be initialized more than 3 times, i.e. there will be more than three hashcodes of the `Transformer` object, causing the `errorInjected` to never be taken and exception never thrown.The current fix is to use an atomic boolean instead and let threads compete on compare-and-set to make sure exactly one thread will throw exception, and will only throw once.Without this patch I can reproduce the issue on my local machine with a single core ever 3-5 times; with this patch I have been running successfully for 10+ runs.Ping mjsax ijuma for reviews.Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Matthias J. Sax <matthias@confluent.io>, Jason Gustafson <jason@confluent.io>Closes #3275 from guozhangwang/KHotfix-eos-integration-test",3
"MINOR: Apply extra serialized rsync step to both parallel and serial pathsAuthor: Ewen Cheslack-Postava <ewen@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>, Eno Thereska <eno.thereska@gmail.com>Closes #3546 from ewencp/fix-rsync",0
"KAFKA-4651: improve test coverage of stores (#4555)Working on increasing the coverage of stores in unit tests.  Started with `InMemoryKeyValueLoggedStore` Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"MINOR: Handle case where connector status endpoints returns 404 (#6176)Reviewers: Randall Hauch <randall@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-6912; Add test for authorization with custom principal typesAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Dong Lin <lindong28@gmail.com>Closes #5030 from rajinisivaram/MINOR-group-test",5
"KAFKA-6834: Handle compaction with batches bigger than max.message.bytes (#4953)Grow buffers in log cleaner to hold one message set after sanity check even if message set is bigger than max.message.bytes.Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>",5
"KAFKA-7476: Fix Date-based types in SchemaProjectorVarious converters (AvroConverter and JsonConverter) produce aSchemaAndValue consisting of a logical schema type and a java.util.Date.This is a fix for SchemaProjector to properly handle the Date.Author: Robert Yokota <rayokota@gmail.com>Reviewers: Konstantine Karantasis <konstantine@confluent.io>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #5736 from rayokota/KAFKA-7476",5
MINOR: Avoiding warning about generics in sample codeAuthor: Tomasz Nurkiewicz <nurkiewicz@gmail.com>Reviewers: Guozhang WangCloses #594 from nurkiewicz/patch-1,2
KAFKA-2740: Convert Windows bin scripts from CRLF to LF line encodingsThere are no functional changes to the modified scripts.Author: Michael G. Noll <michael@confluent.io>Reviewers: Guozhang WangCloses #419 from miguno/KAFKA-2740,5
"KAFKA-4499: Add all() and fetchAll() API for querying window storeA rebased version of the code.Author: RichardYuSTUG <yohan.richard.yu2@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>, Guozhang Wang <wangguoz@gmail.com>Closes #4258 from ConcurrencyPractitioner/trunkAdd EmptyWindowStoreIterator to NoOpWindowStore",1
"MINOR: Fixed new consumer Javadoc typoChanged ""an"" to ""and""Author: Alex Sherwin <alex-sherwin@users.noreply.github.com>Reviewers: Guozhang WangCloses #601 from alex-sherwin/patch-1",1
"KAFKA-8614; Consistent naming for IncrementalAlterConfig and AlterConfig responses (#7022)This patch changes the name of the `Resources` field of AlterConfigsResponse to `Responses`. This makes it consistent with AlterConfigsResponse, which has a differently-named but structurally-identical field. Tested with unit tests.Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-5351: Reset pending state when returning an error in appendTransactionToLogWithout this patch, future client retries would get the `CONCURRENT_TRANSACTIONS` error code indefinitely, since the pending state wouldn't be cleared when the append to the log failed.Author: Apurva Mehta <apurva@confluent.io>Reviewers: Jason Gustafson <jason@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3184 from apurvam/KAFKA-5351-clear-pending-state-on-retriable-error",0
"KAFKA-2760: Clean up interface of AdminClient.describeConsumerGroup.…roupId)Author: Ashish Singh <asingh@cloudera.com>Reviewers: Jason Gustafson, Guozhang WangCloses #442 from SinghAsDev/KAFKA-2760",4
"KAFKA-7601; Clear leader epoch cache on downgraded format in append (#6568)During a partial message format upgrade, it is possible for the message format to flap between new and old versions. If we detect that data appended to the log is on an old format, we can clear the leader epoch cache so that we revert to truncation by high watermark. Once the upgrade completes and all replicas are on the same format, we will append to the epoch cache as usual. Note this is related to KAFKA-7897, which handles message format downgrades through configuration. Reviewers: Jun Rao <junrao@gmail.com>",5
HOTFIX: don't throw if upgrading from very old versions (#7436)Reviewers: Guozhang Wang <wangguoz@gmail.com>,0
"KAFKA-5744; ShellTest: add tests for attempting to run nonexistent program, error returnAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3679 from cmccabe/KAFKA-5744",5
KAFKA-12661 ConfigEntry#equal does not compare other fields when value is NOT null (#10446)Reviewers: Ismael Juma <ismael@juma.me.uk>,5
KAFKA-228 Reduce duplicate messages served by the kafka consumer for uncompressed topics; patched by nehanarkhede; reviewed by junraogit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1228504 13f79535-47bb-0310-9956-ffa450edef68,1
"MINOR: Consolidate Topic create calls in Test classes- Replace adminZkClient.createOrUpdateTopicPartitionAssignmentPathInZK calls with TestUtils.createTopic wherever applicable- Replace adminZkClient.createTopic calls with TestUtils.createTopic wherever applicable- Move non-deprecated tests to other test classes and deprecate AdminTest.scala- Remove duplicate tests between AdminTest and AdminZkClientTestAuthor: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Dong Lin <lindong28@gmail.com>Closes #5303 from omkreddy/topiccreate",1
KAFKA-14136 Generate ConfigRecord for brokers even if the value is unchanged (#12483),4
"KAFKA-5292; Fix authorization checks in AdminClient* NetworkClient.java: when trace logging is enabled, show AbstractResponse Struct objects, rather than just a memory address of the AbstractResponse.* AclOperation.java: add documentation of what ACLs imply other ACLs.* Resource.java: add CLUSTER, CLUSTER_NAME constants.* Reconcile the Java and Scala classes for ResourceType, OperationType, etc.  Add unit tests to ensure they can be converted to each other.* AclCommand.scala: we should be able to apply ACLs containing Alter and Describe operations to Cluster resources.* SimpleAclAuthorizer: update the authorizer to handle the ACL inheritance rules described in AclOperation.java.* KafkaApis.scala: update createAcls and deleteAcls to use ALTER on CLUSTER, as described in the KIP.  describeAcls should use DESCRIBE on CLUSTER.  Use      fromJava methods instead of fromString methods to convert from Java objects to Scala ones.* SaslSslAdminClientIntegrationTest.scala: do not use AllowEveryoneIfNoAclIsFound.  Add a configureSecurityBeforeServerStart hook which installs the ACLs     necessary for the tests.  Add a test of ACL authorization ALLOW and DENY functionality.Author: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Jun Rao <junrao@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #3240 from cmccabe/KAFKA-5292",5
KAFKA-2782: Fix KafkaBasedLogTest assertion and move it to the main test thread.Author: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Gwen ShapiraCloses #463 from ewencp/kafka-2782-fix-kafka-based-log-test-assertion,3
"KAFKA-10268: dynamic config like ""--delete-config log.retention.ms"" doesn't work (#9051)* KAFKA-10268: dynamic config like ""--delete-config log.retention.ms"" doesn't workhttps://issues.apache.org/jira/browse/KAFKA-10268Currently, ConfigCommand --delete-config API does not restore the config to default value, no matter at broker-level or broker-default level. Besides, Admin.incrementalAlterConfigs API also runs into this problem. This patch fixes it by removing the corresponding config from the newConfig properties when reconfiguring dynamic broker config.",5
"KAFKA-8029: In memory session store (#6525)First pass at an in-memory session store implementation.Reviewers: Simon Geisler, Damian Guy <damian@confluent.io>, John Roesler <john@confluent.io>, Bill Bejeck <bill@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-1012; Consumer offset management in Kafka; patched by Tejas Patil and Joel Koshy; feedback and reviews from Neha Narkhede, Jun Rao, Guozhang Wang, Sriram Subramanian, Joe Stein, Chris Riccomini",5
KAFKA-7939: Fix timing issue in KafkaAdminClientTest.testCreateTopicsRetryBackoffThere is a small timing window where ```time.sleep(retryBackoff)``` will get executed before adminClient adds retry request to the queue.  Added a check to wait until the retry call added to the queue in AdminClient.Author: Manikumar Reddy <manikumar.reddy@gmail.com>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #6418 from omkreddy/KAFKA-7939,5
MINOR: Remove uncommitted code (#6919),4
Minor commit post KAFKA-765,5
"KAFKA-4820; ConsumerNetworkClient.send() should not require global lockAuthor: Dong Lin <lindong28@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Jiangjie Qin <becket.qin@gmail.com>Closes #2619 from lindong28/KAFKA-4820",5
KAFKA-4775; Fix findbugs warnings in kafka-toolsAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2559 from cmccabe/KAFKA-4775,5
KAFKA-10225 Increase default zk timeout for system tests (#8974)Increase ZK connection and session timeout in system tests to match the defaults.Reviewers: Jun Rao <junrao@gmail.com>,3
MINOR: fix the logic of RocksDBWindowStore using RocksDBStore SegmentsAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Yasuhiro MatsudaCloses #849 from guozhangwang/KRemoveInitializedCheck,5
MINOR: A few small cleanups in AdminClient from KAFKA-6299 (#4989)Reviewers: Ismael Juma <ismael@juma.me.uk>,4
MINOR: remove an unnecessary explicit type argument (#9982)Reviewers: Colin P. McCabe <cmccabe@apache.org>,4
MINOR: fix docs of common per-broker metricsAuthor: lambdaliu <lambdaliu@tencent.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #6212 from lambdaliu/fix_metrics_error,0
"KAFKA-8285: enable localized thread IDs in Kafka Streams (#6632)Details in the JIRA: https://issues.apache.org/jira/browse/KAFKA-8285Basically we want to avoid sharing of atomic updates for thread id with multiple stream instances on one JVM.Reviewers: Raoul de Haard, Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-5316; LogCleaner should account for larger record sets after cleaningAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>Closes #3142 from hachikuji/KAFKA-5316",5
"MINOR: Cleanup threads in integration tests (#5269)Leftover threads doing network I/O can interfere with subsequent tests. Add missing shutdown in tests and include admin client in the check for leftover threads.Reviewers: Anna Povzner <anna@confluent.io>, Dhruvil Shah <dhruvil@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Manikumar Reddy O <manikumar.reddy@gmail.com>",5
KAFKA-5316; Follow-up with ByteBufferOutputStream and other misc improvementsByteBufferOutputStream improvements:* Document pitfalls* Improve efficiency when dealing with direct byte buffers* Improve handling of buffer expansion* Be consistent about using `limit` instead of `capacity`* Add constructors that allocate the internal bufferOther minor changes:* Fix log warning to specify correct Kafka version* Clean-upsAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Jason Gustafson <jason@confluent.io>Closes #3166 from ijuma/minor-kafka-5316-follow-ups,5
MINOR: Remove MaxPermSize from gradle.propertiesNo longer needed since we dropped support for Java 7.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Dong Lin <lindong28@gmail.com>Closes #5083 from ijuma/remove-max-perm-size,4
MINOR: a simple benchmark for Streamsguozhangwang migunoAuthor: Yasuhiro Matsuda <yasuhiro@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1164 from ymatsuda/perf,5
"MINOR: refactor ControllerApis#createTopics (#10465)Refactor ControllerApis#createTopics to be easier to unit test.  Addunit tests for various invalid request and permission denied scenarios.In ControllerApisTest, statically import all the Errors enums.Implement MockController#createTopics.Reviewers: Chia-Ping Tsai <chia7712@gmail.com>",1
MINOR: document timestamped state stores (#8920)Reviewers: Matthias J. Sax <matthias@confluent.io>,5
MINOR: Update Scala to 2.12.4Mainly for Java 9 fixes and improved compilation times (5-10% reduction):http://www.scala-lang.org/news/2.12.4Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4102 from ijuma/update-scala-version,5
"KAFKA-2419; Garbage collect unused sensorsAs discussed in KAFKA-2419 - I've added a time based sensor retention config to Sensor. Sensors that have not been ""recorded"" for 'n' seconds are eligible for expiration.In addition to the time based retention, I've also altered several tests to close the Metrics and scheduler objects since they can cause leaks while running tests. This causes TestUtils.verifyNonDaemonThreadStatus to fail.Author: Aditya Auradkar <aauradka@aauradka-mn1.linkedin.biz>Author: Aditya Auradkar <aauradka@aauradka-mn1.(none)>Reviewers: Ismael Juma <ismael@juma.me.uk>, Joel Koshy <jjkoshy.w@gmail.com>Closes #233 from auradkar/K-2419",2
"MINOR: Remove checking on original joined subscription within handleAssignmentMismatch (#6782)When consumer coordinator realize the subscription may have changed, today we check again against the joinedSubscription within handleAssignmentMismatch. This checking however is a bit fishy and over-kill as well. It's better just simplifying it to always request re-join.The joinedSubscription object itself however still need to be maintained for potential augment to avoid extra re-joining the group.Since testOutdatedCoordinatorAssignment already cover the normal case we also remove the other invalidAssignment test case.Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-13830 MetadataVersion integration for KRaft controller (#12050)This patch builds on #12072 and adds controller support for metadata.version. The kafka-storage tool now allows auser to specify a specific metadata.version to bootstrap into the cluster, otherwise the latest version is used.Upon the first leader election of the KRaft quroum, this initial metadata.version is written into the metadata log. Whenwriting snapshots, a FeatureLevelRecord for metadata.version will be written out ahead of other records so we candecode things at the correct version level.This also includes additional validation in the controller when setting feature levels. It will now check that a givenmetadata.version is supportable by the quroum, not just the brokers.Reviewers: José Armando García Sancio <jsancio@gmail.com>, Colin P. McCabe <cmccabe@apache.org>, dengziming <dengziming1993@gmail.com>, Alyssa Huang <ahuang@confluent.io>",5
"KAFKA-4878: Improved Invalid Connect Config Error MessageAddresses for https://issues.apache.org/jira/browse/KAFKA-4878* Adjusted the error message to explicitly state errors and their number* Dried up the logic for generating the message between standalone and distributedExamplemessed up two config keys in the file source config:````namse=local-file-sourceconnector.class=FileStreamSourcetasks.max=1fisle=test.txttopic=connect-test```Produces:```[2017-03-22 08:57:11,896] ERROR Stopping after connector error (org.apache.kafka.connect.cli.ConnectStandalone:99)java.util.concurrent.ExecutionException: org.apache.kafka.connect.runtime.rest.errors.BadRequestException: Connector configuration is invalid and contains the following 2 error(s):Missing required configuration ""file"" which has no default value.Missing required configuration ""name"" which has no default value.You can also find the above list of errors at the endpoint `/{connectorType}/config/validate````Author: Armin Braun <me@obrown.io>Reviewers: Gwen Shapira, Konstantine Karantasis, Ewen Cheslack-PostavaCloses #2722 from original-brownbear/KAFKA-4878",5
"KAFKA-5135; Controller Health Metrics (KIP-143)Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Jun Rao <junrao@gmail.com>, Onur Karaman <okaraman@linkedin.com>Closes #2983 from ijuma/kafka-5135-controller-health-metrics-kip-143",2
Add explicit grace period to tumbling window example (#8520),1
"KAFKA-5979; Use single AtomicCounter to generate internal namesAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Bill Bejeck <bill@confluent.io>, Damian Guy <damian.guy@gmail.com>Closes #3979 from mjsax/kafka-5979-kip-120-regression",5
"KAFKA-5265; Move ACLs, Config, Topic classes into org.apache.kafka.commonAlso introduce TopicConfig.Author: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3120 from cmccabe/KAFKA-5265",5
"KAFKA-9896: fix flaky StandbyTaskEOSIntegrationTest (#8883)Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
MINOR: Remind user index file is empty when dumping LogSegment index file (#9891)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,2
"KAFKA-10030: Allow fetching a key from a single partition (#8706)Reviewers: Navinder Pal Singh Brar <navinder_brar@yahoo.com>, Boyang Chen <boyang@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-4578; Upgrade notes for 0.10.2.0Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Ewen Cheslack-Postava <ewen@confluent.io>, Michael G. NollCloses #2445 from ijuma/kafka-4578-upgrade-notes-0.10.2",5
"KAFKA-8620: fix NPE due to race condition during shutdown while rebalancing (#7021)Reviewers: Matthias J. Sax <matthias@confluent.io>, Bruno Cadonna <bruno@confluent.io>, John Roesler <john@confluent.io>",5
MINOR: Update KTable JavaDocAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy <damian.guy@gmail.com>Closes #2438 from mjsax/ktableJavaDocs,2
"KAFKA-3166; Disable SSL client authentication for SASL_SSL security protocolAlso:* Fixed a bug in `createSslConfig` where we were always generating akeystore even if `useClientCert` was false and `mode` was `Mode.CLIENT`.* Pass `numRecords` to `consumerRecords` and other clean-ups (formatting and scaladoc).Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Sriharsha Chintalapani <harsha@hortonworks.com>, Rajini Sivaram <rajinisivaram@googlemail.com>Closes #827 from ijuma/kafka-3166-disable-ssl-auth-sasl-ssl and squashes the following commits:8265221 [Ismael Juma] Pass `numRecords` to `consumerRecords` and clean-ups.a73db89 [Ismael Juma] SSL client authentication should be disabled for SASL_SSL security protocol",5
MINOR: Fix transient failure in PartitionTest.testAddAndRemoveMetrics (#6834)The test was failing because other test cases are leaving some metrics in the registry. This patch cleans the registry before and after test runs.Reviewers: Ismael Juma <ismael@juma.me.uk>,1
"MINOR: Update zstd, easymock, powermock, zkclient and build plugins (#5846)EasyMock 4.0.x includes a change that relies on the caller for inferringthe return type of mock creator methods. Updated a number of Scalatests for compilation and execution to succeed.The versions of EasyMock and PowerMock in this PR include full supportfor Java 11.Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",1
MINOR: Update delete topics zk path in assertion error messages- Update delete topics zk path  from /admin/delete_topic to /admin/delete_topics in assertion errormessagesAuthor: huxihx <huxi_2b@hotmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #6422 from huxihx/delete-topics,4
"KAFKA-6424: QueryableStateIntegrationTest#queryOnRebalance should accept raw text (#4549)Allows input data to be read from a file and removes .toLowerCase in word count streamAuthor: Filipe Agapito <filipe.agapito@gmail.com>Reviewers: Ted Yu <yuzhihong@gmail.com>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-8954; Topic existence check is wrongly implemented in the DeleteOffset API (KIP-496) (#7406)This patch changes the way topic existence is checked in the DeleteOffset API. Previously, it was relying on the committed offsets. Now, it relies on the metadata cache which is better.Reviewers: Jason Gustafson <jason@confluent.io>",5
"HOTFIX: don't close or wipe out someone else's state (#8478)When it comes to actually closing a task we now treat all states exactly the same, and call StateManagerUtil#closeStateManager regardless of whether it's in CREATED or RESTORING or RUNNINGUnfortunately StateManagerUtil doesn't actually check to make sure that we actually own the lock for this task's state. During a dirty close with eos enabled, we wipe the state -- but in some cases, this means deleting the state out from under another StreamThread who is still in the process of revoking this task.Reviewers: Guozhang Wang <wangguoz@gmail.com>",4
"KAFKA-3875; Transient test failure: kafka.api.SslProducerSendTest.testSendNonCompressedMessageWithCreateTime1. The IllegalStateException is actually thrown from testCloseWithZeroTimeoutFromSenderThread() due to a bug. We call producer.close() in the callback. Once the first callback is called, producing records in the callback will hit the IllegalStateException. This only pollutes the output, but doesn't fail the test. I fixed this by only calling producer.send() in the first callback.2. It's not clear which test throws TimeoutException and it's not reproducible locally. One thing is that the error message in TimeoutException is mis-leading since the timeout is not necessarily due to metadata. Improved this by making the error message in TimeoutException clearer.3. It's not clear what actually failed testSendNonCompressedMessageWithCreateTime(). One thing I found is that since we set the linger time to MAX_LONG and are sending small messages, those produced messages won't be drained until we call producer.close(10000L, TimeUnit.MILLISECONDS). Normally, 10 secs should be enough for the records to be sent. My only hypothesis is that since SSL is more expensive, occasionally, 10 secs is still not enough. So, I bumped up the timeout from 10 secs to 20 secs.Author: Jun Rao <junrao@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #1703 from junrao/kafka-3875",1
"KAFKA-6911; Fix dynamic keystore/truststore update check (#5029)Fix the check, add unit test to verify the change, update `DynamicBrokerReconfigurationTest` to avoid dynamic keystore update in tests which are not expected to update keystores.",5
KAFKA-10341: Add 2.6.0 to system tests and streams upgrade tests (#9116)Author: Randall Hauch <rhauch@gmail.com>Reviewer: Matthias J. Sax <matthias@confluent.io>,5
"KAFKA-5088: some spelling error in code commentfix some spelling errorsAuthor: xinlihua <xin.lihua1@zte.com.cn>Reviewers: Matthias J. Sax, Guozhang WangCloses #2871 from auroraxlh/fix_spellingerror",0
KAFKA-1469 Util.abs function does not return correct absolute values for negative values; patched by Guozhang Wang and Neha Narkhede,1
KAFKA-12794: Fix trailing json tokens in `DescribeProducersRequest.json` (#10709)Reviewers: David Jacot <djacot@confluent.io>,5
"MINOR: Log AdminClient configs (#5457)Reviewers: Sriharsha Chintalapani <sriharsha@apache.org>, Jason Gustafson <jason@confluent.io>",5
MINOR: Make Log.recordVersion private and other small cleanups (#9731)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,4
"KAFKA-9029: Flaky Test CooperativeStickyAssignorTest.testReassignmentWithRand: bump to 4 (#7503)One of the sticky assignor tests involves a random change in subscriptions that the current assignor algorithm struggles to react to and in cooperative mode ends up requiring more than one followup rebalance.Apparently, in rare cases it can also require more than 2. Bumping the ""allowed subsequent rebalances"" to 4 (increase of 2) to allow some breathing room and reduce flakiness (technically any number is ""correct"", but if it turns out to ever require more than 4 we should revisit and improve the algorithm because that would be excessive (see KAFKA-8767)Reviewers: Guozhang Wang <wangguoz@gmail.com>",1
HOTFIX: add js template to upgrade.htmlAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2591 from guozhangwang/KHotfix-explicit-version,0
"KAFKA-6894: Improve err msg when connecting processor with global store (#5000)Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",5
"KAFKA-9390: Make serde pseudo-topics unique (#8054)During the discussion for KIP-213, we decided to pass ""pseudo-topics""to the internal serdes we use to construct the wrapper serdes forCombinedKey and hashing the left-hand-side value. However, duringthe implementation, this strategy wasn't fully implemented, and we woundup using the same topic name for a few different data types.Reviewers: Guozhang Wang <guozhang@confluent.io>",5
KAFKA-7119: Handle transient Kerberos errors on server side (#5509)Don't report retriable Kerberos errors on the server-side as authentication failures to clients.Reviewers: Jun Rao <junrao@gmail.com>,0
"KAFKA-8018: Flaky Test SaslSslAdminClientIntegrationTest#testLegacyAclOpsNeverAffectOrReturnPrefixedDisable forceSync in EmbeddedZookeeper.Increase ZK tick to allow longer maxSessionTimeout in tests.Increase ZK client session timeout in tests.Handle transient ZK session expiration exception in test utils for createTopic.Author: Jun Rao <junrao@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #6354 from junrao/KAFKA-8018",1
KAFKA-742: Existing directories under the Kafka data directory without any data cause process to not start; reviewed by Neha Narkhede,1
"KAFKA-14201; Consumer should not send group instance ID if committing with empty member ID (#12599)The consumer group instance ID is used to support a notion of ""static"" consumer groups. The idea is to be able to identify the same group instance across restarts so that a rebalance is not needed. However, if the user sets `group.instance.id` in the consumer configuration, but uses ""simple"" assignment with `assign()`, then the instance ID nevertheless is sent in the OffsetCommit request to the coordinator. This may result in a surprising UNKNOWN_MEMBER_ID error.This PR fixes the issue on the client side by not setting the group instance id if the member id is empty (no generation).Reviewers: Jason Gustafson <jason@confluent.io>",5
"KAFKA-4738: Remove generic type of class ClientStateRemove generic type of class ClientState and generic T inTaskAssignor.Author: sharad.develop <sharad.develop@gmail.com>Reviewers: Matthias J. Sax, Guozhang WangCloses #2616 from sharad-develop/KAFKA-4738",4
"KAFKA-8669: Add security providers in kafka security config (#7090)* Adds custom provider class to security config * Implementation of KIP-492Reviewers: Sriharsha Chintalapani <sriharsha@apache.org> , Jeff Huang",5
KAFKA-2872: unite sink nodes with parent nodes in addSinkStarting a KafkaStream was getting an error due to the fact that the TopologyBuilder.addSink method was not connecting the sink with it parent(s) processor/sources.  Just needed to wire up the sink with it parent(s) in TopologyBuilder.addSink .Author: bbejeck <bbejeck@gmail.com>Reviewers: Guozhang WangCloses #572 from bbejeck/KAFKA-2872_kafka_stream_sink_not_connected_to_parent,2
"KAFKA-2390; OffsetOutOfRangeException should contain the Offset and Partition info.Author: Dong Lin <lindong28@gmail.com>Author: Dong Lin <lindong@cis.upenn.edu>Reviewers: Jason Gustafson, Ismael Juma, Guozhang WangCloses #118 from lindong28/KAFKA-2390",5
"MINOR: improve RocksDBConfigSetter docs (#7009)Users often use the RocksDBConfigSetter to modify parameters such as cache or block size, which must be set through the BlockBasedTableConfig object. Rather than creating a new object in the config setter, however, users should most likely retrieve a reference to the existing one so as to not lose the other defaults (eg the BloomFilter)There have been notes from the community that it is not obvious this should be done, nor is it immediately clear how to do so. This PR updates the RocksDBConfigSetter docs to hopefully improve things.I also piggybacked a few minor cleanups in the docsReviewers: Kamal Chandraprakash, Jim Galasyn <jim.galasyn@confluent.io>,  Bruno Cadonna <bruno@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",5
"KAFKA-4033; Revise partition assignment semantics on consumer subscription changes (KIP-70)This PR changes topic subscription semantics so a change in subscription does not immediately cause a rebalance.Instead, the next poll or the next scheduled metadata refresh will update the assigned partitions.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Jason GustafsonCloses #1726 from vahidhashemian/KAFKA-4033",5
"KAFKA-6023 ThreadCache#sizeBytes() should check overflow    long sizeBytes() {        long sizeInBytes = 0;        for (final NamedCache namedCache : caches.values()) {            sizeInBytes += namedCache.sizeInBytes();        }        return sizeInBytes;    }The summation w.r.t. sizeInBytes may overflow.Check similar to what is done in size() should be performed.Author: siva santhalingam <siva.santhalingam@gmail.com>Reviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Damian Guy <damian.guy@gmail.com>Closes #4041 from shivsantham/kafka-6023",5
KAFKA-2047; Move the stream creation into concurrent mirror maker threads; reviewed by Guozhang Wang,1
"KAFKA-2831; Do not use ZKUtils in `ConsumerGroupCommand` if `new-consumer` is usedAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Jason Gustafson <jason@confluent.io>, Ashish Singh <asingh@cloudera.com>, Jun Rao <junrao@gmail.com>Closes #528 from ijuma/kafka-2831-consumer-group-command-zookeeper-new-consumer",1
"kafka-1992; checkEnoughReplicasReachOffset doesn't need to get requiredAcks; patched by Gwen Shapira; reviewed by Jeff Holoman, Jiangjie Qin and Jun Rao",1
trivial follow-up patch for kafka-1073 to fix unit tests; patched by Jun Rao,3
MINOR: remove old producer in config sections to align with APIsAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Gwen ShapiraCloses #468 from guozhangwang/WikiUpdate,5
MINOR: install Exit.exit handler in BrokerMetadataPublisherTest (#12142)Reviewers: Jason Gustafson <jason@confluent.io>,5
KAFKA-6562: OAuth Authentication via SASL/OAUTHBEARER (KIP-255) (#4994)This KIP adds the following functionality related to SASL/OAUTHBEARER:1) Allow clients (both brokers when SASL/OAUTHBEARER is the inter-broker protocol as well as non-broker clients) to flexibly retrieve an access token from an OAuth 2 authorization server based on the declaration of a custom login CallbackHandler implementation and have that access token transparently and automatically transmitted to a broker for authentication.2) Allow brokers to flexibly validate provided access tokens when a client establishes a connection based on the declaration of a custom SASL Server CallbackHandler implementation.3) Provide implementations of the above retrieval and validation features based on an unsecured JSON Web Token that function out-of-the-box with minimal configuration required (i.e. implementations of the two types of callback handlers mentioned above will be used by default with no need to explicitly declare them).4) Allow clients (both brokers when SASL/OAUTHBEARER is the inter-broker protocol as well as non-broker clients) to transparently retrieve a new access token in the background before the existing access token expires in case the client has to open new connections.,1
"KAFKA-8545: Remove legacy ZkUtils (#6948)`ZkUtils` is not used by the broker, has been deprecated since2.0.0 and it was never intended as a public API. We shouldremove it along with `AdminUtils` methods that rely on it.Reviewers: David Arthur <mumrah@gmail.com>",4
"MINOR: Remove redundant braces from log message in FetchSessionHandler (#8410)https://issues.apache.org/jira/browse/KAFKA-8889 attempted to fill in the missing stacktrace in the log message when handling errors in FetchSessionHandler#handleErrorBut the fix is not effective without KAFKA-7016The current fix removes the redundant pair of braces {} at the end of the log message. If and when the Throwable that is passed as argument to this method has a stacktrace, the log message will include it. Currently it doesn't because the Throwable argument does not have a stacktrace.Reviewers: Colin P. McCabe <cmccabe@apache.org>, Chia-Ping Tsai <chia7712@gmail.com>, Guozhang Wang <wangguoz@gmail.com>",1
"KAFKA-6260; Ensure selection keys are removed from all collections on socket closeWhen a socket is closed, we must remove corresponding selection keys from internal collections. This fixes an NPE which is caused by attempting to access the selection key's attached channel after it had been cleared after disconnecting.Author: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>, Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4276 from hachikuji/KAFKA-6260",5
MINOR: Fix table of contents and section numbers in the documentationRemoved a non-existing reference in table of contents and fixed some section numbers.Author: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #2004 from vahidhashemian/doc/fix_toc,2
"MINOR: Remove deprecated ZkUtils usage from EmbeddedKafkaCluster (#5324)Reviewers: Matthias J. Sax <mjsax@apache.org>, Ismael Juma <ismael@juma.me.uk>, Guozhang Wang <wangguoz@gmail.com>",4
broker failure system test broken on replication branch; patched by John Fung; reviewed by Joel Koshy and Jun Rao; KAFKA-306git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1359813 13f79535-47bb-0310-9956-ffa450edef68,3
"KAFKA-6648; Fetcher.getTopicMetadata() should return all partitions for each requested topicCurrently Fetcher.getTopicMetadata() will not include offline partitions. ThusKafkaConsumer.partitionsFor(topic) will not return all partitions of a topic ifthere if any partition of the topic is offline. This causes problem if usertries to query the total number of partitions of the given topic.Author: radai-rosenblatt <radai.rosenblatt@gmail.com>Reviewers: Jason Gustafson <jason@confluent.io>, Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4679 from radai-rosenblatt/partition_shenanigans",5
"KAFKA-6921; Remove old Scala producer and related code* Removed Scala producers, request classes, kafka.tools.ProducerPerformance, encoders,tests.* Updated ConsoleProducer to remove Scala producer support (removed `BaseProducer`and several options that are not used by the Java producer).* Updated a few Scala consumer tests to use the new producer (including a minorrefactor of `produceMessages` methods in `TestUtils`).* Updated `ClientUtils.fetchTopicMetadata` to use `SimpleConsumer` instead of`SyncProducer`.* Removed `TestKafkaAppender` as it looks useless and it defined an `Encoder`.* Minor import clean-upsNo new tests added since behaviour should remain the same after these changes.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Manikumar Reddy O <manikumar.reddy@gmail.com>, Dong Lin <lindong28@gmail.com>Closes #5045 from ijuma/kafka-6921-remove-old-producer",4
"LogSegment.firstAppendTime not reset after truncate to; patched by Swapnil Ghike; reviewed by Jun Rao, Neha Narkhede; KAFKA-596git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1406004 13f79535-47bb-0310-9956-ffa450edef68",1
MINOR: ChangelogReader should poll for duration 0 for standby restore (#8773)Co-authored-by: Guozhang Wang <wangguoz@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>,5
MINOR: Fixed some resource leaks. (#8922)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,0
"KAFKA-4392; Handle NoSuchFileException gracefully in StateDirectoryAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #2121 from guozhangwang/K4392-race-dir-cleanup",4
"KAFKA-12648: basic skeleton API for NamedTopology (#10615)Just the API for NamedTopology.Reviewers: Guozhang Wang <guozhang@confluent.io>, Walker Carlson <wcarlson@confluent.io>",5
MINOR: KIP-161 upgrade docs changeAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>Closes #4036 from guozhangwang/KMinor-kip-161-docs,2
Merge branch 'trunk' of http://git-wip-us.apache.org/repos/asf/kafka into trunkConflicts:core/src/main/scala/kafka/admin/AdminUtils.scalacore/src/main/scala/kafka/admin/TopicCommand.scala,5
MINOR: Create offsets topic explicitly in DescribeConsumerGroupTestThis should fix transient failures due to timeouts caused by slowauto creation of the offsets topic. The one exception is`testDescribeGroupWithNewConsumerWithShortInitializationTimeout` wherewe want initialisation to take longer than the timeout so we letit be auto created. That test has also been a bit flaky and I reducedthe timeout to 1 ms.Also:- Simplified resource handling- Removed usage of EasyMock that didn't make sense.- `findCoordinator` should retry if `sendAnyNode` throws an exceptionAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #3237 from ijuma/kafka-49480-describe-consumer-group-test-failure,3
"KAFKA-5956; use serdes from materialized in table and globalTableThe new overloads `StreamBuilder.table(String, Materialized)` and `StreamsBuilder.globalTable(String, Materialized)` need to set the serdes from `Materialized` on the internal `Consumed` instance that is created, otherwise the defaults will be used and may result in serialization errorsAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>Closes #3936 from dguy/table-materialized",5
"KAFKA-13228; Ensure ApiVersionRequest is properly handled KRaft co-resident mode (#11784)When brokers are co-resident with controllers using kraft, we incorrectly determine the supported API versions on the controller using `NodeApiVersions.create()`. The patch fixes the problem by using the versions from the sent `ApiVersions` request even when connecting to the local node.The patch also improves integration tests by adding support for co-resident mode.Reviewers: Justine Olshan <jolshan@confluent.io>, Jason Gustafson <jason@confluent.io>",5
fix typo (#5150),2
"MINOR: Restore interrupt status when closing (#9863)We do not always own the thread that executes the close()  method, i.e., we do not know the interruption policy of the thread. Thus, we should not swallow the interruption. The least we can do is restoring the interruption status before the current thread exits this method.Reviewers: Walker Carlson <wcarlson@confluent.io>, Anna Sophie Blee-Goldman <ableegoldman@apache.org>",5
"KAFKA-12648: invoke exception handler for MissingSourceTopicException with named topologies (#11686)Followup to #11600 to invoke the streams exception handler on the MissingSourceTopicException, without killing/replacing the threadReviewers: Guozhang Wang <guozhang@confluent.io>, Bruno Cadonna <cadonna@confluent.io>",5
KAFKA-5374; Set allow auto topic creation to false when requesting node information onlyIt avoids the need to handle protocol downgrades and it's safe (i.e. it will never causethe auto creation of topics).Author: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3220 from ijuma/kafka-5374-admin-client-metadata,5
KAFKA-13002: listOffsets must downgrade immediately for non MAX_TIMESTAMP specs (#10936)This patch fixes a regression introduced https://github.com/apache/kafka/pull/10760. The downgrade logic was not downgrading the version when only non MAX_TIMESTAMP specs were used.Reviewers: David Jacot <djacot@confluent.io>,5
"KAFKA-2718: Avoid reusing temporary directories in core unit testsRetry to find new directory and cleanup on exit.Author: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma, Guozhang WangCloses #399 from rajinisivaram/KAFKA-2718",5
KAFKA-10367: Allow running the Streams demo app with a config file (#9131)Update the 3 WordCount demos to accept a configuration file.Reviewers: Matthias J. Sax <mjsax@apache.org>,2
"KAFKA-2474: Add caching of JSON schema conversions to JsonConverterAuthor: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Ismael Juma, Guozhang WangCloses #250 from ewencp/kafka-2474-cache-json-schema-conversions",5
MINOR: remove unused import in QueryableStateIntegrationTest (#7521)Reviewers: Guozhang Wang <wangguoz@gmail.com>,3
MINOR: Improve security documentation for Kafka Streams #8710Reviewers: Matthias J. Sax <matthias@confluent.io>,5
KAFKA-13544: fix FinalizedFeatureChangeListener deadlock (#11607)Reviewers: Jun Rao <junrao@gmail.com>,4
"KAFKA-9691: Fix NPE by waiting for reassignment request (#8317)Reviewers: Mickael Maison <mickael.maison@gmail.com>, Stanislav Kozlovski <stanislav_kozlovski@outlook.com>, Chia-Ping Tsai <chia7712@gmail.com>",0
"KAFKA-7933: Switch from persistent to in-memory store in KTableKTableLeftJoinTest (#6292)Reviewers: Bill Bejeck <bill@confluent.io>, John Roesler <john@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
"MINOR: clean up Streams assignment classes and tests (#8406)First set of cleanup pushed to followup PR after KIP-441 Pt. 5. Main changes are:1. Moved `RankedClient` and the static `buildClientRankingsByTask` to a new file2. Moved `Movement` and the static `getMovements` to a new file (also renamed to `TaskMovement`)3. Consolidated the many common variables throughout the assignment tests to the new `AssignmentTestUtils` 4. New utility to generate comparable/predictable UUIDs for tests, and removed the generic from `TaskAssignor` and all related classesReviewers: John Roesler <vvcephei@apache.org>, Andrew Choi <a24choi@edu.uwaterloo.ca>",4
KAFKA-6053; Fix NoSuchMethodError when creating ProducerRecords with older client versionsAuthor: Apurva Mehta <apurva@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #4057 from apurvam/KAFKA-6053-fix-no-such-method-error-in-producer-record,0
kafka-1396; fix transient unit test ProducerFailureHandlingTest.testBrokerFailure;  patched by Guozhang Wang; reviewed by Jun Rao,3
KAFKA-6578: Changed the Connect distributed and standalone main method to log all exceptions (#4609)Any exception thrown by calls within a `main()` method are not logged unless explicitly done so. This change simply adds a try-catch block around most of the content of the distributed and standalone `main()` methods.,1
"KAFKA-3645; Fix ConsumerGroupCommand and ConsumerOffsetChecker to correctly read endpoint info from ZKThe host and port entries under /brokers/ids/<bid> gets filled only for PLAINTEXT security protocol. For other protocols the host is null and the actual endpoint is under ""endpoints"". This causes NPE when running the consumer group and offset checker scripts in a kerberized env. By always reading the host and port values from the ""endpoint"", a more meaningful exception would be thrown rather than a NPE.Author: Arun Mahadevan <aiyer@hortonworks.com>Reviewers: Sriharsha Chintalapani <schintalapani@hortonworks.com>, Ismael Juma <ismael@juma.me.uk>Closes #1301 from arunmahadevan/cg_kerb_fix",0
MINOR: Update dependencies for 1.0.0 part 2There have been a few bug fix releases sincethe previous update.Author: Andras Beni <andrasbeni@cloudera.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #3791 from andrasbeni/dependency-upgrade,5
KAFKA-89 consumer should initialize to a valid offset;patched by junrao; reviewed by jjkoshygit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1179796 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-3508: Fix transient SimpleACLAuthorizerTest failuresAllows the the maximum retires when writing to zookeeper to be overridden in tests and sets the value to Int.MaxValue to avoid transient failure.Author: Grant Henke <granthenke@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1156 from granthenke/transient-acl-test",3
"KAFKA-4576; Log segments close to max size break on fetch`FileChannel.read` may not fill the destination buffer even if thereare enough bytes in the channel to do so. Add a couple of utilitymethods that ensure this and use them from all the relevant places.Author: huxi <huxi@zhenrongbao.com>Author: amethystic <huxi_2b@hotmail.com>Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Jun Rao <junrao@gmail.com>, Jason Gustafson <jason@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #2304 from amethystic/kafka4576_FileChannel_read",2
"KAFKA-3188: Compatibility test for old and new clients with 0.10 brokerapovzner becketqin please have a look if you can. Thanks.Author: Eno Thereska <eno.thereska@gmail.com>Reviewers: Anna Povzner, Gwen ShapiraCloses #1059 from enothereska/kafka-3188-compatibility",1
"KAFKA-697 ConsoleConsumer throws InvalidConfigException for . in client id; reviewed by Jun Rao, Neha Narkhede, John Fung",5
MINOR: Make new consumer default for Mirror MakerAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1914 from hachikuji/mm-default-new-consumer,1
KAFKA-2766: use new producer by default in toolingAlso update the API docs for new consumer.Author: Guozhang Wang <wangguoz@gmail.com>Reviewers: Gwen ShapiraCloses #448 from guozhangwang/K2766,1
HOTFIX: HTML formatting error in upgrade docsIntroduced in PR #2824. Already fixed in thewebsite github.Author: Gwen Shapira <cshapi@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2844 from gwenshap/docs-hotfix(cherry picked from commit 5f728532aceb0132e3a312e2b427bc29f6c85f64)Signed-off-by: Ismael Juma <ismael@juma.me.uk>,2
KAFKA-3713; Close `compressor` to fix memory leakThis fixes test_producer_throughput with compression_type=snappy.Also: added heap dump on out of memory error to `producer_performance.py` and corrected the upgrade note related to the change in buffer size for compression streams.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Gwen ShapiraCloses #1385 from ijuma/kafka-3713-test_producer_throughput-snappy-fail and squashes the following commits:54c7962 [Ismael Juma] Correct upgrade note about buffer size for compression stream515040b [Ismael Juma] Call `compressor.close()` to fix memory leak5311e5b [Ismael Juma] Dump heap on out of memory error when running `producer_performance.py`,1
"KAFKA-3216: ""Modifying topics"" section incorrectly says you can't change replication factor.Correct the text that said that you can't change the replication factor of a topic.Author: James Cheng <jylcheng@yahoo.com>Reviewers: Ismael JumaCloses #881 from wushujames/KAFKA-3216",4
"KAFKA-8041: Enable producer retries in log dir failure test to address flakiness (#7200)`testProduceAfterLogDirFailureOnLeader` currently disables producer retries inorder to catch and validate the exception thrown by a failure, and then tries toproduce successfully once the leadership changes. This second produce canintermittently fail, causing test flakiness. This patch splits these validationsinto two tests in order to allow retries for the produce request after theleadership change.Reviewers: Colin P. Mccabe <cmccabe@confluent.io>, Ismael Juma <ismael@juma.me.uk>",5
"KAFKA-5697: issue Consumer#wakeup during Streams shutdownWakeup consumers during shutdown to break them out of any internally blocking calls.Semantically, it should be fine to treat a WakeupException as ""no work to do"", which will then continue the threads' polling loops, leading them to discover that they are supposed to shut down, which they will do gracefully.The existing tests should be sufficient to verify no regressions.Author: John Roesler <john@confluent.io>Reviewers: Bill Bejeck <bbejeck@gmail.com>, Guozhang Wang <wangguoz@gmail.com>Closes #4930 from vvcephei/streams-client-wakeup-on-shutdownminor javadoc updates",5
MINOR: Fix MirrorMakerConfigTest build failures,0
MINOR: add internal source topic for trackingAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Yasuhiro MastudaCloses #775 from guozhangwang/KRepartTopic,1
MINOR: Update dependencies for Kafka 2.4 (part 2) (#7333)Upgrade to Gradle 5.6.2 as a step towards Gradle 6.0 (necessaryfor Java 13 support).https://docs.gradle.org/5.5.1/release-notes.htmlhttps://docs.gradle.org/5.6.2/release-notes.htmlThe other updates are mostly bug fixes:* Scala 2.13.1: https://github.com/scala/scala/releases/tag/v2.13.1* Scala 2.12.10: https://github.com/scala/scala/releases/tag/v2.12.10* Jetty 9.4.20: https://www.eclipse.org/lists/jetty-announce/msg00133.html* SLF4J 1.7.28: adds Automatic-Module-Name in MANIFEST.MF* Bouncy castle 1.63: https://www.bouncycastle.org/releasenotes.html* zstd 1.4.3: https://github.com/facebook/zstd/releases/tag/v1.4.3Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,1
MINOR: Add test cases for delays in consumer rebalance listenerAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1866 from hachikuji/rebalance-delay-test-cases,3
"KAFKA-9144; Track timestamp from txn markers to prevent early producer expiration (#7687)Existing producer state expiration uses timestamps from data records only and not from transaction markers. This can cause premature producer expiration when the coordinator times out a transaction because we drop the state from existing batches. This in turn can allow the coordinator epoch to revert to a previous value, which can lead to validation failures during log recovery. This patch fixes the problem by also leveraging the timestamp from transaction markers. We also change the validation logic so that coordinator epoch is verified only for new marker appends. When replicating from the leader and when recovering the log, we only log a warning if we notice that the coordinator epoch has gone backwards. This allows recovery from previous occurrences of this bug.Finally, this patch fixes one minor issue when loading producer state from the snapshot file. When the only record for a given producer is a control record, the ""last offset"" field will be set to -1 in the snapshot. We should check for this case when loading to be sure we recover the state consistently.Reviewers: Ismael Juma <ismael@juma.me.uk>, Guozhang Wang <wangguoz@gmail.com>",1
KAFKA-939 sbt publish-local fails due to invalid javac flags passed to javadoc patch by Frank Grimes reviewed by Joe Stein,2
KAFKA-1333; Add the consumer coordinator to server; reviewed by Onur Karaman and Jay Kreps,1
KAFKA-4038; Transient failure in DeleteTopicsRequestTest.testErrorDeleteTopicRequestsAuthor: Grant Henke <granthenke@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1737 from granthenke/transient-delete,4
MINOR: update copyright year in the NOTICE file. (#6196),2
"MINOR:Start processor inside verify message (#6029)This PR fixes a flaky system test.I ran six runs of branch builder, and each run was parameterized to repeat the test 25 times for a total of 150 runs. All test runs passed.https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2122/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2123/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2124/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2128/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2129/https://jenkins.confluent.io/job/system-test-kafka-branch-builder/2130/Reviewers: Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <guozhang@confluent.io>, John Roesler <vvcephei@users.noreply.github.com>",1
"MINOR: fix failing system test delegation_token_test (#10237)Reviewers: Colin P. McCabe <cmccabe@apache.org>, David Arthur <mumrah@gmail.com>",3
"MINOR: Logging improvements in consumer internalsAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Manikumar reddy O <manikumar.reddy@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #2469 from hachikuji/improve-consumer-logging",2
MINOR: Fix typo in ducker-ak test exampleReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,3
KAFKA-2160; remove watcher list if empty in purgatory; remove join-group purgatory in coordinator; reviewed by Jun Rao,4
Incorrect index in the log of a follower; patched by Jun Rao; reviewed by Neha Narkhede and Jay Kreps; kafka-804,2
"KAFKA-8142: Fix NPE for nulls in Headers (#6484)Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>",5
kafka-964; Default hadoop-producer configs to request.required.acks = 1; Patched by Swapnil Ghike; reviewed by Jun Rao,1
"KAFKA-4655; Improve test coverage of CompositeReadOnlySessionStoreAuthor: Jeyhun Karimov <je.karimov@gmail.com>Reviewers: Matthias J. Sax <matthias@confluent.io>, Damian Guy <damian.guy@gmail.com>Closes #3290 from jeyhunkarimov/KAFKA-4655",4
"MINOR: improve tests for TopologyTestDriver (#8631)Reviewers: John Roesler <john@confluent.io>, Andy Coates <andy@confluent.io>",5
MINOR: Clarify producer idempotence default in upgrade docs (#11757)* Mention `acks=1` to `acks=all` change in 3.0.0 upgrade docs* Have a separate section for 3.0.1 and 3.1.1 as some may skip the  3.0.0/3.1.0 section when upgrading to a bug fix.* Move the 3.0.0 note to the top since it's more impactful than the  other changes.Reviewers: Jason Gustafson <jason@confluent.io>,5
kafka-1214; Support arguments to zookeeper-shell.sh script; patched by Philp K. Warren; reviewed by Jun Rao,1
NullPointerException in ConsumerFetcherManager; patched by Jun Rao; reviewed by Neha Narkhede; KAFKA-418git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/branches/0.8@1366238 13f79535-47bb-0310-9956-ffa450edef68,2
KAFKA-9026: Use automatic RPC generation in DescribeAcls (#7560)Reviewers: Ismael Juma <ismael@juma.me.uk>,1
MINOR: Add missing parameter description from AdminZkClient (#10653)Reviewers: Mickael Maison <mickael.maison@gmail.com>Co-authored-by: shenwenbing <shenwenbing@qianxin.com>,2
"KAFKA-3708: Better exception handling in Kafka StreamsKafkaExceptions currently thrown from within StreamThread/StreamTask currently bubble up without any additional context. This makes it hard to figure out where something went wrong, i.e, which topic had the serialization exception etcAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1819 from dguy/kafka-3708 and squashes the following commits:d6feaa8 [Damian Guy] address comments15b89e7 [Damian Guy] merge trunk6b8a8af [Damian Guy] catch exceptions in various places and throw more informative versionsc86eeda [Damian Guy] fix conflicts8f37e2c [Damian Guy] add some context to exceptions",1
"MINOR: Update `TransactionMarkerChannelManager` metric nameAlso remove broker-id tags as we generally use them to provideadditional context.Finally, do a few clean-ups (could not resist).Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #3341 from ijuma/tweak-transaction-metrics",4
"MINOR: Convert some junit tests to kraft (#12443)Convert ProducerCompressionTest, MirrorMakerIntegrationTest, EdgeCaseRequestTest to kraft.Make it explicit that ServerShutdownTest#testControllerShutdownDuringSend is ZK-only.Reviewers: David Arthur <mumrah@gmail.com>",3
MINOR: Fix broken link in introduction.html (#11249)Reviewers: Mickael Maison <mickael.maison@gmail.com>,2
"MINOR: Appending value to LIST config should not generate empty string with … (#12503)Reviewers: dengziming <dengziming1993@gmail.com>, Luke Chen <showuon@gmail.com>",5
HOTFIX: rename run_test to execute in streams simple benchmark (#4941),3
"KAFKA-8897: Warn about no guaranteed backwards compatibility in RocksDBConfigSetter (#7483)Reviewer: A. Sophie Blee-Goldman <sophie@confluent.io>, John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
"MINOR: remove redundant argument in logging (#11719)Reviewers: David Jacot <djacot@confluent.io>, Luke Chen <showuon@gmail.com>",5
KAFKA-815 Improve SimpleConsumerShell to take in a max messages config option;reviewed by Jun Rao,5
"KAKFA-5334: Allow rocksdb.config.setter to be specified as a String or Class instanceHandle` rocksdb.config.setter` being set as a class name or classinstance.Author: Tommy Becker <tobecker@tivo.com>Author: Tommy Becker <twbecker@gmail.com>Reviewers: Matthias J. Sax, Damian Guy, Guozhang WangCloses #3155 from twbecker/KAFKA-5334",1
"KAFKA-4060 and KAFKA-4476 follow up: remove unnecessary InternalTopicManager branch and fixed one copartitioning bugZK removed reveal a bug in `StreamPartitionAssigner` but did not fix it properly. This is a follow up bug fix.Issue: - If topic metadata is missing, `StreamPartitionAssigner` should not create any affected tasks that consume topics with missing metadata. - Depending downstream tasks should not be create either. - For tasks that are not created, no store changelog topics (if any) should get created - For tasks that write output to not-yet existing internal repartitioning topics, those repartitioning topics should not get createdAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Guozhang WangCloses #2404 from mjsax/kafka-4060-zk-test-follow-up",3
"KAFKA-5385; ProducerBatch expiry should go through Sender.failBatchBefore this patch, we would call `producerBatch.done` directly from the accumulator when expiring batches. This meant that we would not transition to the `ABORTABLE_ERROR` state in the transaction manager, allowing other transactional requests (including Commits!) to go through, even though the produce failed.This patch modifies the logic so that we call `Sender.failBatch` on every expired batch, thus ensuring that the transaction state is accurate.Author: Apurva Mehta <apurva@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Jason Gustafson <jason@confluent.io>Closes #3252 from apurvam/KAFKA-5385-fail-transaction-if-batches-expire",0
KAFKA-6676: Ensure Kafka chroot exists in system tests and use chroot on one test with security parameterizations (#4729)Ensures Kafka chroot exists in ZK when starting KafkaService so commands that use ZK and are executed before the first Kafka broker starts do not fail due to the missing chroot.Also uses chroot with one test that also has security parameterizations so Kafka's test suite exercises these combinations. Previously no tests were exercising chroots.Changes were validated using sanity_checks which include the chroot-ed test as well as some non-chroot-ed tests.,3
"kafka-903; Attempt to swap the new high watermark file with the old one failed on Windows; patched by Jun Rao; reviewed by Neha Narkhede, Jay Kreps and Sriram Subramania",0
"KAFKA-13083: Fix KRaft ISR in createPartitions, createTopicsWhen creating a new topic or partition via a manual partition assignment, wemust check if the nodes are unfenced before adding them to the new ISR.We also need to reject attempts to create a new partition with all fencednodes.Reviewers: David Arthur <mumrah@gmail.com>",1
KAFKA-3381: Add system test for SimpleConsumerShellAuthor: Ashish Singh <asingh@cloudera.com>Reviewers: Geoff AndersonCloses #1053 from SinghAsDev/KAFKA-3381,3
"MINOR: Update Netty to 4.1.50.Final (#8972)This includes important fixes. Netty is required by ZooKeeper if TLS isenabled.I verified that the netty jars were changed from 4.1.48 to 4.1.50 withthis PR, `find . -name '*netty*'`:```text./core/build/dependant-libs-2.13.3/netty-handler-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-transport-native-epoll-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-codec-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-transport-native-unix-common-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-transport-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-resolver-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-buffer-4.1.50.Final.jar./core/build/dependant-libs-2.13.3/netty-common-4.1.50.Final.jar```Note that the previous netty exclude no longer worked since we upgradedto ZooKeeper 3.5.x as it switched to Netty 4 which has different module names.Also, the Netty dependency is needed by ZooKeeper for TLS support so wecannot exclude it.Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",1
Fault tolerance broken with replication factor 1; kafka-691; patched by Maxime Brugidou; reviewed by Jun Rao,5
MINOR: Use builder for mock task in DefaultStateUpdaterTest (#12436)Reviewer: Guozhang Wang <wangguoz@gmail.com>,5
"KAFKA-7028: Properly authorize custom principal objects (#5311)Use KafkaPrincipal objects for authorization in `SimpleAclAuthorizer` so that comparison with super.users and ACLs instantiated from Strings work. Previously, it would compare two different classes `KafkaPrincipal` and the custom class, which would always return false because of the implementation of `KafkaPrincipal#equals`.",1
"MINOR: Fix checkstyle failure in `StreamsConfigTest`I removed the hamcrest matcher to unbreak the build, but we probably want to tweak the `import-control.xml` as it currently only allows it for `<subpackage name=""integration"">`, which is weird.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Guozhang Wang <wangguoz@gmail.com>Closes #1380 from ijuma/fix-streams-config-test-checkstyle",5
"MINOR: Replace left single quote with single quote in Connect worker's log message (#12201)Minor change to use ' and not LEFT SINGLE QUOTATION MARK in this log message, as it's the only place we are using such a quote and it can break ingestion pipelinesReviewers: Kvicii <Karonazaba@gmail.com>, Divij Vaidya <diviv@amazon.com>, Konstantine Karantasis <k.karantasis@gmail.com>",4
"KAFKA-9137: Fix incorrect FetchSessionCache eviction logic (#7640)Fix a bug where the lastUsedMs value in the FetchSessionCache was not getting correctly updated, resulting in spurious evictions.Reviewers: Colin P. McCabe <cmccabe@apache.org>",5
KAFKA-4145; Avoid redundant integration testing in ProducerSendTestsAuthor: Vahid Hashemian <vahidhashemian@us.ibm.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #1842 from vahidhashemian/KAFKA-4145,3
"KAFKA-10405: Set purge interval explicitly in PurgeRepartitionTopicIntegrationTest (#11948)In KIP-811, we added a new config repartition.purge.interval.ms to set repartition purge interval. In this flaky test, we expected the purge interval is the same as commit interval, which is not correct anymore (default is 30 sec). Set the purge interval explicitly to fix this issue.Reviewers: Bruno Cadonna <cadonna@apache.org>, Guozhang Wang <wangguoz@gmail.com>",1
KAFKA-8030: Fix flaky tests in TopicCommandWithAdminClientTestThis change adds waits for metadata updates after killing the broker in order to make the tests more stable.Author: Viktor Somogyi-Vass <viktorsomogyi@gmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #6505 from viktorsomogyi/flaky-min-isr-test,3
KAFKA-10135: Extract Task#executeAndMaybeSwallow to be a general utility function into TaskManager… (#8887)Extract Task#executeAndMaybeSwallow to be a general utility function into TaskManager,1
MINOR: Add missing upgrade doc for 2.8 (#11343)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>,2
"KAFKA-2850; Fix SSL invalid endpoint validation testUse invalid hostname to ensure that test works in all environmentsAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>Closes #546 from rajinisivaram/KAFKA-2850",5
KAFKA-3435: Follow up to fix checkstyleAuthor: Ewen Cheslack-Postava <me@ewencp.org>Reviewers: Gwen ShapiraCloses #1116 from ewencp/kafka-3435-follow-up,0
"MINOR: Ensure LocalLog.flush is thread safe to recoveryPoint changes (#11814)Issue:Imagine a scenario where two threads T1 and T2 are inside UnifiedLog.flush() concurrently:KafkaScheduler thread T1 -> The periodic work calls LogManager.flushDirtyLogs() which in turn calls UnifiedLog.flush(). For example, this can happen due to log.flush.scheduler.interval.ms here.KafkaScheduler thread T2 -> A UnifiedLog.flush() call is triggered asynchronously during segment roll here.Supposing if thread T1 advances the recovery point beyond the flush offset of thread T2, then this could trip the check within LogSegments.values() here for thread T2, when it is called from LocalLog.flush() here. The exception causes the KafkaScheduler thread to die, which is not desirable.Fix:We fix this by ensuring that LocalLog.flush() is immune to the case where the recoveryPoint advances beyond the flush offset.Reviewers: Jun Rao <junrao@gmail.com>",1
"KAFKA-4058; improved test condition evaluationAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Guozhang Wang <wangguoz@gmail.com>, Eno Thereska <eno.thereska@gmail.com>, Ismael Juma <ismael@juma.me.uk>Closes #1938 from mjsax/kafka-4058-resetIntegartionTest",3
"KAFKA-3769: Create new sensors per-thread in KafkaStreamsAuthor: Guozhang Wang <wangguoz@gmail.com>Reviewers: Damian Guy <damian.guy@gmail.com>, Matthias J. Sax <matthias@confluent.io>, Michael G. Noll <michael@confluent.io>, Greg Fodor <gfodor@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #1530 from guozhangwang/K3769-per-thread-metrics",5
"KAFKA-4659; Improve test coverage of CachingKeyValueStoreAuthor: Jeyhun Karimov <je.karimov@gmail.com>Reviewers: Matthias J Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>, Damian Guy <damian.guy@gmail.com>Closes #3291 from jeyhunkarimov/KAFKA-4659",4
"MINOR: Ensure that the producer in testAlterReplicaLogDirs is always closedFailure to close the producer could cause a transient failure, more detailsbelow.The request timeout was only 2 seconds, exceptions thrown were notpropagated and the producer would not be closed. If the exceptionwas thrown during `send`, we did not increment `numMessages`allowing the test to pass.I have increased the timeout to 10 seconds and made sure thatexceptions are propagated.Example of the error:```textkafka.api.SaslSslAdminClientIntegrationTest > classMethod STARTEDkafka.api.SaslSslAdminClientIntegrationTest > classMethod FAILED    java.lang.AssertionError: Found unexpected threads, allThreads=Set(metrics-meter-tick-thread-2, Signal Dispatcher, main, Reference Handler, scala-execution-context-global-164, kafka-producer-network-thread | producer-1, scala-execution-context-global-166, Test worker, scala-execution-context-global-1249, /0:0:0:0:0:0:0:1:58910 to /0:0:0:0:0:0:0:1:43025 workers Thread 2, Finalizer, /0:0:0:0:0:0:0:1:58910 to /0:0:0:0:0:0:0:1:43025 workers Thread 3, scala-execution-context-global-163, metrics-meter-tick-thread-1)```Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>Closes #4144 from ijuma/ensure-producer-is-closed-test-alter-replica-log-dirs",3
"KAFKA-8885; The Kafka Protocol should Support Optional Tagged Fields (#7325)This patch implements support for optional (tagged) fields in the Kafka protocol as documented in KIP-482: https://cwiki.apache.org/confluence/display/KAFKA/KIP-482%3A+The+Kafka+Protocol+should+Support+Optional+Tagged+Fields#KIP-482:TheKafkaProtocolshouldSupportOptionalTaggedFields-TypeClasses.Reviewers: David Jacot <djacot@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>",5
KAFKA-892 Change request log to include request completion not handling; reviewed by Joel Koshy,2
KAFKA-6528: Fix transient test failure in testThreadPoolResize (#4526)Add locking to access AbstractFetcherThread#partitionStates during dynamic thread update. Also make testing of thread updates that trigger retries more resilient.Reviewers: Jason Gustafson <jason@confluent.io>,5
"KAFKA-7461: Add tests for logical typesAdded testing of logical types for Kafka Connect in support of KIP-145 features.Added tests for Boolean, Time, Date and Timestamp, including the valid conversions.The area of ISO8601 strings is a bit of a mess because the tokenizer is not compatible withthat format, and a subsequent JIRA will be needed to fix that.A few small fixes as well as creating test cases, but they're clearly just corrections such asusing 0 to mean January (java.util.Calendar uses zero-based month numbers).Author: Andrew Schofield <andrew_schofield@uk.ibm.com>Reviewers: Mickael Maison <mimaison@users.noreply.github.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #6077 from AndrewJSchofield/KAFKA-7461-ConverterValuesLogicalTypesTest",3
"KAFKA-8598: Use automatic RPC generation in RenewDelegationTokenAuthor: Mickael Maison <mickael.maison@gmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Viktor Somogyi <viktorsomogyi@gmail.com>Closes #7038 from mimaison/KAFKA-8598",1
"KAFKA-12766 - Disabling WAL-related Options in RocksDB (#11250)DescriptionStreams disables the write-ahead log (WAL) provided by RocksDB since it replicates the data in changelog topics. Hence, it does not make much sense to set WAL-related configs for RocksDB.Proposed solutionIgnore any WAL-related configuration and state in the log that we are ignoring them.Co-authored-by: Tomer Wizman <tomer.wizman@personetics.com>Co-authored-by: Bruno Cadonna <cadonna@apache.org>Reviewers: Boyang Chen <boyang@apache.org>, Bruno Cadonna <cadonna@apache.org>",1
MINOR: Set MaxInlineLevel to 15 (#7811)OpenJDK has changed the default from 9 to15 in JDK 14:https://bugs.openjdk.java.net/browse/JDK-8234863https://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2019-December/036332.htmlScala applications tend to see the biggestbenefit (one of the Scala benchmarks improvedby 3x).Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>,5
"MINOR: update doc to reflect the grace period change (#11100)We removed default 24 hours grace period in KIP-633, and deprecate some grace methods, but we forgot to update the stream docs.Reviewer: Bruno Cadonna <cadonna@apache.org>",1
"KAFKA-3978; Ensure high watermark is always positive (#4695)Partition high watermark may become -1 if the initial value is out of range. This situation can occur during partition reassignment, for example. The bug was fixed and validated with unit test in this patch.Reviewers: Ismael Juma <ismael@juma.me.uk>, Jason Gustafson <jason@confluent.io>",5
Include payload size in DumpLogSegments; patched by Chris Burroughs; reviewed by Jun Rao; KAFKA-152git-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1181329 13f79535-47bb-0310-9956-ffa450edef68,1
"KAFKA-10199: Remove call to Task#completeRestoration from state updater (#12379)The call to Task#completeRestoration calls methods on the main consumer.The state updater thread should not access the main consumer since themain consumer is not thread-safe. Additionally, Task#completeRestorationchanged the state of active tasks, but we decided to keep task life cyclemanagement outside of the state updater.Task#completeRestoration should be called by the stream thread onrestored active tasks returned by the state udpater.Reviewer: Guozhang Wang <guozhang@apache.org>",5
"MINOR: Don't register signal handlers if running on WindowsThe following happens on Windows for `HUP`:[2017-10-11 21:45:11,642] FATAL  (kafka.Kafka$)java.lang.IllegalArgumentException: Unknown signal: HUP        at sun.misc.Signal.<init>(Unknown Source)        at kafka.Kafka$.registerHandler$1(Kafka.scala:67)        at kafka.Kafka$.registerLoggingSignalHandler(Kafka.scala:73)        at kafka.Kafka$.main(Kafka.scala:82)        at kafka.Kafka.main(Kafka.scala)I thought it was safer not to register them at all since the additionallogging is a nice to have and we haven't tested it on Windows.Also changed map to be concurrent and removed strayprintStackTrace in test.Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Damian Guy <damian.guy@gmail.com>Closes #4066 from ijuma/dont-register-signal-handler-windows",0
MINOR: Log the reason for coordinator discovery failure (#8747)Reviewers: Boyang Chen <boyang@confluent.io>,5
MINOR: Move `Incorporating Security Features in a Running Cluster` to its own section under `Security`It was previously in the SASL section (probably by mistake).Author: Ismael Juma <ismael@juma.me.uk>Reviewers: Sriharsha Chintalapani <schintalapani@hortonworks.com>Closes #1405 from ijuma/fix-security-upgrade-location-in-docs,2
"KAFKA-8482: Improve documentation on AdminClient#alterReplicaLogDirs, AlterReplicaLogDirsResult (#7083)Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",2
KAFKA-13134: Give up group metadata lock before sending heartbeat response (#11127)Small locking improvement to drop the group metadata lock before invoking the response callback in `GroupCoordinator#handleHeartbeat`.Reviewers: David Jacot <djacot@confluent.io>,5
"MINOR: Start correlation id at 0 in SaslClientAuthenticator (#7432)I tried to add a test for this, but it's actually pretty hard to verify what we want toverify. I could add a test that checks the correlation field after the connectionhas been established, but it would not catch this kind of bug where the issue is notthe value we store, but the value we create the request header with.I have another PR that avoids intermediate structs during serialization/deserialization,which has a test that fails without this change. So we'll get coverage that way.Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",5
"KAFKA-4986 Follow-up: cleanup unit tests and further comments addressed - addressing open Github comments from #2773 - test clean-upAuthor: Matthias J. Sax <matthias@confluent.io>Reviewers: Damian Guy, Guozhang WangCloses #2854 from mjsax/kafka-4986-producer-per-task-follow-up",5
"MINOR: Add support for Standalone Connect configs in Rest Server extensions (#6622)Add support for Standalone Connect configs in Rest Server extensionsA bug was introduced in 7a42750d that was caught in system tests:The rest extensions fail if a Standalone worker config is passed,since it does not have a definition for rebalance timeout.A new method was introduced on WorkerConfig that by default returnsnull for the rebalance timeout, and DistributedConfig overloads thisto return the configured value.Author: Cyrus Vafadari <cyrus@confluent.io>Reviewers: Arjun Satish <arjunconfluent.io>, Randall Hauch <rhauch@gmail.com>",5
MINOR: Fix typo in MirrorMaker v2 documentation (#10433)Reviewers: Mickael Maison <mickael.maison@gmail.com>,2
"KAFKA-7515: Trogdor - Add Consumer Group Benchmark Specification (#5810)This ConsumeBenchWorker now supports using consumer groups.  The groups may be either used to store offsets, or as subscriptions.",1
"KAFKA-3237: Allow ConfigDef options with no default and validatorRemove test cases testInvalidDefaultRange() and testInvalidDefaultString(). Defaults if not overridden will get checked on parse. Testing the defaults is unnecessary. This allows you to set that a parameter is required while setting a validator for that parameter. Added a test case testNullDefaultWithValidator that allows a null default with a validator for certain strings.Author: Jeremy Custenborder <jcustenborder@gmail.com>Reviewers: Grant Henke <granthenke@gmail.com>, Ewen Cheslack-Postava <ewen@confluent.io>Closes #936 from jcustenborder/KAFKA-3237",5
"KAFKA-4763; Handle disk failure for JBOD (KIP-112)Author: Dong Lin <lindong28@gmail.com>Reviewers: Jiangjie Qin <becket.qin@gmail.com>, Jun Rao <junrao@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Onur Karaman <okaraman@linkedin.com>Closes #2929 from lindong28/KAFKA-4763",2
"KAFKA-10687: make ProduceRespone only returns INVALID_PRODUCER_EPOCH (#9569)Ensures INVALID_PRODUCER_EPOCH recognizable from client side, and ensure the ProduceResponse always uses the old error code as INVALID_PRODUCER_EPOCH.Reviewers: Guozhang Wang <wangguoz@gmail.com>",0
KAFKA-6012; Close request metrics only after closing request handlersAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #4024 from rajinisivaram/KAFKA-6012-error-metric,5
"KAFKA-4484: Set more conservative default values on RocksDB for memory usageLowered the default RocksDB settings for the block cache and write buffersAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Eno Thereska, Guozhang WangCloses #2525 from dguy/kafka-4484",1
KAFKA-7299: Batch LeaderAndIsr requests for AutoLeaderRebalance (#5515)Reviewers: Jun Rao <junrao@gmail.com>,5
"MINOR: Ensure a reason is logged for all segment deletion operations (#9110)This PR improves the logging for segment deletion to ensure that a reason is logged for segment deletions via all code paths. It also updates the logging so that we log a reason for an entire batch of deletions instead of logging one message per segment in cases when segment-level details are not significant.Reviewers: Ismael Juma <ismael@juma.me.uk>, Kowshik Prakasam <kprakasam@confluent.io>, Jason Gustafson <jason@confluent.io>",5
MINOR: Remove code duplication + excessive space (#4683)Reviewers: Guozhang Wang <wangguoz@gmail.com>,4
"MINOR: Apply try-with-resource to KafkaStreamsTest (#10668)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>, Matthias J. Sax <matthias@confluent.io>",5
KAFKA-4252; Fix purgatory metric name in documentationAuthor: Rajini Sivaram <rajinisivaram@googlemail.com>Reviewers: Jason Gustafson <jason@confluent.io>Closes #1980 from rajinisivaram/KAFKA-4252,5
"Fix the rate window size calculation for edge cases (#12184)## ProblemImplementation of connection creation rate quotas in Kafka is dependent on two configurations:[quota.window.num](https://kafka.apache.org/documentation.html#brokerconfigs_quota.window.num) AND [quota.window.size.seconds](https://kafka.apache.org/documentation.html#brokerconfigs_quota.window.size.seconds)The minimum possible values of these configuration is 1 as per the documentation. However, when we set 1 as the configuration value, we can hit a situation where rate is calculated as NaN (and hence, leads to exceptions). This specific scenario occurs when an event is recorded at the start of a sample window.## SolutionThis patch fixes this edge case by ensuring that the windowSize over which Rate is calculated is at least 1ms (even if it is calculated at the start of the sample window).## TestAdded a unit test which fails before the patch and passes after the patchReviewers: Ismael Juma <ismael@juma.me.uk>, David Mao <dmao@confluent.io>",5
"KAFKA-14154; Return NOT_CONTROLLER from AlterPartition if leader is ahead of controller (#12506)It is possible for the leader to send an `AlterPartition` request to a zombie controller which includes either a partition or leader epoch which is larger than what is found in the controller context. Prior to https://github.com/apache/kafka/pull/12032, the controller handled this in the following way:1. If the `LeaderAndIsr` state exactly matches the current state on the controller excluding the partition epoch, then the `AlterPartition` request is considered successful and no error is returned. The risk with this handling is that this may cause the leader to incorrectly assume that the state had been successfully updated. Since the controller's state is stale, there is no way to know what the latest ISR state is.2. Otherwise, the controller will attempt to update the state in zookeeper with the leader/partition epochs from the `AlterPartition` request. This operation would fail if the controller's epoch was not still current in Zookeeper and the result would be a `NOT_CONTROLLER` error.Following https://github.com/apache/kafka/pull/12032, the controller's validation is stricter. If the partition epoch is larger than expected, then the controller will return `INVALID_UPDATE_VERSION` without attempting the operation. Similarly, if the leader epoch is larger than expected, the controller will return `FENCED_LEADER_EPOCH`. The problem with this new handling is that the leader treats the errors from the controller as authoritative. For example, if it sees the `FENCED_LEADER_EPOCH` error, then it will not retry the request and will simply wait until the next leader epoch arrives. The ISR state gets suck in a pending state, which can lead to persistent URPs until the leader epoch gets bumped.In this patch, we want to fix the issues with this handling, but we don't want to restore the buggy idempotent check. The approach is straightforward. If the controller sees a partition/leader epoch which is larger than what it has in the controller context, then it assumes that has become a zombie and returns `NOT_CONTROLLER` to the leader. This will cause the leader to attempt to reset the controller from its local metadata cache and retry the `AlterPartition` request.Reviewers: David Jacot <djacot@confluent.io>, José Armando García Sancio <jsancio@users.noreply.github.com>",1
"KAFKA-9274: Throw TaskCorruptedException instead of TimeoutException when TX commit times out (#10072)Part of KIP-572: follow up work to PR #9800. It's not save to retry a TX commit after a timeout, because it's unclear if the commit was successful or not, and thus on retry we might get an IllegalStateException. Instead, we will throw a TaskCorruptedException to retry the TX if the commit failed.Reviewers: A. Sophie Blee-Goldman <sophie@confluent.io>",5
"KAFKA-10000: Per-connector offsets topics (#11781)Implements support for per-connector offsets topics as described in KIP-618.Reviewers: Luke Chen <showuon@gmail.com>, Tom Bentley <tbentley@redhat.com>",1
remove ProducerShell; patched by Jun Rao; reviewed by Neha Narkhede; KAFKA-638git-svn-id: https://svn.apache.org/repos/asf/kafka/branches/0.8@1415002 13f79535-47bb-0310-9956-ffa450edef68,4
"Minor: add exception to debug log for Sender#maybeSendTransactionalRequest (#5282)Reviewer: Ismael Juma <ismael@confluent.io>, Matthias J. Sax <matthias@confluent.io>",5
MINOR: Remove stray `%s` in `TopicMetadata.toString`This bug was recently introduced via 2959bc2ad.Author: Himani Arora <1himani.arora@gmail.com>Reviewers: Ismael Juma <ismael@juma.me.uk>Closes #2091 from himani1/minor_fix,0
"KAFKA-8609: Add rebalance-latency-total (#7401)In addition to the existing metrics added in KAFKA-8609, add the total (cumulative) time spent during rebalances.Reviewers: Guozhang Wang <wangguoz@gmail.com>",1
"KAFKA-5746; Fix conversion count computed in `downConvert`It should be the number of records instead of thenumber of batches.A few additional clean-ups:- Minor renames- Removed unused variable- Some test fixes- Ignore a flaky testAuthor: Ismael Juma <ismael@juma.me.uk>Reviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, tedyu <yuzhihong@gmail.com>Closes #3989 from ijuma/kafka-5746-health-metrics-follow-up",5
KAFKA-10770: Remove duplicate defination of Metrics#getTags (#9659)Reviewers: Chia-Ping Tsai <chia7712@gmail.com>,1
"KAFKA-3333: Adds RoundRobinPartitioner with tests (#6771)Reviewers: Colin P. McCabe <cmccabe@apache.org>, Sriharsha Chintalapani <sriharsha@apache.org>, Matthias J. Sax <matthias@confluent.io>",5
"KAFKA-9277:move all group state transition rules into their states (#7787)Similar to KAFKA-5258 which move all partition and replica state transition rules into their states, we move the group state transition rules into their states.Reviewers: Guozhang Wang <wangguoz@gmail.com>",4
"KAFKA-9686: MockConsumer#endOffsets should be idempotent (#8255)Fixed issue with MockConsumer#updateEndOffsets where the input offsets were appended to existing ones instead of overwriting them. Since there's no use for adding to existing end offsets currently, MockConsumer#updateEndOffsets is simplified and MockConsumer#getEndOffset is removed after changing the value type of the member field map 'endOffsets' to Long in MockConsumerDetails in: https://issues.apache.org/jira/browse/KAFKA-9686The following flaky is fixed by this PR1. KafkaBasedLogTest.testSendAndReadToEndReviewers: Jason Gustafson <jason@confluent.io>, Konstantine Karantasis <konstantine@confluent.io>",5
"MINOR: update upgrade notes for Streams API; message format 0.10 requiered (#4500)Author: Matthias J. Sax <matthias@confluent.io>Reviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io.>",5
"MINOR: Improve controlled shutdown logging (#11246)A few small logging improvements:- Only print error when it is not NONE- Full list of remaining partitions are printed only at debug level- Only backoff and print retry logging if there are remaining retriesReviewers: Luke Chen <showuon@gmail.com>, David Jacot <djacot@confluent.io>",5
KAFKA-1355; Avoid sending all topic metadata on state changes. Reviewed by Neha Narkhede and Timothy Chen,4
"KAFKA-12648: Pt. 2 - Introduce TopologyMetadata to wrap InternalTopologyBuilders of named topologies (#10683)Pt. 1: #10609Pt. 2: #10683Pt. 3: #10788The TopologyMetadata is next up after Pt. 1 #10609. This PR sets up the basic architecture for running an app with multiple NamedTopologies, though the APIs to add/remove them dynamically are not implemented until Pt. 3Reviewers: Guozhang Wang <guozhang@confluent.io>, Walker Carlson <wcarlson@confluent.io>",5
KAFKA-12452: Remove deprecated overloads of ProcessorContext#forward (#10300)ProcessorContext#forward was changed via KIP-251 in 2.0.0 release. This PR removes the old and deprecated overloads.Reviewers: A. Sophie Blee-Goldman <sophie@confluent.io>,5
KAFKA 256 Bug in the consumer rebalancing logic leads to the consumer not pulling data from some partitions; patched by nehanarkhede; reviewed by joelkoshygit-svn-id: https://svn.apache.org/repos/asf/incubator/kafka/trunk@1239766 13f79535-47bb-0310-9956-ffa450edef68,1
KAFKA-1729; Add constructor to javaapi to allow constructing explicitly versioned offset commit requests; reviewed by Jun Rao,1
MINOR: Print usage when parse fails during console producer*Handle OptionException while parsing options when using console producer and print usage before die.*Author: Suman BN <sumannewton@gmail.com>Reviewers: Manikumar Reddy <manikumar.reddy@gmail.com>Closes #6386 from sumannewton/console-producer-parse-printusage,1
"KAFKA-5349; Fix illegal state error in consumer's ListOffset handlerAuthor: Jason Gustafson <jason@confluent.io>Reviewers: Apurva Mehta <apurva@confluent.io>, Ismael Juma <ismael@juma.me.uk>Closes #3175 from hachikuji/KAFKA-5349",5
MINOR: Update README.md with Gradle 5+ requirement (#6039),1
"KAFKA-4863 Follow-up: Querying window store may return unwanted keysiterate over all keys returned from the rocksdb iterator so we don't miss any resultsAuthor: Damian Guy <damian.guy@gmail.com>Reviewers: Xavier Léauté, Guozhang WangCloses #2713 from dguy/window-iter",5
"KAFKA-8984: Improve tagged fields documentationAuthor: Colin P. Mccabe <cmccabe@confluent.io>Reviewers: Vikas Singh <vikas@confluent.io>, Jason Gustafson <jason@confluent.io>Closes #7477 from cmccabe/KAFKA-8984",5
MINOR: Update command line options in Authorization and ACLs documentation chapter (#5995),2
