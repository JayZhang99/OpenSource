[RELAY] Move Layout to tvm Node system (#2125)	5
[PY] GraphRuntime: Update the tutorials to the module-based interface (#6482)* [PY] GraphRuntime: Update the tutorials to the module-based interface.Also added document about the encouraged usage.In particular, we encourage the following usage.lib = relay.build(...)gmod = graph_runtime.GraphModule(lib["default"](ctx))I have changed most of the tutorials and apps.Some follow up PRs are needed to update some of the tests code.* Fix VTA tutorials	0
Upgrade XGBoost to latest (#5658)	3
[AIRFLOW-2328] Fix empty GCS blob in S3ToGoogleCloudStorageOperatorCloses #3231 from wileeam/fix-empty-blob-in-s3-to-gcs-operator	0
[AIRFLOW-4197] Remove Python2 CI jobs (#5022) (#5021)	4
Skip overriding version from parameter with the one from tag (#26244)Since we are not always updating the version suffix in code(rc1/rc2/b1/b2), the tag specified via --tag-build prefix shouldoverride the one in code rathe than the other way round.So what's left now - we will just print warning if the suffix doesnot match.	0
Update the tarball deployment. (#5120)	5
[AIRFLOW-6231] Display DAG run conf in the list view (#6794)	5
[microTVM] Add method to query template info without creating a project (#8950)Add info() method to TemplateProject class so it's possible to query allavailable options for a given template project without creating a newone. This is necessary because TVMC will query the available options fora given template project to show them to the user so the user can usethem to finally create a new project dir.That is also useful in general to query the available options for anyproject type. For example, one can query all boards available on theZephyr platform with:import tvm.micro.project as project_apitemplate = project_api.TemplateProject.from_directory(ZEPHYR_TEMPLATE_DIR)boards = template.info()["project_options"][8]["choices"]where 8 element refers to the "zephyr_board" option.Signed-off-by: Gustavo Romero <gustavo.romero@linaro.org>	5
[ETHOSN] Fix quantization parameters in test (#10178)The Ethos(TM)-N tests for addition had a poor choice of parameters forthe int8 case.	2
[DOCS] Fix tvm.build API doc layoutThe newline in the pydoc breaks the layout of parameter inputs in API `tvm.build`	2
Fix typo in comment in prioritize_queued method	2
Fix DagRun.start_date not set during backfill with --reset-dagruns True (#26135)When we run backfill on an existing runs, the start_date is lost during the clearingof the run and never set.This PR sets it	1
docker/bash.sh: lookup docker image in Jenkinsfile. (#7453)* This PR makes it possible to type   `docker/bash.sh ci_cpu tests/scripts/task_config_build_cpu.sh`   and the same version of ci_cpu as is used in Jenkins will be   used to run the command.	1
Added Kayzen to INTHEWILD.md (#16154)Added Kayzen to the list of companies using Apache Airflow	1
Add Badges for Airflow Docker (#9979)	2
make MsSQL tests runnable on Python 3.8 (#25214)mysql lib does support newer version of python https://github.com/pymssql/pymssql/pull/659	1
[Relay] Parser CI dependencies and build rules (#1965)	5
Forces rebuilding the image for cache pushing (#17635)Fixes bug in pushing latest image to cache on "push/schedule".When the build is successful and passes all tests vi either`push' or 'schedule' events, we attempt to rebuild the imagewith latest constraints just pushed and push it as a freshcache for Github Registry. This keeps the time to build imagesmall without manually refreshing the cache, it also automaticallychecks if there is a new "python" base image available so thatwe can use it in the new cache.There was a bug that the image has not been FORCE_PULLED andrebuilt in this case - just latest images were used.This had so far no negative effects because due to testinstability, latest main images pretty much never succeeded inall tests, so the images in `main` were refreshed manuallyperiodically anyway. However for v2-1-test the scope of testsrun is far smaller now (no Helm tests, no Provider tests)and they succeed mostly when they should.Also PROD image was built without ".dev0" suffix whichalso failed.This PR fixes it so that the images are built properly and pushed.	0
Revert "Fix reading from zip package to default to text (#13962)" (#13977)This reverts commit cc70227d9be25be5ce95c0dae4383c3883819d68.	4
[AIRFLOW-XXXX] Consistency fixes in new documentation (#7207)Co-authored-by: efedotova <47426163+efedotova@users.noreply.github.com>	1
Fix spelling (#22107)	0
[RELAY] CompileEngine update, nn conv2d, fix dense, pool. (#2082)	0
Update jenkins file first to use sort (#1147)	1
[AIRFLOW-3768] Escape search parameter in pagination controls (#4911)The "minidom" we were using from lxml didn't cope with the &gt; etcentities (because it is an XML parser, not an HTML parser): rather thanspecial casing each one I have instead swapped out lxml-based parser forBeautifulSoup which 1) handles these, and 2) is pure-python so is easierto install :)	0
Add missing flag to xargs in containers utils (#8065)	1
relax rtol/atol checks on some onnx tests (#2403)relax the error constraints on these tests due to likelyFP compuation accuracy issues.	0
Fix null conn_type for TestDiscordWebhookHook & TestGoogleApiToS3Transfer (#9257)	3
[AIRFLOW-3939] Add Google Cloud Translate operator (#4755)	1
Fix file name to verify release packages (#16605)typo: `check.files.py` -> `check_files.py`	2
[LLVM] Vectorized load/store (#60)	5
#16692 show schedule_interval/timetable description in UI (#16931)Co-authored-by: Ryan Hamilton <ryan@ryanahamilton.com>Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	2
Prepares provider release after PIP 21 compatibility (#15576)This PR updates changelog and bumps version of providers to bereleased after we reached PIP 21 compatibility. It is necessaryfor two reasons:1) We need it in order to get constraints for PyPI released   providers to be updated automatically (PIP 21 conflicts master   airflow with few released providers2) We want to release Airflow 2.0.3 which will be PIP 21 installable   with those providers.	1
[Pytorch]layernorm bug fix and testcase updated (#5257)	5
[Frontend][TF] Fix Placeholder issue (#2834)* [Frontend][TF] Fix Placeholder issue* Add test cases	3
Adding SqliteOperator	1
Add airflow cheat-sheet command (#10619)	1
Fix bug in GCSToS3Operator (#13718)	1
Validate airflow chart values.yaml & values.schema.json (#11990)* Correct type for multiNamespaceMode chart value* Updated values.schema.json to reflect the latest change and to be stricter* Fixed current test* Added a test to validate the values file against the schema	2
Fixing MyPy issues inside airflow/secrets and airflow/security (#20330)	0
Fix TaskInstance.task not defined before handle_failure (#26040)	0
Alphabetize committer list (#10512)	5
Fixes "development" and "rc" cross dependencies between providers (#17023)In case we have additional dependencies between providers releasedat the same time (for example we need to release sftp and sshpackages now where sftp package depends on release of sshat the same time) we have to add suffix to the version of theadditional_dependency.PIP does not take into account unfortunately that developmentdependencies should likely be considered as fulfilling therequirement of >=. For example if you have:sftp depends on ssh>=2.1.0 and you release ssh 2.1.0.dev0 atthe same time the ssh>=2.1.0 condition is not fulfilled.Same case will be with rc1. Therefore we need to add the suffix in suchcross-provider dependencies to be able to install them in CIand in rc candidates.In the future we might ask PIP to change behaviour in such case.	4
Fix retry number accounting when queuing a retry	1
[AIRFLOW-XXXX] Add more .mailmap entries (#7545)	1
Remove incorrect deprecation warning in secrets backend (#22326)When the no value is found with `get_conn_value`, the warning was being triggered, even though `get_conn_value` was implemented and just returned no value (cus there wasn't one).Now we make the logic a little tighter and only raise the dep warning when `get_conn_value` not implemented, which is what we intended to do in the first place.	1
[CODEGEN] Fix let expression (#1727)	0
Prelu bug fix (#1358)	0
[AIRFLOW-399] - Remove dags/testdruid.pyRemove the current example in dags/testdruid.py. It requires the installation of an extraneous library (Hive) and executes a query against table that no one has. In its place, I am creating a simple DAG that only depends on DummyOperator and standard Python packages.Dear Airflow Maintainers,Please accept this PR that addresses the following issues:- https://issues.apache.org/jira/browse/AIRFLOW-399Testing Done:Manual.aoen criccomini artwr jlowin bolkedebruinCloses #1709 from r39132/master	5
[REFACTOR] top->te (#4759)Bring up namespace te -- Tensor expression language DSL.	4
closes apache/incubator-airflow#1407 *closed for inactivity*	5
[AIRFLOW-5757] Improve test_on_kill test (#6430)	3
[TVMScript] IRBuilder, IRBuilderFrame base class (#12482)* [TVMScript] IRBuilder, IRBuilderFrame base classThis PR introduces basic data structures of the generic IRBuilderacross the codebase.IRBuilder is a general-purpose IRBuilder that can be used in TIR, Relaxand any other vendor-specific dialects; IRBuilderFrame is where contexualinformation as stored in the IRBuilder.* fix linter* Update include/tvm/script/ir_builder/base.hCo-authored-by: Junru Shao <junrushao1994@gmail.com>	5
[AIRFLOW-5391] Do not re-run skipped tasks when they are cleared (#7276)If a task is skipped by BranchPythonOperator, BaseBranchOperator or ShortCircuitOperator and the user then clears the skipped task later, it'll execute. This is probably not the rightbehaviour.This commit changes that so it will be skipped again. This can be ignored by running the task again with "Ignore Task Deps" override.	1
Fix mypy errors in airflow/kubernetes (#20399)	0
Merge pull request #48 from mistercrunch/chart_asyncFixed a backfill/depends_on_past bug	0
Merge pull request #160 from mistercrunch/mark_successMark tasks as successful (false positive) from the UI	1
[RELAY][TOPI] `alter_op_layout` for x86 (#2602)* alter_op_layout for x86* cleanup* cleanup* fix lint* fix lint* fix lint* fix lint* change support level* change other support levels	1
Finish refactor of DAG resource name helper (#15511)This finishes moving `prefixed_dag_id` into `airflow.security.permissions.resource_name_for_dag`.	2
fix bug construction of Connection object in version 5.0.0rc3 (#25716)	0
Fix PR label detection in CI (#25148)Label detection for incoming PR had few bugs:* wrong name of output was used for Build Info* assumption in selective checks was that PR labels are  space separated, but they were really array formatted.* there was a $ typo in build-images.yamlThis PR fixes all that:* output name and typo is corrected* we use ast.literal_eval now to parse the PR labels.	1
Name default config_file param in KubernetesPodOperator docstring (#5153)Update airflow/contrib/operators/kubernetes_pod_operator.pyCo-Authored-By: leahecole <6719667+leahecole@users.noreply.github.com>Minor grammar tweak	1
Bugfix: resources in `executor_config` breaks Graph View in UI (#15199)closes https://github.com/apache/airflow/issues/14327When using `KubernetesExecutor` and the task as follows:```pythonPythonOperator(    task_id=f"sync_{table_name}",    python_callable=sync_table,    provide_context=True,    op_kwargs={"table_name": table_name},    executor_config={"KubernetesExecutor": {"request_cpu": "1"}},    retries=5,    dag=dag,)```it breaks the UI as settings resources in such a way is only therefor backwards compatibility.This commits fixes it.	0
Bugfix: Plugins endpoint was unauthenticated (#14570)The plugins endpoint missed auth check	0
[QNN] Convolution 2D Implementation. (#3580)Rebasing. Empty commit.Clang-format styling.	5
Restructure COMMITTERS.rst (#14218)- Move "Guidelines to become an Airflow Committer" before "Guidelines for promoting Committers to Airflow PMC"- Remove "Becoming a Committer" section which is same as "Guidelines to become an Airflow Committer"	4
Move jenkins/ dir into ci/jenkins and spread docs around. (#11927)	2
Fixed bug in ExprOp that caused bitwise operators to fail when a basic python type was on the left hand side of the expression. Added regression test for crashing cases. (#4852)	3
[AIRFLOW-6393] Ensure rendering of all lineage items and record source (#6953)Only lineage items obtained from XCom were rendered rather thanall. Additionally source tasks are recorded.	1
Fixes publishing instructions to include docker-stack (#15452)	2
Add missing sqlite provider for production image (#13332)The production image was missing sqlite provider (this failspip check)	0
[Relay] Fixed bug in attribute parsing for pool layers. (#5582)* Fixed pooling bug.* Added tests and fixed more cases.	0
[FRONTEND][Keras] Add test for MobileNet (#513)	3
Adding template file	2
Fix statuses in dag list for dags with dag_ids prefixed by a number	0
Merge pull request #1054 from airbnb/trigger_dag_confCLI's trigger_dag now accepts --conf as json	5
IntSet Evaluation, skeleton finish	5
[AIRFLOW-5042] Improve mocking in Dataproc operator tests (#5662)	3
[CI][microNPU]Running tests parallel using pytest-xdist (#9625)* [CI][microNPU]Running tests parallel using pytest-xdistThe microNPU tests runs safely, parallel using pytest-xdist.This commit introduces changes to run them in parallel onCI.Change-Id: Ia44d73203da320b81d7c8405ac4f201159654fec* [CI][microNPU]Running tests parallel using pytest-xdist* fixing a typoChange-Id: Iba8bed3d86b6aab64ba611a67e4751fa6b6b96c7	4
Fix the link to the docs	2
Fixes unbound variable during remote image check in Breeze (#17807)The error would occur when comparing the hashes. It would notresult in big problem, simply unnecessary docker pull wouldbe run always when you rebuild the image, making it slightlyslower (as it would always have to pull the most recentlayers that you already rebuilt locally with your localsource changes).```Checking if the remote image needs to be pulledccc1270fce717b3e6918169c6de4d741262072ad78cc423fdd3e20f56134eb02ccc1270fce717b3e6918169c6de4d741262072ad78cc423fdd3e20f56134eb02/home/jarek/code/airflow/scripts/ci/libraries/_build_images.sh: line 329: remote_image_build_cache_file: unbound variableYour image and the dockerhub have different or missing build cache hashes.Local hash: 'eb64c3e26ab3b1e3c4cb38e691483d9f5f6508e5e71a06fed9b200c2d596'. Remote hash: ''.```	2
increase atol for float32 (#8712)	1
[IR] Add storage scope to PointerType (#8017)* Add storage scope to PointerType.* Apply suggestions from code reviewCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>	1
[AIRFLOW-3218] add support for poking a whole DAG (#4058)Add support for poking a whole DAG	2
Update BREEZE.rst (#8028)Updating BREEZE.rst with minor grammatical corrections	5
Fix Commands for Publishing constraints (#12800)	0
Bump ssri from 6.0.1 to 6.0.2 in /airflow/www (#15437)Bumps [ssri](https://github.com/npm/ssri) from 6.0.1 to 6.0.2.- [Release notes](https://github.com/npm/ssri/releases)- [Changelog](https://github.com/npm/ssri/blob/v6.0.2/CHANGELOG.md)- [Commits](https://github.com/npm/ssri/compare/v6.0.1...v6.0.2)Signed-off-by: dependabot[bot] <support@github.com>Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>	1
[ONNX] Initial work to import pre-quantized ONNX Models (#7802)* Add QuantizeLinear and DequantizeLinear* DynamicDequantizeLinear	1
[AIRFLOW-1950] Optionally pass xcom_pull task_idsChanges the `task_ids` parameter of xcom_pull fromrequired to optional.This parameter has always allowed None to bepassed, but since it's arequired parameter, it must be specified as such.With this change, we're no longer forced to passit.Closes #2902 from bcb/make-xcom-pull-task-ids-optional	1
remove AttrsEqual and AttrsHash related code (#5169)	4
Removing magic status code numbers from api_connecxion (#24050)	4
[AIRFLOW-4934] Bump Flask to resolve Werkzeug ProxyFix (#5571)	0
Merge branch 'master' into v1-8-test	3
[AIRFLOW-XXX] Simplify Qubole operators listing	1
conv_nchw parameter updated to the one generates mobilenet benchmarks, doc typo fixed (#345)* conv_nchw parameter updated to the one which generates mobilenet benchmarks, doc typo fixed* removed unused variables	1
[ci] xfail failing ethosu codegen tests (#12508)This adds a testing utility so we can mark parameter combinations asxfail without having to manually match each parameter from the name intothe code. The param strings here come directly from CI logs as inhttps://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-12389/5/pipelineCo-authored-by: driazati <driazati@users.noreply.github.com>	1
[AIRFLOW-4026] Add filter by DAG tags (#6489)	2
Adding pool to task_instance list view	1
Fixed issue generation to always include last release (#22265)	0
Version 0.2.3.6	5
Visually distinguish task group summarys (#23488)Bold task groups names and darken their bottom row border.	5
Add specific warning when Task asks for more slots than pool defined with (#20178)In cases where task asks for more pool slots than the total number it has the scheduler generates the following warning:`[2021-12-09 19:37:51,949] {scheduler_job.py:407} INFO - Not executing <TaskInstance: a_pool.my_task scheduled__2021-12-09T19:08:00+00:0│172.18.0.10 [scheduled]> since it requires 4 slots but there are 2 open slots in the pool my_pool. ` https://github.com/apache/airflow/blob/985bb06ba57ab67bb218ca9ca7549a81bea88f87/airflow/jobs/scheduler_job.py#L401-L408However this message is very confusing as the issue is not with open slots but with the total slots of the pool. Waiting for slots will not resolve the problem. To make the task run there must be an action from the user:1.  User to increase the total number of slots in the Pool2. User need to change the task code to requests less slots.This PR add specific log notice for this case.	2
Flower should be enabled for CeleryKubernetesExecutor (#13248)	0
Add Changelog updates for 2.1.1 (#16665)* Add Changelog updates for 2.1.1* Fix spelling errors.	0
Ensure google-mock is installed and setup (#9107)Google Mock is the mocking/helper framework that gets bundled with Google Test, it used to be separate but now isn't.  I ran into the issue of Google Mock not being configured fully in the i386 build of #9106, which uses the `HasSubtr` matcher. This PR aims to fully configure Google Mock for use, which is interesting in itself...The headers are installed as part of Ubuntu 18.04's `googletest` package:```shell$ dpkg -S /usr/include/gmock/googletest:amd64: /usr/include/gmock```But not the lib sources, that requires another package named `google-mock`:```shell$ dpkg -S /usr/src/gmockgoogle-mock:amd64: /usr/src/gmock```But in Ubuntu 16.04 the includes and lib sources are in the `google-mock` package:```shell$ dpkg -S /usr/include/gmockgoogle-mock:i386: /usr/include/gmock$ dpkg -S /usr/src/gmock/google-mock:i386: /usr/src/gmock```And excitingly, in Ubuntu 20.04 this will again be changed to `libgmock-dev` by thelooks of things, just to keep us on our toes.	4
[Frontend][TFLite] Add parser support for shape and range (#5329)* [Relay][Frontend][TFLite] Add parser support for shape and rangeSigned-off-by: Dhruva Ray <dhruvaray@gmail.com>* Incorporated review comments and used new functionsSigned-off-by: Dhruva Ray <dhruvaray@gmail.com>* Few cosmetic changesSigned-off-by: Dhruva Ray <dhruvaray@gmail.com>* Removed an extra line added by rebase...Signed-off-by: Dhruva Ray <dhruvaray@gmail.com>	1
adding one UT for log_to_stdout	2
[BugFix][Topi] Fix 'duplicated iterator names in the compute definition' bug of roi_align (#11322)	0
Improving charts	2
Enable aux data (#24)	5
Add Google Deployment Manager Hook (#9159)Co-authored-by: Ephraim Anierobi <4122866+ephraimbuddy@users.noreply.github.com>	1
[DOC] Developer documentation for InferBound pass. (#3126)* Developer documentation for InferBound pass.	4
Rename old "Experimental" API to deprecated in the docs. (#15653)If you aren't familiar with the history of the APIs, then from lookingat the titles it looks like the Experimental API might be the "next"one.We don't want people to think that!	2
Fix empty asctime field in JSON formatted logs (#10515)	2
refactor: fixed type annotation for 'sql' in MySqlOperator (#17388)	1
[ci] Add more details when showing node info (#10195)This adds some more information to help debug when there are infra problems with Jenkins, notably:* More Jenkins environment variables: https://www.jenkins.io/doc/book/pipeline/jenkinsfile/#using-environment-variables* EC2 metadata* System level information (disk space, CPUs, memory)Co-authored-by: driazati <driazati@users.noreply.github.com>	1
[QUANTIZE] Add config switch for nn.dense layer type. (#5801)	5
[Relay][Dyn] Dynamic TopK Op (#6008)* add dynamic topk op* add topk to dynamic_to_static pass* fix TF test* fix pylint	0
Fix missing te in the code example (#6569)- caused `AttributeError: module ‘tvm’ has no attribute ‘thread_axis’  error- Fix baesd on https://discuss.tvm.apache.org/t/attributeerror-module-tvm-has-no-attribute-thread-axis/6606	0
[AIRFLOW-XXX] Add section on task lifecycle & correct casing in docs (#4681)	2
[AIRFLOW-6065] Add Stackdriver Task Handler (#6660)	0
Section names for TVM generated constants (#9524)This PR places the TVM generated static const arrays in a memory section named .rodata.tvm.The arrays default to 16-byte aligned but a constants-byte-alignment parameter can be added to the target to set alignment to a specific value.This allows the linker script to optionally place TVM generated constants in particular memory regions.	2
Remove check_correctness in AutoTVM, which is busted (#7250)	4
Remove unused 'context' variable in task_instance.py (#14049)	1
Add CeleryKubernetesExecutor to helm chart (#11288)Users of the CeleryKubernetesExecutor will require bothCelery and Kubernetes features to launch tasks.This PR will also serve as the basis for integration tests for thisexecutorCo-authored-by: Daniel Imberman <daniel@astronomer.io>	3
relu of dnnl json runtime only support 4-dims input (#9122)	1
Fix CloudMemorystoreCreateInstanceAndImportOperator operator (#7856)	1
Fix integration tests being accidentally excluded (#10807)The change from #10769 accidentally switched Integration testsinto far-longer run unit tests (we effectively run the teststwice and did not run integration tests.This fixes the problem by removing readonly status fromINTEGRATIONS and only setting it after the integrations areset.	1
[AIRFLOW-3810] Remove duplicate autoclass directive (#4656)	4
[AIRFLOW-5203] Move GCP BigTable to core (#5806)This commit moves GCP BigTable from contrib to core.For more information check AIP-21.	5
[AIRFLOW-629] stop pinning lxmlCloses #1882 from jedipi/improvement/stop-pinning-lxml	5
Support `/` in variable get endpoint (#25774)	1
Allowing DbApi operators to accept list of statements	1
[AIRFLOW-XXX] Add CarLabs to companies list (#4021)	1
[AIRFLOW-1436][AIRFLOW-1475] EmrJobFlowSensor considers Cancelled step as SuccessfulCloses #2937 from Swalloow/master	5
[FQ2I] Add topk to FQ2I (#10170)* Add topk/dyn.topk to FQ2I* Remove dyn.topk* Add uint8 to sort	1
Support QLinearAdd from onnx runtime com.microsoft contrib ops. (#8305)* support QLinearAdd* fix comment line length* use platform independent temp directory	1
[AIRFLOW-2858] Make tox.ini indentation and whitespace consistent (#3705)	5
[AIRFLOW-XXX] Fix typos in faq.rst (#3837)	2
[AIRFLOW-6353] security - ui - add click jacking defence (#6995)	1
Added mysql_preoperator templated fields in hive_to_mysql	1
Making sure a fernet_key exists in airflow.cfg	5
Fix bug in Breeze2 auto-complete setup with root files modified (#21636)There was a bug with "/" added when files were modified bythe autocomplete.Fixes: #21163	0
Add Tabular provider (#23704)	1
More typing and minor refactor for kubernetes (#24719)	4
Refactor celery worker command (#11336)This commit does small refactor of the way we star celery worker.In this way it will be easier to migrate to Celery 5.0.	1
Merge pull request #135 from mistercrunch/docs_fixes[Tutorial] Put full script first and correct a few typos	2
Merge pull request #1207 from underyx/patch-1Allow disabling periodic committing when inserting rows with DbApiHook	5
[AIRFLOW-1349] Refactor BackfillJob _executeBackfillJob._execute is doing multiple things - it is pretty hard tofollow and maintain.Changes included are just a re-org of the code, no logic has beenchanged.Refactor includes:- Break BackfillJob._execute into functions- Add a Status object to track BackfillJobinternal status while  executing the job.Closes #2463 from edgarRd/erod-backfill-refactor	4
[TIR] Expose MMA-related PTX builtins (#12623)Expose MMA-related PTX builtinsThis PR exposes the following TIR operation in python:`ptx_mma`: tested`ptx_mma_sp`: tested`mma_store`: add new unittest`mma_fill`: add new unittestCo-authored-by: yongwww <yongcale@gmail.com>Co-authored-by: yongwww <yongcale@gmail.com>	3
[CODEGEN] Enable inline llvm asm code (#1486)	0
[TVMScript] Enhance printer (#8934)	5
Organize EMR classes in Amazon provider (#20160)Organize EMR classes in Amazon provider (#20160)	1
Reload gunicorn when plugins has beeen changed (#8997)	4
[AIRFLOW-4883] Fix tests on Python 3.5	3
[BASE] Make macro namespace angostic (#480)	1
[TOPI] GPU scatter 1D via sorting based approach (#7056)* add thrust stable sort* rename* scatter via sort working* correctly handles negative indices* clean up, add some comments* add doc string* remove scatter benchmark stuff* add more doc* fix typo* lint fix* silence lint* fix py format* check for thrust availablity before testCo-authored-by: masa <masa@pop-os.localdomain>	3
Adding Agari to the list of companies using Airflow in the readme	1
Add build_create_shared_func to tvm/contrib/cc.py (#3840)	1
[Relay][OP] Register topi schedule for Relay fast_exp and fast_tanh (#5131)* register for fast_exp and fast_tanh* Add unit test for fast math* Add unit test for op fast math* Add unit test for op fast math* Add unit tests to guard registering topi schedule for Relay fast_exp and fast_tanh* Fix ident* Fix the indent* Add fast_tanh in the test_fastmath of topi tests	3
fix broken link in experimental API deprecation headers (#13547)	2
Update README.md	2
Rendering of IMAGES.rst was broken due to wrong header (#14471)This PR fixes it.	0
[AIRFLOW-2122] Handle boolean values in sshHookThis allows passing boolean values in theextra field of ssh connectionCloses #3070 from sreenathkamath/AIRFLOW-2122	4
[ARITH] Add CombineInterval<Div> in IntSet (#48)* [FIX] add CombineInterval<Div>* fix error message and add comment about rounding* fix comment	0
A few changes around templating to make hivepp templates work	1
[WIP] Add OpenGL topi. (#836)[TOPI][GL] OpenGL topi.	1
Cleaning up Postgres identity	4
[TVMSCRIPT]Fix script printters StructuralEqual check failed (#8499)Co-authored-by: honghua.cao <honghua.cao@streamcomputing.com>	0
Fix db shell for sqlite (#13907)closes: #12806	5
[AIRFLOW-4846] Allow kube git-sync mode to use existing secret for git credentials (#5475)	1
[SCHEDULE][PASS] Enable Warp memory and lower to shuffle (#1050)* [SCHEDULE][PASS] Enable Warp memory and lower to shuffle* OpenCL dispatches for now to intel shuffle	0
Fix X-Frame enabled behaviourThe #19491 incorrectly changed condition on assigning theX-Frame-Options header DENY. It actually was not possible to setthe DENY header.	1
[TOPI] Layout Rewriting in TE (#11844)	5
Using more plain language and making the reference to a task consistent	1
Fix broken breeze script (#10418)Previosuly it was failing with `unbound variable AIRFLOW_PROD_BASE_TAG` and failing because it could not find "kind" binary	1
Fixes MySQLToS3 float to int conversion (#10437)* fix: 🐛 Float to Int columns conversionThe `_fix_int_dytpes` method is applying the `astype` transformation tothe return of a `np.where` call. I added an extra step to the method inorder to apply this to the whole pd.Series. Note that Int64Dtype must beused as an instance, since Pandas will raise an Exception if a class isused.* test: Add dtype test for integers* style: Change line length	4
[AIRFLOW-XXX] Add proton.ai to list of airflow users (#5604)[ci-skip]	1
Revert "[AIRFLOW-1385] Create abstraction for Airflow task logging"This reverts commit e6ef06c53fd4449db6e665cce5cad9418dde232f whichwas committed accidentally.	5
Developers Quick Guide (#13417)rebased and updated new tmux image as per new changes.	4
Remove "Label when approved" workflow (#24704)The labelling workflow has proven to be far less useful than wethought and some of the recent changes in selective checks madeit largely obsolete. The committers can still add "full tests needed"label when they think it is needed and there is no need to labelthe PRs automatically for that (or any other reason).For quite a while this workflow is basically a useless noise.	1
Move test tools from tests.utils to tests.test_utils (#10889)	3
[Golang] bugfix #2517 (#2558)	0
Add tests for gitSync in helm chart (#14316)Added Missing tests for #14203	3
Only run separate per-platform build when preparing build cache (#24023)Apparently pushing multi-platform images when building cache on CIhas some problems recently, connected with ghcr.io being morevulnerable to race condition described in this issue:https://github.com/containerd/containerd/issues/5978Apparently when two, different platform layers are pushed aboutthe same time to ghcr.io, the error"cannot reuse body, request must be retried" is generated.However we actually do not even need to build the multiplatformlatest images because as of recently we have separate cache for eachplatform, and the ghcr.io/:latest images are not used any morenot even for docker builds. We we always build images rather thanpull and we use --from-cache for that - specific per platform. The onlyimage pulling we do is when we pull the :COMMIT_HASH images in CI- butthose are single-platform images (amd64) and even if we add tests forarm, they will have different tag.Hopefully we can still build release images without causing therace condition too frequently - this is more likely because whenwe build images for cache we use machines with different performancecharacteristics and the same layers are pushed at different timesfrom different platforms.	1
Add SalesforceApexRestOperator (#18819)	1
Improves documentation regarding providers and custom connections (#13375)Co-authored-by: Bijan <me+git@bijansoltani.com>	1
Fix case of GitHub (#12433)Github -> GitHub	0
[AIRFLOW-9347] Fix QuboleHook unable to add list to tags (#9349)	1
[TOPI] Update conv schedule on rasp (#497)	5
Merge pull request #898 from iddoav/making_force_ti_memberMaking force a task instance member, so it becomes available for	1
[AIRFLOW-3926] Remove references to Flask-Admin (#4759)Remove all remaining references to Flask-Admin and remove it as adependency. This should be the final step in the deprecation ofFlask-Admin in favor of Flask-AppBuilder.	4
Add support and testing for tf.assert (as no-op) and tf.no_op to TF Relay frontend. (#4172)	3
create symbol from nodeattr (#116)	1
Fixing the tutorial. Removing an unnecessary import of MySqlOperator and adding the import of timedelta.	2
Make DagRunType inherit from `str` too for easier use. (#11621)This approach is documented in https://docs.python.org/3.6/library/enum.html#others:```While IntEnum is part of the enum module, it would be very simple toimplement independently:class IntEnum(int, Enum):    pass```We just extend this to a str -- this means the SQLAlchemy has no troubleputting these in to queries, and `"scheduled" == DagRunType.SCHEDULED`is true.This change makes it simpler to use `dagrun.run_type`.	2
[NNVM][TOPI] Add FTVMCompute for matmul (#1239)	1
Do not include testing and directories in coverage reporting	3
Squelch more deprecation warnings (#21003)	2
[Relay to onnx conversion fixes][Pool, Pad] (#8435)* [Relay to Onnx conversion][Pool]* added missing ceil_mode in average pool and max pool conversion* [Relay to Onnx conversion][Pad]* Fixed issue in Pad conversion: changed pad_value to input instead of attrs* Refer to PR: https://github.com/apache/tvm/pull/7860* Updated unit test for Pad* Fixed some formatting errors	0
Support LLVM trunk (#3907)* support LLVM trunk* guard with USE_LLVM in if condition for c++14* GREATER_EQUAL -> GREATER	1
Calendar UI improvements (#16226)- change calendar borders from black to grey to match rest of the app better- remove unneeded title- remove "View" from all dag views to save space and consistency	2
[AIRFLOW-1637] Fix Travis CI build status linkIn the readme it is linkinghttps://travis-ci.org/apache/incubator-airflow.svginstead ofhttps://travis-ci.org/apache/incubator-airflow.svg?branch=masterSo this is showing the build status for the latestbuild insteadof the master branchCloses #2627 from dalupus/airflow-1637	3
[AutoScheduler] Bug fix & Custom sketch support (#7260)	1
[AIRFLOW-6026] Use contextlib to redirect stderr and stdout (#6624)	1
[AIRFLOW-1726] Add copy_expert psycopg2 method to PostgresHookExecutes SQL using psycopg2 copy_expert methodNecessary to execute COPY command without access to a superuserCloses #2698 from andyxhadji/AIRFLOW-1726	1
[AIRFLOW-5698] Organize Dataflow tests (#6368)	3
add the --net=host cmd line arg to the docker/bash.it script (#7780)	2
[TUTORIAL] Resnet-18 end to end tutorial example (#55)	5
Remove limitation for elasticsearch library (#16553)* Remove limitation for elasticsearch libraryElasticsearch <7.6.0 does not work with Python 3.9 (importerrors on deprecated base64 functionality that have been removedin Python 3.9) see:ihttps://bugzilla.redhat.com/show_bug.cgi?id=1894188This PR bumps elasticsearch library version to latest available(7.13.1 as of this writing) in order to get it Python 3.9compatible.	1
YAML file supports extra json parameters (#9549)Co-authored-by: Kamil Breguła <mik-laj@users.noreply.github.com>Co-authored-by: Vinay <vinay@synctactic.ai>Co-authored-by: Kamil Breguła <mik-laj@users.noreply.github.com>	1
[AIRFLOW-721] Descendant process can disappear before terminationThere is a race condition in helpers.py's kill_descendant_processesthat checks for running processes and then tries to terminate them.This is not done atomically allowing for a small window where a PIDcan disappear before termination.	1
[AIRFLOW-3623] Fix bugs in Download task logs (#5005)They didn't work in Python 3 (Bytes vs Strings), the graph_view wasn'tspecifying the try_number correctly, and the "All" logs had "None" asthe suffix instead of "all".	0
Add support for KEDA HPA config to Helm Chart (#24220)	2
Support importing connections from files with ".yml" extension (#22872)* Add .yml to list of import-able secret file extensions	2
Update hexagon max_concurrency to be at most equal to the number of HVX units available. (#12394)	5
[RUNTIME] Remove parameter def from runtime (#486)	1
Copy build packages on non-main (#25546)When non-main build is prepared (for example 2.3) we preparejust airflow package in CI but we do not prepare provider packages.We have not copied dist/files when building prod image but this meanswe did not copy the Airflow package either and the PROD build failedon non-main branch.This PR fixes it - packages are still copied after preparing in allbranches (in non-main this is only airflow package)	0
[AIRFLOW-XXXX] Move LatestOnlyOperator change to Master (#7350)	4
[AutoScheduler] Task scheduler callbacks (#6945)* [AutoScheduler] Task scheduler callbacks* docstring* address comments* Delete the explaination of callback in the tutorial* fixCo-authored-by: Lianmin Zheng <lianminzheng@gmail.com>	0
Fix tutorial to follow a change of elemwise_sum (#1374)	4
[TUTORIAL]TFLite QNN Tutorial (#5595)* [TUTORIAL]TFLite QNN Tutorial* Review comments	5
Making the dependency engine more flexible	1
Better description for UPGRADE_TO_NEWER_DEPENDENCIES parameter (#22644)	2
Use typed Context EVERYWHERE (#20565)Part of #19891	1
[TOPI] Improve CUDA softmax scheduling (#5600)- Do not use multiple kernels- Schedule with warp reductions- Fixed a bug on the lower warp memory pass- Fixed warp shuffle intrinsics for the nvptx backend.Signed-off-by: Wei Pan <weip@nvidia.com>	0
[skip ci][Docker, CI] Update DGL installation, temp disable DGL tutorial (#10067)	5
Make hive macros py3 compatible (#8598)Co-authored-by: Ace Haidrey <ahaidrey@pinterest.com>	1
Fix Cloud SQL system tests (#19014)- Add creation of Fine-grained bucket for ACLs- Add patching of environment variables- Add unique postfix to instances names	0
Don't include kubernetes_tests/ and backport_packages/ in our wheel (#10805)Since 1.10.x we have added some new top-level folders that were gettingincluded in the build wheel!	1
Avoid deadlock when rescheduling task (#21362)The scheduler job performs scheduling after locking the "scheduled"DagRun row for writing. This should prevent from modifying DagRunand related task instances by another scheduler or "mini-scheduler"run after task is completed.However there is apparently one more case where the DagRun is beinglocked by "Task" processes - namely when task throwsAirflowRescheduleException. In this case a new "TaskReschedule"entity is inserted into the database and it also performs lockon the DagRun (because TaskReschedule has "DagRun" relationship.This PR modifies handling the AirflowRescheduleException to obtain thevery same DagRun lock before it attempts to insert TaskRescheduleentity.Seems that TaskReschedule is the only one that has this relationshipso likely all the misterious SchedulerJob deadlock cases weexperienced might be explained (and fixed) by this one.It is likely that this one:* Fixes: #16982* Fixes: #19957	0
Add Corsearch to in the wild (#12641)	1
[Docs] Fix an irrelevant sentence in relay.reverse (#10331)It seems the sentence is from relay.repeat() and not related torelay.reverse().	0
Decrease likelihood of memory issue in CI (#18852)This PR attempts to decrease the likelihood of memory issues forCI for non-committers. The MSSQL and MYSQL Provider and Integrationtests when run together with other tests in parallel (for MSSQL evenstandalone) might cause memory problems (143 or 137 exit code).This PR changes the approach slightly for low-memory conditions:1) MSSQL - both Integration and Providers tests are skipped   entirely (they will be run in High-Mem case so we will see if   there are any problems anyway)2) MySQL - both Integration and Providers tests are run separately   which will lead to slightly longer test runs but likely this   will save us from the occasional memory issues.	0
overview (#36)* overview* fix	0
Merge pull request #32 from airbnb/pluginsA simple plugin system for Airflow	5
`TI.log_url` fix for `map_index` (#24335)	0
Errors out instead of trying to workaround buggy docker-compose v2 (#16989)Docker-Compose v2 Beta has an error in processing environmentvariable file which prevents Breeze from running. Until it isfixed, we are going to print an error, explain how to disableit and exit - because the workaround introduces more problemsthan it solves (passing environment variables to containeris broken partially)Also see https://github.com/docker/compose-cli/issues/1917	2
Change the way to import ONNX model. (#186, #187) (#189)* Change the way to import ONNX model.* Decide ONNX version and change the processing* Check whether onnx has the attribute '__version__'	4
[AIRFLOW-752] Add Mercadoni to list of Airflow usersCloses #1991 from demorenoc/master	1
Move tests for airflow.utils.dates out of tests/core/ (#13088)These three functions were in test_core, but the separate test_datesfile is better suited.In addition I have removed the use of `assert_array_almost_equal` fromnumpy as pytest provides it's own version	1
Commenting the default cfg file	2
[AIRFLOW-2820] Add Web UI triggger in doc "Scheduling & Triggers"In documentation page "Scheduling & Triggers",it only mentioned the CLI method tomanually trigger a DAG run.However, the manual trigger feature in Web UIshould be mentioned as well(it may be even more frequently used by users).	1
Set Process title for Worker when using ``LocalExecutor`` (#16623)This has annoyed me for a long time. When using  ``LocalExecutor``, it was difficult to see which process is a worker as it just showed up as below -- which had same title as parent scheduler process. This PR/commit adds a title for idle workers and when a task is running it has the "command" that is running in the title, similar to our supervising processBefore:```root       124  0.0  0.0   6676  4636 pts/1    Ss   Jun23   0:00  \_ -bashroot      1449  0.8  2.6 988356 326312 pts/1   Sl+  Jun23   0:16  |   \_ /usr/local/bin/python /usr/local/bin/airflow webserverroot      1584  0.0  0.4 121068 56864 pts/1    S+   Jun23   0:01  |       \_ gunicorn: master [airflow-webserver]root      1587  0.6  2.5 986144 318712 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1588  0.6  2.5 984776 317672 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1589  0.6  2.5 985688 318148 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1590  0.6  2.5 985200 317776 pts/1   Sl+  Jun23   0:11  |           \_ [ready] gunicorn: worker [airflow-webserver]root       128  0.0  0.0   6676  4552 pts/2    Ss   Jun23   0:00  \_ -bashroot     13933 31.0  0.9 466596 117656 pts/2   S+   00:22   0:01      \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13941  0.0  0.7 466340 97988 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13942  3.2  0.8 1392072 100136 pts/2  Sl+  00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13950  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13952  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13955  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13958  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13962  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13966  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13969  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13975  0.0  0.8 466340 98404 pts/2    S+   00:22   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13979  6.5  0.8 466596 99956 pts/2    S    00:22   0:00          \_ airflow scheduler -- DagFileProcessorManager```After (with no running tasks - idle workers):```root       124  0.0  0.0   6676  4636 pts/1    Ss   Jun23   0:00  \_ -bashroot      1449  0.8  2.6 988356 326312 pts/1   Sl+  Jun23   0:16  |   \_ /usr/local/bin/python /usr/local/bin/airflow webserverroot      1584  0.0  0.4 121068 56864 pts/1    S+   Jun23   0:01  |       \_ gunicorn: master [airflow-webserver]root      1587  0.6  2.5 985752 318184 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1588  0.6  2.5 984776 317672 pts/1   Sl+  Jun23   0:11  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1589  0.6  2.5 985688 318148 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1590  0.6  2.5 985200 317776 pts/1   Sl+  Jun23   0:11  |           \_ [ready] gunicorn: worker [airflow-webserver]root       128  0.0  0.0   6676  4552 pts/2    Ss   Jun23   0:00  \_ -bashroot     13237 25.7  0.9 466596 117692 pts/2   S+   00:20   0:02      \_ airflow worker -- LocalExecutorroot     13245  0.1  0.7 466340 97804 pts/2    S+   00:20   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13246  2.1  0.8 1318340 100104 pts/2  Sl+  00:20   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     13254  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13256  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13259  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13263  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13267  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13271  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13274  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13276  0.0  0.8 466340 98396 pts/2    S+   00:20   0:00          \_ airflow worker -- LocalExecutorroot     13282  4.1  0.8 466596 99952 pts/2    S    00:20   0:00          \_ airflow scheduler -- DagFileProcessorManager```After (with running tasks):```root@a7c8aa590704:/opt/airflow# ps auxfUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDroot      6434  0.0  0.0   6652  4584 pts/3    Ss   00:01   0:00 /bin/bashroot     19250  0.0  0.0   9556  3064 pts/3    R+   00:39   0:00  \_ ps auxfroot         1  0.0  0.0   2148   720 ?        Ss   Jun23   0:00 /usr/bin/dumb-init -- /entrypointroot         7  0.0  0.0   6656  4400 pts/0    Ss   Jun23   0:00 /bin/bashroot       121  0.0  0.0   8220  3228 pts/0    S+   Jun23   0:00  \_ tmuxroot       101  0.0  0.0  15856  4272 ?        Ss   Jun23   0:00 /usr/sbin/sshdroot       123  0.0  0.0  10176  5148 ?        Ss   Jun23   0:00 tmuxroot       124  0.0  0.0   6676  4636 pts/1    Ss   Jun23   0:00  \_ -bashroot      1449  0.6  2.6 988356 326312 pts/1   Sl+  Jun23   0:20  |   \_ /usr/local/bin/python /usr/local/bin/airflow webserverroot      1584  0.0  0.4 121068 56864 pts/1    S+   Jun23   0:01  |       \_ gunicorn: master [airflow-webserver]root      1587  0.4  2.5 986144 318712 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1588  0.4  2.5 984776 317672 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1589  0.4  2.5 985848 318600 pts/1   Sl+  Jun23   0:13  |           \_ [ready] gunicorn: worker [airflow-webserver]root      1590  0.4  2.5 985628 318424 pts/1   Sl+  Jun23   0:12  |           \_ [ready] gunicorn: worker [airflow-webserver]root       128  0.0  0.0   6676  4552 pts/2    Ss   Jun23   0:00  \_ -bashroot     19030 17.9  0.9 467108 118628 pts/2   S+   00:38   0:02      \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     19038  0.0  0.7 466084 97776 pts/2    S+   00:38   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     19039  1.4  0.8 1318084 99804 pts/2   Sl+  00:38   0:00          \_ /usr/local/bin/python /usr/local/bin/airflow schedulerroot     19047  0.0  0.8 466084 98692 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'runme_2', '2021-06-24T00:39:06.539715+00:00', '--local', 'root     19240 25.3  0.8 470820 104400 pts/2   S+   00:39   0:00          |   \_ airflow task supervisor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'runme_2', '2021-06-24T00:39:06.539715+00:00', '--local', '--poroot     19246  0.0  0.8 470956 103980 pts/2   S    00:39   0:00          |       \_ airflow task runner: example_bash_operator runme_2 2021-06-24T00:39:06.539715+00:00 91root     19049  0.1  0.8 466084 98696 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'runme_1', '2021-06-24T00:39:06.539715+00:00', '--local', 'root     19241 26.0  0.8 470824 104408 pts/2   S+   00:39   0:00          |   \_ airflow task supervisor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'runme_1', '2021-06-24T00:39:06.539715+00:00', '--local', '--poroot     19248  0.0  0.8 470824 103720 pts/2   S    00:39   0:00          |       \_ airflow task runner: example_bash_operator runme_1 2021-06-24T00:39:06.539715+00:00 93root     19052  0.1  0.8 466084 98760 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'runme_0', '2021-06-24T00:39:06.539715+00:00', '--local', 'root     19244 26.0  0.8 470824 104404 pts/2   S+   00:39   0:00          |   \_ airflow task supervisor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'runme_0', '2021-06-24T00:39:06.539715+00:00', '--local', '--poroot     19245  0.0  0.8 471212 104032 pts/2   S    00:39   0:00          |       \_ airflow task runner: example_bash_operator runme_0 2021-06-24T00:39:06.539715+00:00 90root     19056  0.1  0.8 466084 98760 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'this_will_skip', '2021-06-24T00:39:06.539715+00:00', '--loroot     19243 24.6  0.8 470824 104400 pts/2   S+   00:39   0:00          |   \_ airflow task supervisor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'this_will_skip', '2021-06-24T00:39:06.539715+00:00', '--local'root     19247  0.0  0.8 470956 103712 pts/2   S    00:39   0:00          |       \_ airflow task runner: example_bash_operator this_will_skip 2021-06-24T00:39:06.539715+00:00 92root     19057  0.1  0.8 466084 98760 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'also_run_this', '2021-06-24T00:39:06.539715+00:00', '--locroot     19242 26.6  0.8 470824 104404 pts/2   R+   00:39   0:00          |   \_ airflow task supervisor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'also_run_this', '2021-06-24T00:39:06.539715+00:00', '--local',root     19249  0.0  0.8 470824 101976 pts/2   S    00:39   0:00          |       \_ airflow task supervisor: ['airflow', 'tasks', 'run', 'example_bash_operator', 'also_run_this', '2021-06-24T00:39:06.539715+00:00', '--locroot     19062  0.0  0.8 466084 98300 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutorroot     19066  0.0  0.8 466084 98300 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutorroot     19069  0.0  0.8 466084 98300 pts/2    S+   00:38   0:00          \_ airflow worker -- LocalExecutorroot     19075  2.7  0.8 466596 100144 pts/2   S    00:38   0:00          \_ airflow scheduler -- DagFileProcessorManager```Once the worker is done executing a task, the worker is renamed back to `airflow worker -- LocalExecutor`	1
[DARKNET]RNN Support for darknet (#1443)	1
[CI] docker images build script cmd line args optional (#7776)* allow COMMAND to be empty when building a container* clarfiy the difference between build.sh and bash.sh* fix typo and highlight command as option in usage snippet	2
[AIRFLOW-2655] Fix inconsistency of default config of kubernetes workerCloses #3529 from mrkm4ntr/airflow-2655	1
[AIRFLOW-1998] Implemented DatabricksRunNowOperator for jobs/run-now … (#3813)Add functionality to kick of a Databricks job right away.* Per feedback: fixed a documentation error,   reintegrated the execute and on_kill onto the objects.* Fixed a  documentation issue.	0
[BugFix] Fix bug in cast to bool (#3207)	0
v0.3.2 + bug fix caught in unittests	3
[Vulkan] Added conversion from bool to float. (#3513)* Added bool to float conversion support to spirv ir builder.* Added unittest for vulkan bool conversion.* Typo fix.	0
use more subdued colors	1
[Relay] Remove in-place modification of attributes in layout transform (#8309)* stub* mnist test working* porting InferCorrectLayout* compiles with new infer layout* remove log* fix qnn concat* do not run dense pack alter op test on gpu targets* cleanup* add test* cpplint* CHECK -> ICHECK* doc update* restore try catch* split inferred_layout into seperate fields* Update InferCorrectLayout functions following struct field change* fix cpplint	0
fix expand onnx conversion (#11278)	0
[AIRFLOW-789] Update UPDATING.mdCloses #2011 from bolkedebruin/AIRFLOW-789	5
Support google-cloud-automl >=2.1.0 (#13505)	5
[AIRFLOW-1647] Fix Spark-sql hookThe logging in the spark-sql hook was not workingand causing anexception because the _process_log is notavailable. Write tothe log handler directly because the spark-sqlhook cant run inyarn-cluster mode. Write tests which verify thepopen call of thehook.Closes #2637 from Fokko/AIRFLOW-1647-Fix-spark-sql-hook	0
[AIRFLOW-6817] Lazy-load `airflow.DAG` to keep user-facing API untouched (#7517)`from airflow import DAG` is _such_ a common pattern that it's worthmaking sure this stays working.Since we are now on Python 3 we can use PEP-562 to have officiallysupported lazy-loading of attributes on a module.Since the example_dags will be referred to/copied by users I haveupdated them all back to import from the airflow module, but have leftany internal uses untouched.	1
Merge branch 'master' into password_auth_docs	4
Add -Bsymbolic-functions to linker option (#1244)	2
[REFACTOR] Macro standardization, lint tests (#7)* code refactoring* code refactoring* code refactoring* code refactoring* fixing macro* refactoring, tests, makefile* style - making sure lint test pass* prefixed macros with VTA, fixed bugs	0
[TE][Fix] Comparison of the output tensor (#9829)* [TE][Fix] Comparison of the output tensor* fix hybrid op issue* fix tensor replacement in schedule ops* fix compute inline	0
Improve graph view refresh (#16696)* Improve graph view refresh- only refresh if state has actually changed- stop refresh if all states are final- swap out `.attr()` to `.prop()` for handling `checked` see https://stackoverflow.com/questions/5874652/prop-vs-attr* check only on final states instead of pending	4
[AIRFLOW-XXX] Fix PythonVirtualenvOperator tests (#3968)The recent update to the CI image changed the defaultpython from python2 to python3. The PythonVirtualenvOperatortests expected python2 as default and fail due toserialisation errors.	0
[PyTorch] Fix aten::arange for pytorch (#12681)fix arange for pytorch nightly 20220815	0
Fix broken SLA Mechanism (#14056)closes https://github.com/apache/airflow/issues/14050We were not de-serializing `BaseOperator.sla` properly, hencewe were returning float instead of `timedelta` object.Example: 100.0 instead of timedelta(seconds=100)And because we had a check in _manage_sla in `SchedulerJob` and `DagFileProcessor`,we were skipping SLA.SchedulerJob:https://github.com/apache/airflow/blob/88bdcfa0df5bcb4c489486e05826544b428c8f43/airflow/jobs/scheduler_job.py#L1766-L1768DagFileProcessor:https://github.com/apache/airflow/blob/88bdcfa0df5bcb4c489486e05826544b428c8f43/airflow/jobs/scheduler_job.py#L395-L397	2
[AIRFLOW-5714] Collect SLA miss emails only from tasks missed SLA (#6384)Currently when a task in the DAG missed the SLA,Airflow would traverse through all the tasks in the DAGand collect all the task-level emails. Then Airflow wouldsend an SLA miss email to all those collected emails,which can add unnecessary noise to task owners thatdoes not contribute to the SLA miss.Thus, changing the code to only collect emailsfrom the tasks that missed the SLA.	4
Bugfix: Fix overriding `pod_template_file` in KubernetesExecutor (#15197)This feature was added in https://github.com/apache/airflow/pull/11784 butit was broken as it got `pod_template_override` from `executor_config`instead of `pod_template_file`.closes #14199	2
[ci] Bump job timeout to 3 hours (#11350)This is intended to be temporary to avoid timeouts on jobs while we work on getting some things under control like artifact upload time and shards for various jobs.Co-authored-by: driazati <driazati@users.noreply.github.com>	1
[REFACTOR] Streamline Function Attr interface. (#5045)* [REFACTOR] Streamline Function Attr interface.There has been quite a few recent changes that depends heavily onthe function attr interface. This PR streamlines that interface by introducingtwo APIs that covers most of the usages.- GetAttr which gets a typed object for a given key  - HasNonzeroAttr is a quick helper that calls GetAttr to quickly check an attribute- WithAttr that creates a new function object with the given attr  - The API comes with copy on write optimization to avoid multiple copies  - We deliberately pick the prefix With(instead of Set) to indicate this    function does not mutate the original input.On the python side:- We allow read access via func.attrs (which is a DictAttr)- func.with_attrs to create a new instance with updated attrs.We also get rid of the small wrapper functions and make sure the API centered aroundthe GetAttr and HasNonzeroAttr interface.This PR also changes the function construction to follow the new convention.* Address review comments* Address review comments* Fix doxygen path	0
[SCHEDULE][REFACTOR] Default Fuse to outer inner, consistent to split (#289)* [SCHEDULE] Fix fuse node order* Make fuse order consistent with split	1
[DOCKER] Fix Dockerfile.demo_android (#6361)* [DOCKER] Fix Dockerfile.demo_android* fix	0
Merge branch 'master' into v1-8-test	3
EdgeModifier refactoring (#21404)	4
[AIRFLOW-3365][AIRFLOW-3366] Allow celery_broker_transport_options to be set with environment variables (#4211)* [AIRFLOW-3365] Add visibility timeout by key* [AIRFLOW-3366] Make getsection scan env variables	1
[TE] reverse-mode autodiff without any optimization (#5121)* [TE] reverse-mode autodiff without any optimizationCo-authored-by: Sergei Grechanik <sergei.grechanik+h@gmail.com>* address review comments* add comments and retrigger CI* move unittest to debug ci* move test back and add seedCo-authored-by: Sergei Grechanik <sergei.grechanik+h@gmail.com>	1
Update installation doc with minor improvements (#6104)Make some minor improvements to the install from source docabout flags to enable, package managers, and virtual environments.	0
AIRFLOW-2787 Allow is_backfill to handle NULL DagRun.run_id (#3629)	2
[AIRFLOW-1499] Eliminate duplicate and unneeded codeCloses #2509 from bananarepublic/airflow-1499	5
Bugfix: Don't try to create a duplicate Dag Run in Scheduler (#13920)closes https://github.com/apache/airflow/issues/13685When the Scheduler is restarted or killed after creating Dag Run in `Scheduler._create_dag_runs` butbefore `Scheduler.self._update_dag_next_dagruns`, the Scheduler falls in a loop because it will not tryto create the Dag Run again in the Scheduler Loop. However, as the DagRun already exists it will failwith:```Traceback (most recent call last):  File "/Users/kaxilnaik/opt/anaconda3/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context    cursor, statement, parameters, context  File "/Users/kaxilnaik/opt/anaconda3/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 593, in do_execute    cursor.execute(statement, parameters)psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint "dag_run_dag_id_run_id_key"DETAIL:  Key (dag_id, run_id)=(scenario1_case2_02, scheduled__2021-01-25T00:00:00+00:00) already exists.```	1
Fix failing test in test_webserver_command (#9589)	3
[Frontend] Onnx improvement (#165)* fix recently released layers* fix fc layers with partial infer_shape	5
[AUTOTVM][DOCS] Add a link to the defining network description of auto-tuning tutorial (#4023)* [AUTOTVM][DOCS] Add a link to autoTVM tutorial to direct the details of building NN with relay* [AUTOTVM][DOCS] Add a link to autoTVM tutorial to direct the details of building NN with relay	2
Fix typo when returning VerticaHook	1
Make AirflowConfigParser._warn_deprecate as staticmethod (#7816)	5
Fix spelling problem introduced in #11923 (#11927)	0
[AIRFLOW-2767] - Upgrade gunicorn to 19.5.0 to avoid moderate-severity CVE (#4795)Upgrade gunicorn to 19.5.0 to avoid moderate-severity CVE	5
Bugfix for issues #356	0
SparseFillEmptyRows Op (#7442)* Initial Commit* Fix formats* Remove comments* Black* THreeops* Add Frontend Code* Add Default Value to feed dict* Add Frontend Code* New test Cases and new code to handle them* Add Python Implementation''* Remove stuff* Remove unused imports* Pylint* Pylint* PyLint Shape Func* Make tests cpu only* Add unsorted tests* Add frontend code* Row Major Sorting Only Test* Handle Dynamic Shapes* Add dynamic input shapes* Dynamic Shape Tests* Add documentation* Dtypes* PR Comments* Added comments and changed naming* Add comments* Comments to Shape Func* Documentation* PR Changes* PR Comments* Resolve input and output dtype compatCo-authored-by: Ubuntu <ubuntu@ip-172-31-42-251.us-east-2.compute.internal>	0
[AIRFLOW-2400] Add Ability to set Environment Variables for K8s[AIRFLOW-2400] Env Variables for K8sAllow environment variables to be set for theKubernetesPodOperator.Fix typoFix documentation variable typeCloses #3284 from jkao/add-env-vars-to-k8s-operator	1
Only excluded actually expanded fields from render (#25599)Previously we excluded all mapped kwargs from being rendered, whichcause issues for fields that are not actually rendered during expansion(i.e. those that are literals). This new implementation adds some extralogic to ensure we still include kwargs that still need rendering.	2
[TIR] Canonical simplify the intset before region cover proof (#9941)* canonical simplify the intset before region cover proof* add more rewrite rule for intimms to fix the issue after rebase* remove rewrite rules, there are existing rule can work after canonical simplify	1
Support vector operations for AMD (llvm IR) (#623)* Support vector operations for AMD (llvm IR)* fix whitespace* update comments, docstring	2
Merge pull request #1201 from r39132/masterFixing ISSUE_TEMPLATE name to include .md suffix	0
[TensorIR] Renormalize split pattern (#10401)	5
Bug-fix] Fix tir allocation with multiple lanes (#6941)* Bug-fix] Fix tir allocation with multiple lanesThis PR stemmed from https://github.com/apache/incubator-tvm/pull/6907and it is fixing a small error in the getter and setter of a buffer forthe case where `t.lanes > 1`. I also added a test to stress the issue.* Address dtyped vs non-dtyped constant cases	1
[AIRFLOW-1208] Speed-up cli testsCloses #2301 from skudriashev/airflow-1208	3
log then throw the exception	2
Optimize calendar view for cron scheduled DAGs (#24262)	2
Fix PostgresHook import in tutorial (#19374)	2
Add int8 gemm recipe (#1614)	1
Avoid use of MemoryInfo when undefined in StorageRewrite (#11254)* Check if the requested memory info is defined before using it.* Address review comment to add warning when MemoryInfofor scope is undefined.	5
there could be dot in the key string, which is illegal in the hive table name	2
[TensorIR][Minor] Allow Tuple/Array in TE lowering (#8916)	1
[DOC] Improve the order of tutorials within a subsection (#6880)	1
[AIRFLOW-XXX] Fix typo in docstring of gcs_to_bq (#3833)	2
[FIX,HEXAGON] Gitignore generated Hexagon files (#10552)Ignore these files so they are not accidentally committed.	2
feat: breeze - support compose v2 (#25563)	1
Better docs settings	1
[AIRFLOW-5717] Add get_tree_map method to SFTPHook (#6387)	1
[DOCS]fix typos in autotvm tutorial (#4585)	2
Moving folders around	4
[DOCKER] Fix missing apt https transport support (#3735)* [DOCKER] Fix missing apt https transport support* [DOCKER] Drop superflous explicit sudo's	4
Fix MyPy issues in ``airflow/providers/amazon/aws/transfers`` (#20708)We were using ``cast`` redundantly.Before:```root@de8d91a123ec:/opt/airflow# mypy --namespace-packages airflow/providers/amazon/aws/transfersairflow/providers/amazon/aws/transfers/gcs_to_s3.py:185: error: Redundant cast to "bytes"                        cast(bytes, file_bytes), key=dest_key, replace=self.replace, acl_policy=self.s3_acl_policy                        ^Found 1 error in 1 file (checked 18 source files)```After:```root@de8d91a123ec:/opt/airflow# mypy --namespace-packages airflow/providers/amazon/aws/transfersSuccess: no issues found in 18 source files```	2
Do not log the hook connection details even at DEBUG level (#22627)	0
[TIR][Schedule] Refactor Tensorize (#12070)* Refactor blockize* Refactor tensorize* Address review comments* typo* rename variables according to review	2
Ignore config exceptions if LDAP superuser/data profiler are undefined.	2
Fix typo in doc docker-stack (#14928)Fix a typo on doc , the _AIRFLOW_WWW_USER_PASSWORD_CMD is repeated two times	4
[CODEGEN][CUDA] Fix vector load (#5226)* Fix high-low bit bug in __pack_half2* Fix vector load* Add unit8 support for PrintVecElemLoadExpr and BroadcastNode	1
[AIRFLOW-XXXX] Move email configuration from the concept page (#7189)* [AIRFLOW-XXXX] Move email configration from the concept page* fixup! [AIRFLOW-XXXX] Move email configration from the concept page	5
[AIRFLOW-1896] FIX bleach <> html5lib incompatibilityRunning airflow with bleach 2.0.0 can cause:`ImportError: No module named base`https://github.com/mozilla/bleach/issues/267This was resolved in https://github.com/mozilla/bleach/releases/tag/v2.1.2Closes #2858 from kamilchm/patch-1	0
[TOPI] Fix uint8 resize_bilinear issue. (#2490)Signed-off-by: Zhebin Jin <zhebin.jzb@alibaba-inc.com>	0
Fix race condition when flake checks run in parallel (#20294)The Flake checks run in parallel and when you had an image whichrequired rebuild, it performed additional check on whether theimage needs build or "pull+build". When it was run in parallela temporary file containing hash of the remote image could beoverwritten and emptied while another process was reading itwhich resulted in error when running flake command.This has been changed - the files are now stored in a temporaryfiles - unique to each of the processes running in parallel andthe file in question is moved as an atomic operation so it willnever become empty.	4
Fixed backfill interference with scheduler (#22701)Co-authored-by: Dmirty Suvorov <dmitry.suvorov@scribd.com>	1
[AIRFLOW-5367] Remove hook initialization in ctor from BigtableTableWaitForReplicationSensor (#5974)	5
[CI] [ComputeLibrary] Use pre-built binaries instead of compiled (#8245)* [CI] [ComputeLibrary] Use pre-built binaries instead of compiledPre-built Compute Library binaries are now downloaded (credits to @leandorn)instead of on-site compilation.Change-Id: I9fd66ce02141813f02382b95351a382ccf775584* Added Apache 2.0 LicenseChange-Id: I3c2af1a86984f81c4ee9408925af9c51510a978f	4
Fixed typo in description in setup.py #grammarpolice	1
bug fix for verticaoperator	1
fix cuda half math function is undefined: hpow, htanh (#6225)	1
Fix typo in BREEZE.rst (#9199)Changed 'y' to 'by' since it was incorrect.	4
[AIRFLOW-1314] Rebasing against master	2
Merge pull request #1318 from jlowin/infer_dagSyntactic Sugar! Dag inference, operator composition, and a big docs update	5
[SYMBOL] Add __iter__ and GetChildren for symbol (#268)* [SYMBOL] Add __iter__ and GetChildren for symbol* [SYMBOL] Fix lint	0
Added "sharded" word to spellchecker (#10320)	1
[AIRFLOW-5661] Fix create_cluster method of GKEClusterHook (#6339)	1
[C++ RPC] fix typo to keep same with source code (#6220)Signed-off-by: windclarion <windclarion@gmail.com>	2
[MetaSchedule][Minor] Stability Improvements (#12014)* Fix tuning util for uint8.* Change to check runner_result.* Revert change to let cost model learn.	4
[AIRFLOW-6644][AIP-21] Move service classes to providers package (#7265)* [AIP-21] Move contrib.hooks.cloudant_hook providers.cloudant.hooks.cloudant* [AIP-21] Move contrib.hooks.databricks_hook providers.databricks.hooks.databricks* [AIP-21] Move contrib.hooks.datadog_hook providers.datadog.hooks.datadog* [AIP-21] Move contrib.hooks.dingding_hook providers.dingding.hooks.dingding* [AIP-21] Move contrib.hooks.discord_webhook_hook providers.ddiscord.hooks.discord_webhook* [AIP-21] Move contrib.hooks.gdrive_hook providers.google.suite.hooks.drive* [AIP-21] Move contrib.hooks.jenkins_hook providers.jenking.hooks.jenkins* [AIP-21] Move contrib.hooks.opsgenie_alert_hook providers.opsgenie.hooks.opsgenie_alert* [AIP-21] Move contrib.hooks.pagerduty_hook providers.pagerduty.hooks.pagerduty* [AIP-21] Move contrib.hooks.qubole_check_hook providers.qubole.hooks.qubole_check* [AIP-21] Move contrib.hooks.qubole_hook providers.qubole.hooks.qubole* [AIP-21] Move contrib.hooks.salesforce_hook providers.salesforce.hooks.salesforce* [AIP-21] Move contrib.hooks.segment_hook providers.segment.hooks.segment* [AIP-21] Move contrib.hooks.snowflake_hook providers.snowflake.hooks.snowflake* [AIP-21] Move contrib.hooks.vertica_hook providers.vertica.hooks.vertica* [AIP-21] Move gcp.hooks.gsheets providers.google.suite.hooks.sheets* [AIP-21] Move hooks.slack_hook providers.slack.hooks.slack* [AIP-21] Move hooks.zendesk_hook providers.zendesk.hooks.zendesk* [AIP-21] Move contrib.operators.databricks_operator providers.databricks.operators.databricks* [AIP-21] Move contrib.operators.dingding_operator providers.dindding.operators.dingding* [AIP-21] Move contrib.operators.discord_webhook_operator providers.discord.operators.discord_webhook* [AIP-21] Move contrib.operators.jenkins_job_trigger_operator providers.jenking.operators.jenkins_job_trigger* [AIP-21] Move contrib.operators.opsgenie_alert_operator providers.opsgenie.operators.opsgenie_alert* [AIP-21] Move contrib.operators.qubole_check_operator providers.qubole.operators.qubole_check* [AIP-21] Move contrib.operators.qubole_operator providers.qubole.operators.qubole* [AIP-21] Move contrib.operators.segment_track_event_operator providers.segment.operators.segment_track_event* [AIP-21] Move contrib.operators.slack_webhook_operator providers.slack.operators.slack_webhook* [AIP-21] Move contrib.operators.vertica_operator providers.vertica.operators.vertica* [AIP-21] Move contrib.sensors.datadog_sensor providers.datadog.sensors.datadog* [AIP-21] Move contrib.sensors.qubole_sensor providers.qubole.sensors.qubole* [AIP-21] Move operators.slack_operator providers.slack.operators.slack* Update docs	2
[TOPI][ARM CPU] fuse bias to depthwise conv2d (#1631)	1
Refactor to expose MakeOp functions to C++ (#6047)* Initial Refactor* add templated nn Make* functions* fix build typo* inline functions, fix unit tests	3
[AIRFLOW-5135] Use gapic ClientInfo in GoogleCloudBaseHook (#5749)Use from google.api_core.gapic_v1.client_info import ClientInfobecause this object inherits fromfrom google.api_core.client_info import ClientInfoand implements one additional method used by Python SDKs.	1
[AIRFLOW-335] Fix simple style errors/warningsCloses #1665 from skudriashev/airflow-335	2
[AIRFLOW-3148] Remove unnecessary arg "parameters" in RedshiftToS3Transfer (#3995)"Parameters" are used to help render the SQL command.But in this operator, only "schema" and "table" are needed.There is no SQL command to render.By checking the code,we can also find argument"parameters" is never really used.(Fix a minor issue in the docstring as well)	2
Increase timeout for building the docs (#15157)Sometimes when docs are building in parallel, it takes longerthan 4 minutes to build a big package and the job fails withtimeout.This change increases the individual package build timeout tobe longer (8 minutes instead of 4)	1
[AIRFLOW-606] Add requirements.txt for airflow-prCloses #1859 from zodiac/dev_pr_requirements	1
Minor addition to graph runtime debug (#3129)* print op names in graph runtime debug* fix lint	0
[AIRFLOW-5911] Simplify lineage API and improve robustness (#6564)This simplifies the lineage API which was needlessy cluttered.You can now set "inlets='auto'" rather than "inlets={'auto': True}"and airflow will figure out what to do.Co-Authored-By: Ash Berlin-Taylor <ash_github@firemirror.com>Co-Authored-By: Kaxil Naik <kaxilnaik@gmail.com>	1
Build system and dynamic library fixes (#283)* Install rules and dynamic library loading fixes.A batch of fixes:- Added 'install' rule to cmake and make, which installs runtime  headers and library (libtvm_runtime).- Added 'installdev' rule to make, which also installs the compiler  infrastructure headers and library (libtvm)- Added 'INSTALL_DEV' option to cmake, for toggling installation  of compiler infrastructure headers and library- cmake no longer builds into lib/ directory; instead all build  products go in your build directory- New algorithm for dynamic library loading, as described in #281.Signed-off-by: Edward Z. Yang <ezyang@fb.com>* Emit dylib on OS XSigned-off-by: Edward Z. Yang <ezyang@fb.com>* Lint fixes.Signed-off-by: Edward Z. Yang <ezyang@fb.com>	0
[ETHOSN] Add support for 20.11 Ethos-N driver stack release (#7506)- Updated ethosn relay backend to support 20.11 api changes. - Removed legacy support for 20.05. - Added a mechanism to specify the ethosn driver stack version.	1
Fix (and test) SQLTableCheckOperator on postgresql (#25821)	1
[AIRFLOW-6331] Pylint: Disable Missing Module Docstring (#6885)	2
Fixed dag view to not repeat edges	2
[Relay, Quantization] Quantize all fields of concatenate (#2913)	5
[AIRFLOW-119] Fix Template not found error and default tags for Qubole operator	1
Optimize the implmentation of swish operator (#10655)	1
Fix default values for Helm Chart (#12153)	2
[Torch] Frontend update to support PyTorch 1.10 (#9664)* wip* fixed converting maskrcnn* fixed nll los* fixed linspace* fixed deformable conv2d* control flow and rnn test had no problem* swap more import orders* qmv3 test is having weird segfault* cleanup* black	4
[AIRFLOW-3419] Fix S3Hook.select_key on Python3 (#4970)	1
[TUTORIAL] Onnx tutorial (#50)* add onnx* fix	0
[AIRFLOW-5386] Move Google Dataproc to core (#5986)For more information check AIP-21.	5
Fix task retries when they receive sigkill and have retries and properly handle sigterm (#16301)Currently, tasks are not retried when they receive SIGKILL or SIGTERM even if the task has retry. This change fixes itand added test for both SIGTERM and SIGKILL so we don't experience regressionAlso, SIGTERM sets the task as failed and raises AirflowException which heartbeat sometimes see as externally set to failand not call failure_callbacks. This commit also fixes this by calling handle_task_exit when a task gets SIGTERMCo-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	1
[AIRFLOW-6319] Add support for AWS Athena workgroups (#6871)	1
[NODE][PASS] Introduce config to PassContext. (#5631)This PR introduces a new config field to the PassContextto allow it store arbitary config values.To make sure that the config is validated, we allow each passto register the config key they would expect and the corresponding types.We also introduce a CreateObject from Map<str, Object> to allow config creationfrom a json-nest(like in vscode) in python.We added an example of UnrollLoopConfig.Followup PR should migrate the passes to use the new config field.	5
[Tensorize] Support conds depend on outer loop vars inside tensorize scope (#7497)* [Tensorize] Support conds depend on outer loop vars inside tensorize scope* Reformat	1
fuse constant padding into conv kernels (#7515)* fuse constant padding into conv kernels* change the kernel to support other layouts* add channel-last test* add a comment about bailing early	1
Convert selective checks to Breeze Python (#24610)Instead of bash-based, complex logic script to perform PR selectivechecks we now integrated the whole logic into Breeze Python code.It is now much simplified, when it comes to algorithm. We'veimplemented simple rule-based decision tree. The rules describingthe decision tree are now are now much easierto reason about and they correspond one-to-one with the rulesthat are implemented in the code in rather straightforward way.The code is much simpler and diagnostics of the selective checkshas also been vastly improved:* The rule engine displays status of applying each rule and  explains (with yellow warning message what decision was made  and why. Informative messages are printed showing the resulting  output* List of files impacting the decision are also displayed* The names of "ci file group" and "test type" were aligned* Unit tests covering wide range of cases are added. Each test  describes what is the case they demonstrate* `breeze selective-checks` command that is used in CI can also  be used locally by just providing commit-ish reference of the  commit to check. This way you can very easily debug problems and  fix themFixes: #19971	0
[AIRFLOW-5256] Related pylint changes for common licences in python files (#5786)	2
[AIRFLOW-521] Add IFTTT as Airflow userWe at IFTTT currently use Airflow to monitor andschedule all our Data Pipelines and ETLs.Closes #1805 from apurvajoshi/patch-1	5
[AIRFLOW-936] Add clear/mark success for DAG in the UIThis PR adds a modal popup when clicking circleDAG icon in Airflow tree view UI. It adds thefunctionalities to clear/mark success of theentire DAG run. This behavior is equivalent toindividually clear/mark each task instance in theDAG run. The original logic of editing DAG runpage is moved to the button "Edit DAG Run".Closes #2339 from AllisonWang/master	1
Use AsyncClient for Composer Operators in deferrable mode (#25951)	1
[AIRFLOW-4679] Make airflow/operators Pylint compatible (#7757)	1
AIRFLOW-3543: Fix deletion of DAG with rescheduled tasks (#4646)	2
Acknowledge related projects (#465)* [CODEGEN] Redo CodegenLLVM.* Add remarks about origin of the passProperly acknowledge related projects* Fix and expression	0
Improve guide about Google Cloud Secret Manager Backend (#10257)	1
Action log on Browse Views (#21569)	2
[AIRFLOW-XXX] Remove 'Setup Test Environment using MySQL' article (#5833)	1
Do not clear XCom when resuming from deferral (#22932)	5
[LINT] Expected, hence disable for a while. (#1212)************* Module nnvm.top.nnE:141, 8: Assigning to function call which doesn't return (assignment-from-no-return)	1
Chart: Add unit tests for limits and resources (#15621)	3
[AIRFLOW-3160] (Unrevert) Load latest_dagruns asynchronously (#5339)	3
Only list linked issues once in release issues (#20299)	0
closes apache/incubator-airflow#1488 *PR abandonned by submitter*	5
[AIRFLOW-657] Add AutoCommit Parameter for MSSQLCloses #1908 from robin-miller-ow/MsSqlAutoCommit	2
fixing redundant condition introduced by 2to3 with a compatible correct test	3
te_compiler_cache: reduce name length without loss of information (#9787)This can mitigate issues described in #8953 without increasing memory requirements	1
Add mod supoort in relay.build (#3424)	1
Run mini scheduler in LocalTaskJob during task exit (#16289)Currently, the chances of tasks being killed by the LocalTaskJob heartbeat is high.This is because, after marking a task successful/failed in Taskinstance.py and mini scheduler is enabled,we start running the mini scheduler. Whenever the mini scheduling takes time and meet the next job heartbeat,the heartbeat detects that this task has succeeded with no return code because LocalTaskJob.handle_task_exitwas not called after the task succeeded. Hence, the heartbeat thinks that this task was externally marked failed/successful.This change resolves this by moving the mini scheduler to LocalTaskJob at the handle_task_exit method ensuringthat the task will no longer be killed by the next heartbeat	0
Introduce BaseExecutor.validate_command to avoid duplication (#10033)	5
[AIRFLOW-6368][Depends on 6367] Move conf tests from test_core to test_configuration (#6925)	5
[TIR] Expose WMMA-related TensorCore builtins (#12589)This PR exposes the following TIR operation in python:`tvm_load_matrix_sync`: tested [here](https://github.com/apache/tvm/blob/cd8fd9121deb22b078c9fe73cd8a554e6e7a0e15/tests/python/unittest/test_tvmscript_roundtrip.py#L711)`tvm_store_matrix_sync`: tested [here](https://github.com/apache/tvm/blob/cd8fd9121deb22b078c9fe73cd8a554e6e7a0e15/tests/python/unittest/test_tvmscript_roundtrip.py#L913)`tvm_mma_sync`: tested [here](https://github.com/apache/tvm/blob/cd8fd9121deb22b078c9fe73cd8a554e6e7a0e15/tests/python/unittest/test_tvmscript_roundtrip.py#L860)`tvm_bmma_sync`: add new unittest`tvm_fill_fragment`: tested [here](https://github.com/apache/tvm/blob/cd8fd9121deb22b078c9fe73cd8a554e6e7a0e15/tests/python/unittest/test_tvmscript_roundtrip.py#L571)Co-authored-by: yongwww <yongcale@gmail.com>cc: @junrushao cc @Hzfengsy @junrushao1994Co-authored-by: yongwww <yongcale@gmail.com>	3
Update README.md	2
Move import at the top of the file (#12431)`from airflow.utils.state import State` is used in multiple functions.I suggested it in https://github.com/apache/airflow/pull/12384 but was missed	1
Fix caching for image builds (#22568)It turns out that the --link breakes remote caching strategyfor multi-staging builds. From test it seems thatthis strategy works best:* inline scripts in separate stage* removal of --link from COPY steps* keeping registry cache type* adding mode=max for cacheCombination of those two seems to work best to makecaching works.	1
Adding logging entry in CeleryExecutor to help debug	0
Store grid view selection in url params (#23290)* Add url params for dag_run_id and task_id* Persist other search params* simplify useSelection* delete extra params* remove API change	4
[Refactor] Relay Node::make to constructor (#5128)* relay Node::make to constructor* patternwildcard* Address comments	1
Do not seek error file when it is closed (#17187)We do not check if error file is closed before we seek it, which causes exceptions.Sometimes, this error file does not exist e.g when the task state is changed externally.This change fixes it by returning None when the file is closed so that custom text can be used for error.Co-authored-by: Jed Cunningham <66968678+jedcunningham@users.noreply.github.com>	1
fix vm doc	2
[PatternLang] Convert PatternGrouper to do pre-order, non-recursive analysis (#5653)* make the PatternGrouper iterate over the input Expr in a non-recursive pre-order fasion* add a comment	1
[TIR] Schedule Primitive: Add-Unit-Loop (#11575)In TE, a unit loop could be introduced by fusing an empty list of loops on a stage. This PR adds its counterpart in TIR, while being a bit more explicit with a new schedule primitive which adds a unit loop without impacting any existing functionalities.	1
update README.md with 1.10 in EOL state (#16556)	2
Correctly enable architecture extensions in CMSIS-NN Zephyr Demo (#10458)* Correctly enable architecture extensions in CMSIS-NN Zephyr DemoWithout `CONFIG_FPU` being set the correct architecture extensions weren't being applied which means the buffer sizes didn't necessarily match up - this corrects it so that they align.* Fix memory allocation in demoThe stack allocator forcibly aligns memory by removing parts of it which causes there not to be enough memory and the CMSIS-NN integration uses more stack than the demo with pure TVM operators (we should look to remove some of our stack usage)	4
Add `device_requests` parameter to `DockerOperator` (#23554)* Expose device_requests to DockerOperatorCo-authored-by: Tedi Papajorgji <tedi.papajorgji@hotmail.com>	2
Fix bug that log can't be shown when task runs failed (#16768)The log can't be shown normally when the task runs failed. Users can only get useless logs as follows. #13692<pre>*** Log file does not exist: /home/airflow/airflow/logs/dag_id/task_id/2021-06-28T00:00:00+08:00/28.log*** Fetching from: http://:8793/log/dag_id/task_id/2021-06-28T00:00:00+08:00/28.log*** Failed to fetch log file from worker. Unsupported URL protocol </pre>The root cause is that scheduler will overwrite the hostname info into the task_instance table in DB by using blank str in the progress of `_execute_task_callbacks` when tasks into failed.  Webserver can't get the right host of the task from task_instance because the hostname info of  task_instance table is lost in the progress.Co-authored-by: huozhanfeng <huozhanfeng@vipkid.cn>	5
[DOC] Capitalize TVM consistently (#3316)	2
Fix LocalBuilder on macos with python 3.8. (#6083)Python 3.8 changes the default way multiprocessing creates new processeson macOS from forking to spawing. Spawning requires all objects to bepicklable. Nested functions and lambdas are not picklable, so thiscommit fixes the one instance of nested functions in the codebase thatwas causing issues.	0
[AIRFLOW-509][AIRFLOW-1] Create operator to delete tables in BigQueryWe have a use case to delete BigQuery tables and views. This patchadds a delete operator that allows us to do so.Closes #1798 from illop/BigQueryDeleteOperator	4
[BYOC] CUTLASS integration (#9261)* byoc cutlass* add cmake and fix build* test worked but accuracy is bad* fixed argument printing properly* moving files* moving contents of cutlass_profiler into python/tvm/contrib/cutlass* run black* remove irrelavant codegen code* clang format* tried replacing sm 75 with 80, didn't help improve accuracy* remove irrelavant code from generator* tried dense + bias fusion but generated cu file does not compile* dense + bias worked after adding Leyuan's patch, bias + relu worked too* tried adding sm80 generator but accuracy is still off* remove GemmUniversal generator* cleanup partition and build* moved partition, profile and build function out of test* turned out the result match's TVM non-cutlass result. Numpy fp16matmul is busted?* clean up test* LinearCombination can be reused for bias only epilogue* remove unsupported epilogues like gelu* removing deadcode* unify gemm templates for with or without beta scaling* supported gelu but accuracy is slightly off* gelu test passed with relaxed rtol* cleanup* remove unused stuff from library.py* move profiler template into its own file* removed gemm_profiler.py* move contents of compile_engine.py into gen_gemm.py* rename to profiler_template.cu to avoid CI issue* cleaning up trying to pass pylint* add missing asf header* run black* fixing many pylint issues except wildcard import* fixed wildcard warning* add missing CUTLASS.cmake file, restore gemm_profiler.py* pylint* minor fix* add license* start filling in TODO doc* rename GemmProfiler to GemmProfilerEmitter* more renaming and doc* add doc to the main compile API* refactored generator* run black* black fix* finish doc TODO* add test for 32 bit accum* fixed kernel generator to correctly handle fp32 accum* revise build-related API* add option to profile only one kernel* add option to enable parallel compilation* clean up gen_gemm* doc update* profile_cutlass_kernels -> tune_cutlass_kernelsCo-authored-by: leyuan.wang <leyuan.wang@bytedance.com>Co-authored-by: Masahiro Masuda <masahi129@gmail.com>	2
Add SageMakerDeleteModelOperator (#21673)* Implement SagemakerDeleteModelOperator	4
Unpin 'tornado' dep pulled in by flower (#10993)'tornado' version was pinned in https://github.com/apache/airflow/pull/4815The underlying issue is fixed for Py 3.5.2 so that is not a problem. Also since Airflow Master is already Py 3.6+ this does not apply to us.	0
Rename dim_var to axis, update testcases	3
[Target] Improve string interpretation in Target creation (#12152)- SplitString now preserves escape sequences, but still observes  quote characters.- Added function Interpret that transforms given string according  to interpretation rules:  - outermost quotes are removed (if present),  - escape sequences inside quotes are preserved verbatim,  - unquoted escape sequences produce the escaped character (the    escape character (\) is removed.- Interpretation happens every time a value of any type is to be  parsed from a string, e.g. Array<String> will first be parsed  as an array, then substrings of the input will be parsed as  individual elements of that array. In this case, some parts of  the initial input will be parsed (and interpreted) twice.- Implement corresponding stringification functionality.This new scheme enabled encoding nested arrays of string with anydegree of nesting. For example  "-field='\\'foo0\\',\\'bar0,bar1\\'','\\'zing0,zing1\\',\\'fred\\''"would correspond to the target kind attribute  Array<Array<Array<String>>>("field"))and have the value { { {foo0}, {bar0, bar1} }, { {zing0, zing1}, {fred} } }	1
Update to the released version of DBSQL connectorAlso added additional parameters for further customization of connectionif it's required	1
Fix typo in test_connection_schema.py (#9241)	3
[LLVM] Represent alignment information in LLVM IR (#5598)	5
Migrate Google example bigquery_to_mssql to new design AIP-47 (#25174)related: #22447, #22430	1
fix relu tests (#1149)	3
Fix type annotations in SkipMixin (#25864)	0
Compare taskgroup and subdag (#20700)	2
Drop trailing whitespace (#3331)	4
[AIRFLOW-XXX] Update readme for Lyft (#5198)	5
Get Airflow configs with sensitive data from CloudSecretManagerBackend (#11024)	5
[TIR] Handle DeclBuffer in ToSSA (#12679)	0
Revert "Support google-cloud-tasks>=2.0.0 (#13334)" (#13341)This reverts commit 1f712219fa8971d98bc486896603ce8109c42844.	4
[Frontend][TensorFlow]Fix TF Dynamic input shape (#5825)* Fix TF Dynamic input shape* Remove warning* Add test	3
Fix external_executor_id not being set for manually run jobs (#17207)	1
Add missing states in TaskGroup state (#11626)These states were not applied to TaskGroup in Graph View. This PR addsthem: removed, scheduled, running, shutdown and sensing	1
[OP] Fix reduce op problem when axis=None (#2436)	0
Remove cattrs from lineage processing. (#26134)Cattrs was used for two reasons:1. As a hacky way of forcing templated fields on classes2. As a way to store the outlets in XCom without needing pickle1 has been fixed in core for a while now and classes can have  "template_fields" properties (deeply)2 is now done by using a combo of BaseSerialization and `attr.asdict`	1
Adding pools entry to docs	2
Add type annotations for AWS operators and hooks (#11434)Co-authored-by: Tomek Urbaszek <turbaszek@gmail.com>	1
[DOC] Grammar fix (#7824)A grammar fix for runtime document.Co-authored-by: Joey Tsai <chunit@qti.qualcomm.com>	2
[TIR]Show meaningful message when input shape size mismatch with expected size. (#9863)[Issue]When the transform function get a input data with incorrect shapesize, the error message for example "src_shape.size() == src_axis.size()(6 vs. 4)" will be printed out, but the said message not provide enoughinformation to help trouble shooting.[Solution]Add more meaningful error message.Co-authored-by: hua jiang <hua.jiang@xilinx.com>	0
Add typing coverage to mysql providers package (#10095)	1
[TIR] Tighten up invariance of CopyOnWrite in recursive stmt visitor (#8358)	5
[AIRFLOW-6121][API-21] Rename Cloud Build service class (#6771)	5
Use travis instead of tox to set cache dir	1
rebase (#10525)Co-authored-by: driazati <driazati@users.noreply.github.com>	1
Add docs to change Colors on the Webserver (#9607)Feature was added in https://github.com/apache/airflow/pull/9520	1
[TIR] GetBlockReadWriteRegion (#8875)* [TIR] GetBlockReadWriteRegion* Fix black issue* Use constant reference for the interface* Fix lint issue	0
[MetaSchedule] Filter vector_load_lens based on buffer dtype (#12408)This makes the same config generic to work across workloads with different types.	1
[JSON] attr->attrs in node attribute, keep backward read compatible (#152)	5
[AIRFLOW-925] Revert airflow.hooks change that cherry-pick pickedPlease accept this PR that addresses the followingissues:-https://issues.apache.org/jira/browse/AIRFLOW-925Testing Done:- Fixes bug in prodCloses #2112 from saguziel/aguziel-hivemetastorehook-import-apache	2
Create "major changes" section in UPDATING.md (#10100)	5
Disable rebase workflow (#23943)The change of the release workflow in #23928 removed the reasonwhy we should have rebase workflow possible. We only needed todo rebase when we merged test branch into stable branch andsince we are doing it manually, there is no more reeason tohave it in the GitHub UI.	3
Adding visibility as to which dag is pickleable	2
[AIRFLOW-7056] Selective backport packages build (#7712)	5
[RUNTIME][REFACTOR] Use new to avoid exit-time de-allocation order problem in DeviceAPI (#6292)	0
[AIRFLOW-XXX] 1.8.2 release notesCloses #2562 from mistercrunch/release_182	1
Two small fixes to AMDCPU codegen for LLVM 10+ and ROCm 3.5+ (#5920)- For LLVM 10+ we need to avoid calling Align with 0, or else  we get a crash.- For ROCm 3.5+ we need to use code object 3 (the default in LLVM 9+)  but for ROCm < 3.5 we want the code object 2.- As we want to separate codegen from the API, we need to add  a device api query for the version.  But every one else wants now one, too. (But I only filled it  in for CUDA for now.)- I'm throwing in an addition of kMaxRegistersPerBlock for ROCm.  This was introduced for CUDA in #5898.	1
Add Nav to INTHEWILD (#12059)	1
Fix breeze redirect on macOS (#14506)	0
Chart: fix running with uid 0 (#17688)	1
fix things (#9146)Co-authored-by: Andrew Zhao Luo <andrewzhaoluo@system76-pc.localdomain>	5
[AIRFLOW-5204] Shellcheck + common licences + executable shebangs in shell files (#5807)* [AIRFLOW-5204] Shellcheck + common licence in shell files	2
[NNVM][KERAS] Support multiple outputs (#1648)	1
Chart: Fix Elasticsearch secret created without Elasticsearch enabled (#16015)* Fix elasticsearch secret created without elastticsearch enabled* Update chart/templates/check-values.yamlCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>* fixup! Update chart/templates/check-values.yamlCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	2
Remove SQLAlchemy <1.4 constraint (#16630)This was added due to flask-sqlalchemy and sqlalchemy-utils not declaringthe upper bounds. They have since released sqlalchemy 1.4-compatibleversions, so we can remove that hack.Note that this does *not* actually make us run on sqlalchemy 1.4 sinceflask-appbuilder still has a <1.4 pin. But that's for flask-appbuilderto worry about -- code in Airflow is compatible, so we can remove theconstraint now, and get sqlalchemy 1.4 as soon as flask-appbuilderallows us to.	1
Revert "Adjust built-in base_aws methods to avoid Deprecation warnings (#19725)" (#19791)This reverts commit 4be04143a5f7e246127e942bf1d73abcd22ce189.	4
Define elements that can be fetched using the command.Document precedence rule.Tweak test to check other elements	3
Heartbeat in the wrong place	0
add onnx resize v10 and unit test (#6726)	3
Fix pylint issues in airflow/models/dagbag.py (#9666)	2
[AIRFLOW-5479] Normalize gcp_conn method in GCP Kubernetes Hook (#6099)	1
changed vertica_operator color	1
AIRFLOW-52 Warn about overwriting tasks in a DAG	2
[Tutorial] Cache the test data in tutorial (#2923)	5
[Meta Schedule][M3a] SpaceGenerator  (#9079)* Add meta shedule space generator.Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>* Clean up.* Minor fix.* Move utils.h.Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>	1
[MetaSchedule] Integration test for CUDA AutoTensorization (#12142)* [MetaSchedule] Integration test for CUDA AutoTensorization* cleanup* fix	0
fix	0
[AIRFLOW-6531] Initial Yandex.Cloud Dataproc support (#7252)* [AIRFLOW-6531] Initial Yandex.Cloud Dataproc support* [AIRFLOW-6531] Move from contrib to providers. Drop py2 support* [AIRFLOW-6531] Add service account support to YC connection* [AIRFLOW-6531] Use Dataproc wrapper* [AIRFLOW-6531] Move base classes to init to test "test_providers_modules_should_have_tests"* [AIRFLOW-6531] Add type annotations. Remove op base class* [AIRFLOW-6531] Add cluster id to templated fields	1
[skip ci][ci] Fix stale test in teams tagging (#10920)This is failing in `main` but as of 8e438683a4a815ae2d5b528360ae0f111501b607 it's not used anymoreCo-authored-by: driazati <driazati@users.noreply.github.com>	1
Fix "Top level Python Code" links in best practices doc (#19913)	2
misc: create new process group by `set_new_process_group` utility (#24371)	1
[RELAY][RUNTIME] Add Relay interpreter and compiler for TVM runtime system. (#1954)	5
Revert "[Relay] Expand type unification and other utilities" (#2434)	4
Add configurable scheme for webserver probes (#22815)* Add configurable scheme for webserver probes- add scheme to webserver probes- update values schema- add unittest	3
add memoized expr translator for use by backend codegen (#5325)	1
Speed up `has_access` decorator by ~200ms (#22858)Using the ORM to create all the Role, Permission, Action and Resourceobjects, only to throw them all away _on every request_ is slow. Andsince we are now using the API more and more in the UI it's starting toget noticeableThis changes the `user.perm` property to issue a custom query thatreturns the tuple of action_name, permission_name we want, bypassing theORM object inflation entirely, and since `user.roles` isn't needed inmost requests we no longer eagerly load that.* Fix testsCaching issues that only crop up in tests (but not ever a problem in therequest life cycle of webserver	0
Migrate Postgres example DAGs to new design #22458 (#24148)* Migrate Postgres example DAGs to new design #22458* Fix static checks	0
Add missing comma in docs for KubernetesExecutor (#15035)	2
[AIRFLOW-4199] Remove all sys.version_info[0] == 3 (#5019)	5
[AIRFLOW-2983] Add prev_ds_nodash and next_ds_nodash macro (#3821)	1
[relay] Changed 'name' field to 'registry_name' for Executor and Runtime (#10466)* [relay] Changed Executor and Runtime 'name' field to 'registry_name'Changed 'name' field to 'registry_name' for Executor and Runtime pythonwrappers as it clashed with tvm object attribute 'name' which made the latterinaccessible from PythonChange-Id: I917755753549edfe1d3090ca9ca4512de552c4bdchanged name to registry_nameChange-Id: I9feb5b33b7b6f6f8421902e5721167f585cc4193* more fixed unit testsChange-Id: Ie2e96297fda119e1b726b196a59deae95b263a07* typo fixedChange-Id: Id579c50ab58dfb25fa18436265e0701ebbd9d554* renamed registry_name to flag_registry_nameChange-Id: Iabbd81069959f05c073f9dbc8d10fb31dd05f7a3* bugfix	0
Add support for three-legged OAuth for Google connections. Useful for developer-mode.	1
Constraint CI scripts are now separated out (#10404)Part of #10368	5
[USMP] Add performance characteristics to PoolInfo (#10005)* [USMP] Add performance characteristics to PoolInfoScheduling algorithms that wish to optimize aroundmemory pools require further information about theperfomance characteristics of those pools. Thiscommit adds clock frequency, bandwidth, latency andburst length as optional fields to PoolInfo.Change-Id: I4cf3f35324d093fb38e874f0f2e587cb84d4ba1e* Remove unused importChange-Id: I1e2ef885425f4361b80c2bab9261ec129e61a756	4
[AIRFLOW-2509] Separate config docs into how-to guidesAlso moves how-to style instructions for loggingfrom "integration" pageto a "Writing Logs" how-to.Closes #3400 from tswast/howto	2
[AIRFLOW-406] Sphinx/rst fixesDear Airflow Maintainers,- Fix some syntax errors in our sphinx/rst docstrings, which appears on pythonhosted.org- Move `xcom_push` documentation from constructor to class docstring- Rewrite some copy in `HivePartitionSensor` and `NamedHivePartitionSensor` docstrings- Fix `AirflowImporter` docstring that seems to have been automatically search-and-replacedCloses #1717 from zodiac/xuanji/fix_documentation	2
Merge pull request #112 from mistercrunch/flowerFlower shortcut added to the client tools	1
[VTA] Support network which have no unique operator as start/stop name for graph pack. (#4703)* [VTA] Support network which have no unique operator as start/stop namefor graph pack.[Issue]  Current vta use 'start' and 'stop' name to define the pack start point  and end point, but this method not work for these network which have  no 2 unique operator as  start point and stop point.[Solution]  In this solution we give 2 addtional parameters start_name_indx and  stop_name_indx to make vta pack logic work with the said network,  for exampl for following networks which have no unique operator,  %0 = nn.add  %1 = nn.conv2d  %2 = nn.batch_norm  %3 = nn.leaky_relu  %4 = nn.add  %5 = nn.conv2d  %6 = nn.batch_norm  %7 = nn.leaky_relu  %8 = nn.add  with this solution we can use following parameter format to make  vta work on it.  relay_prog = graph_pack(                //....                start_name="nn.add",                stop_name="nn.add",                start_name_idx=0,                stop_name_idx=4)  to apply on new network, by printing the network we can get index information like following.  print(mod.astext(show_meta_data=False))  relay_prog = graph_pack(mod                          ...                          start_name="nn.add",                          stop_name="nn.add",                          start_name_idx=0,                          stop_name_idx=4)* address review comments and fix index count bugissue:when do print(mod), the output not only the Call is also have other typelike Var, need add logic to count all except meta.solution:add related logic* address review comments.* address review comments* add more detail comments.	1
Add changelog for 1.7.0	4
Add copy button to Code Blocks in Airflow Docs (#9450)	2
[CI] Add m6g instance (ARM64) to mainline CI (#6804)* [CI] Add m6g instance (ARM64) to CI (#6781)* [CI] Add m6g instance (ARM64) to CI* address commentsCo-authored-by: Ubuntu <ubuntu@ip-172-31-54-90.us-west-2.compute.internal>* [CI] fix cpp test (#6796)* Update tests/python/unittest/test_target_codegen_x86.pyCo-authored-by: Cody Yu <comaniac0422@gmail.com>Co-authored-by: Ubuntu <ubuntu@ip-172-31-54-90.us-west-2.compute.internal>Co-authored-by: Tianqi Chen <tqchen@users.noreply.github.com>Co-authored-by: Cody Yu <comaniac0422@gmail.com>	1
Add Dcard to the list of companies using Airflow (#18521)	1
Update README.md file in /templates/variables	2
Release 2.0.0beta1 (#12215)	5
[Topi, Relay] Add cumprod (#7722)* make cumbinop, refactor cumsum, add cumprod* cumsum exclusive test* Add cumprod + flesh out cumsum testsadd cumprod and testsreinstate testsrethink* add rudimentary scan implementation* add attributes of cumprod node* add cumprod strategy* add cuda strategy* python relay node construction* change attrs to be reusuable* add cumprod nodes* complete tests* Fix some typos about sum --> prodtypos fix sum -> prodmore typosmore typo fixesmore typosadd doc strings* Use Bool instead of int to represent exclusivemake exclusive a bool up and down stackfix xfix bool errit is a bool nowfixfix thingformatting to pass linterlint pythoncumprod pylintfix attributefix orderingadd exclusivity tests for end to endfix thingscuda identity_value* Overall improve formatting, add doc message correctionssimplify constructionclang-formatmore testsundo simpler construction due to function passing stufffix docsmore exclusive doc changesmore fixins"* merge cumsum and cumprod to scan, merge testsfix stuff* remove other mentions of cumbinop -> scanop* lint formattingCo-authored-by: Andrew Zhao Luo <andrewzhaoluo@Andrews-MacBook-Pro.local>	4
removing requirements.txt as it is uni-dimensional	5
[PythonOperator] pass a dict of templates to get templatified	1
[AIRFLOW-6140] Add missing types for some core classes (#6702)	1
Alphabetizes two tables (#23923)The rest of the page has consistently alphabetized tables. This commit fixes three `extras` that were not alphabetized.	0
Fix mistake and typos in doc/docstrings (#15180)- Fix an apparent mistake in doc relating to catchup- Fix typo pickable (should be picklable)	2
Fix field relabeling when switching between conn types (#19411)	0
Fix mixup up shadowed ImportError in db_cleanup (#21862)TableConfig requires models.ImportError, while the try/excepton line 128 requires the builtin ImportErrorThis was causing errors when running with k8 scheduler,without having celery packages installed.	1
Make mypy happy with airflow.executors.local_executor (#11944)This is an odd one -- in making a change in another file, this startederroring - I guess it gets confused about the fork, but I'm not surewhat changed to cause this to become a problem.	0
add version for compatibility	1
Expose option: look_for_keys in ssh_hook via extras (#8793)	1
[Doc] Replace module path to Class with just Class Name (#13719)Instead of `the airflow.executors.sequential_executor.SequentialExecutor`just have `SequentialExecutor with the link to the actual class.	2
Adds documentation about custom providers. (#12921)Closes: #11429	1
Merge pull request #166 from airbnb/contextFix context bug	0
[AIRFLOW-5705] Fix bug in Secrets Backend (#7742)	0
fix rpc server proxy connect (#290)	0
[BugFix][TVMScript] Fix printer for dependent loops (#9506)	0
[Relay] Support for PyTorch Non-Maximum Suppression (#6314)* [Relay] Support for PyTorch Non-Maximum Suppression* fix comment* add verify_model_vm	1
Fix Writing Serialized Dags to DB (#9836)	5
[UnitTests][CMSISNN] Mark CMSISNN with skipif they are missing libraries (#9179)* [UnitTests][CMSISNN] Mark CMSISNN with skipif they are missing librariesShow test as skipped, rather than failing test.* Added tvm.testing.requires_cmsisnn	3
[AIRFLOW-5443] Use alpine image in Kubernetes's sidecar (#6059)	1
[Hexagon][CI] Re-enable Hexagon tests in CI (#11613)* [Hexagon][CI] Re-enable Hexagon tests in CIThese were enabled in https://github.com/apache/tvm/pull/11294, thenerroneously disabled in https://github.com/apache/tvm/pull/11313.This applies the same fix as inhttps://github.com/apache/tvm/pull/11294, checking the`ANDROID_SERIAL_NUMBER` to determine if Hexagon tests can execute atruntime, but using the refactored `pytest.skipif` messages introducedin https://github.com/apache/tvm/pull/11313.* Fixed circular dependency, but feels somewhat ugly	0
[Relay][Frontend] Fix MxNet RNN without providing state initialization as input (#3326)	5
[Pass] Profiling TVM compiler passes (#7500)* basic pass profiler prototype* allow enable/disable of pass profiling* lint* add example pass profiler usage as test* render pass profiles to String instead of stdout	2
[AIRFLOW-5468] Fix PubSub system test class name (#6085)	3
[core] Closing db connection during execution	5
Update instructions to signify commands as breeze environment commands (#17366)The earlier instructions indirectly indicate that the commands that havebeen modified by this commit will be executed outside the breezeenvironment. Update the instruction to be more clear and also indicatethat these will be executed as airflow commands within the breeze CIenvironment.	5
[AIRFLOW-6910] Fix kill_zombie method call (#7531)	0
Support runtime defined function wrapping of library module packed functions (#9342)* Expose DSOLibrary and add documentation.* Allow runtimes to specialize library module functionwrapping by providing a PackedFunctionWrapper objectat construction.* Apply clang formatting.* Use std::function.* Minimize DSOLibrary interface.* Add param and return documentation to PackedFuncWrapper type alias.	2
Merge pull request #52 from mistercrunch/master_jobAdding stacked and percent area charts	2
[ROCM] DP4A intrinsic support for TE/TIR (#11009)* [ROCM] Support dp4a on AMDGPU by sdot4 intrinsiccommit 0225f2bfe3f413cd4764c2dba6c922af2520146bAuthor: Masahiro Masuda <masahi129@gmail.com>Date:   Thu Apr 14 08:56:10 2022 +0900    share op strategy between cuda and rocmcommit 762c7e8611c9ec3cca3321428e2362c81fe89b9bAuthor: Masahiro Masuda <masahi129@gmail.com>Date:   Thu Apr 14 08:28:34 2022 +0900    fixed rocm batch_matmul strategy for mixed i8i8i32commit ce53e8d141f7f901303ec6a91674337cbf2b2384Author: Masahiro Masuda <masahi129@gmail.com>Date:   Thu Apr 14 06:17:30 2022 +0900    add rocm sdot4 TIR intrincommit f4562b991f9180b61be7339b2890de1584656c10Author: Masahiro Masuda <masahi129@gmail.com>Date:   Thu Apr 14 06:03:44 2022 +0900    rocm sdot4 workscommit 6cc62805f82dd884a18a1c4c0e9bae5866e00da0Author: Masahiro Masuda <masahi129@gmail.com>Date:   Thu Apr 14 05:32:07 2022 +0900    more wipcommit 0602f4a3157d4cb5a3f280a3a3c514bb6535aac8Author: Masahiro Masuda <masahi129@gmail.com>Date:   Thu Apr 14 03:47:37 2022 +0900    Squashed commit of the following:    commit 65b8bcf955f44540d6a52c8416e60f3047c8366c    Author: Masahiro Masuda <masahi129@gmail.com>    Date:   Wed Apr 13 20:36:49 2022 +0900        [WIP] adding DP4A support to rocm    commit 4f8f308ab6bb85ef3bdcc2b8e846c2eea15f2167    Author: Masahiro Masuda <masahi129@gmail.com>    Date:   Wed Apr 13 14:03:25 2022 +0900        Squashed commit of the following:        commit 1711be38a17e3b6171350009f1da05824cd0b340        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 13 13:11:40 2022 +0900            fixed condition for real        commit 8a48fb5262e80e318cd81d5ff51bf95fd5eb576e        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 13 09:57:42 2022 +0900            Revert "Skip applying sch_rule when both ann and sch_rule are defined"            This reverts commit 4915c6a5a91ff87038e71f8aff9f31db684b4a95.        commit daea033d2cb06388ef27ddadb80fc5bce72181d2        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Mon Apr 11 09:31:05 2022 +0900            [Metaschedule] Support rocm and spirv        commit eb0cae2c779808cced074d189e8f487bf46ea89f        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 13 07:25:04 2022 +0900            dp4a works        commit 4915c6a5a91ff87038e71f8aff9f31db684b4a95        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 13 06:13:45 2022 +0900            Skip applying sch_rule when both ann and sch_rule are defined        commit 7b3d71c6b21a9c5de9ef2b89d0a7db2800a5f3a2        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 13 04:40:31 2022 +0900            fixed intrin description        commit 7666cd7a5b0ce182791662673fbe45944c84d0ae        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Tue Apr 12 19:59:47 2022 +0900            add DP4A intrin        commit 7086bdb75546a2680d12dc8f80c040cea23f729a        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Tue Apr 12 19:03:44 2022 +0900            works        commit db343974bfae86e51078e40e6170022a782d8e0a        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Tue Apr 12 12:49:52 2022 +0900            more hack to tensorize loop mapping to make resnet50 e2e work        commit 2409674a7884a60beb50d7aa3345c4b907b8cd13        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Mon Apr 11 13:40:59 2022 +0900            wip support pad + qnn.conv2d folding        commit 613cb7ec33b6df41f1ebe0f0a0ac8eca7c73cff1        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Sun Apr 10 12:04:08 2022 +0900            hack to tensorize loop mapping to make conv2d work        commit 9e4f9df6a409396a8a4a20d967c4f51accf5d210        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Sun Apr 10 11:34:13 2022 +0900            wrap tensorize with try/catch        commit d4b496d858da0ae43063d47cb03a28b803d0269f        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Sun Apr 10 11:33:39 2022 +0900            revert change in task_scheduler.cc        commit 476129be7b286f5d109402280aea585e89f6dc1d        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Sat Apr 9 05:54:10 2022 +0900            try / catch in ThreadedApply        commit d8226ff26f25eba17d4000f25131822874bdc2cc        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Fri Apr 8 17:17:59 2022 +0900            filter out invalid candidate        commit 2632899a2759885d338e25f2a25ba0b2c555f0c3        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Fri Apr 8 10:09:48 2022 +0900            try graceful exit in parallel_for_dynamic        commit 9d6741c3dd29c4dde861aa1d3b2ca85f560f5ac6        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Fri Apr 8 09:35:51 2022 +0900            [QNN] Fix broadcast for invalid axis        commit 6ccde0959343ce4246ef99505b4f54de469a1a5c        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 20:51:15 2022 +0900            refactor rewrite_tensorize        commit 2ce206699f10b03b9611c4683018f7e0c70c7eb5        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 20:48:17 2022 +0900            allow missing schedule_rule in post order apply        commit 3a69353a29abfc454e28d4e530d22a3e2043712e        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 19:42:48 2022 +0900            refactor rewrite_tensorize        commit 43e0b2f7f98299679807aaf1ffb13cce2b5f5ce3        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 18:25:14 2022 +0900            rewrite_vnni -> rewrite_tensorize        commit 823797e2627a9bfa812b72019468569ee79eb4c6        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 18:12:12 2022 +0900            VNNI -> WithIntrin        commit 4284a47e5933aa89c1c3362b15ad53b14782fc81        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 17:45:41 2022 +0900            introduce TileForIntrin        commit b87ef32e30e1e71b3f39789f7289976a8cba4ab4        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 17:34:04 2022 +0900            move TilingwithTensorIntrin to auto_tensorize.cc        commit 2fc118b3726586ba13f7de950beaa299b83a0af3        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 17:28:45 2022 +0900            clean up headers        commit d8b2aa325c91b524bec22dc1ec2fc52c9f060fce        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 17:09:32 2022 +0900            clean up using namespace        commit eb05d25e2b71f4a1232a8796d1413011ec7629d3        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 17:03:05 2022 +0900            refactored init        commit 5e6b0a08d447c0470c2c8a993e4bd62673e34fe3        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 16:57:14 2022 +0900            compiled        commit 2b8c430e2fec7ceb285eed7bc7aa73bb9a74a997        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 12:51:55 2022 +0900            wip MultiLevelTiling refactor        commit 7c21a9fea0511c88bd82f49f799b5198252df40a        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:58:33 2022 +0900            function doc string not supported by tvmscript        commit 40f9742bc9c3aa11e8c2c0551d1827ad47fc0f39        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:56:45 2022 +0900            update vnni intrin name        commit 4814f825a5315efd2a3da8c36d2ce6b5df5447cd        Merge: e0c5eb84b 07bbb38f7        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:44:47 2022 +0900            Merge branch 'tir-tensor-intrin' into auto-tensorize-vnni        commit 07bbb38f7fb52db4a2ecde3d5c87cf4d5cd000a1        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:24:56 2022 +0900            more lint fix        commit 15e60b42362cc64b1428b219c8eada414d1b8372        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:16:08 2022 +0900            black        commit 7a757fe53758e06418ea1367b348b47c8cd2dcf9        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:12:54 2022 +0900            pylint        commit 9a3e508b6f4529158e703b4617f2ddaa351a89eb        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:58:52 2022 +0900            simplify import        commit d8e43ecf1c0a79a2c195ff31e1e699a447a11335        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:52:50 2022 +0900            use vectorlow/high in arm intrin        commit 625cd2774ec455307646b0c26bb3971d89613d1e        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:34:57 2022 +0900            fixed offset factor        commit 69e72b6b612588e670937e003435afa647030ceb        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:12:02 2022 +0900            Add ARM intrin        commit 1351fdea6b22f231a290a6c28e06732c9cf993cf        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 08:27:27 2022 +0900            use buffer syntax sugar        commit 0ced85fd097ed48aad8714912718d8735791e1fb        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 08:17:43 2022 +0900            rename vnni.py to x86.py        commit 38a5aca87ec438446593a3af17760339211f5ad9        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 07:24:44 2022 +0900            add VNNI unittest        commit 88b763ec48c20cf68db8bc3bae3fa3ae78996ee8        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 07:10:06 2022 +0900            refactored existing test using VNNI intrin        commit 711a0076d9be2b9aa80ada67e1edda5ba1fdf1fd        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 07:04:58 2022 +0900            [TIR] Add VNNI dot product intrinsic for TIR        commit e0c5eb84bf6a0ad2ba0cddc4bdf22a799dc4b8a0        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:42:26 2022 +0900            merge fix        commit b171748139e53f0cf75ff4b6fde436f9d8a5fe91        Merge: 71fe3bdf0 82e152a3c        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:33:59 2022 +0900            Merge branch 'tir-tensor-intrin' into auto-tensorize-vnni        commit 71fe3bdf02ae10ddbe090a4fd1020f545a05bb41        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 06:57:38 2022 +0900            move tensor intrin under tir        commit 0c51badef45af2a1025ab42fe38d1b3f07ab493e        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 06:12:39 2022 +0900            remove log        commit fed910e03eb94c169d4a160b8f3cad406d04c6aa        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 06:11:22 2022 +0900            more revert        commit 7150aff9fba167d88dbfb40d48727de8a144b9c0        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 06:10:44 2022 +0900            revert stmt_functor change        commit 155107b98b09c5e5cc7f19afbd327b0557a02843        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 06:10:09 2022 +0900            refactored RewriteVNNI a bit        commit ca15255e3a882b89b05bb83079640c929fb63096        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 05:41:13 2022 +0900            add RewriteVNNI        commit dc9f71d5e3122b50fa8ae6a4462f959f13870b05        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 05:38:56 2022 +0900            vectorized init loop        commit fcc31ee20ddfafd47f566bf98ff40a9f684d12eb        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 04:55:36 2022 +0900            tensorize worked        commit 2b534377a45b9ab84bf35c3d7c03ecae7616d17f        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 6 19:11:05 2022 +0900            TilingwithTensorIntrin works        commit 86baa31e773fc864f77dc113bc9a93b79f3fc652        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Wed Apr 6 08:58:27 2022 +0900            Ported auto-tensorization code        commit 82e152a3c91144041ade783116a50565ebb48b89        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:24:56 2022 +0900            more lint fix        commit 88d9bdd3b21302bc2dd068a990df15c375a1a8ef        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:16:08 2022 +0900            black        commit 31fe7eb8075445161d804d170772eac8e90d3425        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 11:12:54 2022 +0900            pylint        commit 7876754effc40ad089349534dacd75df19d38fc4        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:58:52 2022 +0900            simplify import        commit 56f2e9a85069426021e2872eb1da95bf134ac7e0        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:52:50 2022 +0900            use vectorlow/high in arm intrin        commit 995cc8d6fcec70a3fadcfb1c6fee7b9f0b5a0951        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:34:57 2022 +0900            fixed offset factor        commit 86bbd4955b34257d68d957cb4a2536aea3ef9bac        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 10:12:02 2022 +0900            Add ARM intrin        commit 120fd96e80307b4301ee3fc93e6793e0b40485f0        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 08:27:27 2022 +0900            use buffer syntax sugar        commit 0f0682d00c3961afd1f492ae55f180c5b5502767        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 08:17:43 2022 +0900            rename vnni.py to x86.py        commit f88c31ead1fa6db4bfd2c88eeaf5f665e4c6dddb        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 07:24:44 2022 +0900            add VNNI unittest        commit 6cc80094adac398762924b0b31a4c741417ba9dc        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 07:10:06 2022 +0900            refactored existing test using VNNI intrin        commit 11a29c704cdaad96aeeca39c9c753ef006d27a50        Author: Masahiro Masuda <masahi129@gmail.com>        Date:   Thu Apr 7 07:04:58 2022 +0900            [TIR] Add VNNI dot product intrinsic for TIR* cleanup* black* update dot prod intrin* add mattr kind* conv2d topi test working* add dense and bmm test* add conv2d relay test* add tir intrin test* pylint	3
Update README.md (#6063)Add BigQuant to list of current users	1
[Hexagon] Refactor directory structure to accommodate new runtime (#9354)* Move hexagon runtime files used for ARM offload to Hexagoninto runtime/hexagon/android and runtime files compiledfor hexagon into runtime/hexagon/hexagon. Use commonhexagon_module.h for both hexagon and android runtimes.* Apply clang formatting to hexagon files on main.* Apply cpp-lint	2
Adding slot pool management to Airflow	1
Improve gemm tutorial (#800)	1
[AIRFLOW-2140] Don't require kubernetes for the SparkSubmit hook (#3700)This extra dep is a quasi-breaking change when upgrading - previouslythere were no deps outside of Airflow itself for this hook. Importingthe k8s libs breaks installs that aren't also using Kubernetes.This makes the dep optional for anyone who doesn't explicitly use thefunctionality	1
[AIRFLOW-4117] Travis CI uses multi-stage images to run tests (#4938)	3
Merge pull request #1246 from jlowin/docsDocumentation updates	5
Set default logger in logging Mixin (#20355)Co-authored-by: Dmytro Kazanzhy <dkazanzhy@demandbase.com>	5
Update changelog for 1.8.0	4
adding Leandro to committers (#7999)	1
Add beagleboard ai, thunderx and stm32mp1 to the arm_cpu target. (#6501)* Add beagleboard ai, thunderx and stm32mp1 to the arm_cpu target.Signed-off-by: Tom Gall <tom.gall@linaro.org>* updates from black on target.pySigned-off-by: Tom Gall <tom.gall@linaro.org>	1
Revert "[AIRFLOW-916] Remove deprecated readfp function"This reverts commit ef6dd1b29b794c5e0fd4f2bc8422a386395950f5 whichbroke webservers.	4
[AIRFLOW-5233] Fixed consistency in whitespace (tabs/eols) + common problems (#5835)* [AIRFLOW-5233] Fixed consistency in whitespace (tabs/eols) + common problems	0
[VTA][TSIM] add virtual memory support to tsim example (#3868)* [VTA][TSIM] add virtual memory support to tsim example* fix identation* remove USE_TSIM macro and use 32-bit addr instead	1
[PROFILER] Fix percent compute bound calculation (#11542)* [PROFILER] Fix percent compute bound calculationSomehow the runtime was dropped from the percent compute boundcalculation. Tolerances on the test we bumped a little bit higher to tryand catch mistakes like this in the future.* forgot print	1
[AIRFLOW-XXXX] Fix breeze build-docs (#7445)	2
Rename DAG concurrency settings for easier understanding (#16267)``dag_conccurency`` ->  ``max_active_tasks_per_dag``Some of Airflow's concurrency settings have been a source of confusion for a lot of users (including me), for example:- https://stackoverflow.com/questions/56370720/how-to-control-the-parallelism-or-concurrency-of-an-airflow-installation- https://stackoverflow.com/questions/38200666/airflow-parallelismThis commit is an attempt to make the settings easier to understand	1
[Relay] Fix reduce axis bug (#3422)* fix relay reduce axis bug* add tests for reduce bug	0
Merge pull request #32 from mistercrunch/fixesMinor display bug around filepath	2
[AIRFLOW-XXXX] Remove Github action to add label (#7055)	1
[AIRFLOW-3463] Move Log out of models.py (#4639)	2
[ci][docker] Conditionally link sccache to clang (#11316)This was causing errors with #11314 since it was making it appear as if `clang` was available when it was only the sccache wrapper.Co-authored-by: driazati <driazati@users.noreply.github.com>	1
Update erd SHA to pass static checks (#26263)The cause of the failure was a PR race -- the PR that changed migrationswas opened and passing tests before the ERD sha was added.	1
Getting current user through flask.ext path	1
v0.3 pushing to pypi	5
Remove settings about SGX in config.cmake (#6530)removed settings about SGX since SGX is removed from TVM core	4
Add more testing methods to dev/README.md (#11458)	2
Final cleanup for 2020.6.23rc1 release preparation (#9404)	4
[TIR] Improved error messages for PrimExpr operator overloads (#12638)Previously, type-checks in boolean operators on `PrimExpr` wouldstate that the type is incorrect, but further investigation would berequired in order to determine what expression caused the error.After this commit, error messages for these type checks include theexpression that was used, and the dtype of that expression.	1
Rename Permissions to Permission Pairs. (#24065)	5
small fixes on docs (#769)* small fixs on docs* add IR output after parallelization	1
Revise "Project Focus" copy (#12011)	5
[Community] Add @Hzfengsy as TIR/Auto Codeowner (#8912)	1
[AIRFLOW-404] Retry download if unpacking fails for hiveTravis cache can have a faulty files. This results in buildsthat fail as they are dependent on certain components beingavailable, ie. hive. This addresses the issue for hive byredownloading if unpacking fails.	0
Add health-check for celery worker (#14522)Co-authored-by: Kamil Breguła <kamilbregula@apache.org>	1
[TOPI] Initial NHWC layout support (#882)* add 4 dim softmax* update for NHWC layout* remove layout param from softmax* fix typo* minor fix to poolsupport axis=1 ndims=5 softmax.add softmax axis* few fix for softmax* fix typo* add more doc* minor doc fix* fix upsampling output shape* fix lint* cleanup softmax* minor fix* raise exception instead of assert, handles negative axis* check axis after axis transformation	0
[RUNTIME] Enable NDArray type extension (#2598)	0
Formatting the queued_dttm column in TI view	5
[AIRFLOW-6952] Use property for dag default_view (#7579)	2
[Relay] Add printing for ADT Type (#3030)* Update pretty_printer.cc* Update pretty_printer.cc	5
Fix failing static check (#22621)	0
Replaces cloud-provider CLIs in CI image with scripts running containers (#9129)The clis are replaced with scripts that will pull and rundocker images when they are needed.Added Azure CLI as well.Closes: #8946 #8947 #8785	1
[AIRLOW-XXX] Add Outcome Health to companies list (#5296)	1
[RPC] Fix Server connecting to RPC Tracker through a Proxy (#9210)	0
Minor linting	5
Faster PostgreSQL db migration to Airflow 2.2 (#19166)Bigger Airflow databases can take a long time to migrate the database,particularly if they have a lot of task instances. On PostgreSQL, creating anew table is much faster than updating the existing table.	5
[TOPI][DARKNET]Yolo op added  (#1372)	1
19943 Grid view status filters (#23392)* Move tree filtering inside react and add some filters* Move filters from context to utils* Fix tests for useTreeData* Fix last tests.* Add tests for useFilters* Refact to use existing SimpleStatus component* Additional fix after rebase.* Update following bbovenzi code review* Update following code review* Fix tests.* Fix page flickering issues from react-query* Fix side panel and small changes.* Use default_dag_run_display_number in the filter options* Handle timezone* Fix flaky testCo-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>	3
Create closure object for GlobalVar (#3411)	1
[AIRFLOW-3888] HA for metastore connection (#4708)* HA for Metastore* [AIRFLOW-3888] HA for metastore connectionCreating a connection to a metasotor with two hosts for high avitablity (eg connection 1, connection 2) is not possible because the entire value entered is taken. For our needs, it is necessary to go through subsequent hosts and connect to the first working.This change allows you to check and then connect to a working metastor.* add function to base_hook* update webhdfs_hook* back to original version* back to original version* Update hive_hooks.pyThank you. I made a few changes because during the tests I detected several errors.I have a question, when I do marge to my pull it will be  still possible to land it in the airflow main branch?* [AIRFLOW-3888] HA for metastore connection flake8 code repair* [AIRFLOW-3888] HA for metastore connection Flake8 repair* [AIRFLOW-3888] HA for metastore connectionCode behavior improvements* [AIRFLOW-3888] HA for metastore connection Add test* [AIRFLOW-3888] HA for metastore connectiontest improvement* [AIRFLOW-3888] HA for metastore connectionAdd test[AIRFLOW-3888] HA for metastore connectiontest improvement* [AIRFLOW-3888] HA for metastore connectionAdd test[AIRFLOW-3888] HA for metastore connectiontest improvement[AIRFLOW-3888] HA for metastore connectiontest improvement* [AIRFLOW-3888] HA for metastore connectionImproving the typo in the variable name*  [AIRFLOW-3888] HA for metastore connectionMock return_value edit* [AIRFLOW-3888] HA for metastore connectionFlake8 repair* [AIRFLOW-3888] HA for metastore connectionTest repair* [AIRFLOW-3888] HA for metastore connectionFlake8 repair[AIRFLOW-3888] HA for metastore connectionTest repair	3
Add support for zipped dagsCurrently dags are being read directly from the filesystem. Anyhierarchy (python namespaces, modules) need to be reflected onthe filesystem. This makes it hard to manage dags and theirdepedencies.This patch adds support for dags in zip files. It will addthe zip to sys.path and then it will read the zip file andtry to import any files as modules that are in the root ofthe zip.Please note that any module contained within the zip willoverwrite existing modules in the same namespace.	2
Fix typo	2
Get rid of pydruid limitation (#9965)Pydruid version 0.5.8 failed on python 3.7 but pydruid 0.5.11fixed it apparently.	0
[TRT] Minor fixes on TRT python interface (#10917)Co-authored-by: Michalis Papapdimitriou <mpapapdimitriou@octoml.ai>	5
[ANDROID][RPC] Remove binary distro jar (#677)* [RPC][JVM] Remove binary dist gradle from repo* fix header	0
Add logo info to readme (#6349)	5
[Relay] Mix mode type inference (#6704)	5
CLI: Fail ``backfill`` command before loading DAGs if missing args (#18994)I was looking through some of the CLI code last week trying to improve the speed of `airflow user` commands and I noticed this small issue. If neither the `start_date` or `end_date` argument is provided then the command will fail, but it will first parse all of the DAGs which can take up to several minutes in large deployments. Now the command will fail faster, allowing the user to adjust their command and retry.	1
Prep for 2.1.0 release (#15913)	5
[CI] Pin setuptools to v58.4.0 in CI to circumvent breaking change in v58.5 (#9446)* Pin setuptools to v58.4.0 in CI to circumvent breaking change in v58.5* Remove setuptools installation from ubuntu_install_vela.sh	1
Add temp git dir to test_cc_reviewers test case (#10058)This decouples the test_cc_reviewers test case from the user's git configuration. The implementation reuses the TempGit structure from test_skip_ci to always use a fresh git environment.	1
Update ISSUE_TEMPLATE.md	0
remove the pragma primitives for better performance when the threads are binded (#949)	1
closes apache/incubator-airflow#957 *PR abandonned by submitter*	5
[Relay][Pass] Avoid stack overflow when using PostOrderRewrite (#7588)* init* fix* fix	0
[topi][CuDNN] Removed requirement for GPU from topi conv2d_cudnn.cuda and conv3d_cudnn.cuda (#8276)Previously, `conv2d_cudnn.cuda` would use cudnn's benchmarkingfunction to select a forward convolution when `cfg.is_fallback`, and`conv3d_cudnn.cuda` would use cudnn's benchmarking at all times.After this commit, both expose the cudnn algorithm choice as anoption.  If `cfg.is_fallback`, the local device will be benchmarked ifpresent, otherwise will select a default cudnn implementation.In the future, to better support RPC use-cases, the fallback configshould be based on cudnn-specific parameters saved in the Targetobject.Co-authored-by: Eric Lunderberg <elunderberg@octoml.ai>	5
add retry to graph and tree legends	1
[AIRFLOW-5585] Remove docker context from build	2
Rename build helper (#9297)	5
[AIRFLOW-862] Fix Unit Tests for DaskExecutorUnit tests were inadvertently disabled forDaskExecutorCloses #2076 from jlowin/fix-dask-tests	3
[AIRFLOW-2627] Add a sensor for CassandraCloses #3510 from sekikn/AIRFLOW-2627	1
[skip ci] Revert "[ci] Default to n=2 for test parallelism (#12376)" (#12413)This reverts commit 369e8b283083a3440c59431a9438ca17afb73e4e.There are certain tests that need to be serialized first before this canmerge or else failures likehttps://ci.tlcpack.ai/job/tvm/job/main/4040/display/redirect will happenbased on which tests happen to be run together or notCo-authored-by: driazati <driazati@users.noreply.github.com>	1
[AIRFLOW-4326] Airflow AWS SQS Operator (#5110)	1
Add triggered dag runs to dataset events (#25961)* add triggered runs to dataset events* simplify dag run return schema* add tests for created_dagruns* fix other api tests* remove execution_date from created_dagruns* run_id and logical_date are not nullable	5
Replace io.open with builtin open (#11807)From Python 3 `io.open` is an alias for the builtin `open()` function.Docs: https://docs.python.org/3/library/io.html#io.open	2
Reviewing the master command's logic	2
Add LLVM-13 installation to Docker setup (#9498)* Installs LLVM 13 in for Ubuntu 18.04 Docker images * This is needed as a requirement for #9425	1
Removed std::unary_function because it is deprecated and removed in newer c++(https://en.cppreference.com/w/cpp/utility/functional/unary_function) (#2962)	1
Fix Neo4jHook to get the query response (#18007)	1
Allow labels in KubernetesPodOperator to be templated (#10796)	1
Added postgres 14 to support versions(including breeze) (#23506)* Added postgres 14 to support versions(including breeze)	1
Remove side-effect of session in FAB (#8940)	4
Update setup.pyAdd cx_Oracle requirements to extras_require for the OracleHook	1
Update release process for Providers (#24680)This release process updates Provider's release approach and"mixed-governance" model after the discussion and proposalhttps://lists.apache.org/thread/6ngq79df7op541gfwntspdtsvzlv1cr6	1
[AIRFLOW-2957] Remove obselete sensor references	4
[RUNTIME] Introduce MetadataModule to separate code compilation/interpretation and weight initialization (#5770)	5
Change log level for Zombie detection messages (#20204)I missed it in https://github.com/apache/airflow/pull/20118	2
Add incubating	1
[ARITH] Improve div/mod in rewrite simplifier (#3149)* [ARITH] Improve div/mod in rewrite simplifier* Fix lint error* Fuller file name in src/arithmetic/modular_set.hCo-Authored-By: Wei Chen <ipondering.weic@gmail.com>* Generalize some rules* Replace gcd factoring with specialized rules* Mark rules that don't work for non-truncated division* More tests	3
Add url prefix setting for Celery Flower (#25986)This setting in airflow uses hyphen `--url-prefix` and the original param is `--url_prefix`	0
[AIRFLOW-7003] Lazy load all plguins (#7644)	2
Better description of UID/GID behaviour in image and quickstart (#15592)* Better description of UID/GID behaviour in image and quickstartFollowing the discussion inhttps://github.com/apache/airflow/discussions/15579seems that the AIRFLOW_UID/GID parameters were not clearlyexplained in the Docker Quick-start guide and some users couldfind it confusing.This PR attempts to clarify it.* fixup! Better description of UID/GID behaviour in image and quickstart	1
Moving setenv	1
PyTorch frontend: fix handling of duplicate use of a model weight (#5897)This happens e.g. in shared input/output embeddings in BERTor siamese networks.Thank you @siju-samuel for reporting.	1
Pylint checks should be way faster now (#10207)* Pylint checks should be way faster nowInstead of running separate pylint checks for tests and main sourcewe are running a single check now. This is possible thanks to anice hack - we have pylint plugin that injects the right"# pylint: disable=" comment for all test files while readingthe file content by astroid (just before tokenization)Thanks to that we can also separate out pylint checksto a separate job in CI - this way all pylint checks willbe run in parallel to all other checks effectively halfingthe time needed to get the static check feedback and potentiallycancelling other jobs much faster.* fixup! Pylint checks should be way faster now	0
[AIRFLOW-5940] Remove redundant Code in models.dagrun (#6591)	2
[IR][Pass][Instrument] Pass instrument framework (#7952)* [IR][Pass][Instrument] Pass instrument frameworkThis commit provides utilies to instrument passes:  1. Add a new namespace tvm.instrument  2. Introduce PassInstrument and PassInstrumentor to PassContext     Example     -------    passes_mem = #... Impl of memory instrument    passes_time = tvm.instrument.PassesTimeInstrument()    with tvm.transform.PassContext(        pass_instrumentor=PassInstrumentor([passes_mem, passes_time])):        tvm.relay.build(mod, 'llvm')        passes_mem.rendor()        passes_time.rendor()  3. Integrate existing PassContext::Trace() and timing profile* [IR][Pass][Instrument] Fix python test_pass_manager.py* Fix comment* Fix lint* Fix test_pass_annotation* Fix test_pass_annotation.py* Fix lint* Fix test_pass_annotation.py* Fix test_pass_annotation.py* Fix review comments* Fix tutorial use_pass_infra.py* Fix review comments* Fix review comments* Fix typo* Fix review comments* Fix review comments* Fix unittest error: test_cow_pass* Fix unittest error* Add more test cases for exceptions* Fix nit* Doc override_instruments()* Fix review comments* Fix lint* Fix EnterContext exception behavior	0
[CodeGen][CUDA] Enhance CUDA codegen for SelectNode (#4983)- This patch allows CUDA backend to emit correct code for  selects with vector conditions, which may be produced  by floordiv op lowering etc..- This already works for llvm BE, as llvm select instruction  supports vector conditions.Signed-off-by: Wei Pan <weip@nvidia.com>	1
[AIRFLOW-3834] Remove dagbag from /log (#4841)	2
[AIRFLOW-6557] Add test for newly added fields in BaseOperator (#7162)Adding new field in BaseOperator requires some manual updatesin serialization code. This test detects new fields and informswhat should be done in case new field is added.	1
Merge pull request #1094 from airbnb/pig_operatorAdding to inits	5
Log traceback only on ``DEBUG`` for KPO logs read interruption (#22595)Logging the traceback after every disconnect is a little overly scary when this is an expected occurrence for long-running pods, and this can create false alarm for users.  Here we reduce noise a bit while allowing users to troubleshoot if desired by changing the log level to debug.	0
[TOP] Level1 complete (#3)	5
Merge pull request #552 from airbnb/more_tests2Cleaning up default connections	3
[AutoSchedule] Fix a flaky test (#7580)	3
[AIRFLOW-1573] Remove `thrift < 0.10.0` requirementCloses #2574 from dan-disqus/Thrift	1
Use built-in `cached_property` on Python 3.8 where possible (#14606)Functionality is the same, this just removes one dep for Py 3.8+	4
Add MesosExecutor for airflow	1
Fix DAGs mount path in Kubernetes worker pod when gitSync is enabled (#13826)* Update pod-template-file.kubernetes-helm-yaml* Fix ssh-key access issueThis change allows dags.gitSync.containerName to read ssh-key from file system.Similar to this https://github.com/varunvora/airflow/blob/ce0e6280d2ea39838e9f0617625cd07a757c3461/chart/templates/scheduler/scheduler-deployment.yaml#L92It solves https://github.com/apache/airflow/issues/13680 issue for private repositories.Co-authored-by: Denis Krivenko <36439732+dnskr@users.noreply.github.com>	1
[AIRFLOW-5064] Switched to python 3.5 (#5678)	5
[TOPI] Update TopHub and benchmark (#1796)	5
[AIRFLOW-1517] Restore authorship of secrets and init container	5
[RPC] Call sync in remote cpu to gpu copies (#5512)	5
Rearrange ``README.md`` to make it easy for first-time users (#16679)For first time users our README.md is a bit on heavier side in terms of details.This PR/commits re-arranges the section so that the section first-time usersor potential users/lurkers would care about are at the top.	1
[PATCH] Fix undefined __floatdihf in libtvmruntime.so on aarch64. (#4119)Arm architecture provides optional FP16 floating point support in two alternative formats, IEEE and an an alternative Arm format.The ACLE (Arm C Language Extension) defined preprocessor symbol __ARM_FP16_FORMAT_IEEE can be used to distinguish between implementations providing IEEE and the Arm alternative format, but cannot, on its own, be used to determined if FP16 HW support is actually present.Testing this preprocessor symbol can lead to undefined __floatdihf at runtime on an aarch64 target where no FP16 HW is present.The relevant preprocessor symbol to determine whether FP16 HW support is present in the target is __ARM_FEATURE_FP16_SCALAR_ARITHMETIC, this symbol implies  __ARM_FP16_FORMAT_IEEE.The relevant preprocessor symbols are defined by the ACLE standard, section 5.5.21 16-bit floating-point data processing operations, https://static.docs.arm.com/101028/0008/Q2-ACLE_2019Q2_release-0008.pdf	2
[CI] Fix shell script exit codes (#3329)The exist code of a posix compilant shell is 0..255.  Attempting toreturn -1 will error in some shells and implicitly cast to 255 inothers.  Fix it by returning a legal return value.	0
[AIRFLOW-4423] Improve date handling in mysql to gcs operator. (#5196)* Handle TIME columns* Ensure DATETIME and TIMESTAMP columns treated as UTC	5
This patch is to fix some minor typos in project. (#9852)	2
[TOPI][AlterOpLayout][ARM] Enabling NHWC to NCHW layout transformation. (#4249)	0
Add service_account to Google ML Engine operator (#11619)	1
[Hexagon][Codegen] Implement CodeGenHexagon::CreatePrintf (#10710)* [Hexagon][Codegen] Implement CodeGenHexagon::CreatePrintf`CodeGenHexagon` inherits from `CodeGenLLVM`, but debug messages sentthrough `printf` calls do not make it back across the RPC server.Instead, the `FARF` preprocess macro provided from the Hexagon SDKshould be used.  This implementation of `CodeGenHexagon::CreatePrintf`generates the same `HAP_debug_v2` function call as would be generatedby the `FARF` preprocessor macro, using the `ALWAYS` print level.* Updated following review comments* Updated from const llvm::ArrayRef& to llvm::ArrayRef.	5
remove minimum 32-bit restriction (#621)Change minimum 32-bit restriction for floating point types to 8-bit.This change is to enable reduced precision types that may use vector operations underneath the hood (cases #lanes > 1 such as half4).	1
Remove airflow dependency from http providerThe http provider has been temporarily moved out of preinstalledproviders (because of licensing issues). Those issues have nowbeen removed and http provider went back to be preinstalled,however it still had the apache-airflow>=2.1 as dependency.This PR removes the dependency.Fixes: #17795	0
[AIRFLOW-6843] Add delete_option_kwargs to delete_namespaced_pod (#7523)	4
[Relay][Quantization] Extend FakeQuantizationToInteger to more ops (#8241)* support scalars in quantize and requantize* Add affine type support for ops with multipe output, use it in concat, move to header* support new ops, refactor tests* add more binary opsfix pylintfix blackblack broke pylintoops on black* fix a typo in a branch and add a test that hits it* improve comments	1
[AIRFLOW-1272] Google Cloud ML Batch Prediction OperatorCloses #2390 fromjiwang576/GCP_CML_batch_prediction	1
[AIRFLOW-2574] Cope with '%' in SQLA DSN when running migrations (#3787)Alembic uses a ConfigParser like Airflow does, and "%% is a specialvalue in there, so we need to escape it. As per the Alembic docs:> Note that this value is passed to ConfigParser.set, which supports> variable interpolation using pyformat (e.g. `%(some_value)s`). A raw> percent sign not part of an interpolation symbol must therefore be> escaped, e.g. `%%`	1
Merge pull request #1363 from criccomini/fix-gcp-api-gcs-loggingAdd PyOpenSSL to Google cloud gcp_api.	5
[AIRFLOW-3605] Load plugins from entry_points (#4412)* [AIRFLOW-3605] Add entrypoint plugin docsThis documentation came from https://github.com/apache/incubator-airflow/pull/730 which had already started work on a PR for this functionality.* [AIRFLOW-3605] Extend plugin loading functionalityAdded business logic to import AirflowPlugin classes through entry_points.This means we don’t have to interact with the file system directly to install plugins, and can manage them via `pip`.	5
[Relay] Option to select which convolution layers are quantized. (#3173)* Stashing for later maybe.* Added new option to leave specific layers unquantized.* Better error checking.* remove unneeded import* tab to spaces* pylint fixes* more pylint fixes	0
[AIRFLOW-1913] Add new GCP PubSub operatorsCloses #2872 from prodonjs/master	1
[AIRFLOW-4833] Allow to set Jinja env options in DAG declaration (#5943)	2
Update Celery to 4.4.2 (#7754)	5
Do not create dagruns for DAGs with import errors  (#19367)An active dag can suddenly have import errors as a result of the DAG file being changed. Currently, wedo not consider this before creating dagruns.This PR adds the has_import_errors to dagmodel so dags with import errors are not sent to the scheduler tocreate dagrunsCo-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	2
[AIRFLOW-XXXX] Add config to welcome first time contributors (#7071)	5
Update Airflow version in docker stack documentation to 2.1.2 (#17017)	2
Switch to new selective-checks in label-when-reviewed workflow (#24651)When #24610 was implemented I missed the label-when-reviewed workflow	1
[AIRFLOW-2309] Fix duration calculation on TaskFailCloses #3208 from johnarnold/duration	0
Bugfix: dag_bag.get_dag should not raise exception (#18554)`get_dag` raising exception is breaking many parts of the codebase.The usage in code suggests that it should return None if a dag is notfound. There are about 30 usages expecting it to return None if a dagis not found. A missing dag errors out in the UI instead of returninga message that DAG is missing.This PR returns None when a dag is not found in SerializedDagModel instead of raising an exception	2
[LLVM] Treat scalars as single-lane vectors in CreateVecConcat (#9264)LLVM differentiates between `<1 x ty>` and `ty`, while TVM does not.Make sure that a bunch of TVM scalars can be concatenated into avector when generating LLVM IR.	1
[Relay][Doc] Docs for new op code (#3522)	1
Add topi.nn.fifo_buffer to TVM doc (#4343)	2
[BYOC-DNNL] Support DNNL optimal layout (#10421)* enable dnnl optimal layout for supported ops* verfied cv models with onednnv1.7* rebase to the latest main branch* fix format related comments* remove unnecessary layout transformation* change deconv into conv_transpose* rename some variables and functions* simplify query_layout* add checkes for query_layout* fix lint* move partition_for_dnnl from dnnl.py to test_dnnl.py* remove unnecessary model test* add more dnnl layout* rename flag in convolution.cc* enhance dnnl layout	1
Increase timeouts for tests (#13756)We are getting close to the previous timeouts for tests and sometests are crossing the 80 minutes.While we should speed it up in general, for now increasingtimeouts should do the job.	1
[AIRFLOW-XXX] Mention that statsd must be installed to gather metrics (#5038)	2
[AIRFLOW-1554] Fix wrong DagFileProcessor termination method callCloses #2821 frompdambrauskas/fix/wrong_termination_call	0
Add support for listing user objects. (#15862)Fixes the issue that prevents an admin user from listing users on non DB-backed authentication views.	5
Handler parameter from `JdbcOperator` to `JdbcHook.run` (#23817)	5
Logging and returning info about query execution SnowflakeHook (#15736)	1
[COMMUNITY] New Committer -- lhutton1 (#11049)	1
[CI] Migrate Tensorflow and Tensorflow lite in CI to  2.1.0 (#5392)* Migrate Tensorflow and TFLite in the CI up to 1.15.2The latest stable version of Tensorflow and Tensorflow litein the 1.x series is 1.15.2. The tflite frontend is receivingsupport for versions of tflite > 1.14 but there is no consistenttesting.There are 2 failures already in the source base with tf 1.15and I'm concerned this will just get exacerbated over timeif we don't have CI picking this up and I view this as a steppingstone towards stepping CI to TF2.x.The test failures that I have commented will get issues raisedfor them as issues to be fixed.* Comment out run of qnn_mobilenet_v3_netThis is another test that fails with TFlite 1.15.2* Skip the qnn_mobilenet_v3 test in the pytest fashion.* Switch docker versions to support Tensorflow 2.1.0* Fix up pytest imports and usage.* Skip these tests currently for Tensorflow 2.1.0	3
refactor: Deprecate parameter 'host' as an extra attribute for the connection. Depreciation is happening in favor of 'endpoint_url' in extra. (#25494)The Connection.host column is discarded due to lack of semantics as it's easier and more intuitive to pass the whole url than filling its pieces in the UI.Update documentation stating 'host' is deprecated in favor of 'endpoint_url'. Also updated placeholders on the UI.Usage of Connection.host display a deprecation warning.	2
[TVM] Fix segfault for CanonicalSimplify(x % -1) (#2194)	0
Allow "falsey" default arguments in CLI Parser (#8398)In #8219 we noticed that we couldn't set a `default=0` because of the`and v` check. The "add_argument" function in python avoid this by using**kwargs, but we want type checking so can't directly use the samethere.This uses the same pattern that configparser does to allow falsey (0,False) and even `None` as valid values, distinct from not being passed.	4
[AIRFLOW-586] test_dag_v1 fails from 0 to 3 a.m.dags/test_dag.py tries to set START_DATE to 3hours before usingdatetime.replace, but it doesn't support minusvalue as argument.So we have to use timedelta instead of simplenumeric subtraction.Closes #1852 from sekikn/AIRFLOW-586	1
Merge pull request #828 from robottokauf3/fix_ssh_hookFix invalid syntax in SSHHook	1
[COMMUNITY] @srkreddy1238 -> Committer (#2339)	3
[AIRFLOW-2113] Address missing DagRun callbacksGiven that the handle_callback method belongs tothe DAG object, we are able to get the list oftask directly with get_task and reduce thecommunication with the database, making airflowmore lightweight.Closes #3038 from wolfier/master	1
[TOPI][GPU] Mergepath sort with odd-even block sort (#7611)* Mergepath sort with odd-even block sort* fix lint, add test* respond to review comments* speed up tests by reducing dtype skews* fix bad rebase* change threading to support vulkan* fix lint* only sort if the data is non-empty* fix lint again* fix for vk* move if to higher scope* fix typoCo-authored-by: Masahiro Masuda <masahi@129@gmail.com>	2
Add code.rst docs for GCS hook and operator.	1
[AIRFLOW-2839] Refine Doc Concepts->Connections (#3678)	2
[VTA][TSIM] Introduce Virtual Memory for TSIM Driver (#3686)* initial virtual memory;* initial integration;* include the header file in cmake;* implement allocation with virtual to logical address mapping;* virtual memory for tsim_driver;* implement the missing memory release function;* readability improvement;* readability improvement;* address review comments;* improved robustness in virtual memory allocation;* remove VTA_TSIM_USE_VIRTUAL_MEMORY macro and use virtual memory for tsim by default;* link tvm against vta library;* merge with master* build virtual memory system without linking tvm against vta;* minor change;* reuse VTA_PAGE_BYTES;* using DRAM class from sim_driver as VirtualMemoryManager;* satisfy linter;* add comments in code;* undo changes to Makefile* undo changes to Makefile* retrigger ci;* retrigger ci;* directly call into VirtualMemoryManager::Global()	2
Change chart annotation generator to use RELEASE_NOTES (#23549)	1
Adds predefined providers to install_requires. (#12916)* The 4 providers (http, ftp, sqlite, imap) are popularand they do not require any additionl dependencies so we decidedto include them by default in Airflow 2.0Co-authored-by: Jarek Potiuk <jarek.potiuk@polidea.com>* Update setup.pyCo-authored-by: Jarek Potiuk <jarek.potiuk@polidea.com>Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	1
v1.6.0	5
Fix failing main due to #18209  (#18215)* Use mock in test_hooks mock import spec* comment on mockCo-authored-by: Braden McKallagat <braden.mckallagat@gmail.com>	2
Set X-Frame-Options header to DENY only if X_FRAME_ENABLED is set to true. (#19491)	1
Addressing @artwr comment	1
futurize stage 1: print_function	1
[AIRFLOW-3817] - Corrected task ids returned by BranchPythonOperator to match the dummy operator ids (#4659)	1
Fix the missing `dtype` attribute of `tir.Shuffle` in Python level (#9131)	0
Include message in graph errors (#23021)	0
Resolve issue with not correctly loading config data for search_scopesearch_scope defaults to LEVEL, unless specified as SUBTREE inAIRFLOW_CONF	5
[AIRFLOW-2663] Add instructions to install SSH dependenciesCloses #3536 from kaxil/patch-1	1
Fix global var in prelude (#3405)	0
Marking success/failed automatically clears failed downstream tasks  (#13037)closes: #12485	0
Only load distribution of a name once (#25296)	5
[TIR] Get read/write access precisely for opaque access. (#11110)* [TIR] Get read/write access precisely for opaque access.When the opaque access is wrapped with tvm_access_ptr, we can get the access_maskfrom tvm_access_ptr in BlockReadWriteDetector and put this opaque access to read_regionsor write_regions according to access_mask.* [TIR] Add parameter extent for access_ptr.Co-authored-by: sqing <qing.siqi@intellif.com>	2
CPP implementation of L2Norm and LRN ops (#1157)	5
[AIRFLOW-5189] Move GCP Vision to core (#5796)This commit moves GCP Vision from contrib to core.For more information check AIP-21.	5
Include BUILD_NUMBER in rebuilt docker image. (#11165)* This allows folks to retrigger Jenkins runs through the Jenkins UI   rather than requiring the author to push an empty or amended commit.	1
[RELAY][OP] Faster-RCNN Proposal OP (#2725)* [RELAY][OP] Proposal* Fix* Fix test	3
[DOC] fix doc in api.py (#4580)	2
[CMSIS-NN] Stop test generating 1x1 and 1xn Conv2d (#10784)I believe the flakiness in #10748 is the small chance of generating a1x1 or 1xn convolution which allows for a different buffer size:https://github.com/apache/tvm/blob/63461c0c97c307e581271708c3490f5275675a1a/src/relay/backend/contrib/cmsisnn/buffer_size.cc#L38-L47Therefore, careful selection of the distribution should alleviatethis issue.	0
Bump the CMake version in ubuntu_install_cmake_source.sh to 3.14.7. (#9424)* This is required in platforms we need to build xgboost from source * Fixes #9414	0
Update documentation for broken package releases (#14734)This is a documentation generated for provider packagesthat have been broken in releae 2020.10.29. As explained inthe #14673, some whl packages were broken in 2020.10.29 releaseand we need to regenerate those packages even if they were notupdated.	5
fix submodule label for Druid	0
Update non-working example in documentation (#18067)Chain function cannot accept a list, but the example provided supplies with a list. Supplied example did not create chain dependencies as expected Replaced non-working example with working example, but does not use the chain function. I do not think you are able to use chain function dynamically.	1
doc: fixes to dataflow_pattern (#8247)	5
Fixed MyPy type issues for cli and api_connection tests (#19948)	3
Simplify configuration/legibility of Webpack entries (#14551)	5
[CI] Bump Python version from 3.6 to 3.7 in VitisAI.cmake (#10656)This is required because we migrated the default version in whichdependencies are installed, due to Python 3.6 coming to EOL.Co-authored-by: Elen Kalda <Elen.Kalda@arm.com>	1
[WIP]    Linux/Android native deploy (#980)	5
Removes unused state transitions to handle auto-changing view permissions. (#19153)* Remove unused FAB state transitions.* Remove unused FAB constant.	1
[AIRFLOW-3370] Add stdout output options to Elasticsearch task log handler (#5048)When using potentially larger offets than javascript can handle, they can get parsed incorrectly on the client, resulting in the offset query getting stuck on a certain number. This patch ensures that we return a string to the client to avoid being parsed. When we run the query, we ensure the offset is set as an integer.Add unnecesary prefix_ in config for elastic search section	5
Fix FAB actions with for models with composite PKs (#11753)This fixes #11513 -- and has been submitted upstream to FAB ashttps://github.com/dpgaspar/Flask-AppBuilder/pull/1493, once that ismerged we can remove this override.	4
[ARITH] More recursive rewrite rule, cleanup simplify tests (#3502)	3
[AIRFLOW-5234] Rst files have consistent, auto-added license	1
[AIRFLOW-3552] Fix encoding issue in ImapAttachmentToS3Operator (#5040)- change method to upload data to s3 from load_string to load_bytes	5
[Relay] Fix for recursive let (#5757)* Make let processing iterative* Try again* Fix pretty printer overflow* cleanup* fix lint* Fix text printerCo-authored-by: Jared Roesch <roeschinc@gmail.com>Co-authored-by: Jared Roesch <jroesch@octoml.ai>	5
Monitor pods by labels instead of names (#6377)* Monitor k8sPodOperator pods by labelsTo prevent situations where the scheduler starts asecond k8sPodOperator pod after a restart, we now checkfor existing pods using kubernetes labels* Update airflow/providers/cncf/kubernetes/operators/kubernetes_pod.pyCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>* Update airflow/providers/cncf/kubernetes/operators/kubernetes_pod.pyCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>* add docs* Update airflow/kubernetes/pod_launcher.pyCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>Co-authored-by: Daniel Imberman <daniel@astronomer.io>Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	5
Merge pull request #15 from mistercrunch/default_argsUsing a decorator to specify operators default args	1
Fixes #1223	0
Update example DAGs (#21372)	2
[TFLite] Implemented EXPAND_DIMS Operator for TFLite. (#6243)	1
Refactor and speed up "DAG:" prefix permissions migration (#12720)	0
Task should fail immediately when pod is unprocessable (#19359)When pod has invalid requirements, e.g. resource limit < resource request,the kubernetes api may return "Unprocessable Entity".  In this scenario,the kubernetes executor should fail the task immediately, rather than setit to be attempted againcloses https://github.com/apache/airflow/issues/19320	0
Fix docstring of ConcatRel (#1912)	2
Fix ci-qemu Arduino install dir (#8766)	0
Remove incorrect docstrings in check_migrations (#9428)	2
Make Tensor comparator and hash to be aware of same op and index, init checkin of the ir generation	5
[BACKEND] Explicitly allow specialization of FMA in llvm (#407)	1
Correct the :mod: documentation for s3_to_redshift_operator (#17115)	1
[PASS] Enhance LayoutTransform pass (#293)* [PASS] Enhance LayoutTransform pass* Fix* Fix Compilation* Refactor* Refactor* doc* fix* add file	2
Add docs for new scheduler "clean-up" tunables. (#12899)	4
Fix type of upgrade_to_newer_dependencies parameter (#22597)	2
Fix Description of Provider Docs (#12361)Apache Druid had description for Cassandra. Dingding had it for Datadog. And typo in Vertica	2
Adding mysql_postoperator to HiveToMySqlTransfer	1
Add Connection Documentation for Popular Providers (#15393)This PR adds and updates documentation for connecting to popular providers. It also adds links to this documentation in the doc strings of modules that use each connection. Documentation for the following connections is improved or updated:- IMAP- Docker- Postres- Kubernetes- Mongo- Spark	2
Convert AOT to TECompiler (#8697)* Convert AOT to TECompilerThis removes the dependency on "compile_engine.h" from aot_executor_codegen.cc. This required a few changes to how AOT was operating:* AOT run_model is now based on the post lowering main_module* AOTOnDemandAllocator is ran twice to ensure SIDs are updated post-lowering* Moved to using tec::UpdateFunctionMetadataTests are passing, but would appreciate other validation :smile_cat:* Clarify reasoning behind replanning memory later* Use main_func_info rather than bespoke logic in AOTThis moves from using the bespoke AOT UpdateMainWorkspaceSize to theLoweredModule main_func_info property to unify with Graph executorcodegen.	5
Update the "releasing Airflow" docs (#20456)	2
HivePartitionSensor doc fix	0
fix device on HandleCopyFromRemote (#9616)	0
[TVMScript] Syntax sugar for reads & writes (#9634)* add test file* add syntax sugar support* add comments* cleanup* update stub* remove failed tests* update stub with overload* address comments	1
[AIRFLOW-XXX] Add tips for writing a note in UPDATIND.md (#6960)	5
Smoother loading on main page	5
Adding unit test	3
Fix MyPy Errors for providers: Tableau, CNCF, Apache (#20654)	1
Add info about BaseOperatorMeta to UPDATING.md (#9369)	5
Bump prismjs from 1.26.0 to 1.27.0 in /airflow/www (#22823)Bumps [prismjs](https://github.com/PrismJS/prism) from 1.26.0 to 1.27.0.- [Release notes](https://github.com/PrismJS/prism/releases)- [Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)- [Commits](https://github.com/PrismJS/prism/compare/v1.26.0...v1.27.0)---updated-dependencies:- dependency-name: prismjs  dependency-type: indirect...Signed-off-by: dependabot[bot] <support@github.com>Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>	1
[AIRFLOW-3646] Rename plugins_manager.py to test_xx to trigger tests (#4464)	3
Remove redundant method in KubernetesExecutor (#12317)The _inject_secrets method was invoked but it performed no action soit seems that we can remove it.	4
[microTVM] Arduino: Fix f-strings on flash warning/error messages (#12175)This commit fixes two f-strings on flash timeout exception and runtimeerror so the proper variables (like port, number of retries, and timeoutvalue) are correctly printed to the warning / error messages.Signed-off-by: Gustavo Romero <gustavo.romero@linaro.org>	0
[AIRFLOW-XXX] Typo in the write-logs.rst (#3781)Fixed airflow_tas_runner -> airflow_task_runner	1
Fix attr (#62)	0
[AIRFLOW-6552] Move Azure classes to providers.microsoft package (#7158)	1
[DOCS] Introduction to Relay IR. (#2185)	2
Add DAG run details page (#19705)* Add new view for DAG Run details* Use already imported wwwutils package* Wrap datetimes in HTML time elementCo-authored-by: Bas Harenslak <bas@astronomer.io>	5
[Relay] Add ResizeNearestNeighbor and CropAndResize in tf converter (#3393)	1
Pre-commit checks in Github Actions have colour and are simpler (#8486)We have now back color in pre-commit checks and we disabled verboseflag. The main reason for verbose flag was to show execution timeof each commit, but this is not needed in Github Actions as wehave the "Show Timestamp" option in job log which givesus all that we need. Also the id of failing pre-commit checkis displayed whenever it fails so we do not need --verbose flagany more.	0
[Torch] Various updates for PyTorch frontend   (#7348)* add conversion for detr* remove explicit broadcast_to before batched matmul* use take with wrap mode* add test for transformer and negative indices* add sort and argsort* add logical_and* support masked_select* add gpu targets to masked_select test* improve sort conversion	1
Kill running jobs when cleared	1
Revert "KubernetesExecutor: Use user-provided namespace from executor_config arg (#24342)" (#24879)This reverts commit 1fe07e5cebac5e8a0b3fe7e88c65f6d2b0c2134d.	4
[TVM] [NNPACK] Modernize and improve NNPACK bindings (#2084)	1
[QNNParam] Refactor the implmentation of QNNParam (#11011)* The patch is to simplify the implmentation of QNNParam and make it more friendly to Python 2.x.* Empty-Commit* fix error about boolean value of Tensor with more than one value is ambiguous.	0
Add updated-name wrappers for built-in FAB methods. (#16077)	5
Pass location using parmamter in Dataflow integration (#8382)	5
Removing the duplicated get_conn method in DbApiHook	5
[Runtime] Only initialize required module (#5926)* init required modules* trigger ci* trigger ci	1
[RELAY][Frontend][TF] decompile tf control flow (#2830)* decompile tf control flow* Add docs* remove import relay* move tests under tensorflow frontend* minor fix	0
Clean up incorrect class names of Google system tests (#19956)	3
[testing] Remove wrapper from @slow (#11566)This makes it a normal pytest decorator so it doesn't incur test set up / tear down. This also makes the PR body the source of truth for skipping slow tests or not since it can be confusing sourcing it both from the PR and commit message.	5
US Bank added as Airflow User  (#17215)	1
[BYOC] add multi functions support in partition pass (#8464)* add support for multi function* address commits and fix lint* fix testcases and using a set to avoid duplicate func name* fix lint	0
Fix "Invalid JSON configuration, must be a dict" (#16648)Wrong variable name used	1
[AIRFLOW-6115] [AIP-21] Rename GCP vision operators (#7020)ignred unused imports in gcp_vision_operator and fixed test_core_to_contrib	3
[AIRFLOW-4391] Fix tooltip for None-State Tasks in 'Recent Tasks' (#5909)	0
[Autotvm] Use VM compile to extract autotvm tasks (#4328)* [AutoTVM] Use vm compile in extracting task from relay* update* restructure vm compiler to reduce task extraction time* x* fix* update doc* udpate doc* lint	2
[AutoScheduler] Improve test cases (#6657)* Improve test cases* update* fix lint* fix lint* trigger CI* address comments* trigger CI	1
update return value	5
Restore DaskExecutor tests (#7786)Closes https://github.com/dask/dask/issues/5803. See https://github.com/dask/dask/issues/5803#issuecomment-601788441 for context.Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	0
[Frontend][ONNX] Support ONNX Scan operator (#9438)* [Frontend][ONNX] Support ONNX Scan operator* fix lint* remove test_scan_sum in unsupported_onnx_tests* support scan opset 8* fix lint* fix negative axes bug* fix lintCo-authored-by: Matthew Brookhart <mbrookhart@octoml.ai>	5
enable AlterOpLayout to keep OP unchanged (#471)	4
Don't explicitly link libgcc.a into libtvm_runtime.so on Android (#10052)Setting Android toolchain via CMAKE_TOOLCHAIN_FILE also causes necessaryflags to be added. Also, newer versions of the Android NDK no longer shiplibgcc.a, so this takes care of that as well.	1
[TVMC] Add configuration `tir.add_lower_pass` to option `--pass-config` (#9817)	5
Introduce types in airflow.bin.cli (#7803)	5
[AIRFLOW-1809] Update tests to use timezone aware objects	1
Remove depreciation warning when use default remote tasks logging handlers (#25764)	0
[OP] Enable register via match tag (#57)* [OP] Enable register via match tag* more docs on usage	2
LRN only supports 4D tensors, remove it from alter_op_layout (#5520)	4
Cancel duplicate runs and HEAD runs that failed at specific jobs (#10008)This change implements canceling of the workflows in case some ofthe important (prerequisite) jobs failed - such as static checksor docs. The scheduled workflow will run periodically and checkif there are no duplicate workflow runs (it will cancel all butthe most recent one). It will also check for the most recentones and will cancel them if one of the specified jobs (matchedby regular expression) failed.The scenario that we want to handle here:* we want to start tests as soon as possible so that we do not  have to wait for static checks and doc builds* on the other hand as soon as one of the "quicker" jobs fail  we want to fail whole workflow so that the workers can be  freed up for other runs.This has to be done as a scheduled run because forked runsdo not have permissions to cancel any of the other runs inthe main repository.	1
[AIRFLOW-5435] Add fallback for connection's project id in GKEPodOperator (#6051)* [AIRFLOW-5435] Add fallback for connection's project id in GKEPodOperator* fixup! [AIRFLOW-5435] Add fallback for connection's project id in GKEPodOperator	1
[C++] Cleanup transform API nits (#3253)	4
[FRONTEND][TENSORFLOW] Fix gather_nd indices (#5279)* [FRONTEND][TENSORFLOW] Fix gather_nd indices* retrigger CI	0
[AIRFLOW-1808] Convert all utcnow() to time zone awaredatetime.utcnow() does not set time zone information.	5
Add test for the create user job in helm chart (#15614)This change adds test for the create user job and ensures changing of the uid is detectedCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	4
[Rust] Second stage of Rust Refactor (#5527)* Add tvm-rt crate* Backport changes from frontend branch* Format* Add ASF headers* Address self-code review* Replace with helper* Fix lint* Fix* Clean up repro debugging* WIP* Remove global resgistry to fix one memory issue* Fix* Format* Format* Update rust/tvm-rt/README.mdCo-authored-by: Jason Knight <binarybana@gmail.com>* Format* Duplicate TVM macros* Split macros* Restore old macro for old crates* Repair macros* Fix format* FormatCo-authored-by: Jason Knight <binarybana@gmail.com>	0
[Relay][BYOCG] Propagate constant to subgraphs (#5094)* bind constant to subgraphs* con -> constant	5
[CODEGEN] More storage alignment info aware generation (#186)* [CODEGEN] More storage alignment info aware generation* fix* fix* fix warning	2
AIP-47 - Migrate apache pig DAGs to new design #22439 (#24212)	1
Fix broken link (#15911)	2
[UnitTests][Ethos-N] Mark unit tests as requiring Ethos-N (#8873)- Adds the decorator `tvm.testing.requires_ethosn`- Marks all tests in `tests/python/contrib/test_ethosn` as requiring  ethosn instead of directly checking `ethosn_available()`.  This way,  they show up as skipped rather than passing.- Marks test_compile_tflite_module_with_external_codegen as requiring  ethosn.	1
Show upstream/downstreams from a dataset (#25403)* add links to upstream/downstream dags, fix typing* tooltip descriptions* Update airflow/www/static/js/datasets/Details.tsxCo-authored-by: Daniel Standish <15932138+dstandish@users.noreply.github.com>* remove created/updated at, separate links* update copyCo-authored-by: Daniel Standish <15932138+dstandish@users.noreply.github.com>	1
Fix backfill crash on task retry or reschedule (#13712)When a retry happens, task key needs to be recorded with try number + 1to avoid KeyError exception.	0
[Hexagon][LLVM] Enable/test tensorized Hexagon DMA on 2d transformed layout (#10905)* [Hexagon][LLVM] Enable/test tensorized Hexagon DMA- In the `CodeGenLLVM::CreateIntrinsic` handler for  `builtin::address_of()`, pass N-d indices to  `CodeGenLLVM::CreateBufferPtr`.  The base class implementation still  asserts that there is a flat memory space, while the  `CodeGenHexagon::CreateBufferPtr` override allows 2-d memory.- Enable tensorization in `test_cache_read_write.py`, using  `tir.address_of` to pass the lowered value.Co-authored-by: Adam Straw <astraw@octoml.ai>* [TIR] Allow buffer_bind_scope of N-d buffersPreviously, any `buffer_bind_scope` attribute that provides a viewinto a non-flat buffer would result in an error.  After this commit,`buffer_bind_scope` may be used for non-flat buffers, but use of`arg_buffer->elem_offset` within the body of the bind statement isstill an error.The `BufferNode::elem_offset` field represents the offset between thepointer of the backing allocation and the first element of the buffer.This offset is only well-defined for flat memory spaces.* update test to tensorize cache_read `y` (works) and cache_write `z` (fails)* add `split` to allow for tensorization of cache_write of `z`* fix typo and cleanup comment* add back original 1d test_cache_read_write* update comments* format errorCo-authored-by: Adam Straw <astraw@octoml.ai>	5
Fix speed of yarn installation (#19697)The --network-concurrency=1 is very slow and even if this hasbeen added in #17293 to battle connection refused, it slows regularbuilds far too much.There is a new optimisation in progress that should significantlyreduce the yarn installations on kind-cluster deploy: #19210 andit should solve the problem much better.	1
Hexagon conv2d full output slice  (#9198)* split h axis by constant factor 2; no cache write* enable cache_write, but not yet able to compute_at* cache_write with compute_at* cleanup, make loop split semantics more clear* parameterize height loop split* nhwhwc wiggling (needs cleanup)* added input channel splits for crouton depth* cleanup variable names and magic numbers* comments* add README* added 3x3 conv2d (no padding) case* add ASF header and RFC link* cleanup README	4
[ETHOSN] Stricter data type conversion checks (#10271)The 21.11 update for the Ethos(TM)-N driver is slightly more strict inaccepting various operator attributes.	1
[DOCS] Fix sphinx precheck (#4967)* [DOCS] Fix sphinx precheck* ignore keras warnings* Remove more warnings	2
[COMMUNITY] Yaxing Cai -> Reviewer (#12683)Please join me in welcoming Yaxing Cai (@cyx-6) as a new reviewer in TVM. Yaxing has brought the PackedFunc into TVM object system ([RFC-051](https://github.com/apache/tvm-rfcs/pull/51)), designed and implemented the new parser infrastructure for TVMScript and meta-programming ([RFC-079](https://github.com/apache/tvm-rfcs/pull/79))- [Commits History](https://github.com/apache/tvm/commits?author=cyx-6)- [Code Review](https://github.com/apache/tvm/pulls?q=reviewed-by%3Acyx-6+)	5
Also package core.rly (#4679)	5
Update airflow/hooks/dbapi.py (#16629)	5
[PASS] Add storage alignment info to heap allocated data (#254)	5
AIRFLOW-2952 Fix Kubernetes CI (#3922)The current dockerised CI pipeline doesn't run minikube and theKubernetes integration tests. This starts a Kubernetes cluster using minikube and runs k8s integration tests using docker-compose.	2
Yet more documentation improvments'	2
[AIRFLOW-231] Do not eval user input in PrestoHookRunning `eval` represent a security threat as the interpreter can behijacked by the service returning the string getting "evaled", in thiscase Presto. It turns out the code I'm changing here was written a longtime ago and misguided, casting a python object to a string and thenevaling it as a useless round trip.Closes #1584 from mistercrunch/security	1
UI Graph View: Focus upstream / downstream task dependencies on mouseover (#9303)* graph view mouseover task should increase stroke width of upstream / downstream* mouseover should focus dependencies on mouseover in graph view	1
Fix Canonical Simplifier (#5505)	0
Deprecate `S3PrefixSensor` and `S3KeySizeSensor` in favor of `S3KeySensor` (#22737)Deprecate `S3PrefixSensor` and `S3KeySizeSensor` in favor of `S3KeySensor` Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	0
[FIX,MICROTVM] Add requires_micro decorators to microtvm tests (#6747)* [FIX,MICROTVM] Add requires_micro decorators to microtvm tests	3
add description method in BigQueryCursor class (#25366)]	1
Attempt to upgrade to newer Node version to build UI. (#15718)We've started to receive deprecation warnings for Node 10 andthis PR attempts to upgrade to recommended Node 14.Fixes: #15713	0
[Bugfix][MetaSchedule] Fix over-simplification of Select (#10605)The feature extractor simplifies `Select` into a constant number, which overlooks the possibilitythat there could be buffer access inside Select.	4
[Codegen][CUDA] Fix: cuda codegen vectorize cast (#7561)* fix: cuda codegen vectorize cast* style: fix python coding style* fix: missing break* refactor: directly split by factorCo-authored-by: jiangchengquan <jiangchengquan@bytedance.com>	4
Fix return type in prev-date context variables (#12910)	5
Update docs/dev/virtual_machine.rstCo-Authored-By: Wei Chen <ipondering.weic@gmail.com>	2
Doc: Added an enum param example (#20841)More examples makes it easier to compare our docs with the json-schema docs and figure out how they work together.I ended up doing something similar to this in my code and figured I'd contribute an example.Co-authored-by: Matt Rixman <MatrixManAtYrService@users.noreply.github.com>	1
example and docs	2
Fix context bug	0
add filechunkio to optional requirements	1
Add additional Cloud Datastore operators (#10032)This PR adds more operators for Google Cloud Datastoreservice. It also adds missing tests and how-to guides.	3
added vertica hook	1
AIRFLOW-XXX Fix copy&paste mistake (#4212)In emr_create_job_flow_operator.py the :type clearly mismatches withthe :param name, suggesting a copy&paste mistake.	2
Add missing import in best-practices code example (#25391)* Add missing import in best-practices code exampleThis PR adds a missing import to the "unit test for a custom operator" code example. While this code example won't run on its own any way since `MyCustomOperator` isn't defined (and probably shouldn't be for simplicity), I noticed when applying this code to my own custom operator that an import for `DAG` was missing. This PR adds that back in, so the only missing import is for the user-added custom operator.	1
[AutoScheduler] Fix custom build func in PopenWorker (#8939)* [AutoScheduler] Fix custom build func in PopenWorker* Add assertion	3
Add an alias to improve git shortlog output (#12286)* Add an alias to improve git shortlog output* Add another	1
[AIRFLOW-1669][AIRFLOW-1368] Fix Docker importWe want to fix the Docker import. At the revert ofAIRFLOW-1368something went wrong.Closes #2653 from Fokko/AIRFLOW-1669-fix-docker-import	2
Fix redacting secrets in context exceptions. (#17618)* Fix redacting secrets in context exceptions.Secret masking did not work in implicit andexplicit context exceptions (seehttps://www.python.org/dev/peps/pep-3134/)When there was a `try/except/raise` sequence,or `raise ... from` exception - the originalexceptions were not redacted.Related: #17604	1
Fix onnx import bugs (#4750)* Fix onnx import bugsFix onnx attributes of string type incorrect handlingMerge symmetric padding of Conv to symmetric form* Only merge symmetric padding for conv2d	1
[Relay][UnitTest] Removed redundant unit test. (#8993)test_op_level2.py::test_conv2d and test_any.py::test_any_reduce shouldhave been removed in the refactoring in #8947.  All functionalitytested by it is in test_op_level2.py::TestConv2D andtest_any::TestAnyReduce.	3
Fix edge detection iteration (#26188)In #26175, edge detection was changed to use iteration instead ofrecursion, however it wasn't keeping track of the parent tasks.This changes the set we iterate over to be `(task, {children})` pairs insteadof just adding all the children tasks themselves.	1
[Relay] Higher order reverse mode automatic differentiation that work with control flow (#2496)add testremove dead codestashdo itadd more test	3
Print better error message when tests fail (#13339)The recently added log groupping hides error messages in casethere is an error in tests. You need to manually unfold last teststep which is somewhate hidden - it is followed by several'dump-container' logs.This change adds clear error message showing the exact loggroup that you need to unfold in case you want to look fora problem.	0
[BUILD][LLVM] Support LLVM mainline 5.0 6.0 (#356)* [BUILD][LLVM] Support LLVM mainline 5.0 6.0* Reduce parallelism	1
[AIRFLOW-7019] Show un/pause errors in dags view. (#7669)Pausing and unpausing dags in the dags view is asynchronous, and thereis currently no indication to the user if the operation fails. Thispatch updates the paused input and highlights it in red when pausing orunpausing fails.	0
[BUILD] Make the core library compatible with msvc 13 (#167)	1
[µTVM] Fix problems with the debug flow (#6930)* Allow blocking read and write in micro transport, for debugging.* add support for None timeout to micro transport, add tests* fix GdbTransport and friends. * GDB itself was just busted (would not launch inferior properly) * GdbDebugger would kill the debugger without waiting for user   input. change to always wait for an explicit user quit. * immediately resurrect Ctrl+C handler when debugger dies. * remove on-terminate callback complexity, unnecessary	4
[OpenCL] Fix vthread_extent for warp size 1 case (#10199)	0
Don't pickle when running subdags	2
Allowing to set a number of runs for the scheduler	1
Fix race conditions in task callback invocations (#10917)This race condition resulted in task success and failure callbacks beingcalled more than once. Here is the order of events that could lead tothis issue:* task started running within process 2* (process 1) local_task_job checked for task return code, returns None* (process 2) task exited with failure state, task state updated as failed in DB* (process 2) task failure callback invoked through taskinstance.handle_failure method* (process 1) local_task_job heartbeat noticed task state set to  failure, mistoken it as state bing updated externally, also invoked task  failure callbackTo avoid this race condition, we need to make sure task callbacks areonly invoked within a single process.	1
[AIRFLOW-512] Fix 'bellow' typo in docs & commentsDear Airflow Maintainers,Please accept this PR that addresses the followingissues:-https://issues.apache.org/jira/browse/AIRFLOW-512Testing Done:- N/A, but ran core tests: `./run_unit_tests.shtests.core:CoreTest -s`Closes #1800 from dgingrich/master	3
[Relay] Add Defunctionalization Pass  (#6400)* type args not automatically inferred...* working on type arg infer* fix type arg infer* WIP* wip* wip* revert type_infer* working* fix up test* fix* remove DeGlobal* lint* fix std move* comments* fix comments* review* style	0
better about closing session and teardown in tests	3
[REFACTOR] TVM_REGISTER_API -> TVM_REGISTER_GLOBAL (#4621)TVM_REGSISTER_API is an alias of TVM_REGISTER_GLOBAL.In the spirit of simplify redirections, this PR removesthe original TVM_REGISTER_API macro and directly use TVM_REGISTER_GLOBAL.This type of refactor will also simplify the IDE navigation toolssuch as FFI navigator to provide better code reading experiences.Move EnvFunc's definition to node.	5
[AIRFLOW-2905] Fix get job API endpoint (#3755)	1
Fixing logout page redirect	2
Fix inceptionv3 (#1446)	0
[PASS] Avoid recursion in FoldScaleAxis (#2299)* [PASS] Avoid recursion in FoldScaleAxis* remove GetForwardScale	1
[Vulkan] Check at codegen if the shader is within shared memory limits. (#8746)Previously, shaders that do not respect device limits for sharedmemory could result in segfaults that occur during the call to`vkCreateComputePipelines`.	1
[AIRFLOW-300] Add Google Pubsub hook and operatorOnly publishing and topic creation are included.Topic consumption was explicitly not included inthis feature request.Closes #2036 from wwlian/airflow-300	1
[C++ RPC] Fix C++ RPC build problem on Linux (#5671)	0
Update date in the NOTICE (#5942)	5
[VTA][Chisel] run all unittests by default (#3766)* [VTA][Chisel] run all unittests by default* better naming* add generated unittest folder to clean rule	4
Switch BigQuery hook to use BaseHook instead of DbApiHook	5
[random] support random fill (#5913)	1
Upgrading to Airflow 2.0 doc (#12930)This is based heavily on the UPGRADING_to_2.0.md file. The intent here isto make user facing and available as part of the Airflow documentation.This is still a work in progress.Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>Co-authored-by: Jarek Potiuk <jarek@potiuk.com>Co-authored-by: Daniel Imberman <daniel.imberman@gmail.com>Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	1
[ETHOSN] Only use mock inference when whole graph is offloaded (#12296)The mock inference functionality is only supported when the wholegraph is offloaded to the NPU, otherwise it can result in undefinedbehaviour. This patch makes sure the mock inference functionality isnot run on test cases where some parts of the graph are not offloadedto the NPU, while ensuring the module is still built as a sanity check.Change-Id: I27052d118ff976f9adbfc3f5b5b96185318e1573	5
[AIRFLOW-6528] disable flake8 W503 line break before binary operator (#7124)	1
Remove unneeded parentheses from Python files (#12270)	2
add compatibility methods for GoogleCloudStorageHook	1
extra docker-py update to resolve docker op issues (#15731)Due to changes in the docker api in api version 1.41, the docker pythonclient needs an update to properly handle the filter param imagejsonendpoint.  Without this fix, the `DockerOperator` will not pull the imageunless `force_pull` is set to True.Fixes #13905	0
[tvm4j] provide error msg for failure function call (#2967)	1
[RUST][RUNTIME] Fix workspace (#5503)* [RUST][RUNTIME] Fix workspace* use ok_or_else instead of ok_or	1
tHe output of commands of Breeze are only generated when they change (#23570)Previously we generated output of all the commands from Breeze always,hoping that they will be the same, but rich already had two changesin the format of the SVG files which made the output different andbreaking our PRs.Temporarily we pinned rich to fix the output, but better solution isto get the hash of all the configuration options and see if it changed,and only run generation when it did. This way we keep automatedgeneration on pre-commit but we are protected from accidental changeof the output.We also remove the rich limits and regenerated all svg files to onesgenerated by 12.4.0. Also found a way to run the check if we shouldrun generation at all in pre-commit without prior installing breeze.Fixes: #22908	0
[AIRFLOW-1743] Verify ldap filters correctlyThe superuser and data profiler filter where setby defaultin the config template and could not be unset.Closes #2712 from bolkedebruin/AIRFLOW-1743	1
[AIRFLOW-6141] Remove ReadyToRescheduleDep if sensor mode == poke (#6704)	4
Add imports to deferring code samples (#24544)	2
add query for shared memory size (#1083)	1
Fix Xcode 10 metal compile error (#2836)	0
[Hexagon] Implement model launcher (#8986)* [Hexagon] Implement model launcherThis implements a launcher that allows execution of ML models compiledinto a shared library on Hexagon DSP. It consists of two parts: theHexagon-side skel library and `launcher_android` to be used from`adb shell`.The launcher does not implement any performance-related optimizations,it's built on top of the `graph_executor` from TVM runtime, and so itexecutes a single layer at a time. This launcher should not be used tomeasure performance (because if will be highly suboptimal), its mainpurpose is to help in validating correctness.* Address review comments: explanations and elaborations in README.md* Rename cmake variables to be same as for TVM- `HEXAGON_SDK_ROOT` -> `USE_HEXAGON_SDK`- `HEXAGON_ARCH` -> `USE_HEXAGON_ARCH`* Address more review comments* Error out in cmake when USE_HEXAGON_SDK/USE_HEXAGON_ARCH are undefined* Change FATAL_ERROR to SEND_ERROR in cmake file	2
[AIRFLOW-5027] Grab CloudWatch logs after ECS task has finished (#5645)	5
[BACKEND] Allow nvptx to pass ll ir to CUDAModule (#404)	4
[AIRFLOW-2116] Set CI Cloudant version to <2.0The python-cloudant release 2.8 is broken andcauses our CI to fail.In the setup.py we install cloudant version <2.0and in our CI pipelinewe install the latest version.Closes #3051 from Fokko/fd-fix-cloudant	0
Change TaskInstance and TaskReschedule PK from execution_date to run_id (#17719)Since TaskReschedule had an existing FK to TaskInstance we had to movechange both of these at the same time.This puts an explicit FK constraint between TaskInstance and DagRun,meaning that we can remove a lot of "find TIs without DagRun" code inthe scheduler too, as that is no longer a possible situation.Since there is now an explicit foreign key between TaskInstance andDagRun, we can remove a lot of the "cleanup" code in the scheduler thatwas dealing with this.This change was made as part of AIP-39Co-authored-by: Tzu-ping Chung <tp@astronomer.io>	4
[AIRFLOW-XXX] Improve GCP documentation (#6433)	2
[Hexagon] Implement avg_pool2d slice op (#11417)* Implement avg_pool2d slice op* Address review comments and fix the STIR schedule* Fix formatting issues* Address pylint errors* Additional formatting issues* more pylint fixes* Changed arch version to v68 for now* Changing arch version back to v69* Move the test to tests/python/contrib/test_hexagon/topi	3
Grid data: do not load all mapped instances (#23813)* only get necessary task instances* add comment* encode_ti -> get_task_summary	1
[Compilation Warning Fix] in matrix_op.cc (#356)The below compilation warning issue has been fixed.src/top/tensor/matrix_op.cc:37:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]   for (int i = 0; i < lshape.ndim() - 1; i++) oshape[i] = lshape[i];                     ^src/top/tensor/matrix_op.cc:38:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]   for (int i = 1; i < rshape.ndim(); i++) oshape[i + lshape.ndim() - 1] = rshap	2
[AIRFLOW-XXX] Add missing remote logging field (#4333)	2
[AIRFLOW-1180] Fix flask-wtf version for test_csrf_rejectionFor now, SecurityTests.test_csrf_rejection failsbecause flask-wtf version specified in setup.py istoo old.This PR fixes it.Closes #2280 from sekikn/AIRFLOW-1180	0
[TOPI] Automated schedule in conv2d TOPI lib, moving to GEMM intrinsic (#35)* removing programming out of end to end example for now* updating TOPI library to use gemm tensor intrinsic* bug fix, autoschedule in TOPI conv lib* removing the deprecated GEVM intrinsic* refactoring, fixed lint test* fix for integer division bug* python3 bug fix for non matching types due to float division* comment	0
Convert Local to S3 example DAG to System Test (AIP-47) (#25345)* System test for local to s3 - without using fetch_variable* Update system test to use SystemTestContextBuilder* Make requested changes* Update local_to_s3.rst file to use the correct code reference.	1
[AIRFLOW-7017] Respect default dag view in trigger dag origin. (#7667)	2
[Documentation]Fix example code in comment of tvm.build_module.build() (#4195)* Fix example code in comment of tvm.build_module.build()* Update build_module.py	5
Add core-operators label to boring cyborg automation (#15167)	1
Chart: Fix elasticsearch URL when username/password are empty (#21222)	4
[CI][Hexagon] Add Hexagon Tests to pipeline (#10302)* Add hexagon tests to CI Hexagon* Fix CRT libs* cleanup and fix Jenkins* Address @areusch comments	1
Increasing max recursion to allow deepcopy of large DAGs	2
Py3 compatibility	5
Fixing MyPy issues in testa/jobs (#19998)	3
[Relay] Add logical operators (#2743)	1
Merge pull request #545 from lentinj/masterPy3.4: Pass ConfigParser's extra kwargs through	5
return None instead of raising XComException	2
[typo] fucntion ==> function (#2239)fucntion ==> function	1
Allow your own Docker production image to be verified by bash script (#14224)Co-authored-by: Kamil Bregula <kamilbregula@Kamils-MacBook-Pro.local>	2
Add information about supported OS-es for Apache Airflow (#19855)While answering some Stack Overflow questions I found and wasgenerally very surprised that we do not mention POSIX complianceand "only use Linux for production" in our prerequisites.This PR adds a note about it - both in GitHub and in our installationprerequisites.	1
[Hexagon] Handle TCP server binding to unknown port (#10945)The server IP address will be obtained from the RPC tracker, but multipleservers must be distinguishable. To enable this, set a unique key whenstarting a server, and use that key when starting a session.	1
remove retry for now (#16150)	1
Merge pull request #162 from seibert/no_tlsAdd smtp_starttls flag to config	5
[AIRFLOW-7100] Add GoogleAnalyticsGetAdsLinkOperator (#7781)Co-authored-by: michalslowikowski00 <michal.slowikowski@polidea.com>	2
[REFACTOR][IR] Unify IntImm and UIntImm (#4706)* [REFACTOR][IR] Unify IntImm and UIntImmThis PR unifies UIntImm and IntImm to simplify the codebase.Unsigned integer constants will also be stored as IntImm.For uint constant that does not fit into int64(rare case), we introducedan intrinsic tvm_big_uint_imm to construct such intgers by itslower and higher 32bits.* [REFACTOR][IR] Remove UIntImm to use IntImm* rename big->large	1
[AIRFLOW-XXX] Fix Documentation for adding extra Operator Links (#6301)	2
Port of kerberos_login to new backend structure. Some cosmetic fixes to ldap_auth	0
Fixing prints for Python3	0
[AIRFLOW-2961] Refactor tests.BackfillJobTest.test_backfill_examples test (#3811)Simplify this test since it takes up 15% of all the time. This is becauseevery example dag, with some exclusions, are backfilled. This will put somepressure on the scheduler and everything. If the test just covers a coupleof dags should be sufficient254 seconds:[success] 15.03% tests.BackfillJobTest.test_backfill_examples: 254.9323s	3
Merge pull request #86 from mistercrunch/email_opNew email operator	1
[PyTorch][Fix] Fix for numerically unstable logsigmoid (#12563)* Fix numerical instability for log sigmoidFix numerical instability for log sigmoid in pytorch frontend* update* add test for overflow check* merging two tests	3
Add on_kill support for the KubernetesPodOperator (#10666)This PR ensures that when a user kills a KubernetesPodOperator taskin the airflow UI, that the associated pod is also killed using theon_kill method.	1
[Relay][Pass] Simplify consecutive transpose/layout_transform (#7656)* [Relay][Pass] Simplify consecutive transpose/layout_transform* lint* fix* support negative* comment	1
[AIRFLOW-XXX] Add Trocafone to user list (#5203)	1
[ATTR] More robust attr parsing (#33)	5
Chart: Make cleanup cronjob cmd/args configurable (#17970)	5
[DEBUG] get_node_output : To retrieve out put of any node - for debug purpose. (#820)	0
Use "remote" pod when patching KPO pod as "checked" (#23676)When patching as "checked", we have to use the current version of the pod otherwise we may get an error when trying to patch it, e.g.:```Operation cannot be fulfilled on pods \"test-kubernetes-pod-db9eedb7885c40099dd40cd4edc62415\": the object has been modified; please apply your changes to the latest version and try again"```This error would not cause a failure of the task, since errors in `cleanup` are suppressed.  However, it would fail to patch.I believe one scenario when the pod may be updated is when retrieving xcom, since the sidecar is terminated after extracting the value.Concerning some changes in the tests re the "already_checked" label, it was added to a few "expected pods" recently, when we changed it to patch even in the case of a successful pod.Since we are changing the "patch" code to patch with the latest read on the pod that we have (i.e. using the `remote_pod` variable), and no longer the pod object stored on `k.pod`, the label no longer shows up in those tests (that's because in k.pod isn't actually a read of the remote pod, but just happens to get mutated in the patch function before it is used to actually patch the pod).Further, since the `remote_pod` is a local variable, we can't observe it in tests.  So we have to read the pod using k8s api. _But_, our "find pod" function excludes "already checked" pods!  So we have to make this configurable.So, now we have a proper integration test for the "already_checked" behavior (there was already a unit test).	3
[AIRFLOW-2752] Log using logging instead of stdoutLogging should be done using the Python log moduleinstead of writing directly to stdoutCloses #3604 from Fokko/patch-2	2
[AIRFLOW-1730] Unpickle value of XCom queried from DB	5
[AIRFLOW-1199] Fix create modalCloses #2293 from skudriashev/airflow-1199	1
Use full version string for deprecated config (#22930)	5
[TIR] Allow string/buffer arguments to Schedule cache_read/write (#12661)Previously, the argument needed to be an integer specifying the indexinto the read/write regions of a block.  Now, the argument can be astring specifying the name of the buffer, or the Buffer object itself.This is a follow-up from https://github.com/apache/tvm/pull/11624.	1
Switched to Run Checks for Building Images. (#11276)Replaces the annoying comments with "workflow_run" linkswith Run Checks. Now we will be able to see the "Build Image"checks in the "Checks" section including their status and directlink to the steps running the image builds as "Details" link.Unfortunately Github Actions do not handle well the links todetails - even if you provide details_url to link to the otherrun, the "Build Image" checks appear in the original workflow,that's why we had to introduce another link in the summary ofthe Build Image check that links to the actual workflow.	1
[AIRFLOW-3235] Add list function in AzureDataLakeHook (#4070)	5
Fix failing pylint check on Master (#13078)	0
[RELAY] Fix segfault in pretty print when ObjectRef is null (#5681)* [RELAY] Fix segfault in pretty print when ObjectRef is nullEncountered when pretty printing module with function attribute equal to NullValue<ObjectRef>().Change-Id: I2e7b304859f03038730ba9c3b9db41ebd3e1fbb5* Add test caseChange-Id: I579b20da3f5d49054823392be80aaf78a055f596	4
[µTVM] Add virtual machine, test zephyr runtime on real hardware (#6703)* Split transport classes into transport package.* Introduce transport timeouts.* black format* Add metadata-only artifacts* Simplify utvm rpc server API and ease handling of short packets.* add zephyr test against qemu* Add qemu build config* fix typo* cleanup zephyr main* fix nonblocking piping on some linux kernels* don't double-open transport* validate FD are in non-blocking mode* gitignore test debug files* cleanup zephyr compiler* re-comment serial until added* remove logging* add zephyr exclusions to check_file_type* add asf header* lint* black format* more pylint* kill utvm rpc_server bindings, which don't work anymore and fail pylint* fix compiler warning* fixes related to pylint* clang-format again* more black format* add qemu regression* Fix paths for qemu/ dir* fix typo* fix SETFL logic* export SessionTerminatedError and update except after moving* fix test_micro_artifact* retrigger staging CI* fix jenkins syntax hopefully* one last syntax error* Add microTVM VM setup scripts* obliterate USE_ANTLR from cmake.config* add poetry deps to pyproject.toml - mainly taken from output of `pip freeze` in ci-gpu and ci-lint* initial attempt at setup.py + autodetect libtvm_runtime SO path* hack to hardcode in build* make pyproject lock* Add ci_qemu to Jenkinsfile* build in qemu* checkpoint* create diff for jared* add missing stuff* address liangfu comments* fix new bug with list passing* release v0.0.2* works on hardware* switch to pytest for zephyr tests* add missing import* fix option parsing* remove extraneous changes* lint* asf lint, somehow local pass didn't work* file type lint* black-format* try to fix ARMTargetParser.h #include in LLVM < 8.0* rm misspelled deamon lines* move to apps/microtvm-vm* fetch keys from kitware server* fix path exclusions in check_file_type* retrigger CI* reorganize vm, add tutorial* fixes for reorganization - enable vagrant ssh* update ssh instructions* rm commented code* standardize reference VM release process, add prerelease test* remove -mfpu from this change* fix exit code of test_zephyr* rm unneeded files, update check_file_type* add asf header* git-black* git-black against main* git-black with docker* fixes for virtualbox* black format* install python3.8, for zephyr gdb* timestamp zephyr vm name, permits launching multiple VMs* log warning when initial vagrant destroy fails* revert changes moved into #6789* address leandron@ comments* black format* black format* add --skip-build to test subcommand, detach device from other VMs* black format* address leandron@ comments* don't rm release test when building only 1 provider* revert pyproject.toml* remove need to copy pyproject.toml to root * this often contributes to erroneous changes to that file	2
[TFLite] Implemented ONE_HOT Operator for TFLite (#6223)	1
Include scheduled slots in pools view (#26006)	5
Remove deprecated BashTaskRunner (#12295)This commit:- Remove support for BashTaskRunner, this task_runner was deprecated fromAirflow 1.10.3 (https://github.com/apache/airflow/blob/1.10.3/UPDATING.md#rename-of-bashtaskrunner-to-standardtaskrunner)- Support deprecated `hostname_callable` & `email_backedn` until 2.1 since it has not been deprecated in any relased Airflow versions	1
[AIRFLOW-1345] Dont expire TIs on each scheduler loopTIs get expired on commit, which causes any accessto their propertiesto cause a new query to the DB to be issued,causing an n+1 query issue,even when the TI is not scheduled. This changemakes all queriesbatches, which will make scheduling substantiallyfaster.Closes #2397 from saguziel/aguziel-commit-last	1
[TVMC] Runner.py Updates (#7779)* change runner to ms instead of s, consider reformatting* adjust formatting and test in test_runner.py to be more realistic* change device in run_module runner.py to be mandatory* make hostname optional in run_module, in runner.py* update order and doc string* remove print statement* black files* device error lint* argument order was incorrect* arguments funkiness attempt fix 2* Fix merge with main.Co-authored-by: Jocelyn <jocelyn@pop-os.localdomain>Co-authored-by: Josh Fromm <jwfromm@uw.edu>Co-authored-by: Josh Fromm <jwfromm@octoml.ai>	5
Merge remote-tracking branch 'upstream/master' into chart	2
Added example JSON for airflow pools import (#18376)Co-authored-by: Bas Harenslak <bas@astronomer.io>	2
C-RNN layer support is added (#1492)	1
[microTVM] Add Arduino CLI support to ci-qemu (#8504)* Add Arduino CLI support to ci-qemu* Install latest version of Arduino SDK* Remove unnecessary --fix-missing* Tweak to clarify what URLs go with what* Retrigger CI* Temporarily replace buggy Spresense core	0
Use the correct link for Apache Airflow Dockerhub repo (#13752)https://hub.docker.com/repository/docker/apache/airflow requires auth while  https://hub.docker.com/r/apache/airflow does not	2
Chart: Add ``extraInitContainers`` to scheduler/webserver/workers (#16098)Allow users to specify custom init containers on the core airflowcomponents.	5
[DOC][Relay]: Add API docs for Relay. (#1750)	2
Add classic installation scripts for additional tools (#13587)	1
Add triggering dataset events to ti context (#26168)This allows downstream tasks to get details about the events thattriggered the dagrun.Co-authored-by: Jed Cunningham <jedcunningham@apache.org>Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	2
Fix precedence of affinity, nodeSelector, and tolerations (#20641)	5
[DOCS] Cleanup the relay docs location (#2785)	2
[CUDA] Various int8 fix (cublas, cutlass, etc) (#10596)* [CUTLASS] avoid tile size 256 for int8 + align1 case* allow selecting int8 dense strategy for vulkan* fixed cublas batch matmul for int8* fixed int8 dense tensorcore strategy* add cutlass conv align1 + int8 case* support int8 mixed precision cublas bmm* black	1
[AIRFLOW-6914] Add a default robots.txt (#7653)Signed-off-by: Raymond Etornam <retornam@users.noreply.github.com>	1
Remove an obsolete comment (#2527)	4
[AIRFLOW 1149][AIRFLOW-1149] Allow for custom filters in Jinja2 templatesCloses #2258 fromNielsZeilemaker/jinja_custom_filters	1
Fix to check if values are integer or float and convert accordingly. (#21277)This code will prevent the loss of data if the value is a float it will convert to float if it is not then int.  It will use pd.Float64Dtype() for floats instead of using the the pd.Int64Dtype(). Since there could be floating-point values in the array this will fix the exception for safely casting the array to data type.fixes error when using mysql_to_s3 (TypeError: cannot safely cast non-equivalent object to int64) #16919	0
[BugFix][TIR] Fix rfactor when RF block becomes spatial (#11031)Should fix #10899	0
Add Onnx Pad v11 (#5539)	1
Merge pull request #131 from mistercrunch/testsMore unit tests	3
Update package description to remove double min-airflow specification (#24292)	4
[microTVM] Bump versions in reference vm (#11067)* Update spresense sdk version to make hack unnecessary* Bump arduino SDK version* Fix Arduino RPC server test* Fix versions for all board libraries	0
[AIRFLOW-XXX] Minor fix to CONTRIBUTING.rst (#6752)	0
Fixing task page when template location isn't relative to DAG	2
[AIRFLOW-1897][AIRFLOW-1873] Task Logs for running instance not visible in WebUIDue to the change in AIRFLOW-1873 we inadvertentlychanged the behavioursuch that task logs for a try wouldn't show up inthe UI until after thetask run had completed.Closes #2859 from ashb/AIRFLOW-1897-view-logs-for-running-instance	2
fix all "high" npm vulnerabilities (#21526)	0
Fix a spelling mistake (#136)	0
Update INTHEWILD.md (#15550)Add Menhir into the wild!	1
Fixes missing reference in docs (#14079)closes: #14045	2
airflow info fixed for python 3.8+ (#12132)	0
Limit Docutils to make our documentation pretty again (#22420)Docutils 0.17.0 which was upgraded during sphinx-jinja upgradebreaks our documentation by converting `<div class="section">` into`<section>`. This in turn adds a lot of whitespace separation andmake our documentation next to unusable.Until we fix it in our documentation we limit it to be < 0.17.0.	2
[DOCS] Fix C++ example:graph_runtime.cc:151: Check failed: data->ndim == data_out->ndim (2 vs. 1) (#1987)	5
[TOPI][Hexagon] Add test and schedule for uint8 resize2d (#12559)* [TOPI][Hexagon] Add test and schedule for uint8 resize2d* Fix correctness issue* Reformat* Remove cubic from testing* Remove unnecessary else	4
Fix conda packages (#642)* Make the tvm conda package build with in-place source and use cmake from conda.* Add a package for topi.	1
Fix error in Druid connection attribute retrieval (#17095)	0
Merge pull request #1043 from r39132/masterAdding an example to illustrate the TriggerDagRunOperator	2
ONNX frontend operator support: And (#3878)	1
Bump black version for other pre-commit hooks (#22599)This PR/commit bumps the black version used in other pre-commit hooks as a follow up of https://github.com/apache/airflow/pull/22598	1
[AIRFLOW-XXX] Fixing the issue in Documentation (#3756)	2
[MetaSchedule][M4a] Mutator: Mutate Parallel (#10096)	5
Fix typos in HiveOperator	1
Improve hints for reproducing tests (#16545)The hints to reproducible run of test are improved:* colors added* they are much shorter and only most useful option is shown	1
add FSetInputVariableAttrs (#92)* add FSetInputVariableAttrs* rename	1
temp checkin of schedule	5
Unify Google class/package names (#8033)	5
Use packaging.version, not semver module for version comparisons (#11854)Semver module doesn't like python version specifiers such as `0.0.2a1`-- since packaging module is already a dep from setup tools, and is whatthe python ecosystem uses to do version handling it makes sense to useit.	1
[FIX] make keras frontend py3 compatible (#283)	1
Merge pull request #107 from mistercrunch/presto_interval_check[Airflow] [IntervalCheck] Presto Interval Check op	1
Merge pull request #274 from airbnb/task_missingError message when task is gone on task details page	0
Add DateTimeSensor (#9697)* Add DateTimeSensor	5
Add License to INTHEWILD.md (#10570)	1
ProSiebenSat.1 added to INTHEWILD.md (#25378)* ProSiebenSat.1 added to INTHEWILD.mdCo-authored-by: Ash Berlin-Taylor <ash@apache.org>	1
[AIRFLOW-XXX] Add Tile to the list of usersTile uses airflow to schedule and manages its ETL and Data Science jobs in production. We have been using airflow for almost a year now with thecommunity help.Closes #3072 from ranjanmanish/patch-1	1
Change ParamsDict to a MutableMapping subclass (#20019)This is a little more work, and while it has no change in behaviour itdoes make Mypy happier -- previously it was complaining about update'ssignature not matching dict _or_ MutableMapping'sCo-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	5
Fixing package path in tflite test (#3427)	3
Fix keras frontend elementwise-ops for lists with len>2  (fixes issue #325) (#326)* Added elementwise-add test* Fix typo* Fixed elem-wise ops for lists with len>2	0
[AIRFLOW-3006] Add note on using None for schedule_interval	1
SLA = Service Level Agreements	5
Ignore some files/directory when releasing source code (#23325)	2
[REFACTOR][IR] Introduce include/tvm/target (#4721)As part of Unified IR infra.Introduce target folder to store all the compilation target related information.	5
Improve documentation on ``Params`` (#20567)I think that this doc could be improved by adding examples of how to reference the params in your dag. (Also, the current example code causes this: #20559.)While trying to find the right place to work a few reference examples in, I ended up rewriting quite a lot of it.Let me know if you think that this is an improvement.I haven't yet figured out how to build this and view it locally, and I'd want to do that as a sanity check before merging it, but I figured get feedback on what I've written before I do that.	5
fix miopen pad (#5433)	0
[Relay/Topi][Op] Added native DepthToSpace and SpaceToDepth Operators (#4566)* Added tvm function stencil for subpixel operations to topi.* Topi subpixel operators added and tested.* Added subpixel attrs.* Added depth_to_space relay attributes.* depth_to_space fully working.* Fixed NHWC shape bug.* SpaceToDepth in and all tests passing.* lint fixes.* Added string include* Fixed topi formatting.* Added DCR/CDR mode to depthtospace operator.	1
Merge pull request #1231 from msumit/boto_calling_formatAdd boto calling_format support	1
Allow DateTimePicker to actually pick times too. (#8034)This is reported upstreadm as dpgaspar/Flask-AppBuilder#685 but thereappears to be 0 appetite for fixing it there. Since we can't easilychange the code in FAB I have had to customize the Widget, and give it adifferent class namehttps://github.com/eonasdan/bootstrap-datetimepicker/ is MIT licensed.	5
Remove unnecessary use of comprehension in setup_provider_packages.py (#11605)	1
[AIRFLOW-XXX] Include Danamica in list of companies using Airflow (#4019)	1
Change name of the common environment initialization function (#7805)	1
[TOPI][Hexagon] Implement quantized avgpool (#12340)* [TOPI][Hexagon] Implement quantized avgpool* Fix pylint errors* Needed to adjust input padding for int8 buffer layout* Fix formatting issue* Add unit test for fixed-point conversion utility functionAlso, address review comments.* Remove pytest.skip for test_avg_pool2d_slice.py to enable on-target testing* Fix formatting issue* Update python/tvm/topi/hexagon/utils.pyCo-authored-by: Christian Convey <christian.convey@gmail.com>* Update comments and error messages* Address review comments* Import Tuple from typing* Address pylint errorCo-authored-by: Christian Convey <christian.convey@gmail.com>	0
Allow testing any executor with scheduler_dag_execution_timing.py (#9062)	2
[TIR][Transform] relax LoopPartition restriction that the intersection of all conditions can not be none. (#10340)Co-authored-by: sqing <qing.siqi@intellif.com>	5
[Infer] More robust inference, support backward inference (#54)	5
`S3ToGCSOperator`: Remove `dest_gcs_conn_id` (#23348)	4
Yo dawg. Sub dags	2
Merge pull request #787 from neovintage/password_auth_docsPassword auth docs	2
Merge pull request #1283 from clickthisnick/chore-remove-trailing-spacesCHORE - Remove Trailing Spaces	4
[BugFix] fix nvptx not supported by device_enabled error (#9585)* [BugFix] fix nvptx not supported by device_enabled errorSigned-off-by: ZQPei <ziqiangpei@foxmail.com>* [BugFix] shared.dyn support for codegen_nvptxSigned-off-by: ZQPei <ziqiangpei@foxmail.com>	1
closest partition macro	5
Additional python extras and deps can be set in breeze (#9035)Closes #8604Closes #8866	1
Adding a sql metastore partition sensor	1
Fixes cancelling of too many workflows. (#11403)A problem was introduced in #11397 where a bit too many "Build Image"jobs is being cancelled by subsequent Build Image run. For now itcancels all the Build Image jobs that are running :(.	1
[Relay][Dyn] Add dynamic reshape grad (#6080)* add dynamic rehape grad* fix lint* fix unit tests, warning	2
Removes separate cancel codeql workflow (#11672)The capability was added in the cancel-workflow-run action tocancel another workflow by name. We utilise it to merge cancelingof codeql workflow duplicates into the main build/cancel workflow	1
[AIRFLOW-4482] Add execution_date to "trigger DagRun" API response (#5260)	2
Hide pagination when data is a single page (#22963)	5
Fix typo in task fail migration (#18180)`faskfail` -> `task fail`	0
[AIRFLOW-5008] Fixed missing libmysql-client-dev in Oracle repos (#5629)(cherry picked from commit 2b6c545c823527c0ae836acb28444c4e0046d3f0)	0
[AutoScheduler] Add sampling to dispatcher (#7376)* [AutoScheduler] Add sampling to dispatcher* address comment* make measurment configurable	5
[AIRFLOW-1517] fixed license issues	0
Allow rust tvm build configuration through cargo features (#8665)	5
Pod template file uses custom custom env variable (#11480)	1
Replace learnt with learned (#3684)	5
[AIRFLOW-956] Get docs working on readthedocs.org	2
[AIRFLOW-3096] Further reduce DaysUntilStale for probo/stale	5
Support Uploading Bigger Files to Google Drive (#22179)Add `chunk_size` & `resumable` as parameters to `upload_file` methodChange the default `chunk_size` to a clear representation & fix documentation typo	2
Extends resolve_xcom_backend function level documentation (#24965)* # This is a combination of 2 commits.# This is the 1st commit message:Extends resolve_xcom_backend documentation# This is the commit message #2:properly stylize XCom* Extends resolve_xcom_backend documentationproperly stylize XComFinal docstring updateExtends resolve_xcom_backend documentationproperly stylize XComFinal docstring update* Stylistic changes	4
Fix KubernetesPodOperator reattach when not deleting pods (#18070)This change:- ignores any pods already marked as complete instead of trying to  reattach to them.- properly marks all 'finished' unsuccessful pods that won't  be deleted.Combined, these allow `is_delete_operator_pod=False` and`reattach_on_restart=True` to function together properly during retries.	1
[C API] Make DSL API registerable, add copy from/to raw bytes (#222)* [C API] Make DSL API registerable, add copy from/to raw bytes* fix cython	0
Add blocksize arg for ftp hook (#24860)Co-authored-by: Kevin George <“kevingeorge232@gmail.com”>	1
[Relay][Backend] Fix interpreter argument conversion for tuples. (#3349)* Support taking a tuple as an argument* Add test	3
Merge pull request #443 from jlowin/return_bashAllow XCom push from BashOperator	1
Chart: Use 2.2.3 as default Airflow version (#20450)	1
[MetaSchedule] Logging Interface Unification (#11157)* Implement new logging interface.* Major interface usage update.* Functionality fix.* Switch logging conditions.* Tweak logging interface.* Minor fix.* Feature updates.* Logging usage.* Linting.* Fix linting.* Fix handler type.* Fix issues.* Nits.* Address issues.* Add DEBUG level fall back.* Minor fixes.* Allow parameterized configuration.* Linting.* Polish interface.	1
Life Science assets & system tests migration (AIP-47) (#25548)	3
Fix a multithreaded bug in llvm LazyInitJIT (#3158)	5
Add warning to AIP-38 UI readme (#24764)	2
[AIRFLOW-1388] Add Cloud ML Engine operators to integration docCloses #2425 from leomzhong/integration_doc	2
remove --use-wheel as it doesn't exist	1
Enforce code-block directives in doc (#9443)	2
[AIRFLOW-580] Prevent landscape warning on .formatPrevent landscape warning for use of .format in loggingCloses #1843 from robin-miller-ow/DisableLoggingStringFormattingStyleWarningInLandscapeIO	2
Add read-only Config endpoint (#9497)Co-authored-by: Kamil Breguła <kamil.bregula@polidea.com>Co-authored-by: Tomek Urbaszek <turbaszek@apache.org>Co-authored-by: Kamil Breguła <mik-laj@users.noreply.github.com>	1
Merge pull request #630 from patrickleotardif/patch-5Extract request args in action logging	2
[AIRFLOW-6434] add return statement back to DockerOperator.execute (#7013)	2
Fix MyPy errors in leveldb (#20222)Part of #19891	5
More documentation for BigQuery to GCS operator.	1
Add ekalda to reviewers. (#11061)	1
Installed providers are initialized in subshell (#13270)In DockerHub when non-release image was built the initializationwas leaving INSTALLED_PROVIDERS array as empty because thevalues were not appended to the existing array but the variablewas re-declared inside the function.This only happened when initialization was run as a subshell.	1
Merge pull request #20 from mistercrunch/backfill_loggingAdding state logging to backfill	2
Remove ``execution_date`` label when get cleanup pods list (#20417)	4
Improve error message for BranchPythonOperator when no task_id to follow (#18471)* Improve error message for BranchPythonOperator when no task_id to follow	1
Fix unnecessary check for ARM images (#24718)The ARM image build introduced in #24664 had problem with buildimage that was additionally checking for arm images which weremoved out to a spearate step	4
Switch to Apache-owned GitHub actions (#13327)There was a change in Policy of ASF that only "Made by GitHub"actions and actions residing in Apache-owned repositoriesare allowed to be used for ASF projects. This was inresponse to a security incident.More details:Policy:* https://infra.apache.org/github-actions-secrets.htmlDiscussion builds@apache.org:* https://lists.apache.org/thread.html/r435c45dfc28ec74e28314aa9db8a216a2b45ff7f27b15932035d3f65%40%3Cbuilds.apache.org%3EDiscussion users@infra.apache.org:* https://lists.apache.org/thread.html/r900f8f9a874006ed8121bdc901a0d1acccbb340882c1f94dad61a5e9%40%3Cusers.infra.apache.org%3E	5
Add docs to the markdownlint and yamllint config files (#15682)	2
Merge pull request #185 from wooga/af-jdbcExtend jdbc functionality	1
[CODEGEN] add fp16 and fp64 enable pragma for opencl (#697)* [CODEGEN] add fp16 and fp64 enable pragma for opencl* fix style	0
docs: fixes a spelling mistake in default config	5
Add correct description for dst param in LocalFilesystemToGCSOperator (#9055)	5
Merge pull request #776 from airbnb/bash_env[bashoperator] making env param a templated field	2
AIRFLOW-5489: Remove unneeded assignment of variable (#6106)	4
Ensure ``DateTimeTrigger`` receives a datetime object (#17747)While using the following example DAG, the task failed with `moment` does not have `tzinfo` attribute. This happened because a string was passed from `DateTimeSensor` to `DateTimeTrigger`. This PR ensures that a datetime object is passed and fixed logic in `DateTimeSensor` too so that `self.target_time` is always a datetime object.```pythonfrom datetime import timedeltafrom airflow import DAGfrom airflow.sensors.date_time import DateTimeSensorAsyncfrom airflow.utils import dates, timezonewith DAG(    dag_id='example_date_time_async_operator',    schedule_interval='0 0 * * *',    start_date=dates.days_ago(2),    dagrun_timeout=timedelta(minutes=60),    tags=['example', 'example2', 'async'],) as dag:    DateTimeSensorAsync(task_id="test", target_time=timezone.datetime(2021, 8, 19, 23, 15, 0))```	5
[FRONTEND][TFLITE] Add FULLY_CONNECTED op into tflite frontend, support Inception V4 (#3019)* Add FULLY_CONNECTED op into tflite frontend, support Inception V4* Fix comment style in TF Lite tests.	3
[AIRFLOW-1635] Allow creating GCP connection without requiring a JSON fileCloses #2640 from barrywhart/airflow-1635-gcp-json-data-master	5
Fix log persistence with KubernetesExecutor (#15659)KubernetesExecutor workers also need the log volume mounted.	2
add large if block, modify sla misses	1
Merge pull request #22 from mistercrunch/debug_webserverBringing back the debug flask webserver as an option	0
[RELAY][BYOC] Fix the creation of tuple of tuples in PartitionGraph (#5616)* [RELAY][BYOC] Fix the creation of tuple of tuples in PartitionGraphIf the annotated compiler region contains multiple outputs wheresome of the outputs are tuple output, the current PartitionGraph willcreate tuple of tuples. This will not be handled by the runtime.This commit flattens the such tuples and re-create them after thecall site of the partitioned function.Change-Id: I4e7ccbda73c129a9f4ae8705d5c9f2af6ab99ef6* [RELAY][BYOC] Fix the creation of tuple of tuples in PartitionGraph    *code refactor : extracted the passes as a sequentialChange-Id: If4bc00b00a96fa244358d602fc1a361498342f46* [RELAY][BYOC] Fix the creation of tuple of tuples in PartitionGraph   *further refactorChange-Id: I69ddd0e835e88ef97da8a3a3b949be3f7b619c02* [RELAY][BYOC] Fix the creation of tuple of tuples in PartitionGraph    *class description comment amendedChange-Id: I55720bf0467c96e979e1ab56c40d9d209e0f9456	4
Combine unit and integration test steps into one stage (#9733)This removes the barrier wait between test and integration tests in CI. This will increase capacity requirements and usage but, assuming we can meet that with autoscaler, should reduce CI times by an hour or two since we're doing all the testing in parallel.The slow path is CPU unit test -> GPU frontend tests, so kicking off the GPU frontend tests faster should help decrease CI runtime.Co-authored-by: driazati <driazati@users.noreply.github.com>	1
Merge pull request #927 from airbnb/fix_adhoc_dr[fix] disregarding adhoc tasks when closing dag runs	1
[AIRFLOW-488] Fix test_simple failMake unittest test_simple pass on all platformsincluding MacOs.Closes #1782 from forevernull/master	4
An initial rework of the "Concepts" docs (#15444)This takes the old, single-page Concepts document and turns it into a newConcepts section, rewrites some of the text to have consistent terminology(upstream/downstream, Task vs Operator, etc.) and tries to make it generallymore accessible and high-level. It also moves a couple of other pages in thatdirectly fit with the existing content (Scheduler and Smart Sensors).	4
[AIRFLOW-2913] Check bucket_key/bucket_name combination in S3KeySensorWhen bucket_name is provided, and bucket_key is also provided as a fullS3:// url, the full_url obtained eventually will be wrong.  It will belike 's3://bucket_name/s3://bucket_name/object_key'.This should be avoided by adding checking and raise exception in suchcase.Closes #3762 from XD-DENG/patch-6	1
[AIRFLOW-180] Fix timeout behavior for sensorsIn the previous state of the code, datetime.now was compared tostarted_at and seconds was pulled out. It turns out that the secondsattribute of a timedelta has a maximum of 86400 and the rolls up to 1 day.The unintended consequence is that timeout larger than 86400 areignored, with sensors running forever.To fix this we use the total_seconds method to get at the realtimedelta in seconds.	1
[ARITH] Bugfix: check arg positiveness for mod rules (#3279)	0
[Relay] Merge analysis/context_analysis.cc and transforms/device_annotation.cc (#9038)* [Relay] Merge analysis/context_analysis.cc and transforms/device_annotation.ccCurrently LowerTEPass (backend/te_compiler.cc) is a 'special' pass because itdepends on a side-input DeviceMap. We'd like to remove that side-input, andinstead recover the Device (and, ultimately, Target) for each (fused) primitivecall from the AST alone.By doing so we also avoid needing to perform device planning twice: - It needs to be done before lowering so we know which primitives need   to be compiled for which devices. - It then needs to be re-done after lowering and optimization as a prelude   to memory planning.By baking the device plan into the AST we can simply do device planning beforelowering, and run memory planning later, both as ordinary passes.While working on that issue we realized we currently have 3 'device planners': - transforms/device_annotation.cc, which supports only a small subset of Relay   and uses a simple top-down algorithm to assign a device to every   sub-expression. - analysis/context_analysis.cc, which makes a galant effort to support most of   Relay, is based on unification rather than a top-down algorithm, but handles   higher order functions by ad-hoc and fragile inlining. - transforms/annotate_target.cc, which works on Targets instead of Devices, but   is otherwise like 'device planning'.We'd like to bring these together.In this PR we introduce a new transforms/device_planner.cc intended to replacetransforms/device_annotation.cc and analysis/context_analysis.cc. We don'tdelete those two just yet since we need to switch all users off of them in thenext PR. We also leave transforms/annotate_target.cc alone pending a proper RFCto bring devices and targets together sensibly, but have it firmly in oursights.transforms/device_planner.cc is based on analysis/context_analysis.cc, butis heavily reworked to: 1. Handle starting from existing "on_device" annotations as well as existing    "device_copy" calls. 2. Be idempotent, with the idea we'll probably need to re-run it to 'refine'    device planning to account for storge scopes. 3. Robustly handle all of Relay, particularly higher-order functions. For that    we replace the inlining approach in analysis/context_analysis.cc with a    higher-order unification domain. 4. Be a little more systematic with defaulting. 5. Capture the result of the analysis within the AST as new "device_copy" calls    at device boundaries, and new/replaced "on_device" calls wherever the device    for a sub-expression is not already 'obvious' from the sub-expression's    lexical scope. 6. Provide helper visitors for passes which need to ask for the device for    any sub-expression they are processing and/or preserve device information    on rewrites. Those passes include:     - backend/aot_executor_codegen.cc (AOTOnDemandAllocator)     - backend/graph_plan_memory.cc (StorageAllocaBaseVisitor etc)     - backend/te_compiler.cc (LowerTensorExprMutator)     - backend/vm/lambda_lift.cc (LambdaLifter)     - transforms/memory_alloc.cc (DialectRewriter)     - transforms/to_a_normal_form.cc (Fill)     - backend/vm/compiler.cc (VMFunctionCompiler)    However we won't change any of those in this PR.See the draft https://github.com/apache/tvm/pull/8788 for the end game.* [checkpoint] Use Relay script for all unit tests.* [checkpoint] Hoist out DeviceDomain and DeviceDomains.* [checkpoint] Hoist out visitors* [checkpoint] Woops, left debug-only code in	0
[BYOC][bugfix] Handle empty tuples in annotation pass (#7288)	4
SLA Alert Callback : Supporting the ability to do optional SLA alert call backs and emailing	1
[AIRFLOW-3173] Add _cmd options for password config options (#4024)There were a few more "password" config options added over the last fewmonths that didn't have _cmd options. Any config option that is apassword should be able to be provided via a _cmd version.	1
[BYOC] Support Tuple Output in C/DNNL Codegen (#5701)* Support tuple output runtime* fix unit test	3
[TVMScript] Fixing T.buffer with typed positional arguments other than int32 (#10892)* workaround for T.buffer with typed positional arguments* address comments* fix linting	0
[AIRFLOW-4118] instrument DagRun duration (#4946)	2
[AIRFLOW-5385] spark hook does not work on spark 2.3/2.4 (#6976)	1
Chart: Update description for Helm chart to include 'official' (#17040)Including the word "official" should differentiate our chart against others```❯ helm search hub airflowURL                                               CHART VERSIONAPP VERSIONDESCRIPTIONhttps://artifacthub.io/packages/helm/airflow-he...8.4.1        2.1.1      the community Apache Airflow Helm Chart - used ...https://artifacthub.io/packages/helm/apache-air...1.0.0        2.0.2      Helm chart to deploy Apache Airflow, a platform...https://artifacthub.io/packages/helm/bitnami-ak...10.2.4       2.1.1      Apache Airflow is a platform to programmaticall...https://artifacthub.io/packages/helm/bitnami/ai...10.2.5       2.1.2      Apache Airflow is a platform to programmaticall...https://artifacthub.io/packages/helm/larribas/a...1.0.1        1.10.7     [Airflow](https://airflow.apache.org/) + Kubern...https://artifacthub.io/packages/helm/douban/hel...0.2.1        0.2.0      A Helm chart for Douban Helpdesk```	2
handling headers with field matching and streaming the file	2
Fix ./breeze exec command error: /bin/bash: -c: option requires an argument (#13998)	1
[COMMUNITY] Add driazati key for release (#12076)As per https://tvm.apache.org/docs/contribute/release_process.html#id3	2
[AIRFLOW-XXX] Add Caesars Entertainment to list of users (#5536)[ci-skip]	1
[DNNL] Add bfloat16 type support for dnnl conv2d kernel (#11902)	1
[LANG] Generalize compute to tensor region (#1476)	5
Don't import mysql exceptions from "private" module (#15039)This module was removed/renamed in mysqlclient 2.0 -- this new nameworks for both	1
[DOC] Improve Pattern Language Docs (#5676)* [DOC] Improve Pattern Language Docs* address comments* address comments	1
[runtime] reduce set_input and set_input_zero_copy overhead (#3805)	1
Make `pandas` an optional core dependency (#17575)We only use `pandas` in `DbApiHook.get_pandas_df`. Not all users use it, pluswhile `pandas` now supports many pre-compiled packages it still can take forever whereit needs to be compiled.So for first-time users this can be a turn off. If pandas is already installed thiswill work fine, but if not users have an option to run `pip install apache-airflow[pandas]`closes #12500	1
Fix version check bug (#6784)* Fix version check bug* Update pytorch_utils.py* Update pytorch_utils.py* Update pytorch_utils.py* Update pytorch_utils.py	5
Raise deep scheduler exceptions to force a process restart.	1
ROCm: use GcnArch for mcpu and ApiVersion to select code object version (#6447)	1
[TVMScript] Doc Base Class & DocPrinter Scaffolding (#11971)This PR addes:- Doc base class- DocPrinter base class- PythonDocPrinter- LiteralDoc and its support in DocPrinterTracking issue: #11912	0
Fix error message in Buffer::vstore, NFC (#6056)* Fix error message in Buffer::vstore, NFC* Fix whitespace in comment as well	0
Adding mock lib to devel extras_require	1
[MetaSchedule] Schedule Rule: Auto Inline (#9943)Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Xiyou Zhou <xiyou@octoml.ai>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Xiyou Zhou <xiyou@octoml.ai>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>	1
[Doc] Fix Relay pattern rewrite (#8425)	0
first version of the celery executor	5
ensure task is skipped if missing sla (#16719)* ensure task is skipped if missing slaThis protects against missing SLAs.For instance, if a task does not have an SLA then it's possible this will result in an error like so:TypeError: unsupported operand type(s) for +: 'DateTime' and 'NoneType'  File "airflow/jobs/scheduler_job.py", line 565, in execute_callbacks    self.manage_slas(dagbag.dags.get(request.dag_id))  File "airflow/utils/session.py", line 70, in wrapper    return func(*args, session=session, **kwargs)  File "airflow/jobs/scheduler_job.py", line 433, in manage_slas    if following_schedule + task.sla < timezone.utcnow():Here we simply skip tasks which do not have SLAs and avoid raising the exception in subsequent logic.	2
Chart: Fix `extraEnvFrom` examples (#19144)	0
adjustments to TODO	2
Fix black version to support click 8.0.0 (#22598)The new click causes black to fail	0
Implementing run method in presto_hook (for view creation)	1
[COMMUNITY] MichaelJKlaiber -> reviewer (#12501)	3
[5/10] Code generation for Depthwise Convolution via CMSIS-NN (#9409)This PR adds support for depthwise convolution via CMSIS-NN.	1
Update environments documentation links (#23920)	2
[PASS] PrecomputePrune, add testcase (#14)* [PASS] PrecomputePrune, add testcase* update comment	5
Fix port number in webserver for kind setup (#10452)	1
Remove `xcom_push` from `DockerOperator` (#23981)	2
[SUBMODULE] update submodule to latest (#1728)	3
Update changelog to the latest (#18811)Adds recent changes from main too	4
add var binding for expr	1
make simplify inference iterative (#8246)	5
Fix wait-for-migrations command in helm chart (#12522)If the migrations weren't yet applied this would fail with `NameError:name 'log' is not defined`. (I guess no one really noticed as thecontainer would restart, and try again.)	1
Adding toggle button functionality to easily pause dags in the dag view.	2
replace  to contributing quick start guide (#17908)	5
Upgrades moto to newer version (~=2.0) (#15051)According to https://github.com/spulec/moto/issues/3535#issuecomment-8087069391.3.17 version of moto with a fix to be compatible with mock> 4.0.3 isnot going to be released because of breaking changes. Therefore we needto migrate to newer version of moto.At the same time we can get rid of the old botocore limitation, whichwas added apparently to handle some test errors. We are relying fullyon what boto3 depends on.Upgrading dependencies also discovered that mysql tests need tobe fixed because upgraded version of dependencies cause some testfailure (those turned out to be badly written tests).	3
Adding for element to navigate the tree view	1
Bump pre-commits: `black` and `pyupgrade` (#18782)```https://github.com/asottile/pyupgrade : v2.25.1 -> v2.29.0.https://github.com/psf/black: 21.8b0 -> 21.9b0.```	5
[Relay] Add Elemwise operator Sub, Divide, Power, Max, Min to tflite frontend. (#3357)	1
Show DAGs and Datasets menu links based on role permission (#26183)This allows users with an elevated public role (e.g. AUTH_ROLE_PUBLIC=Admin)to see the DAGs and Datasets menu links in the navbar.Co-authored-by: Daniel Standish <15932138+dstandish@users.noreply.github.com>	1
Retry initialization of environment in case it fails (#8555)Sometimes the docker-compose environment fails to initialise. It isone of two problems:* DNS fwd/rev mismatch on checking the docker compose integration* Missing name for the docker compose intagrationThis is likely due to some race conditions when setting up dockercompose network and DNS. It happens very rarely and it seems thatit's not easily reproducible. It is very likely that detectingthis case, cleaning the docker environment and retrying willwork fine. This is what this PR tries to attempt	1
Handle outdated webserver session timeout gracefully. (#12332)	5
Warn if Python changes are not rebased (#21016)We are introducing this change temporary to make sure that Pythonchanges will not accidentally introduce new MyPy errors after wemerge them.This check might be disabled ~week after we enable MyPy as failingcheck.	0
Merge pull request #177 from airbnb/fix_conn_idA fix to make the conn_id handling backward compatible	1
Rename tvm.hybrid.script to tvm.script. (#6522)	5
Introduce compat shim airflow.compat.functools (#15969)This module shims 'cached_property' and 'cache' so modules don't need toall do their own ad-hoc try-except ImportError.	2
[Relay][Compile_engine] Int64 shape handling for outputs. (#4031)	5
AIP-47 - Migrate Slack DAG to new design (#25137)	1
[Compilation Warning Fix]Enum constant in boolean context (#365)The below compilation warning is fixed.In file included from /mnt/D_DRIVE/work/nnvm_8_feb/dmlc-core/include/dmlc/any.h:16:0,                 from include/nnvm/./base.h:11,                 from include/nnvm/graph.h:15,                 from src/compiler/fold_scale_axis.cc:6:src/compiler/fold_scale_axis.cc: In function ‘nnvm::Graph nnvm::compiler::FoldScaleAxis(nnvm::Graph)’:src/compiler/fold_scale_axis.cc:155:39: warning: enum constant in boolean context [-Wint-in-bool-context]     CHECK(kind == kPassTroughFirst || kMulConsumer);                                       ^/mnt/D_DRIVE/work/nnvm_8_feb/dmlc-core/include/dmlc/./logging.h:110:9: note: in definition of macro ‘CHECK’   if (!(x))	5
Add documentation create/update community providers (#15061)	1
[AIRFLOW-1141] remove crawl_for_tasksThis method is defined in `models.DAG`, but it isnot used by anywhere.The method doesn't implement anything (throwing`NotImplementedError`).I suspect that this is an artifact from Airbnbdays.Closes #2275 from jeeyoungk/AIRFLOW-1141	0
[AIRFLOW-4462] Use datetime2 column types when using MSSQL backend (#5707)Change missing columns to datetime2. All columns of datetime arenow changed to datetime2. Co-authored-by: mattinbits <3765307+mattinbits@users.noreply.github.com>Co-authored-by: sirVir <sirVir@users.noreply.github.com>pylint has poor support for alembic so alembic.op module willfail ci if not ignored.Fix code formatting.	0
Fix Failing test for JSON Formatter on Python 3.8 (#9278)	5
Fix typo for store_serialized_dags config (#7952)	5
Merge pull request #125 from mistercrunch/tutorialDealing with bad templates	1
Do not crash with stacktrace when task instance is missing (#19478)When task instance was missing (because old dag runs did not haveit) trying to run the missing task from the UI resulted instacktrace rather than nice error message.Fixes: #19477	0
Remove deprecated modules (#25543)	4
Google Cloud Tasks Sensor for queue being empty (#25622)	5
[MetaSchedule] XGB-based Cost Model (#9859)* [MetaSchedule] XGB-based Cost ModelCo-authored-by: Xiyou Zhou <xiyou@octoml.ai>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>* Fix lint* fix doc* fix mypyCo-authored-by: Xiyou Zhou <xiyou@octoml.ai>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>	1
[Relay][ONNX] 1-D global and adaptive pooling. (#7906)* 1D adaptive pooling added and tested.* Apply formatting.* Add onnx integration and tests.* Busted by lint.	3
Correctly handle task_id mangling during unmapping (#22355)	0
[FIX] skip_conv_layers will affect quantization of nn.dense (#7795)* [FIX] `skip_conv_layers` will affect quantization of `nn.dense`* [ add ] quantization test case for dense & conv2d* [ fix ] reformat* [ reformat ] test file	2
delete dependency node (#121)	4
Add SubprocessHook for running commands from operators (#13423)This extracts the "run this command" logic from the BashOperator in to areusable hook.Co-authored-by: Daniel Standish <dstandish@users.noreply.github.com>Co-authored-by: Tomek Urbaszek <turbaszek@gmail.com>Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	1
[Relay][VM]Compiling pattern matching (#3470)* [Relay][VM]Compiling pattern matching* Fix lint* Remove debug code* Move TreeNode definition* merge ifi and selecti, todo: remove them* fix lint* remove ifi and selecti* rename GetTagi to GetTag* fix dltype* fix more dltype* Generalize If and select, and rename to Ifi and Selecti* Fix lint* Rename Ifi to If* Change register default to match value* Remove bad specialization for Move* Stop use Select* Remove Select* TreeNode refactor* Change entry_func name* Remove Cmp due to rebase issue	0
[AIRFLOW-893][AIRFLOW-510] Fix crashing webservers when a dagrun has no start dateCloses #2094 from aoen/ddavydov/fix_webservers_when_bad_startdate_dag	5
Replace get accessible dag ids (#11027)	2
[DOCS][RELAY] Sync up ops with code base (#2532)	2
Add AWS EMR System tests (#8618)- add create_emr_default_roles to amazon_system_helpers.py	5
Adding filters to jobs CRUD	1
[Relay][Module] Make tags for ADT constructors and ConstructorValues more robust (#3369)* Use hash of ADT name and constructor idx to generate tag, add reverse mapping to module and use where appropriate* Lint and build fixes* Add round-tripping test for getting constructors by tag* Use int64_t everywhere for tags* Add additional identity check* Bring out _arg_to_ast again* Use 8-bit hash of GTV name as MSB of tag, index as LSB for more readable tags* Use int32 instead of int64 for tag	1
[microNPU] increase workspace sizes for network tests (#11943)The network tests with striping were reported to be flaky.This commit increases the workspace size to be generous andalso repeats the test case to make sure its not flaky.Change-Id: I134f504250c8fa0bbbcf5f673acec7ffa2ec2f55	4
[Topi] Fix direct SIMD conv2d schedule name (#9225)* feature tested* change name	4
Adding tests for CheckOperators	1
Exclude missing tasks from the gantt view (#23627)* Exclude missing tasks from the gantt viewStops the gantt view from crashing if a task no longer existsin a DAG but there are TaskInstances for that task.* Fix tests	3
[AIRFLOW-5100] Respect safe_mode configuration setting when parsing DAG files (#5757)The scheduler calls `list_py_file_paths` to find DAGs to schedule. It does sowithout passing any parameters other than the directory. This means thatit *won't* discover DAGs that are missing the words "airflow" and "DAG" evenif DAG_DISCOVERY_SAFE_MODE is disabled.Since `list_py_file_paths` will refer to the configuration if`include_examples` is not provided, it makes sense to have the same behaviourfor `safe_mode`.	1
[AIRFLOW-2287] Add license header to docs/Makefile	2
closes apache/incubator-airflow#1789 *not needed since original code changed*	4
[FIX] Don't add $TVM_HOME/.. to the include path when compiling code. (#7342)If the user has a dmlc-core directory next to the tvm directory, thisdmlc-core directory will be incorrectly used when compiling files withcc.py.	2
First stab at the sphinx documentation	2
BugFix: Fix remote log in azure storage blob displays in one line (#14313)* Fix wasb_task_handler.py for reading remote log on blog with one line* Fix wasb_task_handler.py for reading remote log on blog with one line* Fix wasb_task_handler.py for reading remote log on blog with one line* modify wasb readall() to content_as_text	2
[BYOC] [DNNL] enable in-place post-op sum in dnnl json runtime (#12371)* enable inplace post-op sum in dnnl byoc* add inplace post-op sum test	3
Group CI scripts in subdirectories (#9653)Reviewed the scripts and removed some of the old unused ones.	1
[AIRFLOW-4865] Add context manager to set temporary config values in tests. (#5569)	3
Decouple parameters formatting and endpoint logic (#9405)	2
[AIRFLOW-6856] BugFix: Paused Dags still Scheduled (#7578)	2
[AIRFLOW-7117] Honor self.schema in sql_to_gcs as schema to upload (#8049)	5
[AIRFLOW-995] Remove reference to actual Airflow issueRemove example reference to AIRFLOW-[one] becauseit confuses merge tools. In addition, simplifythe checkboxes because Github displays how manyof them have been checked off.Closes #2163 from jlowin/pr-template-2	1
Remove redundant FoldConstant pass (#2387)	4
Improve type handling in PyTorch frontend (#5834)* Improve type handling in PyTorch frontend- Use type information from graph for inputs if available. Check  against shape information from graph if available.- Allow user to set default dtype (default to float32 for sanity and  compatibility).- Implement type promotion to follow PyTorch mechanism. This includes  fixing the handling of many "Scalar" overloads in PyTorch binary ops.- Fix arange/linspace type semantics.- Added support for traced functions. (Because it really is about the  "self" input handling.)Aside from adding an optional default_dtype keyword argument, this does notchange the signature/requirements of from_pytorch.* Fix scalar detection using numpy.isscalarand address other review comments. Thank you @siju-samuel* refine test criteron on qnn_test::test_serialized_modules, fix bool conversion of const	0
Add logout button to Airflow	2
Fix typos (#2367)	2
[AIRFLOW-2382] Fix wrong description for delimiterFix misleading descriptions for the 'delimiter'parameter in S3ListOperator andS3ToGoogleCloudStorageOperator's docstring.Closes #3270 from sekikn/AIRFLOW-2382	2
[AIRFLOW-4131] Make template undefined behavior configurable. (#4951)	5
update the type of return value (#9603)	5
Add DictAttrs to IRModule and refactor DictAttrs utility functions (#8750)* Add DictAttrs to IRModuleNodeMove GetAttrs to be a member of DictAttrsGeneralize WithAttrs to work with IRModule and move to attrs.hChange func->GetAttr to func->attrs.GetAttr* lint* Fix documentation* fix typo* Another typo!* Revert GetAttrs to ->attrs.GetAttrs change* Didn't mean to revert these* Revert a few more things* Add GetAttrs to IRModuleNode	1
Update max_tis_per_query to better render on the webpage (#17971)	1
[MODULE/RUNTIME] Remove Precompile, simplify module (#174)	4
Change 2.0.1 to 2.0.2 in docs (#15459)Since 2.0.2 was released yesterday, our guides and Breeze should pointto that.	2
Merge pull request #76 from woodlee/message-fixMinor exception message spacing fix	0
Adding Variable.update method and improving detection of variable key collisions (#18159)* Update Variable.set() method to take a description argument.* Update Variable.setdefault() method to take a description argument.* Adding a Variable.update() method which will throw a KeyError if the Variable doesn't exist, and an AttributeError if it   doesn't exist in the Database (since a non-metastore Variable can't be modified)* Improved logging around key collisions between different variable backends.*  Updated documentation to warn users about key collisions between variable backends.* If a user has a duplicated key in the metastore and an extra secrets backend, then updates to the Variable will update the   value in the metastore, but reads will read the value in the additional backend.	1
Fix display aws connection info (#26025)	5
[ETHOSN] Add support for resize (#12535)This commit adds support for the `resize` operator forArm(R) Ethos(TM)-N NPU.	1
[Bugfix][Frontend][TF] Fix incorrect calculations in tf SLICE (#4518)* fix formula for calculating end indices when size[i] == -1* add a test case for size[i] == -1* discard expanding dimension of begin_value & end_value since  it is needed only if you pass them as scalars not as tensors.* discard 'slice_tensor' variable so that implementation matches  the tf parser pattern	4
update (#11838)	5
Adding set_dependency method to DAG class	2
[RUNTIME] rename allocator.make -> allocator.make_object for term consistency (#4416)	1
Excludes rightfullhy unlicensed files from chart from RAT check (#18547)	2
Build normal/backport providers based on correct list (#12848)This was using the backport list when trying to build the normal list,leading to papermill package not getting built.I have re-introduced the exit removed in #12841, and also done a littlebit of drive-by-tidying	4
Add dataset events to dataset api (#25039)	5
add amalgamation support (#91)* add amalgamation* update target name	1
[Relay][Frontend][Keras] batch_norm op params not handling well (#4310)* Relay Keras frontent batch_norm op params not handeling well* add unit test for Relay Frontend Keras batch_norm	3
[AIRFLOW-1136] Capture invalid arguments for SqoopInvalid arguments are not captured for theSqoopHook and SqoopOperator:- SqoopHook should raise an exception if thefile_type is invalid- SqoopOperator should raise an exception if thecmd_type is invalidCloses #2252 from hgrif/AIRFLOW-1136	1
Switch bitnami images in tests to "standard" ones (#23122)We aren't using anything special in those images, and all of bitnami'simages on quay.io seem to have disappeared.	1
Add How-to guide for JDBC Operator (#11472)	1
Move external codegen test helpers into utils (#9008)This is so they can be re-used as part of other tests which don't extend test_external_codegen.pyI've identified that `test_json_runtime.py` and `test_pass_partition_graph.py` use a very similar but slightly different variant of these functions for future iterations.	1
Changed cursor from resize to pointer for legenditems	4
Switches to Helm Chart for Kubernetes tests (#9468)The Kubernetes tests are now run using Helm chartrather than the custom templates we used to have.The Helm Chart uses locally build production imageso the tests are testing not only Airflow but alsoHelm Chart and a Production image - all at thesame time. Later on we will add more testscovering more functionalities of both Helm Chartand Production Image. This is the first step toget all of those bundle together and becometestable.This change introduces also 'shell' sub-commandfor Breeze's kind-cluster command andEMBEDDED_DAGS build args for production image -both of them useful to run the Kubernetes testsmore easily - without building two imagesand with an easy-to-iterate-over-testsshell command - which works without anyother development environment.Co-authored-by: Jarek Potiuk <jarek@potiuk.com>Co-authored-by: Daniel Imberman <daniel@astronomer.io>	1
Changing the default base date of the tree view	5
fixing typo in DEFAULT_CONFIG for configuring the number of worker processes for gunicorn	1
Add Python2 to installed packages (#18037)As of August 2021, the buster-slim python images, no longercontain python2 packages. We still support running Python2 viaPythonVirtualenvOperator and our tests started to fail whenwe run the tests in `main` - those tests always pull and buildthe images using latest-available buster-slim images.Our system to prevent PR failures in this case has proven to beuseful - the main tests failed to succeed so the base imageswe have are still using previous buster-slim images which stillcontain Python 2.This PR adds python2 to installed packages - on both CI imagesand PROD images. For CI images it is needed to pass tests, forPROD images, it is needed for backwards-compatibility.	3
Fix docstring of SqlSensor (#15466)Fix docstring of SqlSensor by removing `:` from `type:`.	4
fix pooling documents (#12201)	2
Fix typo in test_project_structure (#8978)	3
[µTVM] Avoid use of builtin math functions (#6630)	1
Move operator guides to provider documentation packages (#12681)	2
Pin google-cloud-container to <2 (#9901)	5
Fix incorrect call to Unicode Win32 InetPton (#4306)* Fix incorrect call to Unicode Win32* Removed inet_pton call. Win32 already has it.	4
[Relay] Alter Op Layout (#2150)* [RELAY] Finish alter op pass* [RELAY] AlterOpLayout Pass* fix broadcast operators* fix broadcast operators* fix broadcast operators* Support concatenate* address comments* address comments* add comments* rebase	1
[AIRFLOW-2060] Update pendulum version to 1.4.4This fixes a task clearing issue with deep copyCloses #3154 from cinhil/AIRFLOW-2060	0
Merge pull request #149 from mistercrunch/known_eventsKnown events	1
Resolving conflict and adding refactor	4
Merge pull request #25 from mistercrunch/task_instancesAdding a link to the task instances list	2
Add option of sending DAG parser logs to stdout. (#25754)* Add option of sending DAG parser logs to stdout.* Make long config line into two lines.* Reverse order of tests.* Update tests with new changes.	4
Add google-ads limitation to eager upgrade (#18741)Since we released google provider without upper limitfor google-ads, the eager upgrade for PyPI providers has tohave this extra limit added in order not to hang when tryingto generate eager constraints.Related to: #18719	1
Have the dag_maker fixture (optionally) give SerializedDAGs (#17577)All but one test in test_scheduler_job.py wants to operate on serializeddags, so it makes sense to have this be done in the dag_maker for us, tomake each test "smaller".	3
[AIRFLOW-5474] Add Basic auth to Druid hook (#6095)	1
[TIR] Added PrettyPrint of ProducerStore/ProducerRealize nodes (#9259)	1
[DOCS] Enable theme with header and footer. (#6834)Also fixed a sphinx warning in pytorch.	2
[AIRFLOW-3277] Correctly observe DST transitions for cron (#4117)`following_schedule` converts to naive time by using thelocal time zone. In case of a DST transition, say 3AM -> 2AM("summer time to winter time") we incorrectly re-appliedthe timezone information which meant that a "CEST -> CEST"could happen instead of a "CEST -> CET". This resultedin infinite loops.	5
Give loggers a hierarchical name, allowing attaching intermediatehandlers	0
Fix session usage in ``/rendered-k8s`` view (#21006)We can't commit the session too early because later functions need thatsession to fetch related objects.Fix #20534.	0
[uTVM][AOT] Adding workspace byte alignment (#8019)* Adding workspace byte alignment* This commit adds byte alignment support for workspaces* Updating AoT tests to use calculate workspacesChange-Id: I88380d875269e1ffa4a51a9cceefd51b3042f1a7* Adding workspace byte alignment* fixed aot_memory cpp tests* add new error type for stack allocator bad freesChange-Id: Iadb4770ac761ef5edb80308e18120443d269c83d* Adding workspace byte alignment* addressing comments + LIFO changeChange-Id: I1e8ad47e11e220f879bf936da2abb3d111db89f0* Adding workspace byte alignment* addressing comments furtherChange-Id: Idb07d28b55520d8897d7dbcb9ef4aad5e3e7b35c* Adding workspace byte alignment* addressing comments - add a default constant to alignmentChange-Id: Id3f486bfdc0bd57d54b3c4097885cb54675196ca	4
[REFACTOR][PY] Establish tvm.arith (#4904)	4
Update write disposition to work properly for BigQuery hook.	1
Speed up webserver start when there are many DAGs (#14993)This fixes a short circuit in `create_dag_specific_permissions` toavoid needlessly querying permissions for every single DAG, and changes`get_all_permissions` to run 1 query instead of many.With ~5k DAGs, these changes speed up `create_dag_specific_permissions`by more than 65 seconds each call (on my machine), and since that methodis called twice before the webserver actually responds to requests, thiseffectively speeds up the webserver startup by over 2 minutes.	2
[microTVM][ARM]Add tests for arm schedules (#11472)* add more tests for arm_cpu schedulesconv1d_ncw, conv1d_nwc, conv2d_NCHWc, depthwise_conv2d_NCHWc, dense_dsp, avg_ pool and max_pool tests are added.Co-authored-by: Mohamad <mkatanbaf@users.noreply.github.com>	1
Removes unnecessary AzureContainerInstance connection type (#15514)The AzureContainerInstanceHook was derived from AzureBaseHookand it did not add any new connection fields. Insteadit duplicated the tennantId and subscriptionId extr behaviour,but it never worked, because it duplicated the fieldsfrom the AzureBaseHook - and caused a lot of warnings whenAzureProvider was added.This change sets the default connection type for theAzureContainerInstanceHook to be azure_default and theconnection type to be 'azure'.Those defaults are much more 'sane'. The existing connectionswill continue to work, only when you open them in the UI, theywill display the extras directly rather than in dedicated fieldsuntil the user changes the connection type to "azure" which willfix the display.So no disruptions, just temporary UI/Editing glitch. No more warningsprinted when Azure provider is added.	1
Speed up www and api_connexion tests (#14684)This was accomplished by removing slow and unnecessary initialization steps from test setups, as well as mocking slow login methods.This was accomplished by removing slow and unnecessary initialization stepsfrom test setups, as well as mocking slow login methods.**Slow Initialization**Whenever create_app is called, multiple sub-modules are initialized, includingpermission roles, the old api, new api, logging, error handling, etc. Most ofthese are not relevant for many of the tests. This PR removes unnecessaryinitialization.**Slow login**Login functionality currently depends on hash functions to hash passwords. Bymocking the password hashing functionality in we can sidestep this slowdown.**Approaches analyzed but not used**- Adding indexes to FAB permissions tables. FAB queries roles and permissions  on unindexed name columns. Surprisingly, adding indexes didn't result in a  meaningful test speedup.- Caching api_connexion rendering. the `init_api_connexion` method is the slowest  initialization method, but is required for all `api_connexion` methods. It  looks like the Jinja rendering is the slowest part. I investigated storing  the rendered API in an intermediate state in a separate file, but this wasn't  feasible. If we want more speedups in the future, caching the api_connexion  app, much like we cache the current flask app, is likely the biggest win.	2
Chart Doc: Delete extra space in adding connections doc (#18424)Extra space in secret keys was causing an error while parsing values.yaml	0
[AIRFLOW-7044] Host key can be specified via SSH connection extras. (#12944)	5
v0.3.2.1	5
[Parser] Fix parsing op string attributes (#6605)Co-authored-by: Lei Liu <lei.liu@streamcomputing.com>	0
[RELAY][PASS] FuseOps, fix input fusion rule for conv2d (#2110)	0
[AIRFLOW-1385] Make Airflow task logging configurableThis PR adds configurable task logging to Airflow.Please refer to #2422 for previous discussions.This is the first step of making entire Airflowlogging configurable ([AIRFLOW-1454](https://issues.apache.org/jira/browse/AIRFLOW-1454)).Closes #2464 from AllisonWang/allison--log-abstraction	2
Breeze: More fancy environment checking (#10329)* More fancy environment checking* fixup! More fancy environment checking	0
Allow airflow standard images to run in openshift utilising the official helm chart #18136 (#18147)This pull request adds the parameter rbac.createSCCRoleBinding.When enabled, a new RoleBinding object will be created targeting the various serviceAccounts utilised by deployments and pods.The roleBinding will target the system:openshift:scc:anyuid cluster role which allows for pods to start with any arbitrary uid.The ideal solution would also add the possibility of removing the security contexts altogether, however this would not be possible due to a number of pod templates setting different uids.I will investigate the possibility to add the option of removing the security contexts so that openshift can then set its own uid as intended.As it is, the pods will start and work as expected, utilising the predefined uids set in values file or the default image uid as set during build.The change is not intrusive and should work in the current workflow as is. The option is also set to false by default in order to not impact any existing setups.	1
[AIRFLOW-5364] Fix missing port numbers for local ci scripts	0
Bump `pip` version to `21.2.4` (#17746)Updates `pip` version from `21.2.2` to `21.2.4`	5
[AIRFLOW-6505] Let emoji encoded properly for json.dumps() (#7399)	5
Also cancel duplicated Build Image runs for master pushes (#11655)We removed the "skipEventType" for CI jobs but we still hadthe skipping for Build Image and killing builds with failed jobs.This further optimises our job usage.	0
[Runtime] Enable set_input_zero_copy in GraphRuntime (#3416)* Enable set_input_zero_copy in GraphRuntime* Fix LoadParams* Fix* lint* Fix remote context issue* Fix* Remove LOG* Remove unused variables* Add tests* works* More test scenarios* make it simpler* Remove unnecessary changes* Address comments* More comments* Address comments* Fix build	0
[LANG] Include buffer semnatics, introduce pylint (#11)* [LANG] Include buffer semnatics, introduce pylint* Refactor inline add support for buffer indexing* fix doc	2
Fix a bug in Symbol::Compose when using subgraphs as input (#1314)	1
Another set of improvments for charts	2
Deleting queued up task where the task or DAG is gone	2
[AIRFLOW-3918] Add ssh private-key support to git-sync for KubernetesExecutor (#4777)Add configuration for git SSH auth and update git-sync version intemplate (mutually exclusive of user authentication).Update git-sync version to the latest, current version did notsupport SSH authentication environment variablesSecurity context was required to read the mounted SSH key forgit-sync SSH authenticationAdd example of configmap + Kubernetes secret snippet in config template	5
[RELAY]sch & comp for ops in nn.py (#2092)	5
Add dtype option to verify_mxnet_frontend_impl (#1908)	1
[TensorIR] GetProducer, GetConsumer (#506) (#9464)Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>	1
[AIRFLOW-6489] Separate integrations in tests (#7091)You can now choose which integration you want to start when you runBreeze as well as when CI tests are run. Now by default Breezeand CI runs without integrations, but you can add them viaBreeze flags or by environment variables when CI is executed.We have pytest markers now that mark tests that can be run forintegration, backend and runtime selected.Also we have now more test jobs - we have separate test runfor all non-integration tests (with less memory used by theintegrations) and separate jobs that run integration testsonly (more memory used for integrations but far less numberof tests to run)	1
Fixes unbound variable on MacOS (#14877)Without it I get:```$ ./breeze./breeze: line 28: @: unbound variable```	1
Cleanup dup code now that k8s provider requires 2.3.0+ (#22845)	1
[Relay] Adding _contrib_BilinearResize2D op from mxnet (#2777)* adding _contrib_BilinearResize2D op from mxnet* error fixed* use resize instead of upsample	1
Expose workspace size in tvmgen_default.h (#9510)This PR exposes the workspace size as a macro TVMGEN_DEFAULT_WORKSPACE_SIZE in tvmgen_default.h (or TVMGEN_<MODEL_NAME>_WORKSPACE_SIZE in tvmgen_<model_name>.h in the case that the model name is not default).This functionality is useful for microTVM/AOT use cases where it's useful to know the workspace size at compile time.	1
[PyTorch][BugFix] PyTorch-TVM Bridge Build Scripts (#10527)	0
[AIRFLOW-1964] Add Upsight to list of Airflow usersCloses #2912 from dhuang/upsight	1
[AIRFLOW-2654] Fix incorret URL on refresh in Graph View of FAB UI- Fix incorrect URL requested on pressing the refresh button in the graph view.	0
Chart: Fix minor Triggerer issues (#18105)- We don't need `checksum/result-backend-secret` annotation for Triggerer- Fixes syntax error in Healthcheck- Fixes typo in filename for tests	3
[AIRFLOW-858] Configurable database name for DB operatorsCloses #2063 from s7anley/configurable-schema	5
[Relay][Frontend][Onnx] Add RNN operation for ONNX frontend (#12213)* Add RNN operation for ONNX frontend.* link checks* rm test_rnn_batchwise in unsupported_onnx_tests* merge similar codes to class methods* implement opset 14 and refactor test_forward* reformat verify_rnn_helperCo-authored-by: 张亦驰 <zhangyichi1@corp.netease.com>	3
Improve Google Transfer header in documentation index file  (#11166)	2
Get Airflow Variables from GCP Secrets Manager (#7946)	1
[AIRFLOW-2266][AIRFLOW-2343] Remove google-cloud-dataflow dependencyThis is caused due to the fact that the latestrelease (2.4) for apache-beam[gcp] is notavailable for Python 3.x. Also as we are usingGoogle's discovery based API for all google cloudrelated commands we don't require to importgoogle-cloud-dataflow packageCloses #3273 from kaxil/patch-3	5
[TIR] Add TileWithTensorIntrin (#11075)Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>	1
[AIRFLOW-7079] Remove redundant code for storing template_fields (#7750)	4
Bump version to match node dependency (#14624)	5
kill from tvm import te (#5007)Co-authored-by: Michal Jamroz <jamroz@chem.uw.edu.pl>	2
Change timeout s and disables reverse IP lookup for integrations (#13424)Seems that we are hitting more often one of the most favouritebugs by Ash: DNS. Quote: "It's always DNS".It looks like there is a race condition with docker composethat causes services that started fast enough (before DNS)to get a different reverse-DNS IP lookup (usually it isjust `<SERVICE>` but sometimes it is`<DOCKER_COMPOSE_APP>_<SERVICE>_1_<NETWORK>`).This produces misleading messages in log that mightmake analysis of such problems difficult, that's whywe chose to get rid of the reverse lookup and givebigger time for each service to check if it is ready.Netcat, unfortunately performs both forward and reverselookup when given a name - forward lookup to find theIP address and reverse lookup to write information to thelog about the host it connected to - and if it seesthat the original and reverse-looked-up names do not matcheven if it manages to connect, it retunrs an error:`DNS fwd/rev mismatch` - which is very misleading.This change performs the following:1) We lookup the host name in python via gethostbyname2) We set -n in netcat to disable ANY DNS use3) We feed netcat with the IP address4) We've standardized all waiting times to be up to 50 secondsThis way we should get rid of the DNS fwd/rev mismatch onceand for all.	1
Fix link to StackdriverTaskHandler reference docs (#12106)	2
[AIRFLOW-3672] Add support for Mongo DB DNS Seedlist Connection Format (#4481)* [AIRFLOW-3672] Add support for Mongo DB DNS Seedlist Connection Formathttps://docs.mongodb.com/manual/reference/connection-string/index.html#dns-seedlist-connection-formathttp://api.mongodb.com/python/current/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient* [AIRFLOW-3672] Add unit test for srv uri* [AIRFLOW-3672] Fix unit test for Mongo srv uri* [AIRFLOW-3672] Construct MongoDB URI when hook init	5
doc: note on skipping a branch	2
Add ignore_first_depends_on_past for scheduled jobs (#22491)	1
Fixing re pattern and changing to use a single character class. (#11857)	1
[AIRFLOW-1579] Adds support for jagged rows in Bigquery hook for BQ load jobsCloses #2582 from DannyLee12/master	1
Add recipe for BeamRunGoPipelineOperator (#22296)	1
Fix TVM compile without LLVM (#7621)* Fix TVM compile without LLVM* Fix formatting	0
Chart: Update the docs to create Kind cluster (#15237)The old description was outdated. We run with this Helm chart in CI with Kubernetes 1.16+	2
[microTVM] [Fix] reboot include for Zephyr version >=2.6.0 (#11790)* Fix reboot include for Zephyr version >=2.6.0	0
[AIRFLOW-XXX] Fix typo in "airflow dags list_runs" (#6475)	1
Merge pull request #103 from mistercrunch/template_wwwFixing the "Task Details" page when template location isn't relative to DAG	2
Don't use the `|safe` filter in code, it's risky (#9180)Most things already use the `Markup` class to correctly escape problemareas, this commit just fixes the last instances so that we can assertthat `|safe` is never used.	1
Revert "[Relay][TOPI]Fix meaning of conv2d_transpose output_padding parameter (#4318)" (#4708)This reverts commit dcf7fbf1f962569e78c624755b2d612fffa81ada.	4
Use `yaml.full_load_all` instead of `yaml.load_all` (#13577)Calling `yaml.load_all()` without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.`yaml.full_load_all` instead use load_all() with Fullloader	1
Replace deprecated ``dag.sub_dag`` with ``dag.partial_subset`` (#16179)This is follow up of https://github.com/apache/airflow/pull/11542to all the missed places in the codebase.	2
Databricks: fix provider name in the User-Agent string (#25873)`databricks-aiflow` -> `databricks-airflow` (:facepalm:)	5
[AIRFLOW-5013] Add GCP Data Catalog Hook and operators (#7664)	1
[AutoTVM] select model with the most tuned schedules (#4404)* select model with the most tuned schedules* change detect empty map method* modify model description for load_reference_log	2
[TEST] Temporary disable conv2d grad strided flaky test (#6183)	3
[AIRFLOW-7021] Avoid multiple calls to conf.getboolean in _process_dags (#7672)	2
Use DB where possible for quicker ``airflow dag`` subcommands (#21793)Some of the subcommands here don't actually need a full dag, so there isno point paying the (possibly long) time to parse a dagfile if we couldgo directly to the DB instead.Closes #21450	5
[AIRFLOW-337] Add __repr__ to VariableAccessor and VariableJsonAccessorThe VariableJsonAccessor and VariableAccessor were missing the __repr__function that leads to a VariableError when printing out the contextbeing passed to for example a PythonOperator.	1
[AIRFLOW-1430] Include INSTALL instructions to avoid GPL	2
[BUG] ToBasicBlockNormalForm immutability (#8778)* ToBasicBlockNormalForm immutability* better comment on ToBasicBlock* refine comment of ToBasicBlockForm	1
[AIRFLOW-4882] Make GCP tests and examples Pylint compatible (#5522)	3
[AIRFLOW-XXX] Add note about GKEPodOperator in KubernetesPodOperator (#6042)	1
additional information in the ECSOperator around support of launch_type=EXTERNAL (#22093)* additional information in the ECSOperator around support of launch_type=EXTERNAL	1
[Doc] Update ANTLR instruction (#4231)* [Doc] Update ANTLR instruction* Update docs/install/from_source.rst	2
Adding ssh connection type to webform	1
Correctly pass sleep time from AWSAthenaOperator down to the hook. (#8845)Sleep time in AthenaHook was defined as a kwarg-only key.This one change makes tests go from 270s to 0.3s :D	3
Reverting overlogging on dependencies, was printing more than intended	2
[Relay][heterogeneous pass] remove on_device op after annotation (#3204)* remove on_device op after annotation* Update src/relay/pass/device_annotation.ccCo-Authored-By: MORINAGA <34588258+imorinaga@users.noreply.github.com>	1
[AIRFLOW-XXX] how to setup test env with mysql (#4898)	3
Fix init_proj.py: Team ID expected (#2824)	5
[Bugfix] Recover original layout when alter_layout function return None (#2101)	1
Fix compilation on XCode 10 (#2731)	0
[CODEGEN] fix & improments in codegen (#745)* [CODEGEN] update codegen for vector operation* update comment, fix for metal* fix some bugs in codegen* use 'restrict' in every argument* fix* fix	0
Fix MyPy issues in ``airflow/jobs`` (#20612)Part of https://github.com/apache/airflow/issues/19891	0
Making CheckOperator agnostic on the name of the get_first param	2
closes apache/incubator-airflow#1734 *no movement from submitter*	4
[CLEAN] support kubernetes 1.20 support (#25871)	1
Add capability of customising PyPI sources (#11385)* Add capability of customising PyPI sourcesThis change adds capability of customising installation of PyPImodules via custom .pypirc file. This might allow to installdependencies from in-house, vetted registry of PyPI	1
Improve x86 roi align (#3296)* Improve roi_align performance for x86* Change test	3
[RPC][REFACTOR] Use PopenWorker to handle RPC Server. (#7889)Previously the rpc server relies multiprocessing to start a new process and does not work under jupyter.It also have a popen mode that does ensure the socket start listening before returning the port number.This PR switches the implementations use PopenWorker. The port number is returned after the socketget binded, which resolves some of the RPC flaky issues(need sleep to wait the server to start).It also makes the RPC server jupyter friendly.	1
S3KeySensor to use S3Hook url parser (#21500)Rather than relying on the poke method to parse the attrs we should either do it in `__init__` or in a cached property.Since it's a pretty insignifigant computation let's  just do it in `__init__`.And anyway, if the params are bad then best to get a warning before deploying your code.	2
Add preparation of images as part of RC preparation process (#16674)	1
Specifying version numbers in deps in setup.py	1
add nn.global_avgpool to fq2i (#9137)	1
Proper version is displayed when running prod image via Breeze (#8229)	1
[TVMScript] Add ObjectPath class (#11977)Motivation:Same IR node object can be referenced in several different contexts inside a larger IR object. For example, a variable could be referenced in several statements within a block.This makes it impossible to use an object pointer to uniquely identify a "location" within the larger IR object for error reporting purposes. The `ObjectPath` class addresses this problem by serving as a unique "locator".Tracking issue: https://github.com/apache/tvm/issues/11912	0
[CI] add GH workflow to comment with link to docs (#11594)	2
Clean-up JS code in UI templates (#14019)- Use template literals instead of '+' for forming strings, when applicable- remove unused variables (gantt.html)- remove unused function arguments, when applicable	1
[Relay][Op] concatenate, reshape, transpose, copy (#1847)	5
Add August 2021 Provider's documentation (#17890)	2
Add code style note: no asserts (#15512)Some time ago we agreed to no use plain assert outside tests.This was voted but is missing from our 'coding style' guide.	3
[AIRFLOW-4009] Fix docstring issue in GCSToBQOperator (#4836)	1
[TOPI] fix bug of leaky_relu type issue (#1076)Signed-off-by: Janboe Ye <yeyuanbo@xiaomi.com>	0
[AIRFLOW-3425] Fix setting default scope in hook (#4261)	1
Chart: properly quote namespace names (#20266)Without this, one cannot use namespaces whose names consist of only numbers.	1
[COMMUNITY] siyuan to PMC (#10688)	3
Fix comment in Helm Chart for worker ``logGroomerSidecar`` (#17742)It said `scheduler` instead of `worker`	1
Add creation of Hexagon device in RPC client (#6035)	1
Optimises prod image preparation in CI (#13557)The prod images require CI images to build provider packages.The optmisation implemented makes the CI images built only onceand the prod images will just pull the images rather than buildthem again.	1
UX improvements of DAG tag filtering (#11661)* Improve/simplify UX/aesthetics of tag filter form* Keep persisting tag filter in cookie, update URL to always reflect tag filters	5
Use 'authentication backend' instead of executor in the section about authentication backends. (#15894)	1
Add datumo.io to Airflow family (#11692)	5
[RELAY][OP] Operators.   pool2d, global_pool2d, batch_flatten, tanh, sigmoid, floor, ceil, trunc, abs, negative, multiply, mod, pow,  resize (#1813)	1
[COMMUNITY] @wweic -> Reviewer (#2789)	3
fix string encoding when using xcom / json (#13536)Co-authored-by: Alessio Montuoro <alessio@montuoro.info>Co-authored-by: Jarek Potiuk <jarek@potiuk.com>	5
[AIRFLOW-4197] Remove Python2 CI jobs (#5022)	4
[AIRFLOW-2225] Update document to include DruidDbApiHookCloses #3140 from feng-tao/airflow-2225	5
Charts	2
Spelling fix (#18606)	0
[AIRFLOW-3121] Define closed property on StreamLogWriter (#3955)[AIRFLOW-3121] Define closed property on StreamLogWriter	2
Update various pre-commits (#18176)```black: 21.7b0 -> 21.8b0blacken-docs: v1.10.0 -> v1.11.0pyupgrade: v2.23.3 -> v2.25.1yamllint: v1.26.2 -> v1.26.3flynt: 0.66 -> 0.69```	2
Fix regression in pool metrics (#22939)Co-authored-by: Tanel Kiis <tanel.kiis@reach-u.com>Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	0
Update flask-caching dep to version that works with Werkzeug 1 (#11955)Werkzeug 1.0 removed the werkzeug.contrib.caching module, so we need atleast 1.5.0 of flask-caching to deal with this -- seehttps://github.com/sh4nks/flask-caching/blob/v1.9.0/CHANGES#L97-L107	4
Branching related additions to docs	2
Prepare to release 2.4.0beta1 (#26228)As I like to have the branch point for a release as "late" as possible,I'm committing the version change to main, and then branching off.The release notes/changelog are _far_ from complete, but lets take whatnewsfragments we have	1
[AIRFLOW-2641] Fix MySqlToHiveTransfer to handle MySQL DECIMAL correctly	0
[VTA] Infinite recursive device_api.ext_dev call fix. (#3843)Issuewhen try vta on fpga board, would see a Infinite recursivedevice_api.ext_dev issue that cause stack overflow and vtafailed.Analysis:device_api.ext_dev function in rpc_server.py is use to loadvta library, once vta library get load, device_api.ext_dev wouldget replaced with vta function by vta library, vta device_api.ccdid such work, but because a logic issue in VTA.cmake, the said filenot get compiled, then vta would keep failing on rpc_server.py.Solution:fix the logic issue in VTA.cmake.	1
Add job labels to bigquery check operators. (#14685)	1
android gemm for topi/recipe (#628)	5
Merge pull request #850 from rahul342/patch-1Update models.py to increase password field length	4
[Perf] Add CublasLt extern support for better Igemm performance (#4550)* cublaslt added* fix lint* address comments* address more comments* Trigger CI* Trigger CI	1
[Relay][AlterOp] Improving support for broadcast layout alteration. (#4040)	1
Improved breeze messages for initialize-local-virtualenv and static-check --help (#12640)	5
[Relay] Modify create_executor to pass params (#8418)* Overload create_executor to accept params* [fix] Add stringdoc for new param in create_executor	1
[AIRFLOW-3132] Enable specifying auto_remove option for DockerOperator (#3977)	2
Make workflow dispatch" trigger full build (all python versions) (#24808)	1
[Profiler] Sort columns in table and csv output (#9300)This should fix some problems around flakey profiler tests based onorder of columns.	3
[REFACTOR][TIR][API-Change] Migrate BuildConfig to PassContext. (#5668)* [REFACTOR][TIR] Migrate BuildConfig to PassContext.This PR migrates the TIR configurations from BuildConfig to thePassContext used by the unified IR.Moving forward, PassContext will be the unified way to configure passes in the TVM stack.Changes- Refactored TVM_PASS_REGISTER_CONFIG_OPTION to take in the reference type.- Removed BuildConfig.- Migrated the passes to use PassContext.* Update include/tvm/ir/attrs.hCo-authored-by: Zhi <5145158+zhiics@users.noreply.github.com>Co-authored-by: Zhi <5145158+zhiics@users.noreply.github.com>	1
Check for minimum version of Sqlite (#13496)Some users testing Airlfow 2.0 with sqlite noticed that forold versions of sqlite, Airflow does not run tasks and fails with'sqlite3.OperationalError: near ",": syntax error' when runningtasks. More details about it in #13397.Bisecting had shown that minimum supported version of sqlite is3.15.0, therefore this PR adds checking if sqlite version ishigher than that and fails hard if it is not.Documentation has been updated with minimum requirements, someinconsisttencies have been removed, also the minimum requirementsfor stable 2.0 version were moved to installation.rst becausethe requirements were never explicitely stated in the user-facingdocumentation.	2
Adds separate scheduled-only workflow to cancel duplicates (#9999)Unfortunately cancelling workflows does not work from the workflowsexecuted by forks because their tokens do not allow doing that(they are read only). So we have to run a separate cron-triggeredaction (in the context of apache/airflow repository to cancelall duplicate workflows. This action stops all the workflowsrunning from the same fork/branch except the last one.	1
Merge pull request #361 from jlowin/expand-varssupport (nested) interpolation of env vars	1
[AIRFLOW-XXX] Add Dentsu as Airflow Users (#6089)	1
update upper bound for MarkupSafe (#19953)Co-authored-by: Tzu-ping Chung <tp@astronomer.io>	5
Cleanup Dataset API variable name and typing (#25073)	5
[AIRFLOW-XXX] Fix broken DAG Serialization Link (#6891)	2
[Relay][Frontend] Support TF Gather (#2935)* [Relay][Frontend] Support TF Gather* fix comments	0
add support for subgraphs. (#1221)* add support for subgraphs.* fix.* fix.* Fix compilation error* Fix compilation error* add comments.* update comments.* Sanity check on subgraphs when creating IndexedGraph* avoid the overhead of sanity check.* Stop using non-recursive DFS* Trigger CI* trigger CI	1
[AIRFLOW-XXXX] Temporarily disable Kerberos to get test stability (#7165)Kerberos causes various stability issues while CI tests are run,so we are disabling the Kerberos-only test so that we can addmore diagnostics information.	5
Fix incorrect typing, remove hardcoded argument values and improve code in AzureContainerInstancesOperator (#11408)	1
[TensorIR] CreatePrimFunc from TE (#7987)Co-authored-by: Tianqi Chen <tqchen@users.noreply.github.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>	1
[CI] Move to use main as the default (#6665)	1
[COMMUNITY] @wweic -> committer (#4636)	3
closes apache/incubator-airflow#2744 *Closed for inactivity.*	5
[AIRFLOW-1282] Fix known event column sortingCloses #2350 from skudriashev/airflow-1282	0
[AIRFLOW-3617] Add gpu limits option in configurations for executor and pod (#5643)	5
changing log level to be proper library to suppress warning for https://issues.apache.org/jira/browse/AIRFLOW-4590 (#5337)	0
[ci][docker] Nightly Docker image update (#11857)This bumps the Docker images to the latest versions from Docker Hub.Co-authored-by: tvm-bot <95660001+tvm-bot@users.noreply.github.com>	1
[AIRFLOW-XXX] Improve description OpenFaaS Hook (#6187)Co-Authored-By: Felix Uellendall <feluelle@users.noreply.github.com>	1
[NNVM] Introduce const shift ops (#1325)	5
[AIRFLOW-4208] Replace @abstractproperty by @abstractmethod (#5041)	5
Update version to 2.0.0 (#12954)	5
[CI] separate out legacy as a stage (#3337)	5
[VTA] [TSIM] Improve tsim example (#3206)	1
[fix] disregarding adhoc tasks when closing dag runs	1
Update changelog with more changes since 2.2.0b2 (#18780)	4
Fix UnboundLocalError when sql is empty list in DbApiHook (#23816)	5
change local dataset id var name from datasetId to dataset_id	5
Checking the correct dtypes for choosing the Intel int8 instructions. (#3516)	2
Jeremiah Lowin has resigned from the Airflow project (#13486)	5
[AIRFLOW-3885] ~2.5x speed-up for backfill tests (#4731)The BackfillJobTest suite now takes 57 seconds vs. the baseline of 147seconds on my laptop.A couple of optimizations:- Don't sleep() if we are running unit tests- Don't backfill more DagRuns than needed (reduced from 5 to 2, since we  only need 2 DagRuns to verify that we can run backwards)I've also made a few tests reentrant by clearing out the Pool, DagRun,and TaskInstance table between runs.	1
Validate newsfragment types (#25536)We should validate the a type is provided, and that it is a supported type.	1
Show dataset-triggered next run details (#25549)* add dataset-triggered next run details modal* use correct url* add tooltip telling users to click* use macro for modal* fix datasets url	5
Add reference to the ASF Code of Conduct (#9453)* Add reference to the ASF Code of Conduct* Update CONTRIBUTING.rst	5
Merge pull request #79 from mistercrunch/mv_db_connRename DatabaseConnection to Connection	5
[AIRFLOW-2592] Bump bleach dependencyBleach dependency is updated to 2.1.3 to addressCVE-2018-7753Closes #3524 from ctrebing/AIRFLOW-2592-bump-bleach-dependency	1
Implement API endpoint for DAG deletion (#17980)Co-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>	4
Updates Oracle.rst documentation (#13871)Resolves Issue #10186 (Move Tips & Tricks for Oracle shops should be moved to Airflow Docs)Fixes broken link, add UI connection documentation link, and connection tips.	2
Cache Hook when initializing `CloudFormationCreateStackSensor` (#14638)- `CloudFormationCreateStackSensor` created `AWSCloudFormationHook` in its init method- This commit delays creation of hook until it is needed	1
[AIRFLOW-916] Remove deprecated readfp functionConfigParser.readfp() is deprecated in favor ofread_file()Closes #2108 from jlowin/parser-deprecation	2
Fix Airflow version for a db migration (#20115)The migration won't be making it into a bugfix release, so mark it forthe next feature release, 2.3.0.	0
Added automated release notes generation for backport operators (#8807)We have now mechanism to keep release notes updated for thebackport operators in an automated way.It really nicely generates all the necessary information:* summary of requirements for each backport package* list of dependencies (including extras to install them) when package  depends on other providers packages* table of new hooks/operators/sensors/protocols/secrets* table of moved hooks/operators/sensors/protocols/secrets with  information where they were moved from* changelog of all the changes to the provider package (this will be  automatically updated with incremental changelog whenever we decide to  release separate packages.The system is fully automated - we will be able to produce release notesautomatically (per-package) whenever we decide to release new version ofthe package in the future.	1
Fix spelling (#12266)	0
Fix ExternalTaskSensor not working with dynamic task (#25215)* Make operator_extra_links a class variable* Make operator_extra_links a class variable of ExternalTaskMarker	2
Serve logs with Scheduler when using Local or Sequential Executor (#15557)Currently, the `serve_logs` endpoint only exists on Celery workers. Thismeans if someone launches Airflow with the `LocalExecutor` and wants tograb the logs from the scheduler, there is no way to move that to thewebserver if it is on a different pod/machine.This commit makes the scheduler automatically serves logs when using`LocalExecutor` or `SequentialExecutor`. However, it means forAirflow <= 2.0.2, the Helm Chart won't serve logs.closes https://github.com/apache/airflow/pull/15070closes https://github.com/apache/airflow/issues/13331closes https://github.com/apache/airflow/issues/15071closes https://github.com/apache/airflow/issues/14222	0
Handle special characters in password sfor Helm Chart (#16004)	2
ONNX Opset 14 Support - HardSwish (#10735)* ONNX Opset 14 - HardSwishAdded hardswish support to TVM CI and fixed unit test.- Add class HardSwish and added its reference to convert_map in onnx.py;- Removed test_hardswish entry from test_forward.py;* ONNX Opset 14 Support - HardSwishFixing onnx.py format.* jostle ci	0
Fix colon spacing in ``AzureDataExplorerHook`` docstring (#15841)	2
[TOP] Support ceil_mode	1
[ETHOSN][CPP-RPC] Link NPU runtime in CPP RPC build (#11946)When building the CPP RPC package with the NPU enabled,`link_directories` fails to find the NPU runtime libraries. This ispresumably because the TVM runtime is linked with the PRIVATEoption in: https://github.com/apache/tvm/blob/main/CMakeLists.txt#L601.Therefore working around this by following the precedent of otherlibraries such as Hexagon and Open CL.Change-Id: Iba2fbc245df18147e3b564ba807ca78c9cc8461d	4
[AIRFLOW-5088][AIP-24] Add DAG serialization using JSON (#5701)It implements the method proposed in AIP-24 to serialize DAG. It will be used in DAG persistency in DB to solve webserver scalability issue.	0
[Airflow 16364] Add conn_timeout and cmd_timeout params to SSHOperator; add conn_timeout param to SSHHook (#17236)	1
Added Jagex to the list of companies using Apache Airflow (#18058)Co-authored-by: anum_sheraz <anum.sheraz@jagex.com>	1
[COMMUNITY] Add Ziheng's key for ASF release (#6552)	1
Fix test_autotune to support schedules with no tuning space (#12484)	1
Adding Qubole Operator	1
add system test for azure local to adls operator (#13190)	1
Fix `PythonVirtualenvOperator` templated_fields (#23559)* Fix `PythonVirtualenvOperator` templated_fieldsThe `PythonVirtualenvOperator` templated_fields override `PythonOperator` templated_fields which caused functionality not to work as expected.fixes: https://github.com/apache/airflow/issues/23557	0
[AIRFLOW-5583] Extend the 'DAG Details' page to display the start_date / end_date (#6235)	5
[COMMUNITY] comaniac added as new PMC member (#8470)	1
[AIRFLOW-4083] Add tests for link generation utils (#4912)We were making use of the "bleach" module or jinja.escape function toclean parameters when it wasn't needed - we could simply call .format onthe Markup object and it will handle escaping for us. (format theobject, not format the string passed to the constructor)This removes the (direct?) dependency on bleach - one less thing todepend on is a good thing too.	4
Add Github Actions badge to README (#8386)	1
Show Task Map Index in  task instance table (#21774)* add map_index to /taskinstance table* use markup for blank value	1
Docs for multiple pool slots (#20257)Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	2
Restores apply_defaults import in base_sensor_operator (#16040)The GCSToLocalFilesystemOperator in Google Provider <=3.0.0 had wrongimport for apply_defaults. It used`from airflow.sensors.base_sensor_operator import apply_defaults`instead of`from airflow.utils.decorators import apply_defaults`When we removed apply_defaults in #15667, the base_sensor_operatorimport was removed as well which made the GCSToLocalFilestystemOperatorstops working in 2.1.0Fixes: #16035	0
Fix permission issue for dag that has dot in name (#23510)How we determine if a DAG is a subdag in airflow.security.permissions.resource_name_for_dag is not right.If a dag_id contains a dot, the permission is not recorded correctly.The current solution makes a query every time we check for permission for dags that has a dot in the name. Not that I like it but I think it's better than other options I considered such as changing how we name dags for subdag. That's notgood in UX. Another option I considered was making a query when parsing, that's not good and it's avoidedby passing root_dag to resource_name_for_dagCo-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	2
[LANG] Change Schedule->Stage, Use Schedule for global schedule (#8)* [LANG] Change Schedule->Stage, Use Schedule for global schedule* add numpy as dep* add numpy installation, temporary disable osx	1
[Codegen] Swap out analyzer when outlining (#9117)Problem: the `analyzer_` in `CodeGenLLVM` and derived classescan generate invalid code for outlined functions.Consider code like this:  let x = y in    // attr compute_scope    blah = xThen it gets outlined in codegen_cpu (for example):  let x = y in    call foo(x)  foo(x) {    blah = x  }Now, if `analyzer_->Simplify` was run on the body of `foo`, itwould produce:  foo(x) {    blah = y  }Because the `analyzer_` knows that `x` is same as `y` (becauseof the `Let` statemement), but doesn't know that `y` is no longeravailable in the outlined function `foo`.Seehttps://discuss.tvm.apache.org/t/compute-scope-issue-with-analyzer-invalid-simplification/11111	0
[AIRFLOW-XXX] Adds Reverb to the list of official users (#5029)	1
[Documentation Changes] Parameter description change for reduction apis (#881)* [Documentation Changes] Parameter description change for reduction apiThe parameter description is updated for max, min, argmax and argmin* Lint changes on patch-3 of reduction.py	4
[BUILD] add with_api_wrapper to lower (#95)	1
Prepare for RC2 release of March Databricks provider (#22979)	1
Install providers from sources is disabled for prod image build (#13657)One of the earlier changes caused production image to also installproviders from sources.This resulted in warnings printed when webserver started for allthe providers that did not have dependencies installed.This is now disabled and no warnings are printed.	2
Py3 fixes for encryption	0
Update version to 2.2.4 for things in that release (#21196)	5
Add kylin operator (#9149)Co-authored-by: yongheng.liu <yongheng.liu@kyligence.io>	1
Delete pytest-results as part of CI workspace preparation. (#8594)* Otherwise, stale pytest-results could appear in builds.	3
Added SNS example DAG and rst (#21475)	2
added vertica to hive path	1
Change the host in the example of using the API auth backend (#13548)	1
Implements generation of separate constraints for core and providers (#14227)There are two types of constraints now:* default constraints that contain all depenedncies of airflow,  all the provider packages released at the time of the relese  of that version, as well as all transitive dependencies. Following  those constraints, you can be sure Airflow's installation is  repeatable* no-providers constraints - containing only the dependencies needed  for core airflow installation. This allows to install/upgrade  airflow without also forcing the provider's to be installed at  specific version of Airflow.This allows for flexible management of Airflow and Providerpackages separately. Documentation about it has been added.Also the provider 'extras' for apache airflow do not keep directdependencies to the packages needed by the provider. Thosedependencies are now transitive only - so 'provider' extras onlydepend on 'apache-airflow-provider-EXTRA' package and allthe dependencies are transitive. This will help in the futureto avoid conflicts when installing newer providers using extras.	1
Better content of backport packages CHANGELOG and INSTALL files (#9013)* Better content of backport packages CHANGELOG and INSTALL filesThe content of Backport Packages CHANGELOG.txt and INSTALL fileshas been updated to reflect that those are not full Airflowreleases.1) Source package:- INSTALL contains only references to preparing backport packages- CHANGELOG.txt contains combined change log of all the packages2) Binary packages:- No INSTALL- CHANGELOG.txt contains changelog for this package only3) Whl packagesNo change* Update backport_packages/INSTALL	5
[AIRFLOW-XXX] Fix typos from CLI refactor (#6616)	4
Update ECS sample DAG and Docs to new standards (#21828)	1
Adds Estratégia Educacional to list of Airflow Users (#14180)	1
Add RedshiftSQLHook, RedshiftSQLOperator (#18447)	1
Added Ville de Montréal as an official airflow user (#3759)	1
[TEST][FLAKY] Fix flaky test on topk and quantize pass (#3362)* fix flaky test* fix flaky quantize pass	4
Improve the frontend tflite _test_rsqrt test to support tflite 2.6 (#9888)Updated the test quantized graph creation to support tflite 2.6	1
[FIX] Fix autoscheduler tuning on sparse matrices where there are multiple with the same shape (#7974)* [FIX] Fix autoscheduler tuning on sparse matrices where there are multiple with the same shape* formatting* remove unreachable code	4
[ONNX] Reshape op (#11047)* hitting bug while running the reshape unit test. currently trying to reproduce error in script* unit test passes* ran make format* removed print statements* edited commentary* moved the zero check outside of the ravel unravel and into the topi reshape defn* ran cpplint* changes from andrews comments* derp* black* ran black on test_forward.py* fixed test expected output* retriggering CI due to hexagon test failure	0
Save pod name to xcom for KubernetesPodOperator (#15755)* Save pod name to xcom for KubernetesPodOperator* fix kubernetes test	3
Add cloudpickle dependency to docker images (#6701)	2
Debugging scheduler lags	0
[AIRFLOW-XXX] Add Capital One to the companies list (#4606)	1
[AIRFLOW-5014] Fix sphinx doc problem and leaves API docs (#5636)This change fixes autodoc generated documentation problems but alsoleaves generated .rst files in _api folder so that it is easier todebug and fix problems like that in the future.	0
v0.3.2.6	5
Hide ToC from the Apache Airflow doc main page (#12589)Hide the ToC from being displayed when thethe index.rst file in the Apache Airflow docs is rendered.This will improve user experience and prevent repetition of what hasalready been displayed on the sidebar.	1
Move role guide to access control (#10755)	4
cleanup (#11659)	4
Generate Lower Bound Conditions for issue 1014 (#1091)	0
Merge pull request #667 from airbnb/macro_dateutilAdding datetil to macros and documenting macros references	2
[COMMUNITY] @hzfan -> reviewer (#7360)	3
1) Add EQ op to the deduce_bound and add unittests for the same (#3775)2) Add EQ support in the loop partition and add test for the same3) Change typo truc to trunc	1
Suppress LOG/WARNING for a few tasks CLI for better CLI experience (#14567)For 'state'/'list'/'render', more likely userswould like to rely on the CLI output for some works,and the Python LOG/WARNING prints cause inconvenience.	1
Fix documentation for PythonVirtualenvOperator (#11700)Fixed the op_args type description	0
Implement Keras Conv1D (#7035)	5
Fix auto scheduler crash when set with consumers is empty (#7708)Set with consumers is empty during preparing auto scheduler sketchesfor Metal device. Added check on the size of the set.In case when the set with consumers is empty we just skip this rule.	1
[AIRFLOW-492] Make sure stat updates cannot fail a taskPreviously a failed commit into the db for thestatisticscould also fail a task. Secondly, the ui coulddisplayout of date statistics.This patch reworks DagStat so that failure toupdate thestatistics does not propagate. Next to that, itmake sure the ui always displays the lateststatistics.Closes #2254 from bolkedebruin/AIRFLOW-492	3
Merge pull request #940 from DinoCow/Refresh-Dag-StatusRefresh border coloring in graph view without having to refresh the entire page	2
[PROFILING] Various fixes for profile_function (#10850)Check that the function to be profiled is actually defined.Check that the MetricCollector used actually can time the regionrequested.Default to using the module's entry_name instead of "main".	1
[RUNTIME][RPC] Enable remote linking of device code. (#444)* [RUNTIME][RPC] Enable remote linking of device code.* fix build	0
Extract channels from weight shape for conv2d. (#6805)	4
[COMMUNITY] areusch -> Reviewer (#6637)	3
[TIR] Enhance software pipeline validation and fix predicate of epilogue (#11106)* Fix pipeline validation* fix predicate* Update test_tir_transform_inject_software_pipeline.py* Update inject_software_pipeline.cc	5
Fix typos in concept docs (#14130)	2
[AIRFLOW-2754] Fix invalid static path in case of using HDP.Closes #3607 from happyjulie/AIRFLOW-2754	1
[NNPack] Fix automatically cast fail on some platforms (#388)	0
Migrate Google calendar system test to new design AIP-47 (#24334)related: #22430	1
try to fix test (#784)try to fixfix	0
Cache the custom secrets backend so the same instance gets re-used (#25556)* Cache the custom secrets backend so the same instance gets re-usedFixes #25555This uses `functools.lru_cache` to re-use the same secrets backendinstance between the `conf` global when it loads configuration fromsecrets and uses outside the `configuration` module like variables andconnections. Previously, each fetch of a configuration value fromsecrets would use its own secrets backend instance.Also add unit test to confirm that only one secrets backend instancegets created.	1
[MetaSchedule] Handle 'warp_execution' in RewriteCooperativeFetch (#11955)Updated `RewriteCooperativeFetch` to handle 'warp_execution' annotation when the extend of `threadIdx.x` is not specified	0
Yolo2 operators (#911)	1
Use airflow.security.utils instead of socket	1
Migrate Google example gcs_to_sftp to new design AIP-47 (#25107)related: #22447, #22430	1
temp checkin	5
[microTVM] Temporarily remove mps2_an521 from CI (#8927)Temporarily removing the mps2_an512 board from CI due to issue 8728.Possibly all tests can fail on mps2_an512, so removing the boardinstead of xfailing specific tests.Signed-off-by: Gustavo Romero <gustavo.romero@linaro.org>	3
Update spelling_wordlist for docs	2
Fix `EcsBaseOperator` and `EcsBaseSensor` arguments (#25989)	1
[AIRFLOW-1814] : Temple PythonOperator {op_args,op_kwargs} fields (#4691)	1
[TOPI][RELAY][ONNX] Scatter ND (#7927)* passing topi tests* passing relay tests, needs better shape checking still* support ONNX operator* add shape checking back in* fix lint* update docstring	2
[TEST][FLAKY] fix for #3099 (#3101)	0
[TIR] Bugfix for zero number arguments tir functions. (#8515)* [TIR] Bugfix for zero number arguments tir functions.Co-authored-by: Junru Shao <junrushao1994@gmail.com>	1
Remove PATCH /dags/{dag_id}/dagRuns/{dag_run_id} endpoint(#9476)Dag Runs are immutable for third-party applications.	1
[tvm4j] RPC Server (#268)* [tvm4j] RPC Server* [tvm4j] fix recursively function calling; connect to proxy server; osx rename .so to .dylib* [tvm4j] test case for proxy connection; thread pool for serving	3
Merge pull request #53 from airbnb/poke_contextPassing context to BaseSensor poke method	4
[Relay] Added Merge Composite pass (#4771)* [Relay] Added MergeComposite passThis pass allows for patterns to be wrappedin a function marked with 'Composite' and acomposite function name. This is intended to beused with the external codegen for the cases wherean external operator maps to multiple Relayoperators. In that case, the mapping can be expressedas a pattern and assigned a name.For more information on this pass and its motivation,see the RFC:https://discuss.tvm.ai/t/rfc-external-codegen-defining-composite-relay-operators/5470Change-Id: Icb1b803a9f0ac57c529143200228f3bb5793afc0* [Relay] Merge composite testsAdded tests for the merge_composite pass.Change-Id: I1728b4a05b0c1c36140a40f1afe028fde62185dd* Merge composite additional testChange-Id: I9bc7d6053c575e9468ac5abc31214c6ad8507e46* Support priority order in merge_compositeThe order in which the patterns are matchedwas currently random as an unordered_map wasused to store the pattern table. This usesarrays instead so that a distinct priorityorder of matching can be defined. Additionaltests have also been added to verify thisbehaviour.Change-Id: Ief347df4262639138d5d9d7c8cee7ef233af7b56* Improved merge composite docsChange-Id: Ie3a72045ecc3f13ad3c302fbdf192b7296a306a8* Removed unused variableChange-Id: I7814d5fde368ffaf1b3d6d806060c774c7720364* Remove unnecessary op checkChange-Id: I38e78d2acd5b86cb8e837be72ff9d72cd10bcf33* Improve styling on composite function creationChange-Id: I37add1c3134e0b5d5085fe1eb9daf8e06890fa8c* Comment rewordChange-Id: Ie05872dcbbe0c3e1190b0597083b9a64e6b66c66* Stylistic changes to avoid std::moveChange-Id: I43a93995bbf10530399900c992aa99dd4ae4575f* Relax a check in ExtractPatternChange-Id: I0faef77a66c55f83f09e6e47c561ffaea63dedfa* Remove new lineChange-Id: Ifdd02c12087a7e1a0a9b54825669bc0de8f13c3d* Removed MatchPattern from MergeCompositeThis is not necessary now that ExtractPatterncan fulfill the same purpose.Change-Id: I14dc020afa8e50f2df4c0a2efb88a011987f8196* Removed a new lineChange-Id: I8b50f0c9069aa1bcaccbe68eb421031f01a64842* Improved docs for merge compositeChange-Id: Ib1959a35c856e7ea5639de2e4ef314a54f44caf5* Fixed free vars in testChange-Id: I2b7f273db275964ec0e9820560663f0808adee79* Handle case where root arg might not be a callChange-Id: I4eeea3ce723d3ba337d110dcc690377daebe8626* Removed blank lineChange-Id: I07f5392c0e95cfe3cfa5c333703cc6f82d6034fb* Change to CHECK_EQChange-Id: I5c5d62d3cd57f72508b30b926f72091ae6f0d1cc* Revised a conditionalChange-Id: I23a7897ca15a7cd076db5039dc653a4b8c27e803* Improved doc stylingChange-Id: I377f0a1c1ac70f3b8d7584b0c49bddc8c6c134ef* Fail extraction if vars conflictChange-Id: I78e36d805e8ed6b55e61d490212a967c857554a4* Added further merge composite testsChange-Id: Ib1d800409fca4c1834c7fe0cab5a26ab99a26820Co-authored-by: lhutton1 <35535092+lhutton1@users.noreply.github.com>	1
Breeze2 autocomplete options (#20066)	5
[Arith] Allow constant values in InverseAffineIterMap (#12026)	1
make case insensitive	1
[AIRFLOW-2696] Setting UTF-8 as default mime_charset mailupdate UPDATING.mdCloses #3559 from lxneng/feature/utf8_mime_charset	1
SGXify graph runtime (#937)	1
[Relay] Replace compile engine with TE compiler in the VM (#8501)* [VM] Add imports to new TE in VM compiler* [VM] Add comments to compile engine usages* [VM] Replace depreceated CachedFunc of compile_engine with TE_compiler* [VM] rm compiler engine compiler.cc* [VM] Replace compile engine with TECompiler in memory allocator* [VM] Add relay interface to te_compiler* [Relay] Fix linting errors* Move TEcompiler to VMCompilerContext; add global func into IRmodule when lowering in TEcompiler* add back the check* skip the check for ext func in tecompiler* skip tvm::build for external functions* trigger ci* retrigger ci* retrigger ci* remove the unnecessary loop in tecompilerCo-authored-by: YuchenJin <yuchenj@cs.washington.edu>	4
Sync Updating Guide with 2.0.0 (#13168)This commit sync Airflow 2.0 Updating Guide with Master i.e. removes alpha / beta mentions since it is now released	4
[AIRFLOW-6958] Fix Intermittent CI failure (#7592)	0
Merge pull request #304 from jlowin/patch-1Clarify SubDagOperator exception	2
Adjust inner/nested radius to remove unwanted visual gap (#12887)	4
Parametrized keda task concurrency in chart (#13571)* Rely on the config.celery.worker_concurrency valueto determine the number of task a keda worker can take(vs the previous 16 that was hardcoded in the query).* Updated documentation accordingly	2
Fix typo in the Pull Request "build image" if. (#22585)In case Pull request is run in the "apache/airflow" repository,image building happens in the ci.yml workflow as of #22542.However there was a typo in the build-image workflow that made theimages build in both - BuildImage and CI workflow.	1
Fix an issue with dynamic functions overwritting call arg types (#7295)* Fix an issue with dynamic functions overwritting call arg types* fix a bug for un-annotated inputs* normalize names in TypeSolver::Unifier* fix name normalization	0
[µTVM] Rev ci-qemu to 0.02 (Introduce onnx python dependency) (#7728)* Fix ci-qemu build, add ONNX* rev ci-qemu to staging	1
Fix links to sources for examples (#24386)The links to example sources in exampleinclude have been broken in anumber of providers and they were additionally broken by AIP-47.This PR fixes it.Fixes: #23632Fixes: https://github.com/apache/airflow-site/issues/536	0
[COMMUNITY] @wpan11nv -> Reviewer (#5790)	3
AIP-47 | Migrate Trino example DAGs to new design (#24118)	1
Add example DAG & how-to guide for sqlite (#13196)	2
removing size	4
[CMake] add support for find_package (#10097)* removed include header path, which are invalid* 1. added target tvm in a cmake export group2. added cmake package config file* added Threads as public dependency* changed temp config file name for better understanding	1
Makes changes to SqlToS3Operator method _fix_int_dtypes (#25083)Convert dataframe object columns to str, to avoid errors when converting from df to parquet.Renamed methods to remove old name:_fix_int_dtypes -> _fix_dtypestest_fix_int_dtypes -> test_fix_dtypesCo-authored-by: Paul Stanton <paul.stanton@selectquote.com>	3
Fix image retagging when pulling the images (#18433)The change #17883 missed re-tagging images after downloadingwhich caused unnecessary image rebuilding for PRs as well as usingwrong image for doc building - previous version of docs were usedwhen building docs!	2
Improved log handling for zombie tasks (#18277)	2
[BYOC][ACL] Enable remote device via environment variables (#6279)* [BYOC][ACL] Enable remote device via environment variablesImproves the ACL remote testing infrastructure by allowing a remote device to be specified via environment variables. This means external scripts can be used to enable the runtime tests. By default an RPC server will not be used and the runtime tests will be skipped.Change-Id: I8fc0b88106683ac6f1cbff44c8954726325cda21* Use json file as configuration for testsChange-Id: Iadce931d91056ed3a2d57a49f14af1ce771ae14b* Do not load the test config during class creationChange-Id: If718b5d163e399711111830f878db325db9c5f84* Add check for existence of fileChange-Id: I2568bca7f4c3ad22ee8f9d065a9486ee3114f35c	4
[Torch] Fix cast to long (#6301)* [Torch] fix cast to long* retrigger	0
[Torch, QNN] Add support for quantized models via QNN (#4977)* qnn support initial import* fix upsampling num input* imagenet tests added* add qunatized module tests* quantized module tests working* imagenet test working* fix lint* remove top level torch import to fix ci error* disable lint warning on outside toplevel import* revert parse -> convert change* add comments to qnn translation* address comments, add sample outputs* add more comments* refactor bias add and requantize step	1
Add SubDagOperator example	2
Hide configuration	5
[Target] Add support for target object with host field compatible with previous api (#7534)* Fix legacy code on target host* Modify legacy code for target host change* Add tests and fix merge issue* Add condition for same host* Modify all files for new target host api compatibility* Add newline* Change import format* Optimize test file* Add match error info for unit tests* Fix for heterogeneous targets* Fix format for dict iteration* Fix target host type error* Skip one testcase for tvm infinite loop bug* Fixed bug for target map compatibility* Fix another TargetsMap issue* Fix typo and infinite loop error* Temporary fix for handle issue* Fix vm target* Add condition support for str case* Add GetHost function and fix previous bugs* Fix measure_record.cc* Fix search_task.cc* Fix compiler.cc, memory_alloc.cc* Fix driver_api.cc* Fix format* Fix bugs and GetHost function usage* Fix clang format* Fix bug* Modify python tests* Change python unit tests to new target api* Fi test_runtime_heterogeneous.py* Modify tutorials & remove extra print* Update more tests to new api* Refine the tutorial target usage* change argument name for Target constructor function* Fix target export function* Fix and validate all tutorial usage* Remove unused argument* Fix format* Fix bug in driver/build_module.py for heterogeneous target* Fix bug in driver/build_module.py for heterogeneous target more* Fix target host type error* Fix cudnn target host bug* Fix according to reviews, add helper function in python* Refactor code as helper function* Expand helper function* Fix bug add and update python helper function* Update target hosts* Fix format & refresh function* Fix unit test bug* Fix bug in refreshing host* Fix bug* Add SetHost function* Update export function* Fix format* Fix export bug in target* Fix bug on host referencing* Addtional tests* Address review issues* Fix format target.py* Fix issues and format* Add some 3rd party dependencies* Merge main branch* Fix target.h format* Remove redundent import* Fix function name* Add parameter name* Fix new code bug* Fix bug in lowering	0
[AIRFLOW-463] Link Airflow icon to landing pageDear Airflow Maintainers,Please accept this PR that addresses the followingissues:- *https://issues.apache.org/jira/browse/AIRFLOW-463*As of now the Airflow image icon on top leftdoesn't leads users to anywhere. It should takeusers to initial landing page, which is generallyhappened on most of the other sites.Closes #1764 from msumit/AIRFLOW-463	5
Add op_name in error message for Pool (#7243)* add op_name in error message for Pool* fix tiny issue for arguments* fix tiny issue for LpPoolCo-authored-by: luyaor <luyaor@luyaordeMacBook-Pro.local>	0
Migrate DingTalk example DAGs to new design #22443 (#24133)* Migrate DingTalk example DAGs to new design #22443	1
[RUNTIME] support limited save without cross compile (#659)	1
Merge pull request #1323 from jgao54/fix-commentFix typo in comment in prioritize_queued method	2
[Strategy] Support for Int8 schedules - CUDA/x86 (#5031)* [CUDA] Op strategy changes for Int8 schedules.* Applying Haichen's suggestions.* Make 4D output work for task extraction.* Make x86 work.* Fix lint.* Lint fixes.* Tests, comments, out channel a multiple of 4.* Topi test.Co-authored-by: Ubuntu <ubuntu@ip-172-31-38-96.us-west-2.compute.internal>	3
[Ansor][AutoTVM v2.0] Phase 1: feature extraction for cost models (#6190)* [AutoScheduler] add feature extraction* fix lint* fix gpu test* address comments* improve flop estimation* rebase* refactor with group* fix* Apply suggestions from code review	0
Add ingress to the helm chart (#10064)Co-authored-by: Alikhan <alikhan.tagybergen@tomtom.com>Co-authored-by: alikhtag <43503284+alikhtag@users.noreply.github.com>	1
[AIRFLOW-XXX] Remove profiling link (#4602)	2
Remove Marshmallow schema warnings (#17753)Marshmallow 3.0 (pulled in by FAB) issues warnings on the old way wewere doing this, and it's possible the `min=n` validation was neverworking :)	1
Add check for pre-2.0 style hostname_callable config value (#8637)Changes deprecated config check rules. Now uses regex to look for an old pattern in the val. Updates 'hostname_callable'.This lets us pull the change back in to 1.10.x, so that by the time 2.0 is around people will have had time and notice to update, without reading (the now quite long) UPDATING.md.Depends on #8463	5
Protect against using try_number from context in provider (#23069)This is a (temporary and not perfect - until we figure out a better way)protection against using constructs and interfaces which are notpresent in Airflow 2.1 in providers.Follow-up after #23059	1
[AIRFLOW-5482] Deprecate Schedule Interval on task level (#6103)* [AIRFLOW-5482] Deprecate Schedule Interval on task level* Update baseoperator.py	1
[AIRFLOW-2203] Remove Useless Commands.self.tasks is a temp list gen from self.task_dict. no reason to appendto it	1
Conv2d scheduler tweaked for super resolution perf (#652)* scheduler tweaked for super resolution perf* lint error fixed* lint error fixed* conv2d_transpose schedule error fixed	0
Deprecate jira provider in favor of atlassian.jira provider (#25930)* Deprecate jira provider in favor of atlassian.jira provider	1
[TensorRT, BYOC] Handling a corner case in TRT RemoveDropout pass (#8506)* [TensorRT, BYOC] Handling a corner case in TRT RemoveDropout pass* changing visit logic	2
[OP] Initial checkin of nnvm core op folders	5
[AIRFLOW-5823] Add a new hook for ingesting data into Apache Pinot (#6482)	5
Fix fetch_all_handler & db-api tests for it (#25430)	3
[TIR] Simplify final indices from transform_layout (#10761)The final indices returned from transform_layout when applied on a`te.compute` are not simplified. Thus the returned index ranges areharder understandEg: When applying NHWC to NCHWc transform_layout```python   iter_vars = s[B].transform_layout(lambda n,h,w,c: [n, c//4, h, w, c%4])   print(iter_vars)```iter_vars before simplification:```python[iter_var(axis0, range(min=0, ext=((w - 1) + 1))), iter_var(axis1,range(min=0, ext=(floordiv(((z_div*4) - 1), 4) + 1))), iter_var(axis2,range(min=0, ext=((x - 1) + 1))), iter_var(axis3, range(min=0, ext=((y -1) + 1))), iter_var(axis4, range(min=0, ext=4))]```iter_vars after simplification:```python[iter_var(axis0, range(min=0, ext=w)), iter_var(axis1, range(min=0, ext=z_div)), iter_var(axis2, range(min=0, ext=x)), iter_var(axis3, range(min=0, ext=y)), iter_var(axis4, range(min=0, ext=4))]```	5
Rearange API auth tests to the correct place (#14808)- tests/api/auth/bakcned/test_basic_auth was almost exclusively testing  the Connexion API -- moved in to tests/api_connexion/ folder.  (To make this work the conftest for connexion has been moved up a  folder out of .../endpoints/ )- tests/test_utils/test_remote_user_api_auth_backend.py is testing test  code itself, and so isn't needed- Created/copied Basic auth test to  tests/api_connexion/test_basic_auth.py -- this ensures the Connexion  API handles basic auth correctly too.	0
Fix code-snippets in google provider (#23438)	1
Add documentation to gcs_download_operator	1
[AIRFLOW-4220] Change CloudantHook to a new major version and add tests (#5023)- upgrade cloudant version from `>=0.5.9,<2.0` to `>=2.0`- remove the use of the `schema` attribute in the connection- remove `db` function since the database object can also be retrieved by calling `cloudant_session['database_name']`- update docs- refactor code	4
[DOC] Initial doc system (#88)* [DOC] Initial doc system* Migrate API* Update docs	2
[BUGFIX/REGRESSION] Complex inline call, regression test on lstm cell (#128)	3
Fix : Don't treat premature tasks as could_not_run tasks	1
check in (#2627)	5
Sql to gcs with exclude columns (#23695)	5
[TIR] Add tir::builtin::assume (#12267)* [RemoveAssume] Implemented T.assume in TVMScript, RemoveAssume* [UnitTest] RemoveAssume, initial functionality tests	3
Add "Greater/Smaller than or Equal" to filters in the browse views (#20602) (#20798)	1
Simplify CeleryKubernetesExecutor tests (#13307)* Simplify CeleryKubernetesExecutor testsCo-authored-by: Daniel Standish <dstandish@techstyle.com>	3
Fix case of JavaScript (#11718)Changes were:- `javascript` to `JavaScript`	4
Remove use of static link in REST API test (#23278)	3
[TEST] force openblas threads to be 1 (#1580)	1
[Relay][Topi] Use SimplifyInference for L2 Normazlization. (#4795)	5
Version 0.2	5
Fixed MyPy issues in tests decorators and hooks (#19996)	1
[Contrib] CuDNN v7 Support (#311)* [Contrib] CuDNN v7 Support* Add test	3
[COMMUNITY] @sgrechanik-h -> Reviewer (#2732)	3
closes apache/incubator-airflow#1491 *dupe of #1497*	5
Fix docs on creating CustomOperator (#8678)	1
Bump minimum required ``alembic`` version (#20153)Related to https://github.com/apache/airflow/pull/18453#issuecomment-989314399`1.5.0` was yanked so `>=1.5.1` is safe and we already have `1.7.5` in constraints-main	0
[NNVM][KERAS] Fixed padding in pooling (#1635)	1
[ci] Use available CPUs in builds (#10359)* [ci] Use sccache in builds* trigger ci* updateCo-authored-by: driazati <driazati@users.noreply.github.com>	1
[microNPU] Fix bug with re-reading in EncodeConstants (#9646)When a striping strategy that leads to weightsbeing re-read was deployed, the logic in EncodeConstantsfailed. This adds a test for that case and fixed thepass so it handles it correctly.Change-Id: I6f54cdb7be69428e49c3b4208271cd3e6c192e5d	5
Upgrade to support Google Ads v10 (#22965)	1
Fix `airflow db check-migrations` (#19597)	5
Merge pull request #66 from mistercrunch/chartsCharts	2
Add Airflow UI instance_name configuration option (#10162)Co-authored-by: Ash Berlin-Taylor <ash@apache.org>	5
[LLVM] Use llvm::Align with LLVM 11+ to avoid warnings (#5264)LLVM 11 is introducing a separate class to represent alignment.The functions in IRBuilder that create aligned loads and stores,and which accept the alignment as an unsigned value have beendeprecated (and now cause warnings to be emitted).	2
[AIRFLOW-6346] Enhance dag default_view and orientation (#6900)* Only DEFAULT_VIEW_PRESETS are acceptable* Only ORIENTATION_PRESETS are acceptable* Use webserver.dag_default_view in airflow.cfg as default value* Remove DAG and DagModel function get_default_view	1
DbApiHook.run allows for a list of sql statements	1
[Ansor][AutoTVM v2.0] Phase 2: Layout Rewrite in AutoScheduler (#6297)* enable layout rewrite for auto scheduler* refine* update* fix CI* fix CI* fix CI* resolve review comments* add ut* resolve comments* resolve comments* fix coding style	0
[AIRFLOW-2238] Flake8 fixes on dev/airflow-pr	0
AIP-39: Handle DAG scheduling with timetables (#15397)This creates a new subpackage airflow.timetables, and implementstimetable constructs that provides DAG scheduling logic. The timetableclasses are used to refactor schedule inference logic out of the DAGclass, and existing functions related to scheduling are refactored touse timetables (and deprecated).Usages of the deprecated DAG functions in Airflow's code base aremodified to either use the timetable, or infer the information by othermeans. For example, usages of previous_schedule() (what was a DAG lastscheduled to run before this run?) are refactored to query the databasewhen the previous scheduled run actually happened, instead of using theschedule interval (cron or timedelta) in infer the information. This isbecause an AIP-39 timetable does not necessarily run on a periodic-ishschedule, and we cannot reliably infer when the previous run happened.	1
[RPC] Include rpc session info into context (#458)* [RPC] Include rpc session info into context* add type checker in return converison	1
[AIRFLOW-100] Add execution_date_fn to ExternalTaskSensorCurrently, ExternalTaskSensor only supports querying execution_datesthat are either the same as the ExternalTaskSensor's execution_dateor a fixed interval from that date (using `execution_delta`). Thisadds the ability to provide a fn (`execution_date_fn`) that acceptsthe current execution_date and can return any desired date forquerying. This is much more flexible. For example, it couldsupply the last date of the previous month.	5
[COMMUNITY] Siju Samuel -> Committer (#5817)	3
[AIRFLOW-740] Pin jinja2 to < 2.9.0Jinja2 2.9.1 seems to have a conflict with flask-admin.	5
Fix: Conditionally update button URL only when it is present (#12268)Resolves #12254A bug introduced in #11815. The function that updates the button URLs was failing when trying to update the "K8s Pod Spec" which is conditionally displayed (if k8s_or_k8scelery_executor). This fix adds a check to confirm the button exists before attempting.	5
[AIRFLOW-XXX] Fix Docstrings for Operators (#3820)	1
[Relay][Quantize] Integrate data-aware calibration into quantization (#4295)* [Relay][Quantize] Integrate data-aware calibration into quantization* Update _calibrate.py* trigger ci* Address comments* address comments	1
Merge pull request #661 from patrickleotardif/fix_successFix success endpoint for @once DAGs	2
Support conf param override for backfill runs (#22837)Co-authored-by: Dmirty Suvorov <dmitry.suvorov@scribd.com>	1
Fix deprecated use of numpy.asscalar. (#8292)Replace use of numpy.asscalar with the use of .item .Anyone know how to use pylint to catch these uses before they land.	1
Fix typo in test_dask_executor.py (#9269)	3
Add Dataflow sensors - job metrics (#12039)	5
Update BigQueryCreateExternalTableOperator doc and parameters (#18676)	2
Add REST API endpoint for bulk update of DAGs (#19758)Added endpoint for bulk update of DAGs in the airflow stable API	2
Clarifying if logic	2
AIRFLOW-4793 Add signature_name to mlengine operator (#5417)* AIRFLOW-4793 Add signature_name to mlengine operator* Add pydoc	2
[RELAY][DYN] Dynamic UpSampling3D Op (#6353)* frontend and start of cpp impl* upsampling3d typerel and makefunc* impl upsampling3d dynamic to static pass* passes test_dyn_upsampling3d_infer_type_const* fix bugs and improve doc for resize and upsampling* code cleanup* make tests more complex* code cleanup, fix test_dyn_upsampling3d_run* fix typo* ci not working	1
[ETHOSN] Ethos(TM)-N 21.11 update (#10061)Minor update in inference buffer mapping due to changes in the driverlibrary	4
[Keras] Adjust Keras frontend for Keras 2.6 support (#10733)Add support for the Keras frontend to be tested and used withboth Keras 2.4 and 2.6, as we plan for migration.Co-Authored-By: Luke Hutton <Luke.Hutton@arm.com>Co-authored-by: Luke Hutton <Luke.Hutton@arm.com>	1
Align Black and blacken-docs configs (#24785)	5
Avoid unintentional data loss when deleting DAGs (#20758)	2
Update auto_tuning_with_python.py (#8158)	5
Labels on job templates (#18403)	5
ECSOperator / pass context to self.xcom_pull as it was missing (when using reattach) (#17141)	1
[de]serialize resources on task correctly (#21445)	5
fix typo (#8484)* fix typo* Fixed typos in documentation	2
Add note on task_instance_mutation_hook usage (#25607)Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	1
limit the choices for the worker_class configuration	5
Merge remote-tracking branch 'upstream/master' into hdfs_hook	1
[AIRFLOW-6864] Make airfow/jobs pylint compatible (#7484)fixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! fixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatiblefixup! [AIRFLOW-6864] Make airfow/jobs pylint compatible	1
Add in Array, fix most of IR	0
[NODEREF] Introduce named attribute system. (#1618)	5
Always run at least one backfill from BackfillJob (#18742)This restores the behavior around this prior to AIP-39 implementation. It is arguably not correct, but nobody ever complained about it (and they have to the new behavior), so we should meet user expectations.Close #18473	1
[BUGFIX] fix illegal memory access bug in reduce op schedule by constriant threadIdx.y (#8566)Signed-off-by: ziqiang.pzq <ziqiang.pzq@alibaba-inc.com>Co-authored-by: ziqiang.pzq <ziqiang.pzq@alibaba-inc.com>	0
[TF] Add DenseBincount support (#12728)	1
Fixed a bug in the scheduler: num_runs used where runs intended	1
closes apache/incubator-airflow#746 *no movement from submitter*	4
[µTVM] Modify reference VMs to support new µTVM demo (#7001)	1
Add retagging images accross repos (#19778)Useful to refresh cache images to a different repository - inorder to speed up builds there.	1
[AIRFLOW-XXX] Dump logs in case of kube failure (#5472)Previously we were only dumping the logs in case of _success_, which wassomewhat pointless	2
Fix static checks after merging #17093 (#17096)	0
Added select_query to the templated fields in RedshiftToS3Operator (#16767)Co-authored-by: Weiping He <weiping.he@cirium.com>	1
[AIRFLOW-4322] Add test for VerticaOperator (#5107)	1
Merge pull request #1284 from jlowin/fix-remote-base-NoneFix reading strings from conf for remote logging	2
[AIRFLOW-1523] Clicking on Graph View should display related DAG run (#5866)Add execution_date_argUse execution_date_arg in graph, gantt, and Back To {parent.dag} links.Add check of execution date	5
Add `wait_for_termination` argument for Databricks Operators (#20536)	1
Add MXnNet parser for box_decode (#5967)	1
[ci][docker] Remove nvidia ml repository before updating (#10828)`bash docker/build.sh ci_gpu` fails locally as well as in CI: https://ci.tlcpack.ai/blue/organizations/jenkins/docker-images-ci%2Fdaily-docker-image-rebuild/detail/daily-docker-image-rebuild/273/pipeline/57From [this post](https://forums.developer.nvidia.com/t/failed-to-fetch-https-developer-download-nvidia-com-compute-machine-learning-repos-ubuntu1804-x86-64-packages-gz/156287), so long as the build completes (meaning we don't use any images from this repo), it should be fineCo-authored-by: driazati <driazati@users.noreply.github.com>	1
Mention about .sh commands and templates in BashOperator docs (#11566)	2
Attempt to reduce flakiness of PythonVirtualeEnv test_airflow_context (#17486)We have a global limit (60 seconds) for individual test execution,however 'test_airflow_context' of the Python Virtualenv test might take longer incase they are run in parallel - because they are using dill serializationincluding a lot of serializable data from the context of the task.We give the test 120 seconds to complete now.	3
fix dense tuning (#3768)	0
[BUGFIX][ARITH] Fix FloorMod Simplifier (#10336)* fix canonical simplifier* improve comments	1
Docker context files should be available earlier (#12219)If you want to override constraints with local version,the docker-context-files should be earlier in the Dockerfile	2
[AIRFLOW-6168] Allow proxy_fix middleware of webserver to be configurable (#6723)	5
Bump chart version to 1.6.0-dev (#22192)Bumping the version to 1.6.0-dev since 1.5.0 is now released	2
Ensure that zombie tasks for dags with errors get cleaned up (#25550)If there is a parse error in a DAG the zombie cleanup request never ran,which resulted in the TI never leaving running state and justcontinually being detected as a zombie.(Prior to AIP-45 landing, this bug/behaviour resulted in a DAG with aparse error never actually leaving the queued state.)The fix here is to _always_ make sure we run `ti.handle_failure` when weare given a request, even if we can't load the DAG. To _try_ and work aswell as we can, we try to load the serialized_dag if we can, but incases where we can't for whatever reason we also make sureTaskInstance.handle_failure is able to operate even when `self.task` isNone.	1
Fix AzureBatchOperator false negative task status (#25844)	1
disable signal capture in unit test of paddle frontend (#9809)* disable signal capture in unit test of paddle frontend* code format	1
Update CONTRIBUTING.rst (#11461)Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	5
[microNPU][2b] Create CascaderGraphs from TE graphs (#9471)The first step in the cascader is to create aCascaderGraph from a TE graph. To do this, everyoperator in the TE graph must get 'matched' by aPart matcher. This converts TE operations intocascader Parts by augmenting them with Propagators.In this initial commit, we include basic Partmatchers for ethosu_conv2d and some transformoperators so that the graph creation can be tested.	3
[AIRFLOW-XXX] Update NOTICE file per suggestion (#4220)	2
[ci][tvmbot] Fix authorization filtering (#12310)There was a level of unwrapping missing in the check for who is allowed to trigger re-runs causing it to always fail. This also uses a different actions API endpoint to re-run only failed GitHub jobs. This also fixes the text fixtures to match the GitHub API response, also tested live in driazati#34.Co-authored-by: driazati <driazati@users.noreply.github.com>	1
Making Jinja templates as files work	1
Adding aten::unsqueeze_ to PT Frontend (#7231)* Added Ops* Regular* Remove copy* Remove copy* Tests* BlackCo-authored-by: Ubuntu <ubuntu@ip-172-31-27-149.us-east-2.compute.internal>Co-authored-by: Ubuntu <ubuntu@ip-172-31-19-34.us-east-2.compute.internal>	3
Add map_index support to all task instance-related views (#22272)Co-authored-by: Ash Berlin-Taylor <ash@apache.org>Co-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>	1
[AIRFLOW-1541] Add channel to template fields of slack_operatorCloses #2549 from Acehaidrey/AIRFLOW-1541	1
Fix image and add airflow config for cleanup pods (#13576)	4
Add new committers to allowed list for self-hosted GH runners (#23253)	1
add platform to build directory (#8945)	1
Add C2FO to ``INTHEWILD.md`` (#18157)	1
[AIRFLOW-2476] Allow tabulate up to 0.8.2 (#3835)	1
[microTVM] Add support for the Raspberry Pi Pico via Arduino (#11694)* Add RP2040 support	1
[TOPI] Move conv2d spatial pack schedule to dedicated file (#3972)More schedules are making the conv2d.py file too large, sowe'd like to move the spatial pack schedule to dedicated filebefore introducing NHWC schedule. No logic change in this patch.	4
Decreasing NUM_EXAMPLE_DAGS = 7 after commenting the docker ex	2
[WEB][RUNTIME] TVM WebAssembly JS Runtime (#5506)* [WEB] Remove the old web runtime* [WEB][RUNTIME] TVM WebAssembly RuntimeThis PR introduces a brand new TVM web runtime based on the WASM standard API.Main highlights:- The new runtime is rewritten using the Typescript.- The new runtime now directly interfaces with WebAssembly's standard API,  instead of relying on emscripten's API.  This change will make the js runtime more portable to runtime variants.  For example, we could also try to make it interface with the tvm's rust runtime implementation.- System library can be provided through WASI  - We also build a hack to enable Emscripten to generate a WASI like    bundle for runtime environment on the Web.- The wasm generation now uses the mainlin LLVM.- Dynamic link(dlopen) is not used due to limitation of wasm,  instead we rely on the recent new RPC refactor to directly  restart a new session for each wasm binary sent to the RPC.* Address review comments* Skip tensorcore test	3
Pulling local_infile from json	5
[PASS] Revert the change of intel gpu warp index (#1127)	4
[TUTORIAL] Onnx tutorial (#60)* update* back to color	5
[BUGFIX][CRT] Fix Compilation Error in CRT (#5713)	0
Merge pull request #1211 from Syeoryn/masterFix broken links in documentation and typos	2
ECSOperator: airflow exception on edge case when cloudwatch log stream is not found (#18733)	2
[TFLITE]GATHER_ND (#5508)Signed-off-by: Dhruva Ray <dhruvaray@gmail.com>	5
Merge pull request #821 from airbnb/infered_trRefactoring states inferred from trigger rules	5
[Relay] Add support for tuple node in operator fusion (#2187)	1
Behaviour to install all airflow providers added (#11529)In Airflow 2.0 we decided to split Airlow into separate providers.this means that when you prepare core airflow package, providersare not installed by default. This is not very convenient forlocal development though and for docker images built from sources,where you would like to install all providers by default.A new INSTALL_ALL_AIRFLOW_PROVIDERS environment variable controlsthis behaviour now. It is is set to "true", all packages includingprovider packages are installed. If missing or set to false, onlythe core provider package is installed.For Breeze, the default is set to "true", as for those cases youwant to install all providers in your environment. Similarly if youbuild the production image from sources. However when you buildimage using github tag or pip package, you should specifyappropriate extras to install the required provider packages.Note that if you install Airflow via 'pip install .' from sourcesin local virtualenv, provider packages are not going to beinstalled unless you set INSTALL_ALL_AIRFLOW_PROVIDERS to "true".Fixes #11489	0
[µTVM] Remove binutils module, no longer needed after microTVM refactor. (#6947)	4
[AIRFLOW-XXX] Docs: Fix paths to GCS transfer operator (#4479)	1
Remove unnecessary loggings from offline sql generation command (#21962)I found a way to remove unnecessary loggings that comes from validating revisions in the offlinemigration command. Also cleaned up some codes	4
Sort Committers via their names instead of usernames (#14403)Previously:GithubUsername (Name)Now:Name (GithubUsername)	1
[microNPU] Add support for requantize (#9910)* [microNPU] Add support for requantizeAdds support for stand-alone requantize operation which is legalized toan identity operation on the NPU.Change-Id: Ie2450c5fc72f405eddf517593236074aa4716c3b* fix concatenate tests failing due to not being bit exactSince requantize is now offloaded, concatenate tests were failingdue a reference not being used.Change-Id: I44b26b5daecfefb776ca19e6646f3690f5570f52* test multiple requantize offloadChange-Id: I60a3283461a7a7083c05289e84f570698388077b* address commentsChange-Id: I7196a0fa468eb7c6a96f2b8a68f3a2dcf5a5693c	4
Add Kiwi.com as a user to README	1
Bump actions/setup-python version to 2 (#9984)v2 was released on 21 March	1
Add context to execution_date_fn in ExternalTaskSensor (#8702)Co-authored-by: Ace Haidrey <ahaidrey@pinterest.com>	5
[NNVM] Add argmax and argmin operations from topi (#1462)	1
[ManifestAlloc] Handle TupleType inputs in CheckReshapeOnly (#6776)* Changes in CheckReshapeOnly to support TupleTypes as inputThis arises insed ManifestAllocPass inside relay.vm.compile* [ManifestAlloc] Handle TupleType inputs in CheckReshapeOnly	0
[TOPI] Add topi.target; Schedule for raspberry pi (#406)* CPU Schedule for raspberry pi* Update* Update* Add topi.target* Refactor* Update* Make python3 happy* Improve* Improve* Improve* Use get_const_int	1
Get around limitation of g++-4.8 (#4626)	1
Merge pull request #678 from airbnb/test_modeTest mode	3
fixup! Fixed failing pylint errors introduced in #13403 (#13429) (#13437)	0
Remove unused licenses: `python-nvd3` & `python-slugify` (#15860)This was added when we vendorized nvd3 and slugify: https://github.com/apache/airflow/commit/e36bdef0b34c16def20ecbb8248950070eb5fa33but we forgot to remove it in https://github.com/apache/airflow/pull/9136	4
[Relay] [Pass] Add mixed precision (e.g. FP16) model conversion pass  (#8069)* Initial skeleton for fp16 pass.initial green gray and red listsmove fp16 conversion to own fodlersecond pass examplesplit up files a bit morecool nodes broinitial transofmr pass* Working python version of fp16 pass.fix topi conv2d not casting kernel to output typeworking resnet, but conv2d topi intrinsics need worktests for resnetadd more tests, extend coverage for converterupdate tests, ensure red ops convert back to fp32clean up code a bitsimplify fp16 output dtype examinationfix passupdate testsinitial coloring* Rewrite python passes in C++inspect arg fieldsadd propagate colors pass"private -> public inheritance"rewrite draftfull transformation in c++remove printsfp16 pass the proper wrappinginsert extra cast to pass type checkingfix previously broken test by removing cast in wrong scenarioremove old python_files* Extend support to things besides CallNodes. E.g. tuples and letsfp32 invalidate typing instead of cast addingbasic testsskeleton code outStash work -- casting based on checked typesworking let statementsadd more ops, handle functions more generallyadd multiply, fix broken casesupport TupleNodes properly, move hash function for datatypes into data_type.h"update simple let test with structural expectationcleanup p1remove old file* Rewrite how and when casting is done by checking types directly.add support for GPT2, BERTadd some more commentsnew single pass versionformattingmake a lot of things const referencesclean up testsmore cleanupmore commentsfinal commentadd newline* linting and formatting* add AST header* remove todo* lint errors2* remove i386 incompatible features* Trigger CI again* set seed* lint* address animesh's initial comments* mutate attributes only if they were originally floats* initial comments from matthew* add comment on hashing strat* add missing ;* edge case when mutating attrs* Cody's easy to address comments* add test to show green-red casting works* remove np.random seed from each test* remove as many references to fp16 types in favor of generic mixed types* rename RED, GREEN, GRAY to MIXED_PRECISION_ALLOW, etc.* skeleton for supporting arbitrary mixed types* cool tests* Using MixedModeMutator* rename things ToMixedPrecision* rename passes to amp.cc* rename tests to match transform* clean up typos* rename even better to_mixed_precision* don't insert into cache when dtypes equal* new python interface for registering ops* cleaner registering ops* add fp64 structural test* clean up and comments* make copy of attributes* asf header* pylint* remove TODO which is solved* Apply nits from code review (comaniac)Co-authored-by: Cody Yu <comaniac0422@gmail.com>* change cast_node_cache --> cast_node_cache_* add check for returned vals* better error msg* docstring for pass in python* fix default behavior to be proper* better error reporting via single flag* priority to 0* address more nits* fix story telling slightly* restart* correct docstring* change class fields to have _ at end* add class docstring* add comment on accumulation dtype hack* ADT warnings* add todo* fix linterCo-authored-by: Cody Yu <comaniac0422@gmail.com>	0
[AIRFLOW-880] Make webserver serve logs in a sane way for remote logsThere are two major problems with remote logs inAirflow right now:1. Lack of Complete Logs: Remote logs should bethe default instead of the log that is only loadedif the local log is not present, because theremote log will have the logs for all of the triesof a task, whereas the local log is onlyguaranteed to have the most recent one2. Lack of Consistency: The logs returned willalways be the same from all the webservers (rightnow different logs can be returned if a webserverhas a log vs doesn't, and there can be differentlogs between webservers that have the log).Right now log functionality is not consistent whenit comes to remote logs.This PR addresses these issues by ALWAYS readingfrom remote logs and then also reading logs fromworker hosts if the task is already running (toget in-flight logs). The one issue with this PR isthat if a task is running on a worker it alreadyran on, then you will get duplicate logs for allof the previous runs of the task that alreadycompleted (delimited by something like "***Getting remote logs" "*** Getting logs on localworker"). This can be fixed later (either bystreaming logs to the log server or by creating aproper abstraction for multiple task instanceruns), and is still better than the currentbehavior (duplicate info is better than omittingprevious task instance logs from the webserverlog).Testing Done:Tested on staging cluster:- Task instance doesn't exist- Task instance is running and has previous remotelog- Task instance is running for first time- Task instance has completed and has remote logCloses #2086 from aoen/ddavydov/fix_s3_logging	2
Update changelog for helm chart 1.5.0 (#22090)	2
Light Refactor and Clean-up AWS Provider (#23907)	1
Parameterize tests in hashicorp/hooks/test_vault.py (#10903)Some of the tests were parameterizable, so less line to maintain with the same level of testing	3
AWS RDS integration fixes (#22125)Co-authored-by: Dmytro Kazanzhy <dkazanzhy@demandbase.com>	5
Changing perms	4
Fix concept doc for dynamic task map (#26002)	2
Remove Tableau from Salesforce provider (#23747)* Remove Tableau from Salesforce providerTableau was split from Salesforce provider a year+ ago in https://github.com/apache/airflow/pull/14030We kept Tableau in Salesforce to preserve backward compatibility, it's time to remove the deprecated dependency.	4
[AIRFLOW-5195] Move GCP Dataflow to core (#5799)This commit moves GCP Dataflow from contrib to core.For more information check AIP-21.	5
[Relay] Add hd,tl,nth for list in Prelude (#2771)	1
Make provider doc preparation a bit more fun :) (#23629)Previously you had to manually add versions when changelog wasmodified. But why not to get a bit more fun and get the versionsbumped automatically based on your assesment when reviewing theprovideers rather than after looking at the generated changelog.	4
[AIRFLOW-5532] Fix imagePullSecrets in pod created from k8s executor (#6166)* [AIRFLOW-5532] Fix imagePullSecrets in pod created from k8s executor* Keeps using PodGenerator constructor for setting up image_pull_secrets	1
Update EKS sample DAGs and docs (#21523)* Update EKS sample DAGs to new standards	1
[ETHOSN] Upgrade NPU driver stack to v22.05 (#11759)* [ETHOSN] Upgrade NPU driver stack to v22.05In updating the driver stack to v22.05 some additional things neededchanges:* Prevent split being offloaded to the NPU which is not supported in  v22.05.* Removes compile algorithm configuration option since this was removed  in v22.05. Versions before v22.05 will use the default option.* Managing some API changes.* Updating network compile hashes.* Updating expected error message for overall scale bounds check.Change-Id: I09343c398a1f47dec44e135ff8252a6315a9b63f* fix decorator evaluation orderChange-Id: Ib1a34093b4011bdc20fca47d474eb1786218de98* Return none if version doesn't existFor some reason PyTest evaluates the second skipif decorator evenif the first one marks the test to be skipped. Thus, meaning testcollection fails when we want to check the version. The workaroundis to return None when the version is not available.Change-Id: I7cdd8cc70a9ee3c193e9a900f1011829538d975b* Update resnet hash after rebaseChange-Id: I7555c4a4d7db4f6c7aa8d476e39277fc5cba2f0d	5
Replace new url for Stable Airflow Docs (#15169)`https://airflow.apache.org/docs/stable/` -> `https://airflow.apache.org/docs/apache-airflow/stable`	2
[AIRFLOW-4805] Add py_file as templated field in DataflowPythonOperator (#5451)	5
use caffe2.python.onnx.backend instead of onnx-caffe2 (#418)	1
use sizevar when convert any to tir (#8555)	1
[Fix][Runtime] Use flatBuffersBuffer_ in EdgeTPURuntime::Init() (#8034)* Use flatBuffersBuffer_ in EdgeTPURuntime::Init()* Specify target_runtime for tflite_runtime.create()* Add a comment for describing the dependent TF version	1
[TIR] compact buffer region (#10557)	5
Log exception in local executor (#21667)	2
Fix celery flower port allocation	0
Enhance CLI Test command to accept a JSON-formatted dictionary of params that can be added to a task's params dict.The CLI-provided params will overwrite params of the same name defined in the task definition if a key conflict occurs. This change will allow us to provide parameters to a DAG at runtime that are specific to a 'test' command run.	1
Fail early before running invalid dynamic graphs (#5856)* fail early before running invalid dynamic graphs* fix an issue with the VM comment	0
Sort lists, sets and tuples in Serialized DAGs (#14909)Currently we check if the dag changed or not via dag_hash.The problem is since the insertion order is not guaranteed, it producesa different hash and hence results in a DB write unncessarily.This commit fixes it.	0
Update python version to 3.7 contributing.rst (#20751)	5
Send Celery tasks from main process when sync_parallelism is 1 (#9253)In attempting to debug some other behaviour I discovered that we spawn a"pool" of 1 process (main process, plus another) -- which makes ithard to use a debugger against.This changes it so that if a single process is configured that it isjust run directly, preserving the ability to step through with adebugger	0
Small fixes on the TabularConnection (#24874)	0
PR to add 'files' to template-fields in EmailOperator class (#12428)	1
Mask value if the key is ``token`` (#16474)Some connections (including the databricks connection) use the key 'token' in the 'extra' field (this has always been the case). Including it here so that these sensitive tokens are also masked by default.The prior implementation just masked all of the 'extra' json: "XXXXXXXX" if conn.extra_dejson else None https://github.com/apache/airflow/blob/88199eefccb4c805f8d6527bab5bf600b397c35e/airflow/hooks/base.py#L78	1
Monkey patching apply_defaults decorator for doc generation	2
Add tags inside try block. (#21784)	1
[AIRFLOW-3917] Specify alternate kube config file/context when running out of cluster (#4859)	1
[TVM PyTorch Integration] libstdc++ CXX11 ABI Compatibility & boolean tensor support (#12232)* first commit* rename* cmake* deprecated* newline* config* config* typo* skip tvm_class* rename* delete ptr* delete ptr* save progress* boolean support* cmake file* polish code* compile config* improving the codes* format* doc&errormsg* zero-cost copy* one step* to ndarray* extra output* delete extra codes* update test* boolean support* strong test* decrease memory copy* polish* reformat* polish* remove redundant importCo-authored-by: juda <yzhou@octoml.ai>	5
[AIRFLOW-1265] Fix celery executor parsing CELERY_SSL_ACTIVEChanged retrieval of celery/celery_ssl_active touse configuration.getboolean()Add correct except block and log warning ifcelery/celery_ssl_active key is left undefinedCloses #2341 from holygits/master	2
Fix spelling (#11401)	0
Adding a CONTRIBUTING.md	1
[AIRFLOW-1937] Speed up scheduling by committing in batchNewly scheduled task instances (state = None, upfor retry)were committed per task instance instead of all atonce.This isn't required as tasks cannot be picked upby anotherprocess in the mean time. Committing in batchsignificantlyspeeds up task scheduling for dags that have a lotof tasks.Closes #2888 from bolkedebruin/AIRFLOW-1937	2
[AIRFLOW-5944] Rendering templated_fields without accessing DAG files (#6788)	2
Navigate directly to DAG when selecting from search typeahead list (#18991)When searching for a DAG, we are given a typeahead list of matching DAGs. When selecting a DAG from the typeahead list, the previous behavior was to execute a search query on that dag_id. Instead, we now go directly to that DAG.	2
Fixing markup logs	2
remove exception handling of autotvm xgboost extract functions (#10948)	1
use the correct claim name in the webserver (#9688)	1
[ARITH] cleanup the indexmod/div on python side (#4028)	4
[Airflow-XXX] add Prime to company listCloses #3424 from davideberdin/master	1
[AIRFLOW-2394] default cmds and arguments in kubernetes operatorCommands aand arguments to docker image in kubernetes operatorCloses #3289 from ese/k8soperator	1
Verify that all providers packages are included (#7793)	1
RFC: initial stab at TorchScript fallback (#7401)* initial stab at TorchScript fallback* make types more flexible* Easy review bits. Thank you @masahi	1
Raise an error on create bucket if use regional endpoint for us-east-1 and region not set (#25945)	1
perf(BigQuery): pass table_id as str type (#23141)	4
Fix typo in err msg (#4251)	2
[AIRFLOW-1203] Pin Google API client version to fix OAuth issueCloses #2296 from criccomini/AIRFLOW-1203	5
[AIRFLOW-2797] Create Google Dataproc cluster with custom image (#3871)	5
[AIRFLOW-3336] Add new TriggerRule for 0 upstream failures (#4182)Add new TriggerRule that triggers only if all upstream do not fail (success or skipped tasks are allowed)	1
tensorflow frontend supports user given outputs (#1913)	1
Removes files from docker-context-files if not used (#13830)In case docker-context files are not used during build, theyshoudl be cleaned just before the build to make sure thatdocker context does not contain extra files here. Otherwisefiles left from previous runs might be in the context and causecache invalidation if you are building the images locally.	5
[AIRFLOW-2887] Added BigQueryCreateEmptyDatasetOperator and create_emty_dataset to bigquery_hook (#3876)	1
Fix building image manifest (was removed by accident with prod img) (#8408)	4
Spark-on-K8S sensor - add driver logs (#10023)	2
check stmt in	5
Add using directives for otherwise hidden virtual functions, NFC (#12561)This silences warning```warning: 'foo' hides overloaded virtual functions [-Woverloaded-virtual]```typically caused by overriding only some overloads of `VisitExpr_` froma set defined in the base class.	1
Change signature of GSheetsHook methods (#7853)	1
[Relay][OP] MultiboxPrior (#1882)* Relay MultiboxPrior Operator* Fix lint* Fix build* Add test for default args	3
Upgrade Postgres client in Docker images (#21631)	2
Deprecate using global as the default region in Google Dataproc operators and hooks (#10772)The region parameter is required for some of Google Dataproc operatorsand it should be provided by users to avoid creating data-intensive tasks in any default location.	5
Bugfix: REST API Variables update endpoint returns 204 No Content (#12321)	5
Merge pull request #154 from jeremyclover/embed-viewAdded logic to allow for an embed parameter in the URL	2
[ARITH] More robust int set checking (#487)	1
Limits CodeQL workflow to run only in the Apache Airflow repo (#11264)It has been raised quite a few times that workflow added in forkedrepositories might be pretty invasive for the forks - especiallywhen it comes to scheduled workflows as they might eat quotaor at least jobs for those organisations/people who forkrepositories.This is not strictly necessary because Recently GitHub recognized this as beinga problem and introduced new rules for scheduled workflows. But for people whoare already forked, it would be nice to not run those actions. It is enoughthat the CodeQL check is done when PR is opened to the "apache/airflow"repository.Quote from the emails received by Github (no public URL explaining it yet):> Scheduled workflows will be disabled by default in forks of public repos and inpublic repos with no activity for 60 consecutive days.  We’re making twochanges to the usage policy for GitHub Actions. These changes will enableGitHub Actions to scale with the incredible adoption we’ve seen from the GitHubcommunity. Here’s a quick overview:> * Starting today, scheduled workflows will be disabled by default in new forks ofpublic repositories.> * Scheduled workflows will be disabled in public repos withno activity for 60 consecutive days.	1
Upgrad oneflow version (#11052)* add relay.f.frontend.fm_oneflow support cnns* support cuda* fix mobilenetv2 and reviews* fix: model without meta info* support eager and yolo, add test* fix: license* add: tutorials* fix: support new graph* fix some comments* refine* fix concat op convert bug* refine* refine* change cuda to cpu* fix bug* fix ci error in tvm* fix pylint check* delete useless file* add skimage package in docker* fix ci error* fix bug* add oneflow fronted test in ci* merge conflict* fix tutorial* try to find error in ci* revert* merge conflict* black oneflow* Delete from_oneflow.py* upgrad oneflow version to 0.7.0* fix* continue push* continue pushCo-authored-by: hhhfccz <hjk1938927583@163.com>	0
Change to correct type in KubernetesPodOperator (#19459)A tiny fix to the type hinting, configmaps is expected to be list and not string (as can be seen in line 242)	5
[Apps] Pin android_camera TensorFlow/Keras dependency version (#12710)At the moment, android camera is installing latest TF and Keraswhich is causing the following issue in CI:```  File ".../keras/dtensor/lazy_variable.py", line 26, in <module>    from tensorflow.python.trackable import base as trackableModuleNotFoundError: No module named 'tensorflow.python.trackable'```This patch fixes the versions in the last known working versionsof both: TF 2.9.1 and Keras 2.9.	1
[AIRFLOW-3124] Fix RBAC webserver debug mode (#3958)	0
[AIRFLOW-XXX] Add Société générale to company list (#4330)	1
Optimize and refactor process_dagThis patch addresses the following issues:get_active_runs was a getter that was also updatingto the database. This patch refactors get_active_runsinto two different functions that are part of DagRun.update_state update state of the dagrun based on thetaskinstances of the dagrun. verify_integrity checksand updates the dag run based on if the dag containsnew or missing tasks.Deadlock detection has been refactored to ensure thatdatabase does not get hit twice, in some circumstancesthis can reduce the time spent by 50%.process_dag has been refactored to use the functionsof DagRun reducing complexity and reducing pressure on thedatabase. In addition locking is now properly workingunder the assumption that the heartrate is longerthan the time process_dag spends.Two new TaskInstance states have been introduced. "REMOVED"and "SCHEDULED". REMOVED will be set when taskinstancesare encountered that do no exist anymore in the DAG.This happens when a DAG is changed (ie. a new version).The "REMOVED" state exists for lineage purposes."SCHEDULED" is used when a Task that did not have a statebefore is sent to the executor. It is used by both thescheduler and backfills. This state almost removes therace condition that exists if using multiple schedulers:due to the fact UP_FOR_RETRY is being managed by theTaskInstance (I think that is the wrong place) is stillexists for that state.	0
Add Kubernetes files to selective checks (#12114)* Add Kubernetes files to selective checksThere are multiple kubernetes-related files that requirerunning the k8s integration tests. This PR adds those to therun_selective_tests* Update scripts/ci/selective_ci_checks.shCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>* Update scripts/ci/selective_ci_checks.shCo-authored-by: Jarek Potiuk <jarek@potiuk.com>* Update scripts/ci/selective_ci_checks.shCo-authored-by: Jarek Potiuk <jarek@potiuk.com>* Update scripts/ci/selective_ci_checks.shCo-authored-by: Jarek Potiuk <jarek@potiuk.com>* Update scripts/ci/selective_ci_checks.shCo-authored-by: Jarek Potiuk <jarek@potiuk.com>Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>Co-authored-by: Jarek Potiuk <jarek@potiuk.com>	5
[PASS] Use likely tag & enable LoopPartition by default (#132)* [PASS] Use likely tag & enable LoopPartition by default* [PASS] Support thread_axis partition* Take IfThenElse branch method* [PASS] Insert branch at the innermost thread scope* [PASS] Select candidates before trying to partition & add test for select* [PASS] Clean code* Fix* Remove print & assert vectorize happens	3
[Torch, QNN] Support quantized mobilenet v3 from torch 1.8 (#7606)* [Torch] support hardsigmoid* qhswish first impl* add qhardsigmoid but the result is not correct* add qmv3 to test* comment fix	0
use list to be safe	1
[AIRFLOW-6193] Do not use asserts in Airflow main code (#6749)* [AIRFLOW-6193] Do not use asserts in Airflow main code	3
Clear next method when clearing TIs (#23929)	5
[TIR][ANALYSIS] Refine side effect analysis. (#5954)	5
Capitalize names in docs (#19893)Co-authored-by: Bas Harenslak <bas@astronomer.io>	2
Fix labels on the pod created by ``KubernetsPodOperator`` (#15492)When using `pod_template_file` or `full_pod_spec`, Pod identifying labelswere not applied to the POD which meant `reattach_on_restart` did notwork for them.```python{"dag_id": "dag","kubernetes_pod_operator": "True","task_id": "task","try_number": "1","airflow_version": 2.0.2,"execution_date": "2016-01-01T0100000100",}```This commit fixes that and makes the labels consistent whether usersuse `pod_template_file`, `full_pod_spec` or just pass params toKubernetesPodOperator.closes https://github.com/apache/airflow/issues/13918	0
[TEAM] siju-samuel -> Reviewer (#1745)	5
Fixes problem with non-iterable data returned by GH API (#12021)The action to cancel workflow switched from deprecatedmethod of retrieving jobs to a 'better' one but it causedsome unexpected failures as some of the job data is not iterable and failures in 'failedJobs" matchingVersion 4.6 fixed the problem.	0
Fix typo in Google Display & Video 360 guideCo-authored-by: michalslowikowski00 <michal.slowikowski@polidea.com>	2
[AIRFLOW-2015] Add flag for interactive runsWe capture the standard output and error streamsso that they're handledby the configured logger. However, sometimes, whendeveloping dags orAirflow code itself, it is useful to put pdbbreakpoints in codetriggered using an `airflow run`. Such a flowwould of course requirenot redirecting the output and error streams tothe logger.This patch enables that by adding a flag to the`airflow run`subcommand. Note that this does not require`--local`.Closes #2957 from yati-sagade/ysagade/airflow-2015	1
Add ROCm docker (#7422)	2
[AIRFLOW-XXXX] Add link for operators guide in first PR message (#7188)	1
Make Grid and Graph buttons consistent. (#23097)	1
[CMSIS-NN] Convert scalar constants to tensor constants (#10100)	5
Fix SQL syntax to check duplicate connections (#13783)closes https://github.com/apache/airflow/issues/13679	0
Merge-friendly output of command hashes for breeze (#24711)We had just one hash generated from all commands in breeze and thatbasically meant that when there were two PRs on two differentcommands in Breeze, they resulted with merge conflict whichshould be solved with `breeze regenerate-command-images`.This change turns the hash output into a multi-command one - i.e.each command has its own hash, which will make it much moremerge-friendly - i.e. if two PRs will work on two different commandsthe rebase should result with merge rather than conflict.	5
Update docker.rst (#17882)This didn't work on my 2019 Macbook 16 inch until I ran the Linux section.Co-authored-by: Jarek Potiuk <jarek@potiuk.com>Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	1
Docstring fixes (#21200)	0
Bugfix: Task docs are not shown in the Task Instance Detail View (#15191)closes https://github.com/apache/airflow/issues/15178closes https://github.com/apache/airflow/issues/13761This feature was added in 2015 in https://github.com/apache/airflow/pull/74 and it was expected to set `doc_md` (or `doc_rst` and other `doc_*`) via `task.doc_md` instead of passing via arg. However, this did not work with DAG Serialization as we only allowed a selected args to be stored in Serialized version of DAG.	2
pass concurrency argument to workers	1
Merge pull request #192 from mistercrunch/altertUpdate utils.py	5
[AIRFLOW-1338][AIRFLOW-782] Add GCP dataflow hook runner change to UPDATING.mdCloses #2326 from yk5/df-python	5
[microNPU] Remove unused import and command stream printing (#10764)This is a follow up to https://github.com/apache/tvm/pull/10695.Change-Id: I7f2dc14826cefea81fe5ff69c6255cdb5dc7f5c0	5
Disable schema  ordering (#9471)	5
AIRFLOW-5258 ElasticSearch log handler, has 2 times of hours (%H and %I) in _clean_execution_date instead of %H and %M (#5864)	5
[RUNTIME][RPC] Update RPC runtime to allow remote module as arg (#4462)	1
Force emulation on ARM platforms for Docker (#17627)The ARM platform (mostly Apple M1) does not yet have full supportin Airflow/Breeze. We will soon start building multi-platformimages, but until this happens, we should force AMD platform,so that M1 MacOS will use emulation of Intel platform.	1
[AutoScheduler] Fix the occasional crash caused by split memo (#6883)	1
Documentation for Google Cloud Data Loss Prevention (#8201) (#9651)	5
BUG: Make sure FoldConstant can inline constants underneath on_device annotations (#9367)After device planning and conversion to ANF we can end up with:  let %x = on_device(constant, device_type=D)  ...  @f(..., %x, ...)where the device D is not the same as the device for the let-expressionitself. (eg D may be the CPU, %x a shape, and @f an allocation primitivethat requires shapes to reside on the CPU). That's all consistent with the conventionthe DeviceAware* visitors expect for recovering device information.However, it means folding constant into @f's call site must both 'see' theconstant underneath the on_device annotation and bring the on_device annotationalong for the ride:  @f(..., on_device(constant, device_type=D), ...)- Make FoldConstant be on_device aware- Clean things up a bit while I'm there.- Setup unit tests specifically for const folding with on_device annotations.- Replacing if __name__ == "main" drivers for units tests with official  incantation as I encounter them.- Don't create on_device(on_device(...))- Logging changes so A/B diffs can focus on just the pass of interest.- Revert Index->DLDeviceType changes in the vm in case they are the cause  of downstream problems.	0
[AIRFLOW-2186] Change the way logging is carried out in few ops- Changed the way logging is implemented in`PostgresToGoogleCloudStorageOperator` and`HiveToDynamoDBTransferOperator`.  Changed`logging.info` to `self.log.info`Closes #3106 from kaxil/AIRFLOW-2186	5
[Tutorial] Autoscheduler on ARM devices (#7326)* arm tuning tutorial* adjustment to get RPC working* fix lint* fix target* integrate Leandros comments* dont request remote in CI* use API from auto_scheduler, not autoTVM and updated comments* make ci-runnable* fix the formatting* address Zhaos comments* full run stats* taking Zhaos comments into consideration	1
Check min docker version (#18869)We have recently introduced a few features (--pull flag for example)in our docker commands, that require newer version of Docker(the `--pull` flag was introduced in 20.10.0). This PR adds checkif the docker version is at least 20.10.0.	2
Refactor monolithic ECS Operator into Operators, Sensors, and a Hook (#25413)	1
Fix indentation for affinities in helm chart (#12288)This PR fixes a bug in the helm chart where custom affinities inthe pod_template_file cause the yaml to fail due to invalid spacing	0
[AIRFLOW-2171] Store delegated credentialsadd logic to google cloud base hook to make it able to createdelegated credentialsCloses #3090 from morgendave/AIRFLOW-2171-create-delegated-credentials	1
Fix small typos in static code checks doc (#24113)- Trivial typo fix in the command to run static checks on the last commit- Update "run all tests" to "run all checks" where applicable for consistency	1
Separate out tests to cater of changes in Python 3.8.8 (#14698)https://github.com/python/cpython/pull/24297 change was included inPython 3.8.8 to fix a vulnerability (bpo-42967)Depending on which Base Python Image is run in our CI, two of the testscan fail or succeed.Our Previous two attempts:- https://github.com/apache/airflow/commit/061cd236deb22567e4de36af11025f028d787989#- https://github.com/apache/airflow/commit/49952e79b04da932242ebf3981883e591b467994We might for a while get different base python version depending on the changes of a PR (whether or not it includes a change to dockerfiler).a) when you have PR which do not have changes in the Dockerfile, they will use the older python version as base (for example Python 3.8.7)b) when you have PR that touches the Dockerfile and have setup.py changes in master, it should pull Python 3.8.8 first.	4
Stabilize flaky test_do_schedule_max_active_runs_dag_timed_out (#18531)Some of the executions of this test return dagrun in Queuedrather than Running state.This test changes approach to get more control over thescheduling methods and only get to SCHEDULED staterather than run the whole scheduler loop.	1
Move DB call out of ``DatabricksHook.__init__`` (#18339)Because of that using `DatabricksHook` in DAG files causes tons of issues as DB calls are made everytime files is parsed.	2
[AIRFLOW-2129] Presto hook calls _parse_exception_message but defines _get_pretty_exception_messageCloses #3094 from feng-tao/airflow-2129	1
[AIRFLOW-5662] Reduce DB queries used to emit pool usage metrics (#6342)* [AIRFLOW-5662] fix incorrect naming and batch db call for scheduler metrics* report used slots value for used slots metrics (was sending occupied_slots)* move global scheduler metrics calculation and reporting outside of pool loop* optimize pool slots metrics report into constant timeCo-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	4
[AIRFLOW-3724] Fix the broken refresh button on Graph View in RBAC UI (#4548)	0
[Runtime] EdgeTPU runtime for Coral Boards (#4698)	1
trivial (#3954)	5
Fix release check script (#19238)There have been some changes to the filename conventions over time  and the release check script was not updated to reflect this.  This PR fixes the script and tries to simplify it a little bit.  In particular, the regex approach used previously was broken by the removal of the `-bin` identifier.  It is easy enough to simply compute all the expected files exactly and look for them, so that is what we do here	2
Migrate Microsoft example DAGs to new design #22452 - winrm (#24140)* Migrate Microsoft example DAGs to new design #22452 - winrm* Fix static checks	0
Use `Lax` for `cookie_samesite` when empty string is passed (#14183)closes https://github.com/apache/airflow/issues/13971The value of `[webserver] cookie_samesite` was changed to `Lax` in >=2.0from `''` (empty string) in 1.10.x.This causes the following error for users migrating from 1.10.x to 2.0if the old airflow.cfg already exists.```Traceback (most recent call last):File "/usr/local/lib/python3.9/site-packages/flask/app.py", line 2447, in wsgi_appresponse = self.full_dispatch_request()File "/usr/local/lib/python3.9/site-packages/flask/app.py", line 1953, in full_dispatch_requestreturn self.finalize_request(rv)File "/usr/local/lib/python3.9/site-packages/flask/app.py", line 1970, in finalize_requestresponse = self.process_response(response)File "/usr/local/lib/python3.9/site-packages/flask/app.py", line 2269, in process_responseself.session_interface.save_session(self, ctx.session, response)File "/usr/local/lib/python3.9/site-packages/flask/sessions.py", line 379, in save_sessionresponse.set_cookie(File "/usr/local/lib/python3.9/site-packages/werkzeug/wrappers/base_response.py", line 468, in set_cookiedump_cookie(File "/usr/local/lib/python3.9/site-packages/werkzeug/http.py", line 1217, in dump_cookieraise ValueError("SameSite must be 'Strict', 'Lax', or 'None'.")ValueError: SameSite must be 'Strict', 'Lax', or 'None'.**```This commit takes care of it by using `Lax` when the value is empty string (``)	1
Add root to tree refresh url (#17633)We were not passing the root to the `/tree_data` api call. Therefore, filtering upstream of a task would be reset during auto-refresh even though root was still defined.	1
[AIRFLOW-XXXX] Fix typo in tests/conftest.py (#7181)	5
Document overriding ``XCom.clear`` for data lifecycle management (#17589)This was added in https://github.com/apache/airflow/pull/17405 but was not documented	2
[Bugfix] Fix broadcast type func with incomplete type (#8438)* [Bug] Fix broadcast type func with incomplete type* fix	0
Update 'rich' to latest version across the board. (#24186)That Also includes regenerating the breeze output images.	3
[TOPI] Average Pool2D Bug. (#3607)* [TOPI] Average Pool2D Bug.Issue - https://github.com/dmlc/tvm/issues/3581* Add uint16 test.	3
import standard library and create aliases	1
Use kerberos_service_name = 'hive' as standard instead of 'impala'.	1
[AIRFLOW-2870] Use abstract TaskInstance for migration (#3720)If we use the full model for migration it can have columnsadded that are not available yet in the database. Usingan abstraction ensures only the columns that are requiredfor data migration are present.	5
Add filter by state in DagRun REST API (List Dag Runs) (#20485)	1
[AIRFLOW-6359] Make Spark status_poll_interval explicit (#6978)	1
Add clear logging to tasks killed due to a Dagrun timeout (#19950)When a DagRun exceeds its `dagrun_timeout` value a few things happen: - The run is marked as `failed` - All unfinished tasks are marked as `skipped` (which causes running tasks to be SIGTERM'd) - A line is logged in the scheduler logs: `INFO: Run $RUN_NUMBER of $DAG_ID has timed-out` This has caused some confusion amongst users as its hard to tell why running tasks were killed without either:1) Cross-referencing the `dagrun_timeout` value with the execution time2) Reading the scheduler logs. This PR adds additional messaging into the task logs when it can be inferred that the task was killed due to a DagRun timeout. I'm not super happy with this implementation (as it kind of duplicates the timeout logic to infer that a timeout occurred) and would really appreciate some advice on other ways we can improve the clarity around timeouts. I'll add some tests for this once I get some feedback on the initial approach.	5
Merge pull request #71 from airbnb/hs2_connHiveServer2 improvements	1
Making depressed button look more depressed.	1
[TensorIR][M2a] Structural Error Reporting (#8121)This PR is part of the TensorIR upstreaming effort (#7527), stage M2a.In this PR, we implemented ScheduleError, an error reporting mechanism for schedule primitives to report user-face error messages, with the functionality of rendering the TIR out in the TVM script syntax.This set of APIs allows future improvement of error location rendering, e.g. more colorful rendering mechanisms like synr does.Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Tristan Konolige <tristan.konolige@gmail.com>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Tristan Konolige <tristan.konolige@gmail.com>	1
Fix broken doc build on Master (#11915)	2
updated Google DV360 Hook to fix SDF issue (#13703)Co-authored-by: Sara Hamilton <sarahamilton@google.com>	0
save (#2015)	5
Remove broken and undocumented "demo mode" feature (#14601)	2
[LINT] Improve robustness in task_lint.sh logic (#3315)The existing RAT ASF license auditing logic ignores any failure in theshell pipeline rather than just the exit code of the final grep.Adjust the logic such that failure of the various tools in thepipeline are not elided away.	0
Constant input attr added to fully connected operation in TFLite frontend (#6228)* Constant input attr added to fully connected operationAn ability to handle constant input attr added to fully connected operationUnit tests amended.* renamed wrap_input to const_input* removed extra spaces	4
hdfs provider: restore HA support for webhdfs (#19711)	1
Add XCom.clear so it's hookable in custom XCom backend (#17405)Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	1
[AIRFLOW-2791] Add Hipages to list of current airflow usersCloses #3632 from arihantsurana/AIRFLOW-2791	1
make shape inference of BatchNorm layout neutral (#301)* make shape inference of BatchNorm layout neutral* refactor to use the axis variable to do BatchNorm shape inference* refactor to use the axis variable to do BatchNorm shape inference* add unittest to the axis param for batch norm shape inference	5
Chart: Allow using krb5.conf with ``CeleryExecutor`` (#16822)	5
Summarize test failures at the end of CI run (#18008)This prints the names of the failed tests, and their error/failuremessages which makes it easier to see the errors, rather than having toexpand all the cases, scroll down to find the error many times.	0
Add tool to automaticaly update status of AIP-47 issues. (#23745)	0
closes apache/incubator-airflow#2586 *Closed for inactivity*	5
Factor out import of common tflite.Operator in tflite frontend. (#5355)* Restructure imports in tflite frontend.These python modules are needed for every tflite file parsed.Factorize out imports of the common most ones.Now that the import of operator is common, asserts can be commonized.Loses 473 lines of duplication.* Only restrict to tflite.Operator	1
[AIRFLOW-7025] Fix SparkSqlHook.run_query to handle its parameter properly (#7677)	2
[LLVM] Remove redundant function CreateBufferVecPtr (#5982)The functions CreateBufferPtr and CreateBufferVecPtr do the exactsame thing, so there is no need for both of them to exist. Thelatter is only used in place, which further suggests that thedistinction is unnecessary.	1
[topi, x86] for 1d loop, make outer loop parallel after split (#6455)Co-authored-by: masa <masa@pop-os.localdomain>	1
prefer consistent casing (#16693)Because SLAs are otherwise capitalized in this docstring, it makes sense to apply that casing consistently.	1
Revert "[AIRFLOW-2715] Use region setting when launching Dataflow templates (#4125)"This reverts commit 79e4faebfdc4396a44a282aab0615f4cca3b69be.	4
[AIRFLOW-5004] Branch/image for CI builds is selected via TRAVIS_BRANCH (#5624)When building CI images you need to know whether you use v1-10-test orv1-10-stable branch (and use corresponding image).Currently the default branch is read from _default_branch.sh. This isnot a problem for master/v1-10-test distinction because those are indifferent "physical" branches, but v1-10-stable and v1-10-test areactually following one-another (v1-10-test moves first andwhen several commits pass, then stable branch follows).Therefore we need to utilise TRAVIS_BRANCH variable - this variableworks in two modes - for PRs it is the branch that the PR is goingto be merged to, whereas for triggered builds it's the branch fromwhich the build was triggered. This is perfect for us to determinewhich image should be used during build.(cherry picked from commit 0c6c3745d14479a0dea42c02ef8d01e99fd45b32)	1
Fix issue mutating if expressions (#2601)	0
[AIRFLOW-XXX] Pin version of mypy so we are stable over time (#6198)mypy 0.730 was just released and started breaking changes in our testsuite. So that we don't start breaking with no changes on our side Ihave now pinned the version of mypy that we use	1
New boostrap theme	1
Speed up `dag.clear()` when clearing lots of ExternalTaskSensor and  ExternalTaskMarker (#11184)This is an improvement to the UI response time when clearing dozens of DagRuns of large DAGs (thousands of tasks) containing many ExternalTaskSensor + ExternalTaskMarker pairs. In the current implementation, clearing tasks can get slow especially if the user chooses to clear with Future, Downstream and Recursive all selected.This PR speeds it up. There are two major improvements:Updating self._task_group in dag.sub_dag() is improved to not deep copy _task_group because it's a waste of time. Instead, do something like dag.task_dict, set it to None first and then copy explicitly.Pass the TaskInstance already visited down the recursive calls of dag.clear() as visited_external_tis. This speeds up the example in test_clear_overlapping_external_task_marker by almost five folds.For real large dags containing 500 tasks set up in a similar manner, the time it takes to clear 30 DagRun is cut from around 100s to less than 10s.	2
Fixed repo change for llvm-9 to resolve missing dependency issue when building images with llvm enabled (#3826)	0
[microTVM][ARM] Enable tests that were skipped unintentionally (#12223)* fix bug to enable tests* fix import issue	0
Fixes treatment of open slots in scheduler (#9316) (#9505)Makes scheduler count with number of slots required by tasks.If there's less open slots than required, a task isn't taken to a queue.	1
Operator help code optimisation (#18571)	1
Update INTHEWILD.md (#12129)Added Everis to INTHEWILD.md	1
[RFC] [VTA] [TSIM] Enabling Cycle-Accurate Hardware Simulation for VTA #3009 (#3010)* merge files* move verilator to the right place* change name to tsim* add default rule to be build and run* add README for tsim* Update README.md* add some structural feedback* change name of VTASim to VTADPISim* more renaming* update comment* add license* fix indentation* add switch for vta-tsim* add more licenses* update readme* address some of the new feedback* add some feedback from cpplint* add one more whitespace* pass pointer so linter is happy* pass pointer so linter is happy* README moved to vta documentation* create types for dpi functions, so they can be handle easily* fix pointer style* add feedback from docs* parametrize width data and pointers* fix comments* fix comment* add comment to class* add missing parameters* move README back to tsim example* add feedback* add more comments and remove un-necessary argument in finish* update comments* fix cpplint* fix doc	2
[METAL] use 32bit indexing for metal until we have a bound adapted pass (#462)* [METAL] use 32bit indexing for metal until we have a bound adapted pass* fix lint	0
Fix deleting of zipped Dags in Serialized Dag Table (#18243)The file locations of DAGs in zipped folders are not correctly listed when removing deleted dags fromserialized dag table thus the delete query for deleting deleted dags from serialized DAGs is deletingdags in zipped folders. Likewise DagCode.remove_deleted_codeThis PR fixes it by listing all the file paths as stored in SDM so that the delete query will work properlyCo-authored-by: Jed Cunningham <66968678+jedcunningham@users.noreply.github.com>	1
[AIRFLOW-6566][AIRFLOW-4029] Replace uses of imp still left with importlib. (#7174)	2
Add missing menu access for dag dependencies and configurations pages (#17450)	5
[AIRFLOW-1028] Databricks Operator for AirflowAdd DatabricksSubmitRun OperatorIn this PR, we contribute a DatabricksSubmitRun operator and aDatabricks hook. This operator enables easy integration of Airflowwith Databricks. In addition to the operator, we have created adatabricks_default connection, an example_dag using thisDatabricksSubmitRunOperator, and matching documentation.Closes #2202 from andrewmchen/databricks-operator-squashed	5
[µTVM] Try to fix qemu hangs in the CI #7590 (#7769)* Try to fix qemu hangs in the CI. * Remove __pycache__ directories only underneath checked-in   subdirectories to hopefully avoid long find runtime.* try just removing the check	4
Cleanup `BranchDayOfWeekOperator` example dag (#24007)* Cleanup BranchDayOfWeekOperator example dagThere is no need for `dag=dag` when using context manager.	1
Switch to GitHub Container Registry by default (#16586)Yesterday GitHub moved Github Container Registry toGeneral Availability status. We are prepared to switch and testedit before, so this PR attempts to switch to it.	3
[bugfix] retry msg	1
[TIR] Make conversion from Integer to int64_t explicit (#12010)* [TIR] Make conversion from Integer to int64_t explicit* Fix compilation errors* Fix compilation issues in cpptest* Fix SPIRV compilation errors	0
Update `is_floating_point` to handle bfloat16 (#7133)* Add div_ and is_floating_point operators* Add handling of exprs to op, update tests* Properly handle bfloat16 in is_floating_point* Revert test changes* revert whitespace changes	4
Fix markdown error in Airflow Readme (#25120)The new markdown-lint is a bit more picky about headeers in markdown	1
[DOC] Doc redirection (#119)* [DOC] Doc redirection* fix setup url	1
Better logging for the scheduler	2
Order bug report fields by importance (#19990)* Order bug report fields by importance* Move Airflow version dropdown to top	4
[Relay] Fix Partial Evaluator, Add stricter checking for CheckWellFormed (#3749)* aot* save* save* fix test* remove vta changes* lint	4
Expose tvm.ndarray.empty in doc. (#1125)Expose tvm.ndarray.empty which has already been implemented, just not yet documented.	2
Fix sphinx add_stylesheet deprecation warning (#8627)See https://www.sphinx-doc.org/en/master/extdev/appapi.html#sphinx.application.Sphinx.add_css_file for more information.	5
[FRONTEND][TENSORFLOW] Enhancements. (#1923)* [FRONTEND][TENSORFLOW] Enhancements.* Generalize the shape with explicite argument.* Supported entire range of mobilenet_v2 models.* Cast op updated to latest tensorflow.* Documentation updates.* CheckNumerics op handling without exception.* Test data from tensorflow official releases.* * CI error.* * self review* * Enhanced reshape handling.* * docs.* * tutorials* * review comments.* * review.	2
Add migration guide for CLI commands (#10078)	1
Add Kubernetes cleanup-pods CLI command for Helm Chart (#11802)closes: https://github.com/apache/airflow/issues/11146	0
[runtime] Improved log information with function signature (#10326)This PR introduces a function signature printer in the `TypedPackedFunc` part, so that the log information in `detail::unpack_call` will be more complete. This PR allows users to obatin the original function signature when the `detail::unpack_call` fails.	0
skip entrypoint load if provider has already been loaded from local source (#13245)	1
Fixes rat-check pre-commit in case Airflow is added as subrepo (#10347)In case Apache Airflow directory is added as subrepo, a new.gitrepo file is created in the Airflow sources. When you try torun pre-commit checks, the RAT check fails in this case.Adding it to .rat-excludes fixes the problem	0
Fix Markdown escape in UPDATING.md (#10010)	5
Added start_date initialization for DagRun creation within schedule_log(self, dag_id)	2
Add 2.3.0rc1 to issue templates (#23288)	0
Fix optimize	0
[VERSION] Version for v0.8 cycle (#6615)	5
Fix pylint issues - broken master (#13427)	0
fix cpp deploy (#468)	0
[AIRFLOW-XXX] Improve the PubSub documentation (#6511)	2
[RUNTIME][OPENCL] Create program lazily when the program is built (#1408)	1
Simplify flash message for _airflow_moved tables (#23635)Co-authored-by: Jed Cunningham <66968678+jedcunningham@users.noreply.github.com>	1
Fixes for master rerun	1
Remove the docker timeout workaround (#18872)	1
added check for unicode type before decoding to fix a decoding bug	0
[AIRFLOW-XXXX] Adds .mailmap to coalesce commits by person in the shortlog (#6879)	2
[AIRFLOW-3447] Add 2 options for ts_nodash Macro (#4323)	1
Add @slow decorator to run tests on `main` (#10057)* Add @slow decorator to run tests on `main`This adds the infrastructure discussed in https://discuss.tvm.apache.org/t/rfc-ci-skip-slow-tests-on-prs/11910, but without affecting any tests. As we investigate reasons behind [slow tests](https://gist.github.com/driazati/e009f09ff44c6bc91c4d95a8e17fd6f1) in CI, this decorator will allow us to move these to run only on `main` and not PRs after checking with all concerned parties.* cleanupCo-authored-by: driazati <driazati@users.noreply.github.com>	1
[REFACTOR] copy DMLC headers, move operator to example (#20)	1
[Target][TVMC][UX] Avoid creation of dummy Target objects in TVMC (#9662)* [Target][TVMC][UX] Avoid creation of dummy Target objects in TVMC* nit fix	0
[AIRFLOW-2205] Remove unsupported args from JdbcHook docJdbcHook's docstring has unsupported argumentsand unimplemented feature description.This PR fixes them and adds JdbcHook to the API reference.	5
[Test][Relay][Pass] Add test case for lambda lift (#4317)	3
Make ElasticSearch Provider compatible for Airflow<2.3 (#22814)`ti.map_index` is not released yet and even once it is released in 2.3, we still want this provider to be backwards compatible, this fixes it.	0
[TOPI] Add ops compute (#323)* [TOPI] Add ops computeRemove 'compute' and add assert for safetyAdd documentfix lintfix softmax* fix batch norm	0
[AIRFLOW-3339] Correctly get DAG timezone when start_date in default_args (#4186)	5
[microNPU][5] Convert Proposals to te.Schedules (#10062)* [microNPU][5] Convert Proposals to te.SchedulesChange-Id: I6771578f1007b8fea02e2dec7d0c797a6ef6aa5e* FixesChange-Id: Id062ca7793656be4e870ac48ba41a34aa83276d2* Fix testChange-Id: Ib0fd55b99459c26425e1805df19d12367244e1b0	3
Fxing MyPy issues inside airflow/providers/qubole (#20625)	1
[AIRFLOW-1744] Make sure max_tries can be settask.retries can be False. Which is not acceptableforand integer field.Closes #2713 from bolkedebruin/AIRFLOW-1744	1
Fix the docstrings (#22497)I think PubSubHook is using gRPC but not REST.	1
[AIRFLOW-1807] Force use of time zone aware db fieldsThis change will check if all date times being stored areindeed timezone aware.	5
Move setup properties out of setup.py in to setup.cfg (#12417)yI've moved all the ones that are "static" -- any form of dynamic orinterpolated values are left in setup.pyIf a value is passed as n kwrg to setup and in setup.cfg, the kwargwins out.The ./build/bin content only depends on the version of tools used(helm//kind/kubectl) and it does not depend on setup.py norsetup.cfg	5
[AIRFLOW-4857] Add templated fields to SlackWebhookOperator (#5490)	1
[GraphRuntime] Support parameter out in the graph runtime debug (#4598)* [GraphRuntime] Support parameter out in the graph runtime debug* Dummy commit to trigger build	0
Change target string to Target object in the TE compiler and interpreter (#8835)* # This is a combination of 2 commits.# This is the 1st commit message:Initial changes# This is the commit message #2:Ftarget string -> Target object works!* Fix remaining target strings* fix bad rebase* Fix typo* 1 more bad rebase fix* Lint* typo* Forgot to commit this* Add TargetStrHash and Map<Target... to std::unordered_map<Target... conversion fn* Passing most tests, yay* remove some comments* lint* target-str-to-target-object* Respond to change requestsCo-authored-by: Jared Roesch <roeschinc@gmail.com>	4
Improvement in task documentation capabilities	2
[AIRFLOW-3698] Add documentation for AWS Connection (#4514)	2
[AIRFLOW-XXXX] Fix path in kubernetes.rst  (#7594)	0
[microNPU] Adding a option to enable striping (#11263)This commit adds a cascader option to enablestriping explicitly.When doing so fixed a bug that is associatedwith block config selection, that will betriggered when striping is disabled.Co-authored-by: Elen Kalda <elen.kalda@arm.com>	5
Move perf_kit to tests.utils (#10470)Perf_kit was a separate folder and it was a problem when we tried tobuild it from Docker-embedded sources, because there was a hidden,implicit dependency between tests (conftest) and perf.Perf_kit is now moved to tests to be avaiilable in the CI imagealso when we run tests without the sources mounted.This is changing back in #10441 and we need to move perf_kitfor it to work.	1
[CODEGEN][LLVM] Cache packed func ptr, lift alloca (#2070)	5
Fix inplace. Only permit shared when shape and dtype is the same (#45)	0
Merge pull request #525 from airbnb/hive_metastore_thrift_table_existsadd function to check for table existence	1
[AutoScheduler] Relay integration : Task extraction (#6710)* add task extraction* fix evo search* fix tests* fix test* fix docstring* fix docstring* update workload registry* fix warning* fix test* fix fallback* fix lint* fix tests	3
Removes duplicated lines from generate constraints instructions (#16984)	4
[Vulkan] Rewrote PointerValueTypeRewrite transform (#8528)* [Vulkan] Rewrote PointerValueTypeRewrite transformIn C-style codegen, pointer types can be freely cast between scalarand vectorized types (e.g. `float16x4* <-> float16*`).  In SPIR-V,these are separate types, and no such casting is allowed.  This waspreviously handled by having a special-case for `Ramp(base, stride=1,lanes)` in the codegen.  That method didn't cover all possible cases,including Broadcast nodes used as indices.PointerValueTypeRewrite previously re-wrote the AllocateNode andparameter pointer types, but didn't update the Load/Store node.  Thischange tracks which variables can be updated to a vectorized type, andthen updates all references to those.  This includes removing the`RampNode`, as the vectorization is then included as part of thevariable type.* [StorageRewrite] Updates as recommended in review.- Added explicit TODO(Lunderberg) for follow-ups- Pass `checker.info_map_` instead of `checker` to  `VectorTypeRewriter`* [Vulkan] Allow for pointer rewrites that change base type.A single memory allocation may have more than one type of data storedwithin it.  This allows the PointerTypeRewrite pass to recognize if afunction only uses the pointer as a particular base type.  This wasn'tan issue in C-based codegen, but is required for Vulkan.  Since Vulkanshaders do not permit type-casting, the cast must be done when passingthe pointer argument into the shader.Co-authored-by: Eric Lunderberg <elunderberg@octoml.ai>	5
Refactor `DatabricksJobRunLink` to not create ad hoc TaskInstances (#22571)	1
Check that edge nodes actually exist (#24166)	5
[TIR] Minor fix to tensor intrin description (#12356)	0
[COMMUNITY] @liangfu -> committer (#5460)	3
Improve test coverage of task_command.py FIXES: #15524 (#15760)	0
allow annotation info for relay var (#8000)	5
[AIRFLOW-611] source_format in BigQueryBaseCursorCheck source_format in BigQueryBaseCursorThe edits to `bigquery_hook.py` are made to`BigQueryBaseCursor`.Closes #1873 from Jalepeno112/bug/AIRFLOW-611	0
[AIRFLOW-5285] Pylint pre-commit filters out pylint_todo files (#5884)* [AIRFLOW-5285] Pylint pre-commit filters out pylint_todo files	2
Note about CodeGenC's Range of Use (#866)	1
[DOCS] Improve docs naming, fix docs warnings	2
[AIRFLOW-5284] Replace warn by warning (#5881)	2
Fix pre-upgrade check for rows dangling w.r.t. dag_run (#22850)Some migrations for 2.3.0 add keys to TI and DR.We have a check that purges any rows that can't be mapped to a DR.But it doesn't work correctly. It does DELETE FROM USING dag_run; but this is an inner join so if the dag run isn't there the rows won't be deleted.Instead we can do DELETE FROM WHERE NOT EXISTS. This has a happy side effect of letting us remove some dialect-specific code.This PR does not add a check for dangling w.r.t. TI -- that is deferred for a later PR.	1
[TIR][Schedule] Change BufferIndexType enum in python side to string (#10737)This is a follow-up of #10538 to use string instead of enum in python side.	1
Fix mypy in providers/grpc and providers/imap (#20651)	1
[BugFix][TOPI] Fix the integer overflow problem of the scatter_nd op. (#8415)* Fix the integer overflow problem of the scatter_nd op.* Fix scatter_nd's crash problem:1. Existing scatter_nd cuda implementation has a very large bound,   which could overflow int32 range when input tensor shape is   large enough;2. The overflow could cause the if statement always evaluate to   true, thus conducts invalid memory accesses;3. We fix this problem in this commit by reducing the bound, the   original large bound is not only unnecessary, but also degrading   the performance; With this fix, scatter_op's performance improves   100x on some cases.Co-authored-by: wenxizhu <wenxizhu@tencent.com>	1
[AIRFLOW-5614] Enable Fernet by default (#6282)	0
[Vulkan] Corrected typo in Vulkan capability error messages. (#8187)Co-authored-by: Eric Lunderberg <elunderberg@octoml.ai>	5
Minor cleanup on Celery config (#21880)This rewords the description and changes the type of``worker_enable_remote_control`` and sets a default for``worker_prefetch_multiplier`` instead of relying on fallback.	1
[MetaSchedule] Fix autoinline for single const consumer block (#12668)fix autoinline and add test	3
Closes apache/incubator-airflow#2953 *No movement from submitter*	4
Improve handling server errors in DataprocSubmitJobOperator (#11947)* Improve handling server errors in DataprocSubmitJobOperator* fixup! Improve handling server errors in DataprocSubmitJobOperator	5
add auto refresh to dags home page (#22900)* add auto refresh to dags home page* fix lint errors* fix lint* stop refresh when page is not focused or no active dag runs. change css for layout* remove margin for refresh switch* Update airflow/www/static/css/main.cssCo-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>* Update airflow/www/static/js/dags.jsCo-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>* Update airflow/www/static/js/dags.jsCo-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>* fix text case* Update airflow/www/static/js/dags.jsCo-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>* add comment on refresh interval* refactor last dag run handler date updateCo-authored-by: Brent Bovenzi <brent.bovenzi@gmail.com>	5
[Relay][Quantization] Fix duplicated simulated quantization (#2803)	0
[ETHOSN] Minor corner case fixes (#11218)Minor issues in corner cases from static analysis and a code standardviolation fix.	0
[AIRFLOW-2244] bugfix: remove legacy LongText code from models.pyCloses #3151 from johnarnold/settings_guard	1
[VTA] Runtime refactor to allow for non-shared memory FPGAs (e.g. F1) (#3554)* updated runtime to support non-shared memory FPGAs for instruction and micro-op kernels* adding driver-defined memcpy function to handle F1 cases* refactor to include flush/invalidate in memcpy driver function* update tsim driver* bug fixes* cleanup* pre-allocate fpga readable buffers to improve perf* fix* remove instruction stream address rewrite pass for micro op kernels* fix:* white spaces* fix lint* avoid signed/unsigned compilation warning* avoid signed/unsigned compilation warning* fix* fix* addressing comments* whitespace* moving flush/invalidate out of memmove* clearnup* fix* cosmetic* rename API* comment fix	0
Standardize DynamoDB naming (#20360)* Standardize DynamoDB naming	5
[microNPU] Allow constants to be given as input to an operator (#9515)* [microNPU] Allow constants to be given as input to an operatorCurrently the expectation is that all constants need to be encoded,however, this is not always the case for scalar inputs. This PRensures that constants that don't need encoding are not treatedlike encoded constants by the EncodeConstants pass.Change-Id: I79cf4aa10d01c4ae9ce9cdafb6f21ebb2d028126* address commentsChange-Id: I67b61a2d2f67de25c47d2ace0e3a22c59ba8ea15	4
Add More Shape Functions (#4179)* Add shape functions* Fix get_const_tuple* Fix cpplint* Fix pylint* Fix pylint* rebase and fix* Check Any for infer type* Fix expand_dim shape func for zero rank input* Fix pooling infer type* Address comment* Register layout transform attr	1
Upgrade ramaining context file to typescript. (#25096)* Upgrade timezone to typescript.* Update props type.	5
[AIRFLOW-865] Configure FTP connection mode (#4535)	5
[RUNTIME] Move Map into runtime (#7570)* [RUNTIME] Move Map into runtimeThis allows us to use Map to store parameters needed at runtime.* node.{Array|Map} -> runtime.{Array|Map}* missed some renames	1
[CI] Limit number of threads in all jobs (#5815)	5
Remove duplicate docs for check-hooks-apply pre-commit (#12973)	1
Extract common date log logic in _run_raw_task (#9512)Co-authored-by: Felix Uellendall <feluelle@users.noreply.github.com>	1
Adding nose to reqs	1
clean up default_conn_name and conn_name_attr	4
use basestring (py3 compatible)	1
[CI] Update ci-lint to use the latest image that contains clang-format (#5568)	3
Update CONTRIBUTORS.md (#8837)TVM is no longer in the Apache Incubator; moving mentors to the end of the doc.	2
Remove k8s dependency from serialization (#10831)Ensures that airflow can run without downloading theKubernetes python client	1
updated official docker images in README (#10579)	2
Migrate graph js (#15307)* move graph js to its own file* remove some eslint-disable* keep node update	5
[AIRFLOW-3560] Add DayOfWeek Sensor (#4363)* [AIRFLOW-3560] Add WeekEnd & DayOfWeek Sensors* Change to using Enum* Fix Docstring* Refactor into a Single Sensor	4
PostgresHook: deepcopy connection to avoid mutating connection obj (#15412)Co-authored-by: Jordan Zhang <jorzhang@justin.tv>	1
[Collage] SubGraphs (#11981)* [Collage] SubGraphsSee https://github.com/apache/tvm-rfcs/blob/main/rfcs/0062-collage.md.Collage works in units of 'sub-graphs', which are potential partitions of theoverall Relay model. This PR introduces SubGraph (an arbitrary partitioning, withoutany implication about how it is to be represented), it's companion SubSubGraph(implying a representation as a function), and some supporting odds 'n ends.* - make Integer <-> size_t conversion explicit- make 'Compiler' name explicit* - fix namespace ambiguity* - review comments	0
Update code examples from "classic" operators to taskflow (#25657)Co-authored-by: Josh Fell <48934154+josh-fell@users.noreply.github.com>Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	1
Fix missing cublas libraries (#1281)	0
Added Clarity AI to INTHEWILD.md (#25091)	1
removed unused seek + flaking	1
[Frontend][MXNet] Change mxnet graph traversal from recursion to iteration (#2007)	4
Add date support to MySQL to GCS operator	1
Fix handling of deadlocked jobs- Raise an error when a backfill deadlocksDeadlocked backfills didn’t raise AirflowExceptions, soSubDagOperators didn’t recognize that their subdagswere failing.- Fix bug with marking DagRuns as failed- Let SchedulerJob mark DagRuns as deadlocked when thereare no TIs available; other deadlock metrics depend on TIs- Adds unit tests.	3
tMaking the gantt chart clickable	2
[Relay] Extract dataflow matcher data structure into header (#8774)* extract dataflow matcher data structure into a header file* lint* lint	2
[AIRFLOW-2524] More AWS SageMaker operators, sensors for model, endpoint-config and endpoint (#4126)	5
Fixing a few doc building warning	2
[TEAM] yzhliu -> committer (#1509)	5
Support for dicts and list in operators template_fields	1
[AUTOTVM] TOPI integration for ARM CPU (#1487)	5
Fix MyPy issues in ``airflow/macros`` (#20613)* Fix MyPy issues in ``airflow/macros``**Before**:```root@57b2ac1779ad:/opt/airflow# mypy --namespace-packages airflow/macrosairflow/macros/__init__.py:83: error: Argument 1 to "diff_for_humans" of "DateTime" has incompatible type "Optional[datetime]"; expected "Optional[DateTime]"        return pendulum.instance(dt).diff_for_humans(since)                                                     ^Found 1 error in 1 file (checked 2 source files)```**After**:```root@57b2ac1779ad:/opt/airflow# mypy --namespace-packages airflow/macrosSuccess: no issues found in 2 source files```* Update __init__.py	5
Improve documentation	2
Update dags.html	2
Remove workaround for docker-compose-failures (#18539)Long time ago we had unknown docker-compose failures that returned254 exit code. This has long been improved by decreasing memorypressure for CI dockers and healthiness checks and is nolonger needed.	2
Upgrade `pip` to 22.1.1 version (just released) (#23854)	5
Kick mirroring	5
Use compat data interval shim in log handlers (#21289)	0
[AIRFLOW-3478] Make sure that the session is closed (#4298)	1
add missing narrow down of index within conditions (#11942)	1
Development PR template target issue if exists (#8524)	0
Fix case for PyPI in docs (#12364)`PyPi` -> `PyPI`	2
[NNVM][TENSORFLOW] Mobilenet support. (#1335)	1
Fixing tests after commenting out docker example	2
enable shape inference with hint func (#84)	5
[Bugfix]  fix the bug that occurs when the test_pass_ctx_exception() is (#9774)tested separately.In the batch test ,cause a previous function will specify the value ofPassContext.current() as None,so tests the test_pass_exception() will pass.but when testing it individually ,the result of PassContext.current() isa [] instead of None,it will not pass, this may happen when using theoption of "pytest -n 4"	3
[Relay] Add Rsqrt to SimplifyExpr (#12363)* Add Rsqrt to SimplifyExpr* fix unit tests	3
Uses current sources when running k8s tests (#17289)There was a bug in our CI - Kubernetes tests were executed runninglates ghcr.io image, rather than the image built from sources ofthe current PR.This PR fixes it by correctly using the PR commit as tag of theimage used as base image for kubernetes tests.	3
Merge pull request #419 from jason-z-hang/zz_fix_round_timeFix utils.round_time() bug	0
[QNN] Concat - Refactoring to C++ (#3819)	4
[Relay] Add compiler pass tutorial docs (#2746)* Add Relay compiler pass tutorial docs* Add Python API hook wrapping step* Incorporate feedback* More doc iteration* Mooooore iteration* Rewrite `runtime.md` in rst	1
Fixes problem where conf variable was used before initialization (#16088)There was a problem that when we initialized configuration, we've runvalidate() which - among others - checkd if the connection is an `sqlite`but when the SQLAlchemy connection was not configured via variable butvia secret manager, it has fallen back to secret_backend, which shouldbe configured via conf and initialized.The problem is that the "conf" object is not yet created, becausethe "validate()" method has not finished yet and"initialize_configuration" has not yet returned.This led to snake eating its own tail.This PR defers the validate() method to after secret backends havebeen initialized. The effect of it is that secret backends mightbe initialized with configuration that is not valid, but there areno real negative consequences of this.Fixes: #16079Fixes: #15685starting	0
Fixes problems with extras for custom connection types (#13640)The custom providers with custom connections can defineextra widgets and fields, however there were problems withthose custom fields in Aiflow 2.0.0:* When connection type was a subset of another connection  type (for example jdbc and jdbcx) widgets from the  'subset' connection type appeared also in the 'superset'  one due to prefix matching in javascript.* Each connection when saved received 'full set' of extra  fields from other connection types (with empty values).  This problem is likely present in Airflow 1.10 but due  to limited number of connections supported it had no  real implications besides slightly bigger dictionary  stored in 'extra' field.* The extra field values were not saved for custom connections.  Only the predefined connection types could save extras in  extras field.This PR fixes it by:* adding __ matching for javascript to match only full connection  types not prefixes* saving only the fields matching extra__<conn_type> when the  connection is saved* removing filtering on 'known' connection types (the above  filtering on `extra__` results in empty extra for  connections that do not have any extra field defined.Fixes #13597	0
[CMSIS-NN] Fixed the case with repeating operands in the QNN binary ops (#11732)	0
[CODEGEN] Concise typecast for threadIdx (#208)	5
Properly set start_date for cleared tasks (#18708)This PR ensures that when we clear task instances, the start_date for the dagrun is set correctly.If the dag_run_state is queued we should set the start_date to None otherwise start_date should beset to timezone.utcnowAlso, in the clear task instances API endpoint, the state of the dagrun is being set to RUNNING onclear. This PR addresses it too.	1
[ARITH] Analyzer CanonicalSimplifier (#2891)	5
Mark task as failed when it fails sending in Celery (#10881)If a task failed hard on celery, _before_ being able to execute theairflow code the task would end up stuck in queued state. This changemakes it get retried.This was discovered in load testing the HA work (but unrelated to HAchanges), where I swamped the kube-dns pod, meaning the worker wassometimes unable to resolve the db name via DNS, so the state in the DBwas never updated	5
Only allows supported field types to be used in custom connections (#17194)* Only allows supported field types to be used in custom connectionsOnly four field types are supported in Connection Forms:String, Password, Integer, Boolean.Previously when custom connections tried to use other fieldtype, ConnectionForm behaved in a very strange way - theconnection form reloaded quickly hiding the actual errorand no error was printed making it next to impossible to figureout the root cause of the problem.With this change, non-supported field types generate Warningand the Connections that use them are not added to the list ofsupported connections.Fixes: #17193	0
Enable configurable git sync depth  (#9094)Enable configurable git sync depth	5
[AIRFLOW-157] Make PR tool Py3-compat; add JIRA command- Adds Python3 compatibility (filter objects can't be indexed)- Adds JIRA command to close issues without merging a PR- Adds general usability fixes and starts cleaning up code	4
[RPC][BUGFIX][BACKPORT-0.6] Fix bug in rpc ring buffer shrink (#5516)	0
[AIRFLOW-4587] Replace self.conn with self.get_conn() in AWSAthenaHook (#5462)	1
[CI] bash.sh, build.sh: add option to set the container name and hostname (#9110)This commit adds option "--name" to bash.sh and build.sh to enable the userspecify the name of the container and set the hostname inside thecontainer as well.This helps the developer idenitfy that they are inside the containerand which container they are working inside.	1
Add docs index to README.md (#16495)	2
Bugfix: Sync Access Control defined in DAGs when running sync-perm (#13377)fixes https://github.com/apache/airflow/issues/13376	0
[AIRFLOW-5472] Fix labels in GCS operator (#6117)	1
[SCHEDULE] Further fix of reduce inline with multiple outputs (#508)	0
point go client mod path to new repo (#9922)* point go client mod path to new repo	1
Fix how we recurse through collection-like template fields.	0
[Relay][AutoTVM] Relay op strategy (#4644)* relay op strategyfix lintbitpack strategybitserial_dense (#6)* update strategy* address commentsfix a few topi testDense strategy (#5)* dense* add biforst; remove comments* address commentRefactor x86 conv2d_NCHWc (#4)* Refactor x86 conv2d* Add x86 depthwise_conv2d_NCHWc* Add back topi x86 conv2d_nchw* Merge x86 conv2d_nchw and conv2d_NCHWc* Minor fix for x86 conv2dfix more strategyAdd x86 conv2d_NCHWc_int8 strategy (#8)* Add x86 conv2d_NCHWc_int8 strategy* Remove contrib_conv2d_nchwc_int8* Fix generic conv2d_NCHWc for int8* Fix topi arm_cpu conv2d_NCHWc_int8update x86 conv2denable specify relay ops to be tuned for autotvmadd cuda conv2d strategyadd conv2d strategy for rocmadd conv2d strategy for hlsadd conv2d strategy for arm cpuadd conv2d strategy for maliadd conv2d strategy for bifrostadd conv2d strategy for intel graphicsclean up and fix lintremove template keys from autotvmremove 2 in the func nameaddress commentsfix* fix bugs* lint* address comments* add name to op implement* Modify topi tests (#9)* Add pooling, reorg, softmax and vision* Add lrn* fix topi test* fix more topi test* lint* address comments* x* fix more tests & bugs* Modify more tests (#10)* Modify tests for bitserial_conv2d, bitserial_dense, bitserial_conv2d_rasp and bnn* Minor fix* More minor fix* fix more test* try to update vta using strategy* fix cpptest* x* fix rebase err* Fix two tests (#11)* change autotvm log format* lint* minor fix* try fix vta test* fix rebase err* tweak* tmp hack for vta pass* fix tutorial* fix* fix more tutorials* fix vta tutorial* minor* address comments* fix* address comments* fix cpptest* fix docs* change data structure name and api* address comments* lint* fix rebase err* updates* fix winograd test* fix doc* rebase* upgrade tophub version number* fix bug* re-enable vta tsim test after tophub is upgraded* fix vta test to use the correct args so the config can be found in tophubCo-authored-by: Yao Wang <kevinthesunwy@gmail.com>	5
[AIRFLOW-XXXX] Fix typo in BREEZE.rst (#7556)Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	2
Doc: Update Helm Chart 1.1.0 Release Date (#17244)We released it on 26th July 2021 instead of 25th	5
Add SGX random engine (#1113)	1
[AIRFLOW-1368] Automatically remove Docker container on exitCloses #2411 from nathanielvarona/docker-operator	2
[AIRFLOW-1277] Forbid KE creation with empty fieldsKE = KnownEvent	1
[AIRFLOW-2645][AIRFLOW-2617] Add worker_container_image_pull_policySet worker_container_image_pull_policy in default_airflow.cfgAs AIRFLOW-2617 added worker_container_image_pull_policy configto the section of kubernetes, but the airflow_default.cfgwas not updated, this PR add worker_container_image_pull_policyto default_airflow.cfg.Closes #3521 from imroc/AIRFLOW-2645	5
Move modules in `airflow.contrib.utils.log` to `airflow.utils.log` (#9395)	2
[AIRFLOW-3479] Keeps records in Log Table when DAG is deleted (#4287)Users will use either API or web UI to delete DAG (after DAG file isremoved):- Using API: provide one boolean parameter to let users             decide if they want to keep records in Log table             when they delete a DAG.             Default value it True (to keep records in Log table).- From UI: will keep records in the Log table when delete records for a           specific DAG ID (pop-up message is updated accordingly).	5
Merge pull request #3189 from tedmiston/updating-doc-grammar-fix	5
Allow using mapped upstream's aggregated XCom (#22849)This needs two changes. First, when the upstream pushes the return valueto XCom, we need to identify that the pushed value is not used on itsown, but only aggregated with other return values from other mapped taskinstances. Fortunately, this is actually the only possible case rightnow, since we have not implemented support for depending on individualreturn values from a mapped task (aka nested mapping). So we insteadskip recording any TaskMap metadata from a mapped task to avoid theproblem altogether.The second change is for when the downstream task is expanded. Since thetask depends on the mapped upstream as a whole, we should not useTaskMap from the upstream (which corresponds to individual taskinstances, as mentioned above), but the XComs pushed by every instanceof the mapped task. Again, since we don't nested mapping now, we can cutcorners and simply check whether the upstream is mapped or not to decidewhat to do, and leave further logic to the future.Co-authored-by: Ash Berlin-Taylor <ash@apache.org>	2
Add DAG cycle test for Label use within Task Groups (#23300)To guard against any future regressions, this PR adds a unit test toensure that a DAG cycle is not detected when using Labels alongsidetasks contained in Task Groups.	1
[AIRFLOW-2003] Use flask-caching instead of flask-cacheFlask-cache has been unmaintained for over threeyears,flask-caching is the community supported version.Closes #2944 from bolkedebruin/AIRFLOW-2003	1
[AIRFLOW-5161] Static checks are run automatically in pre-commit hooks (#5777)	1
Fix SSHExecuteOperator crash when using a custom ssh port* Fix SSHExecuteOperator crash when using a ssh connection with a custom ssh portThe ssh port if not converted to a string makes the SSHExecuteOperator crash.This patch converts the port number to string and fixes problem.	0
Change from dynamic date to fixed date in examples (#18071)If you have a task that runs every week with days_ago(1), then at the time it would kick off the start_date will be yesterday morning but the execution_date will be a week ago. Therefore the dag will not be started as start_date > execution_date.This changes the example dags to use static date because of the above	1
Adding ArangoDB Provider (#22548)* Adding ArangoDB Provider	1
Remove incompatible builds from the matrix	4
[Relay][Text Format] Text Printer Refactor and Debug Printing (#2605)	0
[FRONTEND][TENSORFLOW] Some bug fixes for tensorflow NCHW data_format (#3514)	5
Add SlackAPIFileOperator impementing files.upload from Slack API (#9004)* Added SlackAPIFileOperator* Added usage example in docstring* Added tests for SlackAPIFileOperator, fixed extra line and added missing type hinting in operators/slack.py* Fixed import order for isort* Refactor conn_id for slack_conn_idCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>* Remove # from channel name for default channel nameCo-authored-by: Kaxil Naik <kaxilnaik@gmail.com>Co-authored-by: Mikaël Ducharme <mikaelducharme@effenco.com>Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	4
[AutoScheduler] Propogate global autotvm state to PopenPool workers (#8913)* [AutoScheduler] Propogate global autotvm state to PopenPool workers* Fix* lint	0
[build] Use mold or lld if detected (#10683)This looks for the lld or mold executables when configuring CMake.If found, it sets them as the linker for gcc/clang via -fuse-ld=.Fixes #10679Co-authored-by: Lite Ye <yelite@users.noreply.github.com>	1
[TopHub] Bump the versions (#6837)* [TopHub] Update version* trigger ci	5
Work around change in GH Actions concurrency expression evaluation (#20023)	4
[Relay][Frontend][Onnx] Add support for onnx sequence operators. (#11894)This PR adds support for Onnx sequence operators introduced in opset 11. Specifically I've added converters for `SequenceConstruct`, `SequenceInsert`, and `ConcatFromSequence`, which we found sometimes show up in models exported from Pytorch. For simplicity, I handle these cases by just using Tuples. We may want to consider using the TensorArray ADT eventually instead.	1
Chart: Add support for securityContext (#18249)This adds the ability to set both a global `securityContext` and `securityContext` by deployment,allowing for greater flexibility in configuring how Airflow is run.	1
Strict type checking for provider google cloud  (#11548)	1
[AIRFLOW-XXX] Update list of pre-commits (#6603)	5
[AIRFLOW-6841] Fixed unbounded variable on Mac (#7465)	0
[Relay] Fix bug in transpose_shape_func (#6180)	0
Update chart README with section on Airflow configuration (#13519)	5
Respect "common" options value in breeze sub-commands. (#26264)This lets us run `breeze -v static-checks` and have the sub-command pickup the value from the parent context. If you specify a value for thesubcommand, that is used in place of the global one.(The fact that `-v` was allowed before the sub-command but had no effectcaused me lots of confusion)	5
[RELAY]Frontend darknet (#2773)* [RELAY]Frontend darknet* CI test file updated & CI error fixed* avg_pool pad fix* Changed repo_url and doc formatting	2
Yet more logging improvements	1
Fix docs link for smart sensor deprecation (#21394)We are releasing the deprecation in version 2.2.4, not 2.3.0 likeoriginally planned.	2
add GCP conn type	1
[AIRFLOW-826] Add Zendesk hookCloses #2066 from shreyasjoshis/add-zendesk-hook	1
Extended template_fields_renderers for MySQL provider (#16987)	1
Add dot product support for quantized convolution. (#6445)* Add dot product support for quantized convolution.We added two new intrinsics in: topi/arm_cpu/tensor_intrin.py, namely- mmla4x4: compute a matrix multiplication between tile A(4,4) and tile  B(4,4)- mmla16x4: compute a matrix multiplication between tile A(rows,4) and tile  B(4,16)Then we used those intrinsics in two separate strategies. We added thestrategies in topi/arm_cpu/conv2d_int8.py and implemented the schedulesin topi/arm_cpu/conv2d_gemm.py. In particular:- schedule_conv2d_gemm, when accelerated, packs matrix A, compute GEMM,  and unpack the resulting matrix. This uses the mmla4x4 intrinsic- schedule_conv2d_gemm_hybrid doesn't do any packing on A and C which  are in native form.  This uses the mmla16x4 intrinsicPlease note that for the limitations of `tensorize` we need to padmatrix A in both cases (when dimensions are not multiple of the tilingshape)Change-Id: Id0d818d84ffc458c6dad7983fd350a0f3d5db395* Add back nhwc_spatial_pack strategy as defaultChange-Id: I8b1826a7ae1d742956296e8d157da19955a4942c* Fix linting through BlackChange-Id: Ic74ef5461a90bca9f4d4980a214137e384d5f923* Fix python lintingChange-Id: I5fb8a2ae4467a87bd3470f6b3753c074f9b7cc78* Addressing review commentsChange-Id: I284b1f2c121051e672f548d6c6ee2a3267854e31* Fix black linting issuesChange-Id: I1813b0226b536aedee0dce9eeeba27aa2d95518b* Fixing failing test and adding tests for dot-product compilationChange-Id: Ic040722abd5538fccb85af4de922394c939e7000* Fixing linting and review commentsChange-Id: If09e3baa514c85dc78d3c27c2ac2fa2e01773d89* Fixing black linting and address commentsChange-Id: I857b28b6f9b23307d8c1eebc509de6ad2783c756* Address review commentsChange-Id: I63d1a639d4a72abeb33148fd2868cd356ef84122	4
[ConvertLayout] Keep span in ConvertLayout (#7895)	5
[AIRFLOW-1352][AIRFLOW-1335] Revert MemoryHandler change ()[]Revert "[AIRFLOW-1335] Use MemoryHandler forbuffered logging"This reverts commit0d23d30d6812fe1eb3cfb52d2992131cbf028062.Closes #2403 from saguziel/aguziel-revert-mem-logger	4
Separate "public" Dataset class from SQLA model (#25727)Importing all of SQLA can be very heavy weight (slowing import times),and it can also make it harder if libraries want to build on top of theDataset concept.Not to mention that the internal-API/db-isolation AIP should mean wedon't want to import any SQLA models directly in user code.	1
[AIRFLOW-176] Improve PR Tool JIRA workflow- Fix crash when non-integer IDs are passed- Improve workflow by always asking user if they  want to resolve another issue before exiting	0
allows constant param in op construct (#2257)	2
Fix typo in example (#13321)False should not be passed as a string	4
[uTVM] Reset target and wait for runtime initialization on connect. (#5499)* This ensures a clean runtime environment for tuning and evaluating   tasks. * This patch assumes that the code flashed to target executes the ARM   BKPT or RISC-V EBREAK instructions after startup.	4
Increasing License Coverage	3
Docs clarifications	2
Update Ash's github handle (#12403)	0
[ARITH][SCHEDULE] Update schedule to use the new analyzer (#3466)	1
add the link for how to setup rk3399 opencl driver (#827)	1
Clean up task decorator type hints and docstrings (#24667)	2
Render k8s yaml for tasks via the Airflow UI (#11815)This function allows users of the k8s executor to get previewsof their tasks via the Airflow UI before they launchCo-authored-by: Ryan Hamilton <ryan@ryanahamilton.com>Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	1
[AIRFLOW-1671] Add @apply_defaults back to gcs download operatorCloses #2655 from jgao54/bug-fix	0
[AIRFLOW-5426] Adjust import path in Dataproc example (#6033)	5
[DOCKER] Pin torchvision==0.4.1 (#4140)The existing sequence of pip install commands fetches and installstorch==1.0.1.post2 then fetches an unpinned version of torchvision,recent torchvision packages hardwire the specific torch version theydepend on, the overall effect is that we install a pinned torchversion then replace it with whatever version the torchvision packagedepends on.The most recent torchvision==0.4.1 package results in some test casefailures.This patch pins torchvision back to 0.4.0, the most recent versionthat the test suite worked.  Removing the explicit torch installbecause it is implied and pinned as dependency of torchvision.Change-Id: Ib30bf6aed79ff130ea15ef5134fefb0508790574	4
[AIRFLOW-633] Show TI attributes in TI viewShow task instance properties in addition to taskproperties in the task instance view. The primaryreason for this is so that we can see things likethe host a task ran on without opening the logfile (which is huge in the case of long-running/persistent jobs, especially e.g due to theconstant airflow heartbeat). Pagination of the logwould help too but this change is still necessaryand a quicker win.I think ideally we want to only show an explicitsubset of fields, but for now making behaviorconsistent with how task (not task instance)attributes are displayed. Going to merge to opensource once this is merged.Testing Done:- Airbnb production webserver<img width="1200" alt="screen shot 2016-11-15 at11 34 30 am" src="https://cloud.githubusercontent.com/assets/1592778/20324808/dae2861a-ab36-11e6-8bfa-3942ed529856.png">Closes #1886 fromaoen/ddavydov/add_ti_info_to_ti_view	5
Add asctime to spelling wordlist (#13010)	1
[Relay] fix error in ANF (too agressively inline atomic expression and create free variable). (#2665)	1
Add custom handler param in SnowflakeOperator (#25983)	1
Fixing issue #1395: Undefined symbol: cudaGetDevice (#1396)	2
[Relay][Frontend][TF] Fix slice when begin or size is not Const (#4372)* fix slice bug when input is param* use _infer_value rather than _infer_value_simulated	5
[µTVM] Avoid listing links when probing serial ports (#7265)SerialTransport.open() probes automatically the device name based upon agrep regex if a device name is not provided. The code expects to find onlya single device. Currently when it probes for the available serial ports itincludes in the list the device names that are also symbolic links.Since _find_openocd_serial_port() always returns a serial number for agiven serial port (not the device name path) the available device namesare always probed when the openocd flash runner is used.It's not uncommon that device drivers create symbolic links for certainkinds of serial devices, specially those that provide a serial port plusan additional endpoint to program the device attached, like a ST-Linkinterface, etc.As a consequence the current code fails to select the correct device namewhen symbolic links exist and the openocd flash runner is used.That commit changes the probe behavior to avoid listing symbolic links whenprobing the device name for the target serial port.Signed-off-by: Gustavo Romero <gustavo.romero@linaro.org>	1
More robust and re-runnable autocomplete setup in Breeze (#9685)* More robust and re-runnable autocomplete setup in Breeze* Update breezeCo-authored-by: Tomek Urbaszek <turbaszek@gmail.com>Co-authored-by: Tomek Urbaszek <turbaszek@gmail.com>	5
Fix impersonation related bug in bigtable tests (#10521)Co-authored-by: Kamil Olszewski <kamil.olszewski@polidea.com>	3
Fix deprecated warning hvac auth (#15216)Fixes the following Hashicorp Vault (hvac) approle auth deprecation warning:```DeprecationWarning: Call to deprecated function 'auth_approle'. This method will be removed in version '0.12.0' Please use the 'login' method on the 'hvac.api.auth_methods.approle' class moving forward.```	4
Switching to Apache license	5
Fix AIRFLOW_EXTRAS in CI for 2.2 build (#25915)	0
Kubernetes worker pod doesn't use docker container entrypoint (#12766)* Kubernetes worker pod doesn't use docker container entrypointFixes issue on openshift caused by KubernetesExecutor pods not runningvia the entrypoint script* fix* Update UPGRADING_TO_2.0.mdCo-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>* fix UPDGRADING* @ashb commentsCo-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	0
Adding datetil to macros and documenting macros references	2
[AIRFLOW-6014] - handle pods which are preempted and deleted by kuber… (#6606)* [AIRFLOW-6014] - handle pods which are preempted and deleted by kubernetes but not restarted	4
fix import (#1621)	2
fix typo (#12115)	2
Fix format string bugDear Airflow Maintainers,Please accept this PR that addresses the following issues:- [https://issues.apache.org/jira/browse/AIRFLOW-408](https://issues.apache.org/jira/browse/AIRFLOW-408)plypaulCloses #1719 from zodiac/xuanji/fix_format_bug	0
adds ability to pass config params to postgres operator (#21551)	1
Refactor to use iterVar	1
Revert "Print configuration on scheduler startup. (#22588)" (#22851)This reverts commit 78586b45a0f6007ab6b94c35b33790a944856e5e.	4
[QNN][Relay] Fixed bug in quantized conv2d. (#6420)* Fixed bug in quantized conv2d where when kernel size = (1,1)  and strides != (1,1) it would raise size mismatch error.* Added test to check qnn.conv2d with kernel size = (1,1) and  strides != (1,1).	3
fix the description of create_shared (#793)The type of parameter options should be a str list.	2
Remove redundant builtins imports (#11809)These imports are not needed in Python3	2
[AIRFLOW-XXXX] document system tests mechanism better (#7774)	1
[ETHOSN] Support conversion of add to depthwise (#12531)In similar fashion to the conversion of mul to depthwise, this commitconverts add when one input is a constant of shape [1, ..., n] to adepthwise convolution. If neither input is a constant, the add isoffloaded naturally like before.The addition testing has been improved to use pytest features.	3
Add constraint to ensure task map length >= 0 (#21115)	1
Fix trigger dag redirect from task instance log view (#21239)	2
Tests for Docker images in Python (#19737)	2
docs: Update Bigquery clustering docstrings (#11232)	2
[Relay][Frontend][TFLite] Add parser support for squared difference (#4652)* [Relay][Frontend][TFLite] Add parser support for squared difference* fix some error* fix exp_type* add comment	1
Switched cgroupspy to vendored version (#22209)This is part of the effort needed to implement Python 3.10compatibility: #22050	5
[AIRFLOW-3719] Handle StopIteration in CloudWatch logs retrieval (#4516)	2
Adds cpp test for Halide IR cse pass.	4
[CI] Skip some additional tests that are failing in the wheel (#11969)This PR skips some additional tests that are failing in the nightly wheel.	0
Speed up Kubernetes upgrade tests at least 2x (#25159)We do not need to run upgrade kubernetes tests for all pythonversions and all kubernetes versions. It is enough to run themfor the minimum and maximum versions. We already run all k8s testsin main for all executors, so they "generally" work, and itis very, very unlikely that if it works for Python 3.7, and 3.10,it will not work for 3.8 or 3.9 (similarly for K8S version).This will speed up the build at least 2 times.	1
[RELAY][REFACTOR] Mix mode context analysis (#6403)* mix mode context analysis* add uses_gpu decorator for more tests* revert visit counter* relax visit limit* lint* bump visit limit to 19* typo	2
closes  apache/incubator-airflow#1841 *Closing dummy PR*	5
[AIRFLOW-XXXX] Adjust celery defaults to work with breeze (#7205)	1
Bugfix: Entrypoint Import Exception masked by attribute error (#12862)`entry_point.module_name` -- Entrypoint does not have a `module_name`attribute.This commit also makes importlib_metadata conditional as it is notneeded for Py 3.9	5
[ONNX] Update slice to infer attributes when not graph inputs (#6276)* Update ONNX Slice converter to infer slice attributes when necessary.* Linting	5
Sentry before send fallback (#18980)	1
Fix gelu in PyTorch frontend, tighten numerical checks (#5763)Previously, the PyTorch frontend approximated gelu with fastgelu.To provide a more faithful conversion, we implement gelu instead.We also tighten the numerical comparisons between PyTorch andTVM-from-PyTorch to 1e-5. The object detection models need anincreased tolerance of 1e-4 to pass.I had to throw in a few fixes for missing conversions(probably due to working with very new PyTorch).I must admit the GoogLeNet/NasNet test didn't run on my machine,probably due to problems at my end.	0
Enable using custom pod launcher in Kubernetes Pod Operator (#16945)* :tada: Initial commit.* :recycle: Refactoring code.* :bulb: Documenting source code.* :bulb: Documenting source code.* :recycle: Refactoring code.* :bug: Fixing a bug.	0
[Relay] Register compute and schedule for upsampling, with miscellaneous fixes (#2171)	0
[AIRFLOW-2617] add imagePullPolicy config for kubernetes executorCloses #3500 from Cplo/k8sexecutor	5
Add tf parser wrapper, infer shape automatically	5
Fix relay.testing.darknet convert_image (#7667)	3
Updating command to run all tests on the last commit (#16997)The previous command read `./breeze static-check all -- --ref-from HEAD^ --ref-to HEAD`, however the `options` used should be `--from-ref` and `--to-ref`.	1
Check for toolchain when marking reference system tests (#10659)This mimics the behaviour of aot_test_utils.py to ensure the tests don't start running when the toolchain isn't available.	1
use list to be safe	1
[MODULE] support load back of .ll file into llvm module (#183)	2
[Relay] add more function to prelude (#2660)	1
docker new system test (#23167)	3
[QNN] Quantize - Fixing the sequence of lowering. (#4316)	0
[MetaSchedule] Developer Ergonomics Enhancement II (#11727)Follow-up of #11622, per discussion with @Kathryn-cat- [x] Allow using a string `"default"` in `TuneContext` to quickly specify a set of target-specificrules- [x] Enhance detection of `ScheduleFn` in `TuneContext` to make it easier for users to quickly tryout template-driven scheduling on TIR.Next PR:- Add `TuneContext.tune` to allow directly tuning without task scheduler.Co-Authored-By: Kathryn (Jinqi) Chen <65606304+Kathryn-cat@users.noreply.github.com>	1
[M3c][MetaScheduler] Add ReplayFunc Search Strategy. (#9799)* Modify TuneContext, TaskScheduler & SearchStrategy functions.Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>* Retrigger CI.* Add ReplayFunc and EvolutionarySearch strategy.Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>* Fix optional task name.Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>* Remove extra files.* Fix things.Co-authored-by: Junru Shao <junrushao1994@gmail.com>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>	1
[UnitTests] Require cached fixtures to be copy-able, with opt-in. (#8451)* [UnitTests] Require cached fixtures to be copy-able, with opt-in.Previously, any class that doesn't raise a TypeError in copy.deepcopycould be used as a return value in a @tvm.testing.fixture.  This hasthe possibility of incorrectly copying classes inherit the defaultobject.__reduce__ implementation.  Therefore, only classes thatexplicitly implement copy functionality (e.g. __deepcopy__ or__getstate__/__setstate__), or that are explicitly listed intvm.testing._fixture_cache are allowed to be cached.* [UnitTests] Added TestCachedFixtureIsCopyVerifies that tvm.testing.fixture caching returns copy of object, notthe original object.* [UnitTests] Correct parametrization of cudnn target.Previous checks for enabled runtimes were based only on the targetkind.  CuDNN is the same target kind as "cuda", and therefore needsspecial handling.* Change test on uncacheable to check for explicit TypeError	0
Add TVM application extension with WASM runtime (#5892)* Refactor wasm runtime module and resovle conflict errorsSigned-off-by: leonwanghui <wanghui71leon@gmail.com>* Fix some cargo clippy warningsSigned-off-by: leonwanghui <wanghui71leon@gmail.com>	2
[Frontend][Keras] Support nested layers recursively in keras frontend (#7949)* Support nested layers recursively in keras frontend* Fix lint* Fix issue* Fix formatting* Fix unit test	3
Add verify_ssl config for kubernetes (#13516)	5
Fix deprecated default for ``fab_logging_level`` to ``WARNING`` (#18783)`WARN` is deprecated in favor of `WARNING`	2
Centralizing logging level into settings.py file	2
[Relay][VM] Add more passes to VMCompiler (#4058)* [Relay][VM] Add more passes to VMCompiler* Check build config* Add todo	2
Cross Reference XCom in tutorial (#11600)	5
[ONNX] Support importing Conv with missing attributes (#7899)* [ONNX] Support importing Conv with missing attributes* fix removal of attributes ONLY when they are default and for autopad* move comment to the right place	4
Add Paxful to INTHEWILD.md (#21766)	1
Add documentation for CLI command airflow dags test (#8251)	3
[AIRFLOW-6694] Fixed import to print_stuff in kubernetes tests (#7306) (#7334)	3
REST API: add rendered fields in task instance. (#21741)Make task instance rendered template fields available in the REST API.Co-authored-by: Mocheng Guo <mocheng.guo@airbnb.com>	1
[FRONTEND]minor bug fixes (#1632)	0
[Topi] Tensorcore support for Conv3D (#5284)* one weird trick.* Added schedule knob for different workloads.* Initial conv3d tensorcore working.* Added conv3d tensorcore strategy.* Added layout conversion to tensorcore friendly format for conv2d and conv3d.* Add target name check.* Fixed bad names and depthwise check.* Removed duplicated attribute assignment.	4
[BugFix] Fix NeedsMultiLevelTiling by skipping trivial block iterators (#10804)This PR fixes a bug of `NeedsMultiLevelTiling`, which didn't consider the effect of trivial block iterators (iterators whose domains are `[0, 1)`). Such iterators impacts the following analysis by overlargely counting the number of iterators that are not used to index the block read regions, and might lead to the application of multi-level tiling where the rule is supposed not to apply.To fix the problem, we simply skip such trivial block iterators.	0
Add creating_job_id to DagRun table (#11396)This PR introduces creating_job_id column in DagRun table that links aDagRun to job that created it. Part of #11302Co-authored-by: Kaxil Naik <kaxilnaik@gmail.com>	1
add missing colon	1
[AIRFLOW-7087] Rename _execute_helper to _run_scheduler_loop (#7763)	1
Updating the Elasticsearch example DAG to use the TaskFlow API (#18565)	1
[AIRFLOW-3896] Add running command logging back to SSHOperator (#4716)* [AIRFLOW-3896] Add running command logging back to SSHOperatorAdd the SSH command logging back to SSHOperator* [AIRFLOW-3896] Add running command logging back to SSHOperatorChange self.logger to self.log	2
Mark new urrlib3 1.26.12 as "known deprecations" (#25885)We check if there are no unknwn deprecations when we importproviders. The urllibe3 1.26.12 added new warnings.	2
[AIRFLOW-1382] Add working dir option to DockerOperatorAllow the user to specify the working directory tobe used in thecreated container. Equivalent to docker run/create-w.Closes #2419 frombenjaminsims/specify_working_directory	1
[AIRFLOW-1575] Add AWS Kinesis Firehose Hook for inserting batch recordsCloses #3275 from sid88in/feature/kinesis_hookv2	1
[AIRFLOW-XXX] Add WASB Hook (#6189)	1
Add hook_params in BaseSqlOperator (#18718)	1
Remove duplicated log line from `db upgrade` (#9305)Fixes these logs -- we only want one of them    [2020-06-15 12:19:38,673]  3613796 {{airflow.utils.db db.py:610}} INFO - Creating tables    [2020-06-15 12:19:38,673]  3613796 {{airflow.utils.db db.py:565}} INFO - Creating tables	1
[AIRFLOW-6139] Consistent spaces in pylint enable/disable (#6701)	0
Fix a spelling mistake (#128)	0
[AIRFLOW-XXX] Fix  airflow.models.DAG docstring mistakeCloses #4004 from Sambeth/sambeth	2
check for dynamic rank before accessing value (#7414)	5
[ROCm][Auto scheduler] Support Auto scheduler and NHWC convolution on ROCm (#7038)* add nhwc + winograd support to rocm strategy* support rocm hw parameters in search task* run analysis pass for rocm too* run black* pylint fix* use IsGPUTask functionCo-authored-by: Masahiro Masuda <masahi@129@gmail.com>	1
Merge pull request #1175 from airbnb/pep8Let's merge this to get builds working again! Enforcing PEP8	1
closes apache/incubator-airflow#1276 *no movement from submitter*	4
[AIRFLOW-2974] Extended Databricks hook with clusters operation (#3817)Add hooks for:- cluster start, - restart,- terminate. Add unit tests for the added hooks. Add hooks for cluster start, restart and terminate. Add unit tests for the added hooks.Add cluster_id variable for performing cluster operation tests.	3
Fix small typos in docs + constructor	2
add europcar to list of companies using Airflow (#25279)Co-authored-by: aninda bhattacharjee <aninda.bhattacharjee@europcar.com>	1
Making hiveserver2 work in adhoc queires	1
Use Viewer role as example public role (#19215)Currently the sample public role is the `Public` role.  But this role provids no access and still shows the login modal, which makes it seem like the config is not working at all.More intuitive would be to use `Viewer` role in example in the default config because you can at least view the dags.	2
[AIRFLOW-4348] Add GCP console link in BigQueryOperator (#5195)	1
Update tree doc references to grid (#22966)* Update tree doc references to grid* Update docs/apache-airflow/ui.rstCo-authored-by: Jed Cunningham <66968678+jedcunningham@users.noreply.github.com>* Update docs/apache-airflow/ui.rstCo-authored-by: Jed Cunningham <66968678+jedcunningham@users.noreply.github.com>* revert Chart changes. move main grid view* Update docs/apache-airflow/ui.rstCo-authored-by: Tzu-ping Chung <tp@astronomer.io>Co-authored-by: Jed Cunningham <66968678+jedcunningham@users.noreply.github.com>Co-authored-by: Tzu-ping Chung <tp@astronomer.io>	1
[AIRFLOW-5530] Fiix typo in AWS SQS sensors (#6012)	2
AIP-47 - Migrate druid DAGs to new design #22439 (#24207)	1
Workaround docker-compose-v2 env passing (#18887)* Workaround docker-compose-v2 env passingDocker Compose v2 has environment parsing broken in many ways.Until this is fixed, we cannot use env files, instead we mustset all the variables directly, because parsing variables withoutvalues or parsing variables which have empty values is brokenin several ways. Some of the issues are closed but not released,and until this is fixed, some extra code duplication and explicitlysetting all default variables to "" when needed should solve theproblem for both Docker-Compose v1 and Docker-Compose v2	2
[EXAMPLE/PYTHON] Improve extension type, add operator lib (#162)	1
Quarantine a flaky test (#16402)test_process_kill_calls_on_failure_callback seems to be flaky in the CIsuite and occasionally fails without reason. Until it's fixed, it isquarantined with other flaky tests.	3
[AIRFLOW-4725] Fix setup.py PEP440 & Sphinx-PyPI-upload dependency (#5363)	1
Fix slow (cleared) tasks being be adopted by Celery worker. (#16718)Celery executor is currently adopting anything that has ever run before and has been cleared since then.**Example of the issue:**We have a DAG that runs over 150 sensor tasks and 50 ETL tasks while having a concurrency of 3 and max_active_runs of 16. This setup is required because we want to divide the resources and we don't want this DAG to take up all the resources. What will happen is that many tasks will be in scheduled for a bit as it can't queue them due to the concurrency of 3. However, because of the current implementations, if these tasks ever run before, they would get adopted by the schedulers executor instance and become stuck forever [without this PR](https://github.com/apache/airflow/pull/16550). However, they should have never been adopted in the first place.**Contents of the PR**:1. Tasks that are in scheduled should never have arrived at an executor. Hence, we remove the task state scheduled from the option to be adopted.2. Given this task instance `external_executor_id`  is quite important in deciding whether it is adopted, we will also reset this when we reset the state of the TaskInstance.	1
[AIRFLOW-1732] Improve dataflow hook loggingCloses #2702 from TrevorEdwards/1732	2
[Relay][Training] Small refactoring (#3893)* init* fix	0
[AIRFLOW-4376] Remove all past library usage (#5247)	4
Documentation Refactor (#9203)* Documentation Refactor - Stage 1RFC: https://github.com/apache/tvm-rfcs/blob/main/rfcs/0027-formalize-documentation-organization.mdTracking Issue: https://github.com/apache/tvm/issues/8987Stage 1 of the documentation refactor reorganizes the docs structure,moving files (without content changes) and adding new scaffolding togenerate the proper document tree.It does not address naming, style, content, links, or other existingcontent in documents that were moved. State 2 will address fixing theseissues with existing content.Major changes include but are not limited to:* Dividing the existing tutorials into two sections:  * Tutorials  * How Tos* Moving all of the existing tutorials out of the `/tutorial`  directory and into the more general `/gallery` directory.* Breaking up how-tos into individual sections for more  flexibility and more consistent rendering.* Moving content into new classifications:  * `/docs/arch` for architecture guides  * `/docs/reference` for API guides and other reference material  * `/docs/topic` for topic specific guides such as microTVM and VTA  * Restructuring `/docs/dev`* Adding a table of contents to the doc index* Adding instructions on how to install using third-party tlcpack* Documentation Refactor - Stage 2RFC: https://github.com/apache/tvm-rfcs/blob/main/rfcs/0027-formalize-documentation-organization.mdTracking Issue: https://github.com/apache/tvm/issues/8987Stage 2 of the documentation refactor fixes naming and linksin the documentation to be consistent with the overall structure.Major changes include:* an update to how to contribute to docs.* several updated index pages with title changes to match  the organization style and bring consistency to the sections* expanded descriptions of some page collections* fixed links* Documentation Refactor - Stage 3RFC: https://github.com/apache/tvm-rfcs/blob/main/rfcs/0027-formalize-documentation-organization.mdTracking Issue: https://github.com/apache/tvm/issues/8987Stage 3 of the documentation refactor adjusts CI for the new structure.The CI build script takes into account the new gallery format. Italso prevents deleting existing documents, and takes advantage of the`_staging` and `_build` directories to clean out previous builds.	4
Fixing bug around templating	0
Add support for extra parameters to samba client (#16115)* Add support for extra parameters to samba client* Add description of extra fields* Reformat extra field descriptions* Add spelling for 'NetBIOS'* Fix imports* Format as code to avoid spellcheck errors* Add word to spellcheck* Fix order	0
[AIRFLOW-1774] Allow consistent templating of arguments in MLEngineBatchPredictionOperatorFix a minor typo and a wrong non-defaultassignmentFix one more typoAdapt tests to new error messages and fix anothertypoFix exception type in utils operator test classImprove cleansing of non-valid training andprediciton job namesCloses #2746 from wileeam/ml-engine-prediction-job-normalization	5
[CUDNN] Refactor descriptor initialization, remove `cudnn.conv.output_shape_from_cudnn` (#9948)* Introduce SetConvdescriptors to refactor cudnn/conv_forward.cc* more refactor* remove cudnn get output* cpplint	1
Bellhops uses airflow	1
Update command from breeze to command (#24741)	5
Update documentation for RC2 release of November Databricks Provider (#20086)	1
[AIRFLOW-159] Add cloud integration section + GCP documentationCloses #1773 from alexvanboxel/feature/gcp-docs	2
[FIX][VM] Fix relay vm optimize (#6322)* [FIX][VM] Fix relay vm optimize* retrigger ci	0
[Rust] Static syslib (#3274)	5
[Relay] remove unneeded VisitExpr (#3239)	4
Add Plugins View in web UI (#10770)	1
Use `dag_maker` fixture in test_scheduler_job.py (#17265)This change adds dag_maker fixture to test_scheduler_job.py. Thiswill help us create dagruns each time we create a dag	2
Get rid of requests as core dependency (#15781)This change gets rid of requests as core dependency. We have tochange requests to become an optional dependency because it(so far) pulls in chardet as dependency and chardet isLGPL, which is not allowed to be mandatory dependency byASF policies.More info here:https://issues.apache.org/jira/browse/LEGAL-572The changes:* connexion is vendored-in (and requests usage is replaced with httpx)* Http Provider is turned into optional provider (not preinstalled)* Few places where requests were used in core and in cloud_sql provider  which did not cause compatibility problem, it was replaced by httpx.* new extra added for deprecated experimental API (which is disabled  by default and optional)* tests are fixed (using pytest-httpx fixture package)* The providers: http, airbyte, apache.livy, opsgenie, slack (all depend  on http) now explicitely depend on `requirements`.	1
[FIX] Correctly link to PAPI (#8691)	2
unit tests for comparisons	3
fix cuda half math function is undefined: hpow, htanh (#6253)	1
Fix Tensorflow conv3d pad bug, add non-cubic data and kernel tests (#4772)	3
Removing a line from task_instance template	4
Fix the behavior for deactivate the authentication option and documenting the process to do it (#13191)	2
set max tree width to 1200px (#16067)the totalwidth of the tree view will depend on the window size like before, but max out at 1200px	1
Revert "Implemented rpc logging (#10967)" (#11227)This reverts commit aa3bcd9d3374878c5e958b842f51bfd82f0ebd9e, because itfails on Windows CI as reported in issue #11220. PR #11223 tries to addressit but is is failing in the regular CI with testing issue on Hexagon.	0
Create "Managing variable" in howto directory (#10241)	1
AIRFLOW-4740 Accept string `end_date` in DAG default_args (#5381)A dag will accept, in its default_args, a start_date as simple as 2019-06-01. If it detects a string, it converts to a richer type. However, it did not accept a similar string forend_date instead an exception was thrown.That's a very confusing user experience. end_date should be as permissive as start_date	5
[AIRFLOW-3758] Fix circular import in WasbTaskHandler (#4601)WasbHook was causing a circular import error when configure_logging() was called.	5
add a test for assymetric padding in ONNX conv and fix importer (#6646)	2
Add DataflowStartSQLQuery operator (#8553)	1
[NNVM][TOPI] Add gradients for broadcast_* ops (#1234)	1
Fixed scheduling for @once intervalModified the conditional branching in schedule_dag becauseone logical branch was never reached, and another branchwas reached by the wrong condition.Resolves #1260	0
[AOT][Stack Allocator] Fix Initial Memory Misalignment (#8487)* add flag* fix and test* format* fix memory memory_align function* fix and address comments* format* fix crt aot test* comments* fix test* trigger* trigger* trigger* trigger* triggerCo-authored-by: Mehrdad Hessar <mhessar@ip-172-31-20-199.us-west-2.compute.internal>	3
Access task type via the property, not dundervars (#11274)We don't currently create TIs form serialized dags, but we are about tostart -- at which point some of these cases would have just shown"SerializedBaseOperator", rather than the _real_ class name.The other changes are just for "consistency" -- we should always get thetask type from this property, not via `__class__.__name__`.I haven't set up a pre-commit rule for this as using this dunderaccessor is used elsewhere on things that are not BaseOperatorinstances, and detecting that is hard to do in a pre-commit rule.	1
[QUANTIZE] Memorizing the quantize node mapping (#3233)* [QUANTIZE] Support for clip operator* [QUANTIZE] Memorizing the quantize node mapping.* [QUANTIZE] Remove use_stop_fusion and skip_k_conv in qconfig* update* update* update* update	5
Clearer information for webserver_config.py (#12412)So easier for doc readers who never used FAB-based RBAC UI.	1
Update Zendesk example DAG to use TaskFlow API (#21411)	1
[MetaSchedule][Runtime] Enhance Runner RandomFill (#11758)	1
Cloudsql import links fix. (#21199)	0
Profile hostname for celery executor (#8624)Co-authored-by: yingbo_wang <yingbo.wang@airbnb.com>	2
Merge pull request #751 from airbnb/coverOmit contrib from coverage report	3
Do not override in_container scripts when building the image (#10442)After #10368, we've changed the way we build the imageson CI. We are overriding the ci scripts that we useto build the image with the scripts taken from masterto not give roque PR authors the possibiility to runsomething with the write credentials.We should not override the in_container scripts, howeverbecause they become part of the image, so we should usethose that came with the PR. That's why we have to movethe "in_container" scripts out of the "ci" folder andonly override the "ci" folder with the one frommaster. We've made sure that those scripts in ciare self-contained and they do not need reach outside ofthat folder.Also the static checks are done with local files mountedon CI because we want to check all the files - not onlythose that are embedded in the container.	2
[FIX,MICROTVM] Skip microtvm tests if microtvm is not built (#6693)	3
limit scope to user email only AIRFLOW-386	1
[AIRFLOW-2489] Update FlaskAppBuilder to 1.11.1This will bring Airflow back up to date and willallow us to runFlask 0.12.4Closes #3382 from Fokko/AIRFLOW-2489-update-dependencies	5
Vulkan TVM Android Support (#1571)	1
Adds missing mypy types (#20324)This PR adds a few missing type stub packages that we have but sofar MyPy did not complain about lack of those.Added by `mypy --install-types` command.Part of #19891	1
Enable specifying dictionary paths in `template_fields_renderers` (#17321)Added the handling of paths in `template_fields_renderers` which enables information contained in dictionaries to be unpacked and rendered appropriately.	5
[microNPU] Added checks for out of range shifts (#9707)* [microNPU] Added checks for out of range shifts* Added testcase* Addressed comments	1
[AIRFLOW-3996] Add view source link to included fragments	2
[FRONTEND][MXNET] Use leaky by default for LeakyReLU (#5192)	1
Migrate Google example automl_vision to new design AIP-47 (#25152)related: #22447, #22430	1
first pass as encrypting passwords	4
Update instructions of doc updates when removing providers from release (#22199)When removing providers from release it might be that we remmovejust added provider due to bugs found, in which case more detailewdinstructions on what should be removed from prepared dodcumentationis needed.Related to #22197	4
Fix an iterate on None issue	0
Fix MySQL to Google cloud storage scoping.	0
[RELAY] IR builder stablize refactor, clean pass (#1934)	4
fix get layout in to_relay (#2610)	1
Install gdb by default, sort packages (#10913)gdb is helpful to debug segfaults in CI problems and for local development. It's cheap, so I propose we just include it as standard.	0
[AIRFLOW-6456] Remove create_mock_args in CLI tests (#7044)	3
Support .airflowignore for plugins (#9531)	1
[AIRFLOW-5190] Move GCP Compute to core (#5797)	4
Fix printing of schedule operations (#8949)- Add printing of factor/nparts in "split".- Print correct operation name in "fuse".	1
[AIRFLOW-161] New redirect route and extra links (#5059)Co-authored-by: Max Payton <mpayton@lyft.com>With this change different operators would be able to customize thetask instance model view with extra links, those can be used toredirect users to systems which are out of Airflow.	5
[AIRFLOW-4963] Avoid recreating task context (#5596)	1
[ROCM] Make sure all bit code files exist (#2323)	2
[Hexagon] Add contrib tests for blocked conv2d and maxpool2d (#8960)* Add hexagon contrib tests for blocked conv2d and maxpool2d* Restructure based on review comments	3
[MetaSchedule] Evo Independence from TaskScheduler (#11590)Per discussion with @Kathryn-cat, we realized that the current APIdesign could be verbose if we only want to tune a single task, in whichcase a dummy task scheduler still needs to be established to supply`EvolutionarySearch` with proper `CostModel` and `Database`. This PRfixes this UX issue.	0
Improvments to command line tools: test, list_dags, list_tasks	2
[AIRFLOW-1933] Fix some typosCloses #2474 from Philippus/patch-1	2
Default sorting on start_date DESC for TI and known events	5
Remove unintentional pytest dependency. Fix #6398 (#6399)	0
Only schedule DagRuns between start and end dates	5
[LLVM CodeGen] Partially disable unsafe fp math (#2422)	5
[VTA] Performance optimize, remove unnecessary contigious memory use. (#4246)* [VTA] Performance optimize, remove unnecessary contigious memory use.Issue:Uop maintain a cache vector to copy uop data into contigious DRAM memory forFPGA/Simulator use, but this cache vector not get clear after FPGA/Simulatorcore run, in Resnet18 case, if we printf the cache size in UopQueue::ReadBarrierfunction, we can saw such cache size keep increase, this would causeno use data copy and unnecessary contigous DRAM memory malloc.Analysis:This issue caused by not clear cache_ vector when douop_queue_.Reset().Solution:Override BaseQueue Reset function in UopQueue and add cache_ clearlogic.* address review comments, remove spacing.	4
[RPC] graduate tvm.contrib.rpc -> tvm.rpc (#1410)	5
[TVM] Fix negating undefined in DetectLinearEquation (#1816)	0
fix postrgres bug	0
Enable Black on Connexion API folders (#10545)	0
Remove "@" references from constraints generattion (#12671)Likely fixes: #12665	0
[DOC] various assorted grammar fixes (#3127)* Correct spelling of 'inavlid'* [DOC] correct spelling of 'schdule'.* [DOC] clean up use of abbreviation "interop"* [DOC] capitalize API abbreviation consistently* [DOC] correct spelling of 'peformed'.* [DOC] correct spelling of 'intermidiate'* Remove trailing white space.* Correct spelling of 'parametrization'.* [DOC] minor improvements to Range documentation.	2
Bugfix: Allow clearing tasks with just ``dag_id`` and empty ``subdir`` (#16513)Currently if we run the following command:```airflow tasks clear example_bash_operator --subdir ""```we get the following error:```Traceback (most recent call last):  File "/usr/local/bin/airflow", line 33, in <module>    sys.exit(load_entry_point('apache-airflow', 'console_scripts', 'airflow')())  File "/opt/airflow/airflow/__main__.py", line 40, in main    args.func(args)  File "/opt/airflow/airflow/cli/cli_parser.py", line 48, in command    return func(*args, **kwargs)  File "/opt/airflow/airflow/utils/cli.py", line 91, in wrapper    return f(*args, **kwargs)  File "/opt/airflow/airflow/cli/commands/task_command.py", line 454, in task_clear    if args.dag_id and not args.subdir and not args.dag_regex and not args.task_regex:  File "/opt/airflow/airflow/models/dag.py", line 1413, in clear_dags    for dag in dags:TypeError: 'DAG' object is not iterable```This is becase `DAG.clear_dags` expects an iterable.	2
Define datetime and StringID column types centrally in migrations (#19408)We have various flavours of the code all over the place in manymigration files -- which leads to duplication and things not being insync.This pulls them once in to a central location.	2
[Hexagon] Support both 1-d and 2-d VTCM allocations (#10846)* [Hexagon] Support both 1-d and 2-d VTCM allocationsPreviously, all VTCM allocations were assumed to be 2-d buffers.  Thiscommit extends `HexagonDeviceAPIv2::AllocVtcmWorkspace` to allow both1-d and 2-d VTCM allocations.  Matching the semantics used in`CodeGenHexagon::CreateBufferPtr`, allocation of 1-d buffers returns a`void*`, and allocation of 2-d buffers returns a `void**`.Co-authored-by: Adam Straw <astraw@octoml.ai>* [Hexagon] Distinguish between 1-d buffer and single-alloc 2-d bufferPreviously, HexagonBuffer represented 1-d buffers as 2-d buffers with`nallocs==1`.  Since this is used to determine the return type of thedata pointer exposed to the generated code, the ambiguity between`shape=[N]` and `shape=[1,N]` must be avoided.  This commit replaces`HexagonBuffer::nallocs_` with `HexagonBuffer::ndim_`, avoiding thisambiguity.* [Hexagon] Treat "global" scope allocations as 1-dThis updates `HexagonDeviceAPIv2::AllocDataSpace` to follow thesemantics of `DeviceAPI::AllocDataSpace`, to avoid breaking callerassumptions in `tvm.nd.array` or graph_executor/aot allocation.* Updated C++ unit tests for HexagonBuffer* Remove commented GetNumAllocs and unused GetBufferDimensionCo-authored-by: Adam Straw <astraw@octoml.ai>	5
Fix failing tests from #9124 (#9356)	3
[Team] @merrymercy -> PMC (#2578)	5
Move out get_python_source from www, Move get_dag to www.utils (#7899)	2
Add `PrestoToSlackOperator` (#23979)* Add `PrestoToSlackOperator`Adding the funcitonality to run a single query against presto and send the result as slack message.Similar to `SnowflakeToSlackOperator`	1
[AIRFLOW-1957] Add contributor to BalanceHero in ReadmeCloses #2907 from r39132/master	1
[Torch] Add cast to double, fix flatten conversion (#6357)* support cast to double and fix flatten conversion* also support batch flatten, add test* add flatten test* clean up	4
Adds interactivity when generating provider documentation. (#15518)The release manager, when reviewing providers to release mightmake interactive decisions what to do:1) mark certain provider as 'doc-only' change2) decide whethere to generate documentation for the providerIn case the provider change is marked as 'doc-only' the next timewhen providers are checked the doc-only change is not seen as'change' and the provider is automatically skipped.This saves time when preparing subsequent releases of providersas all the "doc-only changes" from the previous release do nothave to be re-reviewed (unless there are some new changes).	4
fix: select narrow dtype (#10519)	0
Make system test work with 1.10 (#10444)	1
[AIRFLOW-2187] Fix Broken Travis CI due to AIRFLOW-2123- Added the packages to ignore for Python 3	1
fix plan memory add inplace_identity option (#124)* fix plan memory add inplace_identity option* comment	1
[AIRFLOW-3388] Add support to Array Jobs for AWS Batch Operator (#6153)	1
Fix FROM directive in docs/production-deployment.rst (#11139)`FROM:` -> `FROM`	2
[ETHOSN] Support multiply conversion to depthwise (#12403)Multiply can be supported when offloaded to the NPU by a conversion to a depthwise convolution operation. This is only supported when the multiply operation has a single single variable input with the other being a constant of shape [1, ..., C]. This commit adds a new pass "ConvertEquivalents" (name subject to change) to handle this conversion before codegen.	0
Revert "Bump mysqlclient to 2.0.1 (#9987)" (#9997)This reverts commit c4388127f1c47e1abe512e1ef104c9835a150a04.	4
[LLVM] Remove use of deprecated PointerType::getPointerElementType() (#11984)With LLVM switching to opaque (typeless) pointer types, some functionsrelated to handling typed pointers are being deprecated (and will beremoved).The DWARF debug information does express pointee type. When constructingthis information from opaque pointers in LLVM IR, the pointee type needsto be obtained from somewhere else (not the pointer).Change the debug info generation to use the original PrimFunc to obtainthe necessary type information. This will work with older versions ofLLVM as well.	1
Fix using XCom with ``KubernetesPodOperator`` (#17760)This commit effectively revers https://github.com/apache/airflow/pull/15942 because of the issues it is causing. Until we find better solution we should revert this changeError:```[2021-07-26 20:23:54,109] {taskinstance.py:1108} INFO - Executing <Task(KubernetesPodOperator): write-xcom> on 2021-07-26T20:23:27.058907+00:00[2021-07-26 20:23:54,113] {standard_task_runner.py:52} INFO - Started process 11 to run task[2021-07-26 20:23:54,297] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'k8_pod_operator_xcom', 'write-xcom', '2021-07-26T20:23:27.058907+00:00', '--job-id', '1757', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/k8s_xcom_example.py', '--cfg-path', '/tmp/tmp0q94pkhs', '--error-file', '/tmp/tmpoz9qqp2l'][2021-07-26 20:23:54,298] {standard_task_runner.py:77} INFO - Job 1757: Subtask write-xcom[2021-07-26 20:23:54,511] {logging_mixin.py:104} INFO - Running <TaskInstance: k8_pod_operator_xcom.write-xcom 2021-07-26T20:23:27.058907+00:00 [running]> on host k8podoperatorxcomwritexcom.21384021df914227ad4e4b3a34313710[2021-07-26 20:23:54,713] {taskinstance.py:1502} ERROR - Task failed with exceptionTraceback (most recent call last):  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1158, in _run_raw_task    self._prepare_and_execute_task_with_callbacks(context, task)  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1295, in _prepare_and_execute_task_with_callbacks    self.render_templates(context=context)  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1796, in render_templates    self.task.render_template_fields(context)  File "/usr/local/lib/python3.7/site-packages/airflow/models/baseoperator.py", line 999, in render_template_fields    self._do_render_template_fields(self, self.template_fields, context, jinja_env, set())  File "/usr/local/lib/python3.7/site-packages/airflow/models/baseoperator.py", line 1012, in _do_render_template_fields    rendered_content = self.render_template(content, context, jinja_env, seen_oids)  File "/usr/local/lib/python3.7/site-packages/airflow/models/baseoperator.py", line 1063, in render_template    return [self.render_template(element, context, jinja_env) for element in content]  File "/usr/local/lib/python3.7/site-packages/airflow/models/baseoperator.py", line 1063, in <listcomp>    return [self.render_template(element, context, jinja_env) for element in content]  File "/usr/local/lib/python3.7/site-packages/airflow/models/baseoperator.py", line 1047, in render_template    return jinja_env.get_template(content).render(**context)  File "/usr/local/lib/python3.7/site-packages/jinja2/environment.py", line 883, in get_template    return self._load_template(name, self.make_globals(globals))  File "/usr/local/lib/python3.7/site-packages/jinja2/environment.py", line 857, in _load_template    template = self.loader.load(self, name, globals)  File "/usr/local/lib/python3.7/site-packages/jinja2/loaders.py", line 115, in load    source, filename, uptodate = self.get_source(environment, name)  File "/usr/local/lib/python3.7/site-packages/jinja2/loaders.py", line 197, in get_source    raise TemplateNotFound(template)jinja2.exceptions.TemplateNotFound: mkdir -p /airflow/xcom/;echo '[1,2,3,4]' > /airflow/xcom/return.json[2021-07-26 20:23:54,797] {taskinstance.py:1552} INFO - Marking task as FAILED. dag_id=k8_pod_operator_xcom, task_id=write-xcom, execution_date=20210726T202327, start_date=20210726T202353, end_date=20210726T202354[2021-07-26 20:23:54,936] {local_task_job.py:153} INFO - Task exited with return code 1```Dag:```from airflow import DAGfrom airflow.operators.bash import BashOperatorfrom airflow.providers.cncf.kubernetes.operators.kubernetes_pod import (    KubernetesPodOperator,)from airflow.utils.dates import days_agofrom airflow.configuration import confnamespace = conf.get("kubernetes", "NAMESPACE")# This will detect the default namespace locally and read the# environment namespace when deployed to Astronomer.if namespace == "default":    config_file = "/usr/local/airflow/include/.kube/config"    in_cluster = Falseelse:    in_cluster = True    config_file = Nonedefault_args = {    "owner": "airflow",}with DAG(    dag_id="k8_pod_operator_xcom",    default_args=default_args,    schedule_interval=None,    start_date=days_ago(2),    tags=["k8"],) as dag:    write_xcom = KubernetesPodOperator(        namespace=namespace,        in_cluster=in_cluster,        config_file=config_file,        image="ubuntu",        cmds=[            "sh",            "-c",            "mkdir -p /airflow/xcom/;echo '[1,2,3,4]' > /airflow/xcom/return.json",        ],        name="write-xcom",        do_xcom_push=True,        is_delete_operator_pod=True,        task_id="write-xcom",        get_logs=True,    )    pod_task_xcom_result = BashOperator(        bash_command="echo \"{{ task_instance.xcom_pull('write-xcom')[0] }}\"",        task_id="pod_task_xcom_result",    )    write_xcom >> pod_task_xcom_result```closes https://github.com/apache/airflow/issues/17186	0
[AIRFLOW-3634] Fix GCP Spanner Test (#4440)	3
[AIRFLOW-6327] http_hook: Accept json= parameter for payload (#6886)* [AIRFLOW-6327] http_hook: Accept json= parameter for payload* [AIRFLOW-6327] CODE REVIEW* [AIRFLOW-6327] CODE REVIEW 2* [AIRFLOW-6327] CODE REVIEW 3Co-Authored-By: dstandish <dstandish@users.noreply.github.com>Co-authored-by: dstandish <dstandish@users.noreply.github.com>	1
[AIRFLOW-6009] Switch off travis_wait for regular tests (#6600)	3
[AIRFLOW-1954] Add DataFlowTemplateOperatorCloses #2909 from dsdinter/dataflow_template	5
alembic migration for adding extra col to Log	2
Build docs when chart changelog or values schema changes (#18307)	4
[FQ2I] Add mean op to FQ2I (#10607)* add mean op* clean up* lintCo-authored-by: Margaret Qian <mqian@octoml.ai>	5
Allow S3ToSnowflakeOperator to omit schema (#15817)Fix #12001.As a drive-by cleanup, I also rewrote the text-building logic a bit to remove superfulous spaces and blank lines in the query string.	4
Update have_int8 condition to run on compute capability 7.x devices (#4214)	1
Intel target added, sub group sync added (#1084)	1
[AIRFLOW-XXX] Display GCP integration in table (#6086)	2
Change rust installation profile to minimal (#9878)	5
[AIRFLOW-6381] Remove styling based on DAG id from DAGs page (#6985)	2
[AIRFLOW-6371] Move dag tests from test_core to test_dag (#6927)	3
[UnitTests] Enable minimum testing on Vulkan target in CI (#9093)* [UnitTests] Enable minimum testing on Vulkan target in CI- Include the Vulkan runtime in the GPU build.- Run test_target_codegen_vulkan.py as part of the `python3: GPU` CI step.* [CI] Added a dummy task_config_build_gpu_vulkan.sh, to be removed later.The CI builds use the Jenkinsfile located in the ci-docker-stagingbranch, but the scripts in the PR that is being run.  Temporarilyadding back a task_config_build_gpu_vulkan.sh, which just calls therenamed task_config_build_gpu_other.sh.	5
[AutoTVM][Autoscheduler] Default build funcs inherit PassContext (#11632)* init commit* lint* empty commit* test results* reset progress* lint* fix	0
[TIR][REFACTOR] ForNode introduce thread binding and remove legacy field (#7306)[TIR][REFACTOR] ForNode update- Remove deprecated device_api.- Add ThreadBinding for_type.- Add additional annotations.More style consistency refactor to make the ForNodeto be consistent with rest of the codebase.- ForType => ForKind- Add constant prefix k to enum consts per Google C style- Introduce ForKind to the python side.	0
Fix part of Google system tests (#18494)* Fix CloudBuildExampleDagsSystemTest* Fix DataCatalog tests* Fix Dataprep test* Fix GCS test* Fix Dataflow test* Fix GC Functions test* Fix Cloud SQL tests* Fix Data Fusion test* Change env var in Dataprep system test* Fix config for dataflow system tests* Add unit test for datafusion* Fix Data Fusion utest, add optional parameter to data fusion pipeline state sensor* Update code with black suggestions* Fix flake8 issue* Revert changes to example_cloud_sql.py according to review feedbackCo-authored-by: Lukasz Wyszomirski <wyszomirski@google.com>	5
[tir] remove unused member variable (#11248)Remove unused member variable`tvm::tir::PackedCallLegalizer::tvm_value_index_`.This also fixes a GCC 7.5 compiler warning.	2
[AIRFLOW-1885] Fix IndexError in ready_prefix_on_cmdlineIf while trying to obtain a list of ready gunicornworkers, one of thembecomes a zombie, psutil.cmdline returns [] (seehere:https://github.com/giampaolo/psutil/blob/release-4.2.0/psutil/_pslinux.py#L1007)Boom:    Traceback (most recent call last):      File "/usr/local/bin/airflow", line 28, in<module>        args.func(args)      File "/usr/local/lib/python3.5/dist-packages/airflow/bin/cli.py", line 803, inwebserver        restart_workers(gunicorn_master_proc, num_workers)      File "/usr/local/lib/python3.5/dist-packages/airflow/bin/cli.py", line 687, inrestart_workers        num_ready_workers_running = get_num_ready_workers_running(gunicorn_master_proc)      File "/usr/local/lib/python3.5/dist-packages/airflow/bin/cli.py", line 663, inget_num_ready_workers_running        proc for proc in workers      File "/usr/local/lib/python3.5/dist-packages/airflow/bin/cli.py", line 664, in<listcomp>        if settings.GUNICORN_WORKER_READY_PREFIX inproc.cmdline()[0]    IndexError: list index out of rangeSo ensure a cmdline is actually returned beforedoing the cmdline prefixcheck in ready_prefix_on_cmdline.Also: * Treat psutil.NoSuchProcess error as non readyworker * Add in tests for get_num_ready_workers_runningCloses #2844 from j16r/bugfix/poll_zombie_process	0
Add initial travis-ci	5
Clean-up of google cloud example dags - batch 2 (#19527)- Use static start_date- Use catchup=False- Tidy up the chaining of tasks in some cases- Remove unnecessary specification of default conn ids	4
[ConvertLayout] Support transpose (#7214)* [ConvertLayout] Support transpose* format* fix ci* fix axes missing* fix* fix NCHW[x]c* Update src/relay/op/tensor/transform.cc* fix negative* fix	0
separate actions into dif endpoints and add logging decorator	2
Add yolov3-tiny to the tutorial. (#3674)	1
Fix typo in "Cloud" (#10534)`CLoud` -> `Cloud`	2
Remove duplicated/overlapping tests around render_k8s_pod_yaml (#16642)When making another change here, I noticed that we were basicallytesting the same thing twice in test_taskinstance andtest_renderedtifields, which does no one any good.I have updated the tests to use mocking to avoid duplication, andexercised a few more of the branches in the functions under test	3
[DOCS] Add background context for stack allocation in builtin lowering (#10632)	1
Rename gpu to cuda in java/rust/typescript (#8036)* rename gpu to cuda in java/rust/typescript* fix rpc test to call cuda	3
Default	5
[ONNX]Pool3d & upsample3d op support (#5135)* [ONNX]Pool3d and Upsample3d op updated* Pool3d and Upsample3d testcase* Review comments fixed* Review comments	0
Chart: Fix network policy issue for webserver and flowerui (#20199)	0
Fix flaky on_kill (#20054)The previous fix in #20040 improved forked tests but also causedinstability in the "on_kill" test for standard task runner.This PR fixes the instability by signalling when the task startedrather than waiting for fixed amount of time and it adds betterdiagnostics for the test.	3
Bumped Ubuntu version to 18.04 for ci_gpu (#7970)Change-Id: I8b13fda08ab002c16a082baaaedd973a063fab99	4
[BUGFIX] Fix topi matrix multiplication using tensorcore to run faster (#6749)	1
add softmaxoutput (#207)	1
add back supported tests (#10116)	3
l2normalization operator support for tensorflow (#1528)	1
[CI][Caffe Frontend] add caffe environment (#6023)* [CI][Caffe Frontend] add caffe environment* [CI][Caffe Frontend] change the caffe deps into BVLC distribution.* [CI][Caffe Fronted] simplify configuration while installing tzdata for precompiled caffe.* [CI][Caffe Frontend] add more information about tzdata.* [CI][CaffeFrontend]remove the ci for gpu env and change to pip3 envCo-authored-by: fernchen <zifeng.cf@alibaba-inc.com>	4
[release] Add script to gather PRs for a release (#11987)Co-authored-by: driazati <driazati@users.noreply.github.com>	1
Send SLA callback to processor when DagRun has completed (#20683)* Send SLA callback to processor when DagRun has completedCurrently, sla callbacks are sent every time a dagrun is examined. This causes slacallbacks to be run too often and cause processors to timeout at times.Also deleted dags are not recreated when there are many slas.This PR addresses this by sending SLA callbacks to processor when a dagrun completes	2
Load platform specific lib for tvmdsoop instead of only so (#5542)	2
Add incubating specifier to version	1
Fix a case of linking to wrong OpenCL library (#11215)if explicit path to OpenCL SDK was pointed in USE_OPENCL option	1
Improve dtype detection in loop to fix onnx tests. (#7934)	3
Add test case of argmax for detecting out of bound access (#2234)	3
Fix race condition when using Dynamic DAGs (#13893)closes https://github.com/apache/airflow/issues/13504Currently, the DagFileProcessor parses the DAG files, writes it to the`dag` table and then writes DAGs to `serialized_dag` table.At the same time, the scheduler loop is constantly looking for the nextDAGs to process based on ``next_dagrun_create_after`` column of the DAGtable.It might happen that as soon as the DagFileProcessor writes DAG to `dag`table, the scheduling loop in the Scheduler picks up the DAG for processing.However, as the DagFileProcessor has not written to serialized DAG table yetthe scheduler will error with "Serialized Dag not Found" error.This would mainly happen when the DAGs are dynamic where the result of one DAG,creates multiple DAGs.This commit changes the order of writing DAG and Serialized DAG and hencebefore a DAG is written to `dag` table it will be written to `serialized_dag` table.	2
[DOCS] Move the api docs to the api subfolder (#5626)* [DOCS] Move the api docs to the api subfolder* Update numpydoc location* Ignore 403* make sure folder exists	1
Add typescript (#24337)	1
[Relay] format text_printer.cc (#1946)	5
Finalize tensor and operation	5
[BACKEND][CODEGEN] C codegen with tests (#2161)* Implement C code generation with tests* Code cleanup* Implement C code generation with tests* Code cleanup* tabs to spaces* make lint compliant* update export_library and reserve unique C keywords* move ReserveKeywordsAsUnique to codegen_c* some documentation and code cleanup* use tvm.contrib.util for tempdir in testcases	3
Add Pathstream to INTHEWILD.md (#18508)	1
[LANG] Support for Bitwise Operation (#502)* [LANG] Support for Bitwise Operation* Add test	3
[AIRFLOW-3762] Add list_jobs to CLI (#4579)* [AIRFLOW-3762] Add list_jobs to CLIAdd list_jobs to CLI* [AIRFLOW-3762] Add list_jobs to CLIImprove test_cli_list_jobs_with_args*  [AIRFLOW-3762] Add list_jobs to CLIDirectly parse args.limit to list_jobs query* [AIRFLOW-3762] Add list_jobs to CLIFormat list_jobs code	1
[RELAY][BYOC] Preserve type information in Merge Composite (#5640)Keep the type information when extracting patternsso that it can be used as part of 'check' functions.Change-Id: I16cc70c3d013a794d2ceefb5bec815129c7b8825	4
Add description to hint if conn_type is missing (#13778)- add plaintext description to add/edit conn_type to make sure people remember to install necessary provider packages	1
Fix semver compare number for `jobs check` command (#24480)From what I can tell this command was added in 2.1.0 not 2.0.0.	1
[Tutorial] Fix formatting, grammar, dead link (#9281)* tutorial: preprocess.py: Fix leading whitespaceThis fixes the indentation of metadata in `preprocess.py` in the TVMC tutorial, removing the leading whitespaces in the HTML rendering[^1].[^1] https://tvm.apache.org/docs/tutorial/tvmc_command_line_driver.html#preprocess-py* tutorial: Add missing code block escapes* tutorial: Grammar fixup* README.md: Fix link to introductionCo-authored-by: Martin Kröning <martin.kroening@neclab.eu>	2
Remove deprecated parameters from BigQueryHook: (#23269)* `BigQueryHook.create_empty_table` Remove `num_retries`. Please use `retry`.* `BigQueryHook.run_grant_dataset_view_access` Remove `source_project`. Please use `project_id`.	1
Fix for templated dicts	0
Change function call in render templates	1
Add the missing "Date" header to the warning e-mailsThe warning emails sent by airflow don't have theDate header set. This makes them appear in "spam like"places in e-mail clients sorting the incomming e-mailusing the "sent date" e-mail information. Withoutthis header the "sent date" appears as "Unknown".	5
Fix pod launcher role permissions to list events in chart (#13649)When using the KubernetesPodOperator withlog_events_on_failure=True, and the pod exits,the executor needs to access the events in the namespace.Before this resulted in an exception when using the chartas this it was not permitted by the pod-launcher role.	2
Fix download logs from Grid/graph view (#23009)There Checking for metadata to be falsy before JSON-decoding it doesn'tmake sense.And since 99%+ of times we don't need this value I have made it optionaland don't pass it in the front end	4
[µTVM] Add documentation (#7164)	2
[PYTORCH]where, addcdiv, addcmul op support (#5383)* [PYTORCH]Where, addcdiv, addcmul op support* Review comments fixed	0
[AIRFLOW-1112] Log which pool when pool is full in schedulerCloses #2242 from saguziel/aguziel-logging-pool-scheduler	2
[hexagon][tests] re-enable maxpool hardware test (#12676)- Re-enable test_max_pool2d_slice.py when run on Hexagon  hardware (as opposed to hexagon-sim).  This is now safe because https://github.com/apache/tvm/issues/11928  has been fixed.	0
Don't permanently add zip DAGs to ``sys.path`` (#18384)Only leave the zip on `sys.path` while parsing that zip file, as weshouldn't assume parsing only happens in separate processes. Forexample, `resetdb` is used to run migrations, some of which parsethe DAGs.	2
Refresh credentials for long-running pods on EKS (#17951)	1
[RPC] Allow back pressure from writer (#250)* [RPC] Allow backpressure from writer* fix* fix	0
Conditional MySQL Client installation (#11174)This is the second step of making the Production Docker Image morecorporate-environment friendly, by making MySQL client installationoptional. Instaling MySQL Client on Debian requires to reach outto oracle deb repositories which might not be approved by securityteams when you build the images. Also not everyone needs MySQLclient or might want to install their own MySQL client or MariaDBclient - from their own repositories.This change makes the installation step separated out toscript (with prod/dev installation option). The prod/dev separationis needed because MySQL needs to be installed with dev librariesin the "Build" segment of the image (requiring build essentialsetc.) but in "Final" segment of the image only runtime librariesare needed.Part of #11171Depends on #11173.	1
[AIRFLOW-1232] Remove deprecated readfp warningCloses #2315 from skudriashev/airflow-1232	2
Removing done items from TODO.md	2
Fix bool conversion Verify parameter in Tableau Hook (#17125)	1
Merge pull request #271 from nave91/add_extra_to_connection_initadding extra to connection model init	5
Update TVM Version and CI scripts (#46)	5
[FIX] Fix from_mxnet for multiple outputs symbol (#247)	0
Increase limit of time for constraint job (#20230)Depending on how many changes are there from the previous imagesbuilding images for constrainst (with eager upgrade) might takemore time than 10 minutes which causes constraints generationjob to fail.This change increases the limit to 25 minutes.	1
Enable Markdownlint rule - MD022/blanks-around-headings (#12225)https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md#md022---headings-should-be-surrounded-by-blank-lines	2
Fix MyPy errors in airflow/api and airflow/api_connexion (#20390)	0
update stm32mp1 arm_cpu target configuration (#7443)Add the -mcpu information to complete the picture.Signed-off-by: Vincent ABRIOU <vincent.abriou@st.com>	5
Add MySqlToS3Operator (#9054)* mysql_to_s3_operator* moved and blank line* documentation indent and dict none* directories changes* fixes* fixes* documentation change* docs* docs and pd_csv_kwargs* Update airflow/providers/amazon/aws/operators/mysql_to_s3.pyCo-authored-by: Tomek Urbaszek <turbaszek@gmail.com>* pd_csv_kwargs* dependencies and docs* contributing and docs* Update airflow/providers/amazon/aws/operators/mysql_to_s3.pyCo-authored-by: Tomek Urbaszek <turbaszek@gmail.com>* Update airflow/providers/amazon/aws/operators/mysql_to_s3.pyCo-authored-by: Felix Uellendall <feluelle@users.noreply.github.com>* feluelle suggestion* import airflowexception* line too long fixCo-authored-by: javier.lopez <javier.lopez@promocionesfarma.com>Co-authored-by: Tomek Urbaszek <turbaszek@gmail.com>Co-authored-by: Felix Uellendall <feluelle@users.noreply.github.com>	1
[CI] Added message if test is running on another shard (#11331)	1
[AIRFLOW-XXX] Add Hint at user defined macros (#4885)	1
[CI][AArch64] Mark tests to be skipped due to torch crash (#12730)Some integration tests are not being run on CI due to theconfiguration of the machine with onnx and torch not callingthe integration tests script.This patch skips two more tests failing with the error messagebelow:```"OSError: /.../torch/lib/libgomp-d22c30c5.so.1:cannot allocate memory in static TLS block"```	0
TensorCore Support using Intrinsic (#4136)* add tensor core support* avoid memory bank conflict* fix thread sync & better performance* better performance* add schedule test for conv2d* extend into BatchMatMul* support config fragment shape and layout using intrinsic* add TensorCore tutorial* add int support and fix lint* address comment* add 32*16*8 TensorCore test* fix wmma include logic	2
[Hexagon] Launcher modifications to make use of the new device API (#9356)* Use custom lookup_linked_params function inapp/hexagon_launcher.* Use new device api in hexagon launcher.* Ensure app/hexagon_launcher uses kDLCPU for external allocationsso that CopyDataFromTo knows how to handle the provided memory.* Use loadfile_hexagon in app/hexagon_launcher.* Update hexagon launcher's get_output method toutilize NDArray's for copying in order to exercisethe DeviceAPI.* Apply clang formatting	1
[AIRFLOW-XXX] Add next/prev ds not correct in faq (#5454)* [AIRFLOW-XXX] Add next/prev ds not correct in faq	1
[USMP] bugfix workspace calculation (#10617)The workspace calculation should be doneafter memory is planned.	1
declare a type name for each tuple type (#151)* declare a type name for each tuple type* generic way to declare type names for each tuple type* fix lint error* update submodule dmlc-core	5
[Fix] Refactor the roundtrip test. (#10592)This is a tiny fix on the roundtrip test, the case test I introduced in #10370 doesn't use `tvm.testing.parameter`.	3
fix exception string of BranchPythonOperator (#18623)	1
Rename TShape::index_t to dim_t and change to int64_t (#114)* Change TShape::index_t to int64_t* Add comment* Make Tuple::Save&Load dtype generic* trigger update* Fix lint* Fix comment* Change index_t to dim_t* Remove legacy index_t	4
Adjust strategy plevel to achieve expected performance by default (#5118)	5
[AIRFLOW-5768] GCP cloud sql don't store ephemeral connection in db (#6440)	5
added Glassdoor to "who uses airflow"	1
Fix `multiNamespaceMode` docs to also cover KPO (#19879)	2
[AIRFLOW-XXX] Document dag_dir_list_interval in cfgDocument dag_dir_list_interval in default_airflow.cfghttps://github.com/apache/incubator-airflow/blob/master/UPDATING.md#dag_dir_list_intervalCloses #3645 from elgalu/patch-2	5
Update s3_list.py (#18561)removed inappropriate character `{` from the error message	0
[AIRFLOW-5683] Add propagate_skipped_state to SubDagOperator (#6352)- fix pylint issues- refactor subdag_operator	2
[AIRFLOW-5687] Upgrade pip to 19.0.2 (#6358)	5
Move fallible ti.task.dag assignment back inside try/except block (#24533) (#24592)* Move fallible ti.task.dag assignment back inside try/except blockIt looks like ti.task.dag was originally protected inside try/except,but was moved out at commit 7be87d* Remove unneeded variable annotationCo-authored-by: EJ Kreinar <ej@he360.com>Co-authored-by: Tzu-ping Chung <uranusjr@gmail.com>	4
[AIRFLOW-6670][depends on AIRFLOW-6669] Move contrib operators to providers package (#7286)	1
Also compile assets in non-main (#25220)Assets compilation when CI and PROD images are prepared shouldalso be run in non-main branch.	1
Merge pull request #697 from bolkedebruin/ssh_opsSsh Hook	1
Chart: PgBouncer service enhancements (#19749)* Added support for extraVolumes and extraVolumeMounts* Added separate sslmode for metrics exporter* Fixed condition for pgbouncer volume mounts	0
Merge pull request #69 from mistercrunch/fix_dbidAdding a proper primary key to db connections	5
check to avoid crash in opt_level=0 vm build (#10347)	5
[AIRFLOW-5834] Option to skip serve_logs process with workers (#6709)	1
[AIRFLOW-2224] Add support CSV files in MySqlToGoogleCloudStorageOperator (#4738)MySqlToGoogleCloudStorageOperator supported export from MySQL innewline-delimited JSON format only. Added support for exportfrom MySQL in CSV format with the option of specifying a fielddelimiter.Thanks to Bernardo Najlis(@bnajlis) for the originalPR(#3139). I made some changes to the the original PR.	4
Revert "[AIRFLOW-2966] Catch ApiException in the Kubernetes Executor (#3960)"This reverts commit 03de9ee155b79f83c3d78c77af66c7d07572dc4b.	4
[TVMC] tune: Use proper caps for AutoTVM and AutoScheduler (#10864)Use proper caps in help messages when mentioning AutoTVM andAutoScheduler tuners.Signed-off-by: Gustavo Romero <gustavo.romero@linaro.org>	1
First attempt to have CI-controlled process of releasing PROD image (#24433)	5
[AIRFLOW-2092] Fixed incorrect parameter in docstring for FTPHookFixed the datatype of parameter`local_full_path_or_buffer` in `retrieve_file`method for FTPHookCloses #3026 from kaxil/patch-2	1
Syntax error String::fromwe() should be String::from() (#6846)Co-authored-by: Mikael Sevenier <mikael.sevenier@sima.ai>	0
[AIRFLOW-3551] Improve BashOperator Test Coverage (#4367)	3
Merge pull request #65 from gregorymfoster/fix_docsAdded missing import in the plugins doc example	2
[Hexagon] Fix scripts to enable automated testing on hardware (#10491)* Fix test and scripts for HW* revert port forwarding* address comments* address comments	1
[AIRFLOW-3340] Placeholder support in connections form (#4185)	1
Make dag_id, task_id, and execution_date nullable in event log schema (#12287)	2
PSRP improvements (#19806)	1
[Torch][AArch64] Skip test_load_model___wrong_language__to_pytorch (#12660)This patch makes test_load_model___wrong_language__to_pytorch to beskipped in AArch64 due to a bug that can be reproduced when enablingIntegration Tests in machines with Torch installed in TVM.```The error message seen is:OSError: /usr/local/lib/python3.7/dist-packages/torch/lib/libgomp-d22c30c5.so.1: cannot allocate memory in static TLS block```While the test needs further investigation, it is being set asskipped so other tests can be enabled and not to regress and allowtime for the investigation to be made.This relates to the issue described in #10673.	0
Bump K8S versions to latest supported ones. (#15156)K8S has a one-year support policy. This PR updates theK8S versions we use to test to the latest available in threesupported versions of K8S as of now: 1.20, 1.19. 18.The 1.16 and 1.17 versions are not supported any more as of today.https://en.wikipedia.org/wiki/KubernetesThis change also bumps kind to latest version (we use kind forK8S testing) and fixes configuration to match this version.	5
remove the unneeded migration	4
[AIRFLOW-XXXX] fix pools doc for LocalExecutor (#7643)from this ticket : https://issues.apache.org/jira/browse/AIRFLOW-584	0
Quarantine test_cli_webserver_background (#12570)We unquarantined test_cli_webserver_background inhttps://github.com/apache/airflow/pull/12501 but seems like thetest is still flaky: https://github.com/apache/airflow/runs/1443468804#step:6:2531	1
Better grouped convolution for CPU targets (#6137)* integrated with v0.8* Rebase, and undoing accidental removal of auto scheduler NHWC support* Added ASF license header* Minor bug fixes* Added asymmetric padding supportFixed linting* Improve linting* Better linting, disable final linting checks* Fixed final linting errors (figured out how to run lint tests locally)* fixing linter formatting part 1* fixing linter formatting part 2* fixing linter formatting part 3* Update conv2d.pyFixed merge issue* Rebase, and update responding to some comments* Fixed AutoScheduler bug for NHWC case* removed infer_pad from GSPC* Rebase, and undoing accidental removal of auto scheduler NHWC support* Added ASF license header* Minor bug fixes* Added asymmetric padding supportFixed linting* Improve linting* Better linting, disable final linting checks* Fixed final linting errors (figured out how to run lint tests locally)* Update conv2d.pyFixed merge issue* Rebase, and update responding to some comments* Fixed AutoScheduler bug for NHWC case* Minor fix* Fixed removal of infer_pad to no padding* Fixed unexpected linting errorCo-authored-by: Perry Gibson <Perry.Gibson@glasgow.ac.uk>	0
[AIRFLOW-3056] Add happn to Airflow user list	1
[TOPI][PYTORCH]Logical & Bitwise operator support (#5341)	1
Improves stability of K8S tests by caching binaries and repeats (#11634)* Improves stability of K8S tests by caching binaries and repeatsThe K8S tests on CI are controlled from the host, not frominside of the CI container image. Therefore it needs virtualenvto run the tests as well as some tools such as helm, kubectland kind. While those tools can bee downloaded and installedon demand, from time to time the download fails intermittently.This change introduces the following improvements:* the commands to download and setup kind, helm, kubectl are  repeated up to 4 times in case they fail* the "bin" directory where those binaries are downloaded is  cached between runs. Only the same combination of  versions of the tools are sharing the same cache.This way both cases - regular re-runs of the same jobs andupgrade of tools will be much more stable.	1
[Relay][Training] Add gradient for cast (#3894)savefixfix grad	0
[AIRFLOW-XXX] Wrap DISCLAIMER text	5
call updateNodeLabels after expandGroup (#25217)	5
closes apache/incubator-airflow#2772 *Closed for inactivity.*	5
Removed interfering force of index. (#25404)	1
[TVMC] Python Scripting Init Files (#7698)* add to init files for clean tvmc python* black reformat init.py* adjust tests to new imports* black test files* tell lint ignore defined-builtin error for tvmc compile* add colon to match lint syntax* change import so must use tvm.driver.tvmc instead of tvm.tvmcCo-authored-by: Jocelyn <jocelyn@pop-os.localdomain>	1
Add exportContext.offload flag to CLOUD_SQL_EXPORT_VALIDATION. (#23614)	5
Add minimum version of pylint (#14775)We are using some pylint rules that were added in pylint 2.7.0,for example `consider-using-generator`. When older version ofpylint is used, it fails with this error:* E0012: Bad option value 'consider-using-generator' (bad-option-value)Adding lower-limit forces the pylint to be upgraded even ifsomeone's image or installation already had pylint installed.	1
[TOPI] improve elemwise schedule (#393)* [TOPI] improve elemwise schedule* modify fuse	1
[Torch] Remove unused conversion (#8397)* fix weight shape in torch.mm conversion* Revert "fix weight shape in torch.mm conversion"This reverts commit a1a8fd313c999060db675848f8b3de3e1c78e468.* [Torch] remove unused conversion	1
Troubleshooting moved to the installation page (#12533)	4
[ONNX] Add imports for Gelu, BiasGelu (#10898)As title. Adds imports for Gelu, BiasGelu from the com.microsoft onnx op domain.	2
Refactor test_variable_command.py (#8535)	3
[CI][TEST] Temporary disable nmsv4 test (#6151)	3
Docs: `remote_log_conn_id` can also be used to write logs (#22844)	2
Remove _get_pretty_exception_message in PrestoHookFix #8530	0
[AIRFLOW-3638] Add tests for PrestoToMySqlTransfer (#4449)- reformatting[AIRFLOW-3638] Add tests for PrestoToMySqlTransfer- add missing license header	1
[AIRFLOW-1821] Enhance default logging config by removing extra loggersCloses #2793 from jgao54/logging-enhancement	2
[Rust] More Rust bindings for Attrs (#7082)	5
[OpenCL] Fix type casting error (#11021)Faced situation when generated OpenCL kernel contained the following ifcondition:```if (uint4(...) && (int4(...) == int4(...)))```In this case, got the following error:"can't convert between vector values of different size ('uint4' and 'int __attribute__((ext_vector_type(4)))')"Added casts for binary ops. But it was necessary to modify `CastFromTo`and add new method `CastTo`. Because with `CastFromTo` the followingcode was generated:```if (uint4(...) && (convert_uint4(int4(...)) == convert_uint4(int4(...))))```But the OpenCL compiler still generated the same error.This is why added new method `CastTo`. In this method we don't check thecurrent type of op and just add cast to a new type.Finally the following code will be generated:```if (uint4(...) && convert_uint4(convert_uint4(int4(...)) == convert_uint4(int4(...))))```	1
[AIRFLOW-6382] Add reason for pre-commit rule (#7538)	1
Fix migration 0080_2_0_2 - Replace null values before setting column not null (#24585)	1
Fix permission error on non-POSIX filesystem (#13121)* Fix https://github.com/apache/airflow/issues/12669 - failure to change ownership of log file on azure	2
fix:getcwd not work on android platform (#7390)* fix:getcwd not work on android platform* replace `exit()` with `_exit()` on subprocess in `cpp_rpc`Co-authored-by: rqg <ranqingguo318@gmail.com>	1
Rename runtime-config to executor-config and add documentation for Model Library Format (#8270)* Rename runtime-config to executor-config.* Add documentation.* address comments, make tests pass* fix unit test* fix sphinx doc errors* address manupa comments	1
Datacatalog assets & system tests migration (AIP-47) (#24600)	3
Fixing typo for render_template_as_native_obj (#17114)	2
Fix MyPy errors in google.cloud.sensors (#20228)Part of #19891	0
Merge pull request #1533 from markreddy/AIRFLOW-153-fix-typos	2
Add per-DAG delete permissions (#21938)This PR adds per-DAG delete permissions and extends the sync-perms subcommand to add delete permissions to the database for all existing DAGs (it does not, however, grant any of the new DAG delete permissions to any roles).	4
[AIRFLOW-4311] Remove sleep in localexecutor (#5096)	4
Don't require unittests.cfg to avoid overwriting airflow.cfg	5
[DOC] Add Android Tutorial (#2977)* fix APP_STL for latest android ndk* add vulkan sdk for tutorial* add android tutorial* fix of invalid input layer name* update relay build opt_level 1 -> 3	5
[VTA] YoloV3 Support (#4887)* [VTA] YoloV3 SupportIssue:YoloV3 use some operator and logic that not get good support byexisting vta logic, like nn.pad, upsample, and 255 output channel.Solution:add related logic to let darknet YoloV3 can running on VTA* Fix small(0, or 1 heigh/width) detect frame issue.* add yolov3-tiny turtorial* add os import* address review comments.* rename tutorial file with a short name.* rename deploy_vision_on_vta.py into deploy_classification.py.* address review comment, fix plint eror in deploy_detection.py	0
[Auto Scheduler] Add target host to measure record (#7046)* [Auto Scheduler] Add target host to measure record* Fix PyLint* Fix lint* Solve the serialization logic when we don't have hardware params* update auto scheduler log	2
Dev: Clarify file naming in release verification doc (#19233)	2
[FRONTEND][TENSORFLOW] NCHW layout support (Resnet V1/V2). (#1743)	1
[DOC] Add missing targets to target_name documentation. (#3128)	2
v0.3.1	5
Fix sqlite hook - insert and replace functions (#17695)	1
[microtvm][RVM] Refactor Arduino/Zephyr into one RVM (#12023)	4
[TOPI] Parallelize GPU NMS inner loop (#7172)* make NMS inner loop parallel* use one block two avoid global sync issue* temp disable write by only thread 0* leave a TODO on write by only one thread* add some comments, remove check the check on negative class id* minor improvement when topk is available* fix write by a single thread	0
[AIRFLOW-3600] Remove dagbag from trigger (#4407)* Remove dagbag from trigger call* Adding fix to rbac* empty commit* Added create_dagrun to DagModel* Adding testing to /trigger calls* Make session a class var	1
Avoid using heavy API to query single attribution (#3179)	1
Merge pull request #161 from mistercrunch/login_generalMaking login module generic / overridable	2
[RPC] Replace timestamp with counter (#7389)	5
Fix typo: `parsed_results` -> `parse_results` (#19588)	2
Removes InputRequired validation with azure extra (#20084)The change #19923 introduced (accidentally) a required validationfor an azure extra, which caused an error in the connectionUI when the connection could not be added because the field wasmissing.This failed the test_crate_connection fail.This change removes back the validation.	5
[AIRFLOW-4299] Upgrade to Celery 4.3.0 to fix crashing workers (#5116)	1
CI: Propogate Exit Code Correctly (#9247)This was unfortunately broken since #9138Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>	5
[microNPU] Update existing microNPU tutorial for CMSIS-NN (#11285)* [microNPU] Update existing microNPU tutorial for CMSIS-NN * Added instructions to existing microNPU tutorial indicating how to offload operators to CMSIS-NN.Change-Id: I9faef1d92a2107e04cfc21b7bfd1b72dc1bd5489* [microNPU] Update existing microNPU tutorial for CMSIS-NN  * Reformat micro_ethosu.py with blackChange-Id: Id189f333b5bd891232781d4eb58522a240146c95	4
[Relay][Op] Dropout and batch_norm (#1870)	4
Clarfying the docs	2
[AIRFLOW-308] Add link to refresh DAG within DAG view headerCloses #1646 from Firehed/refresh_on_dag	2
[AutoTVM][TOPI] AutoTVM incorrect measurement (#5511)* [AutoTVM][TOPI] AutoTVM incorrect measurement* create new placeholder with converted layout* update _schedule_winograd	5
Make sure that KRB5_KTNAME is also set to the keytab for airflow* A keytab is required to verify the authenticity of the KDC and is* required to prevent spoofing in case of user verification.* In general this points to the system's key tab, ie. in /etc/krb5.keytab* but this is normally only readable by root, hence it needs to point* to the keytab in use by airflow	1
[Relay][Frontend] Simplify parameter handling in Tensorflow frontend (#2993)	2
Helm chart 1.6.0 is released; bump chart version to 1.7.0-dev (#23840)	2
[CODEGEN] Generate main compute function separately with alias info (#253)	5
[TOPI] Update pre-tuned parameters for TX2 and fp16 on Mali (#1892)	2
[RELAY] Refactor type inference to use type solver (#1779)	1
Add tests for docker-compose quick start (#19874)	2
Add oss_task_handler into alibaba-provider and enable remote logging to OSS (#21785)	2
Add Match.com to list of companies using Apache Airflow (#17518)Added Match.com to list of companies using Apache Airflow	1
Add Helm Chart Release Guide (#16121)This commits adds "manual" instructions to release Helm Chart.This will be automated by a script over coming days.	2
[skip ci][ci][docker] Pin Pillow version (#11348)A recent release depends on some things we don't have installed, so don't use it.e.g. https://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-11319/5/pipeline/Co-authored-by: driazati <driazati@users.noreply.github.com>	1
[AIRFLOW-466] Add Vente-Exclusive.com as an official Airflow userPlease accept this PR that addresses the followingissues:(https://issues.apache.org/jira/browse/AIRFLOW-466/).Trivial doc addCloses #1766 from alexvanboxel/feature/vex-as-user	1
[AIRFLOW-1983] Parse environment parameter as templateCloses #2928 frompatsak/f/environment_paramater_as_template	2
[AIRFLOW-525] Update template_fields in Qubole OpThere were couple of more fields in QuboleOperator which requiressupport of Jinja templating, so added these missedout fields as wellto template_fields. Also added a missing doc(about notify) and anexample of using macros.Closes #1808 from msumit/AIRFLOW-525	1
[ci] Use smaller ARM nodes for build/test (#11445) (#11457)This applies the new instances from https://github.com/tlc-pack/ci-terraform/pull/32Co-authored-by: driazati <driazati@users.noreply.github.com>Co-authored-by: driazati <driazati@users.noreply.github.com>	1
raise error instead of returning	0
[Doc] Fix broken link (#4438)* [Doc] Fix broken link* [Doc] Fix broken link* [Doc] Fix broken link	2
[Relay][Pass]Improve memory_allocation pass to support multiple i/o dynamic kernels (#4595)* Add more shape funcs* Fix test* Enhance test_any_concat* Fix pylint* Minor fix test* Fix pylint* Minor refactor* Add test any for elemwise	3
[AIRFLOW-111] Include queued tasks in scheduler concurrency checkThe concurrency argument in dags appears to not beobeyed because thescheduler does not check the concurrency properlywhen checking tasks.The tasks do not run, but this leads to a lot ofscheduler churn.Closes #2214 from saguziel/aguziel-fix-concurrency	0
Support non-https elasticsearch external links (#16489)Also provide an example for `frontend` as its not immediately apparenthow to build a short(ish) deep link.	2
[Tutorial] External Tensor Op (#137)	5
C++ API work with python	1
Add authentication to lineage endpoint for experimental API (#13870)	1
AIP-47 - Migrate dbt DAGs to new design #22472 (#24202)	1
[autotvm] fix #2617 (#2619)	0
Merge pull request #1337 from r39132/masterGithub ISSUE_TEMPLATE & PR_TEMPLATE cleanup	4
[AIRFLOW-2614] Speed up trigger_dag API call when lots of DAGs in systemRather than loading all dags in the DagBag, find the path to thespecific DAG from the ORM and load only that one.Closes #3590 from mishikaSingh/master	2
[AIRFLOW-393] Add callback for FTP downloads (#2372)	1
[AIRFLOW-2692] Add job_name as templated parameter in AWS Batch OperatorCloses #3557 from craigforster/master	1
gitignore build-* folders (#10168)Co-authored-by: pfk-beta <this_email_isnot_working@gmail.com>	1
Fix broken dagrun links when many runs start at the same time (#23462)* Load requested dagrun even when there are many dagruns at (almost) the same time* Fix code formatting issues	0
Updating Amazon-AWS example DAGs to use XComArgs (#16868)	1
Add missing call to Super class in 'http', 'grpc' & 'slack' providers (#7826)	1
[AIRFLOW-6643] Fix flakiness of kerberos tests (#7264)Kerberos test were still flaky because checking for kerberos token happensbefore active waiting for kerberos to be ready.	1
Updating Google Cloud example DAGs to use XComArgs (#16875)	1
[RPC][BUGFIX] Fix remote device sync (#5538)	0
[TOP][COMPILER] sum, min, max, transpose, fix dense (#28)	0
[VTA] Fix vta rpc server, refactor launch cond to not depend on sys.argv (#8671)	5
Correct command for starting Celery Flower (#9483)	5
[Bug][Meta Schedule] Fix Infinite Loop Caused When Calling Methods Not Overrided In PyClass. (#9451)* Fix Infinite Loop Caused When Calling Methods Not Overrided In PyClass.* Add new line.* Lint.	1
get_top_results works on a copy of output (#7327)	1
Merge pull request #74 from mistercrunch/chartMore charts improvements	1
Renamed up/downstream references to producing/consuming (#25688)We changed the UI to use these new terms already, but the code wasn'tchanged. These names are clearer to me (and others) so I have made thecode reflect them too.	4
[AIRFLOW-6113] [AIP-21] Rename GCP transfer operator (#7000)changes in howto refs in cloud_storage_transfer_service.rst	4
[TEAM] New reviewer: kazum (#1417)	1
Don't show irrelevant/duplicated/"internal" Task attrs in UI (#22812)For example, showing `Log Logger <airflow.models.mappedoperator.MappedOperator (INFO)>` isn't useful.	1
Making the dependency engine more flexible	1
Merge pull request #996 from 0xR/GoogleCloudStorageDownloadOperator-template-dst-filenameAdded the dst filename to template_fields GoogleCloudStorageDownloadOperator	1
Add kdc download and some test	3
Add compat shim for SQLAlchemy to avoid warnings (#21959)	2
Use int for int8x4 due to performance overhead of char4 (#1569)* Use int for int8x4 due to performance overhead of char4* Add a comment about using int* Remove invalid test	3
[Runtime][ThreadPool]Refactor affinity function and support CPU affinity list setting. (#9802)* [Runtime][ThreadPool] Refactor affinity function and support CPU affinity list setting.Issue:1. There are multiple affinity function using "LINUX" and "ANDROID" macrocheck and the multiple check make the logic maintain and change becomecomplex.2. Current logic of tvm [Runtime][ThreadPool] assume all of the cpu resources are available fora single backend runtime to do the data flow computation. But such assumption may nottrue when user running multiple task on the system and not want tvm taskexhaust all of the cpu resource, or when user going to run multiple backendruntime of tvm on the system, each backend runtime of tvm should use different cpuaffinity settings to achieve best performance.Solution:1.Refactor the affinity functions to move the "LINUX" and "ANDROID" checkinto one function.2.In this solution, we introduce a new "CPU AffinityMode type" named "kSpecify", by using"kSpecify" and the function named "tvm::runtime::threading ::Configure" user can specifythe cpu list for the cpu affinity of a backend runtime.This solution reused the existing per thread thread pool logic of [Runtime][Threadpool] thatcreated a worker thread pool for current thread which can running a particular runtime. for a multipleruntime use case, user can first launch multiple threads, then call "tvm::runtime::threading ::Configure"with cpu list to create tvm data flow worker thread pool, after doing this the execution of the multipleruntime on the multiple threads will use different cpu resource list.* fix windows build issue.* fix build issue.* fix build issue.* fix windows build issue.* fix plint issue* polish comments.* address review comments.* address reivew comments.* address review comments.* address review comments.Co-authored-by: hua jiang <hua.jiang@xilinx.com>	1
[PASS] Update coproc sync (#634)	5
Edit FAQ to reference Airflow 2 as a solution to latency problem, closes #12348 (#12450)	0
[RELAY][OP] expand_dims (#1819)	5
[TOPI] Bitserial low-precision convolution (#1332)	5
Add Hacktoberfest topic to the repo (#11258)	1
[AIRFLOW-1030][AIRFLOW-1] Fix hook import for HttpSensorCloses #2180 frompdambrauskas/fix/http_hook_import	2
[FIX][TOPI][X86] schedule dense pack (#4539)	0
Remove nnvm (#4565)	4
Fix conv2d_nchw for opencl intel graphics (#8201)	0
Doc: Restoring additional context in Slack operators how-to guide (#18985)A recent update to the Slack example DAG removed some context of using operators that users may find useful.  Some of the args were moved to `default_args` to simplify authoring of the DAG but these args disappeared from the Slack operator how-to guide as a result.  This PR should be a happy middle ground between example DAG enhancement and how-to guide showcase of the operators.	1
quanitze operation expanded to take const argument (#6127)* quanitze operation expanded to take const argument* amendmentsused get_tensor_expr, added _test_forward_quantize_dequantize_const test	3
Add guide for Apache Spark operators (#8305)	1
[Quantization] Make calibration faster and more memory usage friendly (#4589)* Use memory efficient calibrate* Fixed indexing* add cpp kl stub* ported KL cpp from mxnet* Fixed std::distance arguments order* remove python implementation* fix lint and indent* fix indent* refactoring* fix lint* fix for i386	0
[AIRFLOW-273] Create an svg version of the airflow logo.Closes #1619 from gwax/svg_logo	2
Adding cache support for charts	2
Use session instead of outdated main_session for are_dependencies_met	5
[CPP] Refactor remove tvm/tvm.h (#3523)	4
[FRONTEND] Composed operators (#175)* fix for composed symbol* fix* clean up* fix exception type	0
Fix Invalid log order in ElasticsearchTaskHandler (#17551)	0
Unbreak main after missing classes were added (#23819)	1
Adjust limits when constructing cross-provider dependencies (#25364)When we are constructing cross-provider dependencies, we should adjustthe limits to account for some apache-airflow packages that are not yetreleased.The adjustment is to add ".*" after the version number whendependency is lower-bound with `>=`. It's not explicitly mentioned inPEP 440 - it is only mentioned there that it works forequality, but since `>=` is also part of `equal` it alsoworks there.Example is a common-sql package that might be limited to `>=1.1.0`in google provider as part of the change, but it might not yet be releasedas it is being released together with the package it is needed by.We  need to adjust the version whenever in our providers werefer to other providers with >= install clause because  `--pre`flag in `pip` only allows to install direct pre-release (anddevelopment) dependencies but it does not modify requirements ofthose package to also include pre-releases as transitive dependency.Also, we need to remove the limits in `devel` dependencies becausethe packages are not yet released at the moment we use thosedependencies, so the limits in `devel` should be removed, allowingthe developers to install Airflow without those devel packages.Also a bug was found that would prevent to generatethe dependencies in case provider.yaml file only changed (badspecification of .pre-commit include)	4
[OpFusion] Make the max number of fused ops configurable (#6327)	5
Update `ExternalTaskSensorLink` to handle templated `external_dag_id` (#21192)	2
Add cleanup of docker-context-files (#23197)Seems that some files can be left in the repositories of ours. Thisprevents empty prod images to build propoerly.This change adds --cleanup-docker-context files emptybuild-prod-image on CI	2
Improve error messages with TVM_LOG_DEBUG and add docs (#11344)* Improve error messages with TVM_LOG_DEBUG and add docs.* Fix requirement to prepend "src" with /.	1
Set Postgres autocommit as supported only if server version is < 7.4The server-side autocommit setting was removed here http://www.postgresql.org/docs/7.4/static/release-7-4.htmlResolves: #690	2
Refactor official source section to use bullets (#10801)* Refactor section to use bullets* Change structure to group the binary options	4
SQSPublishOperator should allow sending messages to a FIFO Queue (#25171)	1
Temporary limit Pandas version (#21045)This is likely only for couple of days to avoid test failuresin `main`. When the 3.4.4 version of Flask Builder getsreleased we should be able to relax the limit as it will allowus to migrate to sqlalchemy 1.4	1
Add BigQuery to Google Cloud Storage operator.	1
[AIRFLOW-XXX] Upgrade FAB to latest version (#4955)	3
fix a bug in case of date equality	5
Add convenience functions for configuration namespace	5
Make Autopad static when available (#7755)	1
[AIRFLOW-5919] Group tests for the Users/Roles/Perms commands (#6568)	1
Improve the keras frontend to support tflite 2.6 (#9562)This code change keeps compatibility with tflite 2.4	4
proper device query through rocm api (#4305)	5
Add map_index label to mapped KubernetesPodOperator (#21916)	1
Revert "Fix error in seeding elastic `log_id` template (#24960)" (#24966)This reverts commit c97f0b3da09079778dc9317030cfacc5df01e88c.	4
[Minor][MetaSchedule] Suppress warning for using `None` (#11868)	1
Make Migrations 1.10.14 Compatible (#12896)	1
Update code examples from "classic" operators to taskflow (#25845)	1
Disable connection pool for celery worker (#22493)	1
Revert "[Frontend] Add Span filling for frontends to Relay (#9723)" (#10072)Because of the failure of LSTM conversion from Pytorch	0
Add remaining community guidelines to CONTRIBUTING.rst (#11312)We are cleaning up the docs from CWiki and this is what's left ofcommunity guidelines that were maintained there.Fixes #10181	0
Add fallback for ApplyGraphBest (#2485)	1
Skip discovering snowflake provider in development mode (#13062)The snowflake provider when imported breaks other providersUntil https://github.com/apache/airflow/issues/12881 is fixedwe should skip discovering snowflake provider in development mode	1
[AIRFLOW-1263] Dynamic height for chartsDynamic heights for webserver charts so thatlonger tasknames fitCloses #2344 from aoen/ddavydov--dynamic_chart_heights	2
Remove redundant register exit signals in `dag-processor` command (#23886)	2
closes apache/incubator-airflow#2827 *Closed for inactivity*	5
Limiting/parameterizing the max number of active runs per DAG	2
[Target] Add "features" property to Target (#12121)This adds a generated property "features" to the `Target` which cancontain a read-only list of available features in line withhttps://github.com/apache/tvm-rfcs/pull/78.Features are re-generated upon parsing into a `Target` object rather than beingattached as `attrs`. The `Target` JSON is therefore stored without theinferred `features` attached.	5
[Bugfix] Fix type code error for StringImm (#3050)	0
Implement test to detect actions that are missing required security decorator. (#18467)	1
Typo	2
Fix package version in ``LICENSE`` file (#16514)Some of the versions were outdated and we no longer use `Bootstrap Toggle` as we removed it in https://github.com/apache/airflow/pull/11035	4
make sure bytes get decoded to strings	1
[External Codegen] Fix annotate pass static variable (#5023)'fannotate' in the annotate_target pass was designated asstatic. This meant that if you use the pass to annotatemore than one codegen, its value is not updated when thetarget changes resulting in incorrect annotation.Change-Id: Ib4f3af5cfbef44f29771818219755198ac313a0e	4
[USMP] Change internal workspace section (#11246)This commit changes the internal workspace generationto be under .bss.noinit.* with NOLOAD behaviour as itdoes not need any form initialization.	5
[AIRFLOW-4827] Remove compatible test for python 2 (#5448)	3
[TensorIR][M2a] ComputeInline,ReverseComputeInline (#8170)This PR is part of the TensorIR upstreaming effort (#7527), which adds the first 2 schedule primitives:- compute-Inline- reverse-compute-inlineCo-authored-by: Siyuan Feng <Hzfengsy@sjtu.edu.cn>Co-authored-by: Bohan Hou <32121147+spectrometerHBH@users.noreply.github.com>Co-authored-by: Ruihang Lai <lairuihangdongdong@qq.com>Co-authored-by: Hongyi Jin <3231950289@qq.com>Co-authored-by: Wuwei Lin <wuwei@apache.org>Co-authored-by: Cody Yu <comaniac0422@gmail.com>	1
Fix databricks tests (#23856)	3
Use python client in BQ hook create_empty_table/dataset and table_exists (#8377)* Use python client in BQ hook create_empty_table method* Refactor table_exists and create_empty_dataset* Add note in UPDATING	5
[Keras] fix dropout bug (#399)	0
Calculate duration in UI (#23259)* Calculate duration in UI* calculate mapped instance duration too	2
Add TruFactor to Airflow users list (#9584)	1
Merge pull request #77 from mistercrunch/celery_paramMaking concurency a conf param, stting CELERYD_PREFETCH_MULTIPLIER=1	2
Fix TOC on "How-to Guides/GCP" (#8295)	0
[RUNTIME] Implement TVMDSOOp(TensorFlow custom op) for TVM runtime (#4459)* Add implementation of TVMDSOOp* feat: Update cmake script to work with c++11 and in-repo build* feat: Use libtvm as oplib dependency* fix: Add missing link dependency to libtvm* feat: Update tf tvmdso op by review comments* fix: Update with pr comments* fix: Fix lint* feat: Add test script and fix gpu shape* feat: Add test script and fix gpu shape* fix: Conditional build tftvm op for gpu* fix: Conditional build tftvm op for gpu* fix: Fix pylint of tf_op module.py* fix: Fix pylint of tf_op module.py* feat: Conditional enable gpu test for tftvm op* feat: Conditional enable gpu test for tftvm op* feat: Add tf_tvmdsoop test script as an app test* fix: Fix gpu/cpu enabled check on tvm in test script* fix: Make tf tvmdso op test script runnable with pytest* remove unused test script test_tfop_module.py* fix: Remove pushd & popd in tfdsoop test script* fix: Upgrade tftvmop use python3 to find TensorFlow* fix: Upgrade tftvmop use python3 to find TensorFlow* fix: Change target_link_options to target_link_libraries* fix: Add tftvmop build script's c++ option* fix: Add tvm library path to tf op test library path* fix: Debug ci build for tftvm dso op* fix: Fix cmake error and skip tfop test* fix: Fix typo and indentation issues* feat: Use TF list input op def* fix: Fix style and unexpected changesCo-authored-by: baoxinqi <baoxinqi@4paradigm.com>Co-authored-by: Chen Dihao <chendihao@4paradigm.com>Co-authored-by: wrongtest <wrongtest@4paradigm.com>	3
Fix mypy typing for airflow/models and their tests (#20272)The re-ordering of setting attributes in BaseOperator is because_something_ about that function (throwing the exceptions?) causes mypyto think that BaseOperator objects could be missing those attributes	1
Local Executor is used by default for MySQL/Postgres breeze (#11792)	1
Only show import errors for DAGs a user can access (#17835)For new DAGs (ones that have not previously parsed successfully), importerrors will only be shown to users who can read all DAGs.Closes: #17684	2
[AIRFLOW-6692] Generate excluded_patterns in docs/conf.py (#7304)	5
[DOCS] Fix Sphinx Warning: the target found for cross-reference (#4925)* [DOCS] Fix Sphinx Warnings: the target found for cross-reference warnings* Fix the warning: undefined label	2
[DOC]Update documentation (#2286)	2
Fix mypy facebook ads hooks (#20589)	1
[AIRFLOW-361] Add default failure handler for the Qubole OperatorDefault failure and retry handler in Qubole Operator will make surethat commands at Qubole and tasks in Airflow are in sync, and thereare no unwatched commands running at Qubole side.Dear Airflow Maintainers,Please accept this PR that addresses the followingissues:- *https://issues.apache.org/jira/browse/AIRFLOW-361*Thanks,SumitCloses #1682 from msumit/AIRFLOW-361	0
Fixes Docker xcom functionality (#21175)* Fixes Docker xcom functionality	1
Fix int8 cuda kernels on older SM versions (#11389)* Fix int8 cuda kernels on older SM versions* Update target.py* Simplify initialiasation of do_tensorize* Simplify initialization of do_tensorize dense* Simplify initialization of do_tensorize in group_conv_nchw* Fix tensorize for conv2d_int8 as well.* Try to make linter happy* make linter happy* Fix wrong commit to auto_scheduler	0
[Relay][TOPI] operator All (#3124)* [Relay][TOPI] operator All* Update tests/python/frontend/tensorflow/test_forward.pyCo-Authored-By: yongwww <55wuyong@163.com>* fix comments* change to level 4	4
[microTVM][RVM] Add Arduino RVM (#8748)* Functioning Arduino Vagrant VMBegin building Arduino Vagrant VMMostly working Vagrant VMChanges for debuggingAdd ignored json fileFix venv path* Generalize parts of RVM for multiple platformscwd hackAdd unit tests from apps directory to task_python_microtvm.shGeneralize parts of RVM for multiple platforms* Add Vagrantfile lint exceptions* Address PR commentsAddress Mehrdad's PR commentsMore PR commentsDocumentation tweaksAdd dialout group to user* Rerun tests* Spresense fix* Rerun CI tests* Rerun tests	3
[QNN] Lookup operations for hard to implement operators (#10053)* initial tanh impl* smalls error* support uint and int lookup into tables* reinterpret cast, working tanh tests* refactor relay func creation* basic casting tests* explicitly say do not handle multi-channel lookups* add example funcs* fix silent fail* fix some bugs with floating point funcs not working* add TODO* add tood* canonicalizations* refactor integer lookup ops into own folder* fq2i stuff* clean up existing tests* flesh out todo* more tests* test on keeping shape good* lookup table fix* replace canonicalization for rsqrt* remove canonicalization of rsqrt* add asf headers* topi tests* gather supports unsigned integer tests* fix things* move to legalization* jostle ci* linting* use take instead of gather* remove gather changes* undo changes* undo changes* undo changes* move thing in range* initial tanh impl* smalls error* support uint and int lookup into tables* reinterpret cast, working tanh tests* refactor relay func creation* basic casting tests* explicitly say do not handle multi-channel lookups* add example funcs* fix silent fail* fix some bugs with floating point funcs not working* add TODO* add tood* canonicalizations* refactor integer lookup ops into own folder* fq2i stuff* clean up existing tests* flesh out todo* more tests* test on keeping shape good* lookup table fix* replace canonicalization for rsqrt* remove canonicalization of rsqrt* add asf headers* gather supports unsigned integer tests* fix things* move to legalization* jostle ci* linting* use take instead of gather* remove gather changes* undo changes* undo changes* undo changes* move thing in range* lint* remove unneeded line* jostleCo-authored-by: andrewzhaoluo (generated by with_the_same_user script) <andrewzhaoluo@system76-pc.localdomain>	5
Docs entry	1
Added ssh_hook	1
[skip ci][ci] Disable `test_solution_consistency` (#11460)See #11458Co-authored-by: driazati <driazati@users.noreply.github.com>	1
Update celery and kombu versions (#9496)	5
ONNX bitshfit (#7800)	5
Prepare to switch to debian bullseye (#21522)In order to switch smoothly to Debian Bullseye we need to run afew more tests and see if the performance impact we observe isconsistent (the tests with Public Runners seems to be killed morefrequently there).This requires some preparatory work - namely add the capabilityof overriding the DEBIAN_VERSION via PR - because otherwiseBuild Images workflow that runs from main will build buster imagesuntil the change is actually merged.This change introduce this capability without switching toBullseye yet - it will unblock the actual PR that will make thechange from failing in PRs though.	0
Add a default for DagModel.default_view (#10897)fixes https://github.com/apache/airflow/issues/10283	0
[Dyn] Use SizeVar instead of Var in the GetShape function (#9650)	1
[ci][1/2] Shard `frontend: GPU` job into 2 jobs (#10413)This is the longest individual CI job by about an hour, meaning everything else is usually done and waiting on this job for a while before the entire build completes. This PR breaks it up into two roughly equal jobs (based on timings in https://ci.tlcpack.ai/job/tvm/job/main/2623/testReport/, both should take about 90 minutes). If capacity is available, this means CI jobs could potentially take 1 hour less. If not available, besides an insignificant queueing delay this PR has no effect.This is a two part PR since the Jenkinsfile changes cannot be bundled in this PR, so they will need to be in a follow up.cc @areuschCo-authored-by: driazati <driazati@users.noreply.github.com>	1
[AIRFLOW-1793] Use docker_url instead of invalid base_urlCloses #2998 from kodieg/patch-3	2
