[hotfix] Fix time-micros and timestamp-micros handling	0
[FLINK-8118] [table] Fix documentation mistakes	2
[hotfix] Minor StreamGraphGenerator refactoring	4
[FLINK-26026][connector/pulsar] Create unit tests for Pulsar sink connector.	3
[FLINK-16772][hive] Move derby dependency to test scope	3
[FLINK-8636] [flip6] Use TaskManagerServices to pass in services to TaskExecutorPass in the TaskExecutor services via the TaskManagerServices insteadof individually.This closes #5456.	4
[FLINK-20008] Move LeaderContender callbacks back under the DefaultLeaderElectionService lockIn order to avoid seeing LeaderContender callbacks after the DefaultLeaderElectionServicehas been shut down, they need to be executed under the lock of the service. This entailsthat the user of this class should not close the service under the same lock as thecallback can acquire.	1
Fix typo in exception message from assiged to assigned in ExecutionJobVertex.	2
[FLINK-9435][java] optimise ComparableKeySelector and ArrayKeySelector for more efficient Tuple creationBenchmark results (2 runs) by running the benchmarks fromhttps://github.com/dataArtisans/flink-benchmarks/pull/5:Benchmark                    Mode  Cnt     Score    Error   Units================= old =================KeyByBenchmarks.arrayKeyBy  thrpt   30  1151.305 ± 21.096  ops/msKeyByBenchmarks.arrayKeyBy  thrpt   30  1117.486 ± 43.508  ops/msKeyByBenchmarks.tupleKeyBy  thrpt   30  1659.634 ± 28.627  ops/msKeyByBenchmarks.tupleKeyBy  thrpt   30  1554.265 ± 82.604  ops/ms================= new =================KeyByBenchmarks.arrayKeyBy  thrpt   30  1150.552 ± 51.185  ops/msKeyByBenchmarks.arrayKeyBy  thrpt   30  1195.777 ± 10.621  ops/msKeyByBenchmarks.tupleKeyBy  thrpt   30  1743.633 ± 27.109  ops/msKeyByBenchmarks.tupleKeyBy  thrpt   30  1697.885 ± 22.101  ops/msThis closes #6115.	1
[FLINK-19655][table-runtime-blink]  Fix NPE when using TemporalTableFunction after setting IdleStateRetentionTimeThis closes #13675	1
fix stream issueapparently you can literally only create 1 stream from a collection...	1
[hotfix][S3] Shade jackson 2.6	0
[FLINK-9234] [table] Fix missing dependencies for external catalogsThis closes #5897.	2
[FLINK-5728] [kafka] Let FlinkKafkaProducers flush on checkpoints by default	2
[FLINK-7116] [rpc] Add getPort to RpcServiceThe RpcService should expose its port it is bound to. That way it is easier to connect to aremote RpcService.This closes #4275.	1
[FLINK-18453][tests] Fix overflow of AggregateITCase#testAggregationCodeSplitThis closes #12861	3
[FLINK-4251] [Rabbit MQ] Allow users to override queue setup in order to customize queue configThis closes #2281	5
[FLINK-18032] Remove outdated sections in migration guide	5
[hotfix] Change the scope of WatermarksWithWatermarkAlignment	4
[FLINK-9899] Add more ShardConsumer metricsThis closes #6409.	1
- added additional tests for empty inputs of CrossTask- cleaned up inline comments of CrossTask	4
[FLINK-13632] Port MapSerializer upgrade test to TypeSerializerUpgradeTestBase	3
[FLINK-13972] Rename the PreviewPlanEnv	2
[hotfix][cep] Renamed TimerContext to TimeContext	0
[FLINK-3592] [docs] Update setup quickstart	1
[FLINK-7724] [metrics] Add extra metrics to MetricStoreTest.setupStoreThis closes #4739.	3
[FLINK-11679][table] Create Blink SQL planner and runtime modulesThis commit adds flink-table-planner-blink and flink-table-runtime-blinkmodules. Those modules are work-in-progress and are not connected to theAPI yet. This happens at a later stage (see FLINK-11452). We aim to makethe runtime module Scala-free.Initial dependencies have been added. Optimization with Calcite, codegeneration, and translation to operators are performed in the plannermodule.Actual execution classes and code compilation are performed in the runtimemodule.This closes #7790.	1
[FLINK-20013][network] Release network buffer in BoundedBlockingSubpartition if task is failed or canceled (#14008)	0
[FLINK-2324] [streaming] ITCase added for partitioned states	1
[FLINK-21996][tests] Add ITCase to test for delayed and failed operator event sending.	1
[FLINK-21270][runtime] Add ResourceProfile field to ExecutionSlotSharingGroup	2
[FLINK-7117] [ha] Add HighAvailabilityServices.getJobManagerLeaderRetriever(jobId, defaultJobManagerAddress)The getJobManagerLeaderRetriever method with the defaultJobManagerAddress parameter is necessary forthe standalone HA services case. The TaskExecutor don't know at creation time of the HA services,where the JobManager will be executed. Therefore, we need this way to pass in the JobManageraddress at runtime.This closes #4276.	1
[hotfix] remove unused method in YarnConfigUtils	5
[tez] remove unused hash variable- Prevents crashing of IntelliJ Checkstyle plugin	1
[FLINK-26583][runtime] Adds log message for when a Job is submitted that is already marked as cleaned	4
Adjusted file URIs in some tests for Windows compatibility	3
Fix number formatting in JSON plans	5
Change return type of the CoGroup combine functions to a single value.Add default empty method stub for combiners in CoGroup functions.Add semantic property fields to single- and two-input udf operators.Lots of comments.	1
[FLINK-1637] Reduce number of files in uberjar for java 6This closes #450	2
[hotfix][python][dcos] Fix the typos in the Metrics Doc	2
[FLINK-1539] [streaming] Remove calls to uninitalized runtimecontexts	1
[FLINK-15912][table] Clean TableFactoryUtil	4
[FLINK-17435][hive] Hive non-partitioned source supports streaming readThis closes #12025	1
[FLINK-24388][table-planner] Introduce Module#getTableSinkFactoryThis closes #17384.	1
[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex	5
[FLINK-5000] Rename Methods in ManagedInitializationContextThis removes "managed" from the OperatorStateStore and KeyedStateStoreaccess methods. There is no "un-managed" state and users might bewondering what "managed" means here.	1
[FLINK-10623][e2e] Extended sql-client e2e test with MATCH_RECOGNIZE	3
[FLINK-6491] [table] Add QueryConfig and state clean up for non-windowed aggregates.	4
[FLINK-11534] [container] Allow ExecutionMode configuration	5
implemented jdbcoutputformat	5
[hotfix][tests] Allow to run SpillableSubpartitionTests in the loop	3
[hotfix][core] Remove ResourceAggregateTypeCurrently only AGGREGATE_TYPE_SUM is valid and used.AGGREGATE_TYPE_MAX is broken (#subtract() not implemented) and not used.	1
[FLINK-19138][python] Support directly specifying input_types and result_types as DataTypes.ROWThis closes #13906.	5
[FLINK-10247] Return TaskManager metricy query paths in non-blocking fashion	2
[FLINK-12066] [State Backends] Remove StateSerializerProvider field in keyed state backendThis closes #8078.	1
[hotfix] Minor clean-up in TaskExecutorProcessUtils.	4
[FLINK-19308][coordination] Add TEConnection to TMSlotInformation	5
Remove debug LOG message of TaskManager heartbeats	2
[FLINK-21148][test] Removes runTest in runDetachedModeTestrunDetachedModeTest is a utility method called by actual tests. These tests aretaking care of setting up the test context for cleanup. Hence, it does not haveto be included in runDetachedModeTest	3
[FLINK-4933] [exec graph] Don't let the EG fail in case of a failing scheduleOrUpdateConsumers callInstead of failing the complete ExecutionGraph, a failing scheduleOrUpdateConsumers callwill be reported back to the caller. The caller can then decide what to do. Per default,it will fail the calling task.This closes #2700	0
[hotfix][doc] Fix typo in asyncio.mdThis closes #10765 .	2
[streaming] stream-join modified for new api	1
Adjusted TupleTypeInfo for updated comparator	5
[FLINK-19832][tests] Add test for immediately failed PhysicalSlot in SlotSharingExecutionSlotAllocatorThis commit adds the SlotSharingExecutionSlotAllocatorTest.failLogicalSlotsIfPhysicalSlotIsFailed whichensures that the SlotSharingExecutionSlotAllocator will fail all logical slots and return the physical slotimmediately if the requested physical slot future is completed exceptionally.This closes #13879.	2
[hotfix][table-planner] Remove unnused Quarter case classThe API for this was already changed in FLINK-6846.	2
[FLINK-5193] [jm] Harden job recovery in case of recovery failuresWhen recovering multiple jobs a single recovery failure caused all jobs to be not recovered.This PR changes this behaviour to make the recovery of jobs independent so that a singlefailure won't stall the complete recovery. Furthermore, this PR improves the error reportingfor failures originating in the ZooKeeperSubmittedJobGraphStore.Add test caseFix failing JobManagerHACheckpointRecoveryITCaseThis closes #2909.	1
[FLINK-28835][docs] Fix unaligned checkpoints documented compatibilityIt looks like there was a typo and we initially merged version conflictingwith what was agreed in FLIP-203.	5
[tests] Try to improve CI test stabilitySquashes the following commits:- [tests] Wait for task managers in JobManagerFailsITCase  Possible fix for: https://s3.amazonaws.com/archive.travis-ci.org/jobs/110235128/log.txt- [tests] Move ITCase from runtime to tests- [tests] Merge abstract and sub type class- [tests] Determine JobManagerProcess ports from logsThis closes #1676.	2
fixed properties propagation: instead of using a property blindly in the union case, it is droppedTODO: figure out when properties can be keept in the union case	4
[FLINK-8469] Unify RocksDB params in RocksDBPerformanceTestThis closes #5325.	5
[FLINK-7419][build][avro] Shade jackson dependency in flink-distThis closes #4981.	2
Removed superfluent file.	2
[docs] Adds akka configuration descriptionThis closes #527.	5
[FLINK-16153][docs-zh] Translate "Operator/windows" into ChineseThis closes #14773.	1
Refactored test cases	3
[FLINK-5714] [table] Use a builder pattern for creating CsvTableSourceThis closes #3273.	1
[FLINK-9261] [security] Fix SSL support for REST API and Web UI.- Remove wrong reuse of SSLEngine instances. SSLEngine must be re-created for  every SocketChannel initialization.- Add ChunkedWriteHandler to REST server pipeline because StaticFileServerHandler  relies on it.- Add integration tests to verify that SSL can be enabled.	0
[hotfix][javadocs] Add missing asterisk	1
[FLINK-11898] [table-planner-blink] Support code generation for all Blink built-in functions and operatorsThis closes #8029	1
[FLINK-21206] Implement HeapKeyValueStateIterator	2
[FLINK-29161][tests] Fix the built docker image name	2
[hotfix][e2e] Adds missing quotesThere's going to be a parsing issue reported if no parameter is passed due tothe if condition being rendered to [ == '1' ]. Adding the quotes fixes thisproblem.	0
Added testcases for OR-Expression.	3
[hotfix] Update RocksDB version to 5.7.5	5
[hotfix] [tests] Add unit tests for ChildFirstClassLoader	3
[FLINK-13281][tests] Improve test for aborting pending checkpoints on failover	0
[FLINK-5921] [table] Add custom data types for rowtime and proctime.- proctime() and rowtime() are translated to constont zero timestamp.This closes #3425.	5
[streaming] WordCount update for testing	3
[FLINK-19673][doc-zh] Translate Standalone Cluster page into ChineseThis closes #13664.	1
[hotfix] Fix NPE in NetworkStackThroughputITCase	1
[hotfix][docs] Some fixes to FileSystem DocumentationThis closes #8326	2
[FLINK-10669][e2e] Fixed error & exception checking in logsPreviously the 'q' flag of grep make the last element of pipeline exitas soon as the condition was satisfied. This resulted that if there weremultiple log files and the condition was met for the first file,operations on subsequent files tried to write to closed pipe whichresulted in pipefail code and the if condition to be evaluatedincorrectly.	0
Worked on new record serialization	1
[FLINK-15648][k8s] Support to configure limit for CPU and memoryThis closes #17098.	5
[hotfix] [table] Refactor aggregation harness tests to be found	3
[FLINK-7191] Activate checkstyle flink-java/operators/translationThis closes #4334.	2
[FLINK-3232] [runtime] Add option to eagerly deploy channelsAdds a flag to the ExecutionGraph's IntermediateResult class indicating whetherthe result consumers should be deployed eagerly. If true, the consumers aredeployed as soon as the partition is registered at the ResultPartitionManager ofthe task manager. In practice, the deployment boils down to updating unknowninput channels of the consumers (because the actual tasks are actually deployedall at once).This behaviour is configured in the JobGraph generator and only activated forstreaming programs (StreamingJobGraphGenerator). It only makes sense forpipelined results.The motivation is to get down the latency of the first records passing apipeline. The initial update of the input channels causes a higher latency.You can see this effect in the StreamingScalabilityAndLatency class (manualtest).At the moment, this results in duplicate Akka messages when the first recordis produced (the message travels from the task to the job manager and from thejob manager to task manager, which then will be ignored at the InputGate).This closes #1503	3
fixup! [FLINK-21581][core] Remove @PublicEvolving from RuntimeContext.getJobID	1
[FLINK-24414][table-planner] Remove example test for left padding of decimalsAfter discussion on the issue, was decided to not support left padding of decimals,to the integral digits specified by precision-scale, as major DBs also don't supportit. Removing the example issue in the IT cast tests.This closes #17694.	3
[hotfix][tests] Move containsCause to FlinkMatchers	2
[hotfix] [docs] Fix Java typo in dataset transformations docThis closes #4300	2
[hotfix] Extract JobManagerTable interface + rename impl into DefaultJobManagerTableThis commit allows to provide different JobManagerTable implementations to the TaskExecutor.	1
[FLINK-1694] [gelly] added IterationConfiguration as a way to configure a VertexCentricIteration	5
[hotfix] fix typo in FlinkKafkaConsumerBase	2
Extend ConnectedComponentsITCase instead of code duplication for SpargelConnectedComponentsITCase	2
[hotfix] Regenerate html configuration after 4be9aff3eccb3808df1f10ef7c30480ec11a9cb0	5
[FLINK-8240] [table] Create unified interfaces to configure and instatiate TableSourcesThis closes #5240.	5
[core] Remove extra li HTML tags in TypeInformation JavaDoc class header.Rhis closes #766	2
[FLINK-10793][ttl] Change visibility of TtlValue and TtlSerializer to public for external toolsThis closes #7021.	4
[FLINK-26071][table] Add various improvements to plan compilation- Now Planner#compilePlan fails if the plan cannot be serialized.- Add CompiledPlan#explain and toString implementation.- Invoking Planner#loadPlan will fail on Batch planner.This closes #18701.	0
[optimizer] Migrate first set of tests (branching plans) to new API	1
[FLINK-15334][table-api] Fix physical schema mapping in TableFormatFactoryBase to support define orderless computed column (#10693)	1
Upload builds as tgz and as directory to DOPA server	5
[FLINK-18119][table-blink] Expire state automatically and accurately for time range bounded over aggregationThis changes the state expiration behavior for RowTimeRangeBoundedPrecedingFunction and ProcTimeRangeBoundedPrecedingFunction. In the previous version, we use TableConfig.setIdleStateRetentionTime to cleanup state when it is idle for some time. However, a bounded over aggregation is just like a processing/event-time interval join or window aggregation, the state size should be bounded and stable. The operator should expire state automatically based on watermark and processing time without losing correctness.This closes #12680	1
[FLINK-17030][sql-parser] Add primary key syntax for CREATE TABLEThis closes #11950	1
[hotfix][docs] Update ZH variant of deployment/index	5
[FLINK-14407][yarn] Retry S3 tests on failure	0
removed unregistration of failed task and some debug-output	0
Adjust tests to new JobGraphModel	1
[FLINK-9198] [core] Improve AbstractDeserializationSchema to eagerly extract generic types.This results in better error messages.	0
[FLINK-28628][table] Introduce Operation Execution Plugin (#20247)	2
[FLINK-11513][client] Port CliFrontendSavepointTest	3
Some simplifications to the PiEstimation example	5
[travis] Fix some ruby dependencies for travis, seehttps://github.com/travis-ci/travis-artifacts/issues/23	0
[FLINK-3818] Remove Guava dependency from flink-gelly-examplesThis closes #1936	2
[FLINK-1080] [streaming] Streaming aggregation update and refactor	4
[FLINK-11634][docs] Translate "State Backends" page into Chinese (#16522)this fix #16522	0
[FLINK-8475][config][docs] Integrate HeartbeatManager optionsThis closes #5507.	5
[FLINK-17724][python] Set working directory before running the Python helper scripts.This closes #12167.	1
[docs] Fix javascript exception caused by disqus and fix typos in cluster execution.This closes #1756	2
[FLINK-6495] Migrate Akka configuration optionsThis closes #3935.	5
[FLINK-19702][hive] Avoid using static variable HiveConf.hiveSiteURLThis closes #13685	5
[tests] Make dates in test data agnostic to time zones	5
[hotfix][network] use ConcurrentMap#putIfAbsent and Lambdas for partition request handlers	0
[FLINK-14017][python] Support to start up Python worker in process mode.This closes #9655	1
[hotfix][mesos][test] Update test cases for validating Mesos deployment respecting the cpu configuration fallback order.	5
[FLINK-11718] Add onStart method to TaskExecutor	1
Fixed #290	0
[FLINK-23832][docs] Update DataStream API Integration pageThis closes #16871.	1
[FLINK-7506] Fence JobMasterThis commit lets the JobMaster extend from FencedRpcEndpoint. This enablesautomatic fencing of all messages. Moreover, this PR introduces theJobMasterId which is the new leader id/fencing token replacing the UUID. Thisimproves type safety when passing multiple fencing tokens around.This closes #4583.	4
[FLINK-10946] Silence checkpoint exception logging in task executor if job is not running	1
[FLINK-27490][table][tests] Migrate test to JUnit5 for flink-table-code-splitter	2
[FLINK-17330[runtime] Extract common methods out from PipelinedRegionComputeUtil#computePipelinedRegions()	4
[FLINK-26353] flink stop --help does not list --type option	2
[hotfix][fault-tolerance][docs] Corrected typo in state page	2
Add PlanExecutor interface and RemoteExecutorLocalExecutor now implements PlanExecutor and RemoteExecutor can be usedto submit jobs to a cluster.Example usage added to the WordCount example.	1
[FLINK-11826][tests] Harden Kafka09ITCase#testRateLimitedConsumerKafka tests seem to have the problem that writing to a newly created topiccan fail. In order to harden the test against this problem, we set thenumber of Kafka retries to 3.This closes #7900.	1
[FLINK-17601][table-planner-blink] Correct the table scan node name in the explain result of TableEnvironmentITCase#testStatementSetThis closes #12060	3
Guava shading issue fix for Eclipse	0
[FLINK-14898] Enable background cleanup of state with TTL by default	4
[FLINK-11984][docs] MPU timeout implications on StreamingFileSink.	2
[FLINK-16768][tests] Let the watchdog also monitor mvn logsThis experimental change aims to make the watchdog more accurate by extending the monitoring from the output to log files produced by the tests.In particular the S3 tests seem to produce no output while they are producing output to the log files.The risk of this change is that a hanging test is still producing log output (e.g. the test is stuck in a retry-loop).	1
Fixed Nephele Visualization job selection not working on Mac OS X[ci skip]	1
[FLINK-26977] Remove no longer valid tests in JobMasterStopWithSavepointITCaseTests in JobMasterStopWithSavepointITCase are no longer valid. Inparticular the way number of restarts is calculated is wrong. Moreovercases that were supposed to be tested in the class are already coveredin SavepointITCase.	3
Fix aggregation testsFix error message for unsupported averaging data type	5
Aggregate Operator sets its semantic properties.	1
[hotfix] [REST] Add note about placement of FileServerHandler	2
[FLINK-13107][table-planner-blink] Fix Bug when convert DataType which has primitiveClass as convensionClass to TypeInformation.	5
fixed recovery for a  repeatedly failing vertex	0
Merge branch 'streaming_test' into streamingConflicts:nephele/nephele-streaming/src/main/java/eu/stratosphere/nephele/streaming/StreamingJobManagerPlugin.java	5
[hotfix] [core] Drop hijacking of TypeHint by OutputTag. Improve error message for OutputTag.	0
Change logging backend of SLF4j from Logback to Log4j for better compatibiltiy with YARN.We'll still ship the Logback configuration file and pass them their path to the JVM so thatusers can use Flink with Logback as well.This closes #125	2
Revert "[hotfix][build] Only consider Flink artifacts for japicmp"This reverts commit 6b5787d5f3a1f279ff471db7d1ff6a9a21f81e4d.The change did not fix japicmp failing for not being able to resolve the hadoop dependency.	0
Simple first attempt to resolve the deploy/cancel race problem	0
[FLINK-13934][rest] Throw RestHandlerException instead of sending inline response	0
Made PactString appendable	5
[hotfix][tests] Adjust FileUtilsTest.testDeleteSymbolicLinkDirectory() to handle unsupported situations in Windows	1
Fixed memory leak in temp barrier.	0
Fixed bug in ReplayThread close logic	2
[FLINK-18951][python][docs] Add documentation for dependency management for Python DataStream API.This closes #13232.	5
[FLINK-26580][connectors/filesystem] CompactorOperatorStateHandler can accept multiple remaining in-progress files from different buckets.	2
[FLINK-2107] Add hash-based strategies for left and right outer joins.This closes #1262	1
[hotfix] Make NoOpTransientBlobService a public testing class	3
[hotfix] Removed deprecated and commented code in SourceFunctionTest	3
[hotfix][tests] Fix compiler warning in MetricFetcherTest	3
[FLINK-18907][hotfix] Fix the testWatermarkAndStreamStatusForwarding to do what it was intended to do	3
[FLINK-7611][metrics] Measure number of dropped late elementsThis closes #4665.	4
[FLINK-7135] [flip-6] Pass in proper configuration to Dispatcher componentThis closes #4286.	5
Fixed cancelling bug for chained tasks.	0
[FLINK-18773][runtime] Enable parallel user-code and plugin class loader.	1
Merge pull request #105 from andrehacker/fix_web_all_groupAdded ALL_GROUP strategy to PlanJSONDumpGenerator.	5
Merge branch 'stage1' into version02Conflicts:pact/pact-common/src/main/java/eu/stratosphere/pact/common/io/TextInputFormat.java	5
[FLINK-3156] Fix NPE in KafkaConsumer when reading from SOME empty topics/partitions	0
[FLINK-10114] Add ORC BulkWriter support for StreamingFileSinkThis closes #11474.	2
Fixed shutdown problem in job client	0
[hotfix][runtime] Change return type for methods Execution#processFail(...)Change return types for processFail(...) methods from boolean to void becausethe returned value is not used anywhere.	1
[FLINK-4733] Port Task IO metrics	2
Add *.log files to .gitignore	2
Added early checks against invalid null inputs to contracts.	1
[FLINK-22680][table-planner-blink] Fix IndexOutOfBoundsException when apply WatermarkAssignerChangelogNormalizeTransposeRuleThis closes #15997	4
[FLINK-1514] [gelly] Removed GGC example, added Connected Components instead	1
[FLINK-23454][runtime] Added the support of changing the max capacity to BufferBuilder	4
Added unit tests for basic Nephele types	3
[doc] Fix missing Scala Version in index.md	0
[FLINK-22154][table-planner-blink] Fix bug where PushFilterIntoTableSourceScanRule fails to deal with IN expressionsThis close #15525	0
[FLINK-5998] Un-fat Hadoop from Flink fat jar.This closes #3604	2
[FLINK-5450] Fix restore from legacy log messageThis closes #3134	1
[FLINK-17370][table-common] Ensure deterministic type inference extractionThis ensures that function signatures are always extracted in a deterministicway. Esp. when it comes to implicit casting, a deterministic type inferenceis important to evaluate sequences like f(INT) || f(BIGINT).This closes #11902.	2
* refactored most of the LatencyXYZ to ProfilingXYZ classes* implemented logging of profiling values* profiling paths (formerly known as LatencyPaths) can now start and end at edges	2
[FLINK-24768][runtime-web] upgrade Angular and NG-ZORRO versions to 13resolves #18413	0
[FLINK-20928] Fix flaky test by retrying notifyCheckpointComplete until either commit success or timeout	1
Merge pull request #29 from aalexandrov/patch-1Update pom.xml	5
move clean to get_test_modules_for_stage	3
Fix typo in serialization method name.	2
[streaming] Iteration update to use proper partitioning and forward connection + DataStream refactor and Javadoc update	5
[hotfix] Fix import checkstyle violation in TaskManagerRunnerThis closes #12705.	1
[FLINK-24432][rocksdb] RocksIteratorWrapper.seekToLast() logic typo	2
[FLINK-3194] [web client] Remove standalone web clientThe JAR upload and submit functionality is now integrated into the JobManager web interface.This closes #1481	1
[FLINK-12253][table-common] Add a DATE type	5
[FLINK-17523] Add call expression with a class of UDF as a parameter	2
[refactor] Extract StreamMultipleInputProcessor factory method	4
[FLINK-18515][Kinesis] Adding FanOutRecordPublisher for Kinesis EFO supportThis closes #13189.	1
[FLINK-38340][python][tests] Support using system conda env for testingThis closes #20125.	3
[FLINK-12931][python] Fix lint-python.sh cannot find flake8	0
[FLINK-28007][bugfix/connectors] Migrated Kinesis Firehose & Streams sink tests to using synchronous http clients..	1
[FLINK-18625][runtime] Maintain redundant taskmanagers to speed up failoverThis closes #12958.	0
[FLINK-10763] [streaming] Fix interval join return type in ScalaThis commit fixes the wrong result type of interval joins inthe DataStream Scala API. The API did not call the Scala typeextraction stack but was using the default one offered by theDataStream Java API.This closes #7141.	5
[FLINK-18156] Add 'or default' for min/max to JVM Overhead sanity check's error message	0
JobConfiguration is now a final property of ExecutionGraph	5
[hotfix] Add a wildcard type in heap state backend related classes	1
[FLINK-4291] [metrics] Add log entry for scheduled reportersThis closes #2318	1
[FLINK-26710][tests] Refactor TestLoggerResource to not swallow messages	1
[FLINK-22989][coordination][tests] Port Tasks to Java	3
Fixed Typo in comment.	2
[hotfix] Fix whitespace, imports, and Javadoc formatting in Plan	2
[FLINK-22348][python] Fix DataStream.execute_and_collect which doesn't declare managed memory for Python operatorsThis closes #15665.	1
Fixed various bugs related to new RPC service	1
Test case for showing the still existing BulkIteration bug.	0
[hotfix][config] Adjust AkkaOptions to new type-safe pattern	1
[FLINK-2833] [gelly] create a flink-libraries module and move gelly thereThis closes #1241	4
[FLINK-10778] [tests] Extend all TypeSerializerSnapshotMigrationTestBase subclasses to test restoring from 1.7This closes #7504.	3
[FLINK-2903][web-dashboard] Format numeric values of received/sent counters.This closes #1326	2
[hotfix] Remove remaining unused files from the old standalone web client	2
Improved robustness of network transfers when receiver has already died	1
[hotfix] Remove unnecessary comments about memory size calculation before network initPreviously network and MemoryManager pre-allocated direct memory,so we wanted network to allocated before to make sure it gets the memory.Now MemoryManager does not pre-allocate anything andthere should be no conflicts mmeory-size-wiseotherwise it is a misconfiguration or bug.	0
[tests] Adjust tests for dedicated streaming mode and clean up test bases.This closes #718	3
Reset file permissions	2
[FLINK-23271][table-planner] Disallow cast from decimal numerics to booleanFollowing discussions on the issue and the relevant calcite issue: CALCITE-4777the support for decimal numerics is dropped, and only from integer numerics(TINYINT, SMALLINT, INT, BIGINT) remains as is.This closes #17439.	4
[build system][travis] avoid hanging builds when downloading cache archives	5
[FLINK-9634] Disable local recovery scheduling if local recovery is disabledIntroduce a SchedulingStrategy which is used by the SlotPool to schedule tasks.The default implementation is LocationPreferenceSchedulingStrategy which triesto schedule tasks to their preferred locations. In order to support local recoverythe PreviousAllocationSchedulingStrategy schedules tasks to their previousallocation.The scheduling strategy is selected based on the configuration optionstate.backend.local-recovery. If set to true, then PreviousAllocationSchedulingStrategyis selected. Otherwise LocationPreferenceSchedulingStrategy is selected.This closes #6208.	1
[docs-sync] Synchronize the latest documentation changes (commits to 56c6b487) into Chinese documents	2
[FLINK-8683][docs] Add test for configuration docs completenessThis closes #5515.	2
[FLINK-27450][hive] Upgrade default hive version to fix Hive SessionState initialization issue with jdk11	0
[hotfix][docs] Move out the time zone page from streaming concepts sectionThis closes #17377	4
Adjust ValueTypeInfo Generics for Java 6 compatibility.	5
[FLINK-24055][connectors/kafka] Deprecate FlinkKafkaConsumer	2
[FLINK-1478] [jobmanager] Scheduler support for external location constraints	1
[FLINK-20737][table-planner-blink] Use RowType instead of RelDataType when building aggregate infoThis closes #14478	5
[FLINK-1338] [docs] Remove incubator footer from docs	2
Move PageRankITCase to proper package	4
[FLINK-16380][AZP] Fix jdk11 switch	0
[FLINK-24575][table-runtime] Migrate TestRowDataCsvInputFormat to DeserializationSchemaFactorySigned-off-by: slinkydeveloper <francescoguard@gmail.com>This closes #17515.	2
Fix bug for tuple size greater than 22	0
[FLINK-11227] [table] Fix bound checking errors in DescriptorPropertiesThis closes #7373.	0
[hotfix] [webserver] Add sanity check to avoid NPE in case the web server could not be instantiatedThe method WebMonitorUtils.startWebRuntimeMonitor instantiates the WebMonitor. However, in case of a failure null is returned. This failure case has to be handled in the method FlinkMiniCluster.startWebServer in order to avoid a possible NullPointerException.	5
[hotfix][javadocs] Clarify replacement for deprecated FoldingStateThis closes #5129.	2
[FLINK-8468][RabbitMQ] Improve RabbitMQ connectorRemove text from README.md because it is covered by Javadocs.[FLINK-8468][RabbitMQ] Introduce SerializableReturnListener interface.[FLINK-8468][RabbitMQ] Update RMQSinkPublishOptions.Improve Javadocs.Add default implementation for methods computeMandatory and computeImmediate.[FLINK-8468][RabbitMQ] Replace statements with Preconditions.checkStateThis closes #5410.	2
[FLINK-4496] Refactor the TimeServiceProvider to take a Trigerable instead of a Runnable.	1
[FLINK-21168][python][table-planner-blink] Add support for general python group window aggregate function in Physical Rule and NodeThis closes #14791	1
[FLINK-10778] [tests] Remove serializerSnapshotRestoresCurrentSerializer test in TypeSerializerSnapshotMigrationTestBaseThe serializerSnapshotRestoresCurrentSerializer test asserts that therestored serializer instance from the snapshot is of the same type asthe current serializer. This isn't necessary true, as is not a contractof the TypeSerializerSnapshot abstraction.Therefore, this test is removed.	4
[FLINK-1615] [java api] SimpleTweetInputFormatThis closes #621This closes #442	2
[FLINK-1767] [streaming] Make StreamExecutionEnvironment return JobExecutionResult instead of void.Conflicts:flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/environment/LocalStreamEnvironment.javaflink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/util/ClusterUtil.javaThis closes #516	5
[FLINK-6893] [table] Add BIN function to Table API and fix bugs	0
[hotfix][runtime] Make ResourceManager#onStart final.	1
[FLINK-1409] Let CoRecordReader subscribe to buffer reader notifications	2
[FLINK-12015] Fix TaskManagerRunnerTest instabilityBefore, the was a race condition between the termination future inTaskManagerRunner completing and the asynchronous shutdown part here:https://github.com/apache/flink/blob/70107c4647ecac3df9b2b8c7920e7cb99ad550f1/flink-runtime/src/main/java/org/apache/flink/runtime/taskexecutor/TaskManagerRunner.java#L258The test would go out of the block that was waiting on the future butthe shutdown code that is executed after the future completes isexecuted asynchronously, so is not guaranteed to have run at that point.This also refactors the code a bit to make it more obvious what ishappening and removes the SecurityManagerContext because it wasobscuring the problem.This was analyzed by Igal and me, and mostly fixed by Igal.	0
[FLINK-18355][tests] Refactor tests of SlotPoolImpl with SlotPoolUtils and SlotPoolBuilder	3
Merge branch 'master' into version02Conflicts:nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java	5
[FLINK-17306] Add open to SerializationSchema	1
[FLINK-17663][task][hotfix] Do not hide original exception in case of a secondary failure during task clean up	4
[FLINK-21087][runtime][checkpoint] StreamTask waits for all the pending checkpoints to finish before finishedThis closes #14857	5
[FLINK-19726][table-planner] Implement DataStream and Source ProvidersThis closes #13696	1
[hotfix][table] REGEXP_EXTRACT return type should always be nullableThis closes #17242.	4
[hotfix][table-common] Add implicit precision to predefined types	1
[hotfix] Fix checkstyle violations in JobManagerProcessUtilsTest	3
[FLINK-1674] Modified test cases for nested avro typeThis closes #1091	3
[FLINK-17774][table] Supports all kinds of changes for select resultThis closes #12199	4
- excluded source build from Maven- added JavaDoc build to Maven	2
Rename ScalaTupleTypeInfo to CaseClassTypeInfoThis better reflects what it is actually for. It is still derivedfrom TupleTypeInfoBase, though.	5
Runtime adoption to new operator model.	1
[FLINK-18545][table] Specify job name by `pipeline.name` for sql job	2
[FLINK-18789][sql-client] Use TableEnvironment#executeSql method to execute insert statement in sql clientCo-authored-by: godfreyhe <godfreyhe@163.com>This closes #14962	1
[FLINK-8097] [table] Add built-in support for min/max aggregation for Date/TimeThis closes #5027.	5
[FLINK-22535][runtime] CleanUp is invoked for task even when the task fail during the restore	0
[FLINK-7934] [table] Clean up and add more EXTRACT tests	3
[FLINK-5871] [cep] Enforce uniqueness of pattern names in CEP.	1
[streaming] JSONParseFlatMap added to examples	1
Merge branch 'datamodel' into staging_datamodel	5
- added tests to MapTaskTest for task cancelling- added cancel handling to MapTask- added util classes for task cancel tests	3
[FLINK-2191] Fix inconsistent use of closure cleaner in Scala StreamingThe closure cleaner still cannot be disabled for the Timestamp extractorin Time and for the delta function in Delta (windowing helpers).Closes #813	1
[FLINK-25440][doc][pulsar] Stop and Start cursor now all uses publishTime instead of eventTime; doc changed to reflect this change	4
[FLINK-9109] [doc] Update documentation for CLIMake flip6 mode the default modeThis closes #5786.	1
[FLINK-24199][python] Expose StreamExecutionEnvironment#configure in Python APIThis closes #17206.	5
[FLINK-4777] catch IOException in ContinuousFileMonitoringFunctionFileSystem.listStatus(path) may throw an IOException when it lists filesand then retrieves their file status. This is quite common, e.g. editorswhich create temporary files and move them. TheContinuousFileMonitoringFunction can only apply a file path filterafterwards.The solution is to defer file checks until no exception is caught anymore.This closes #2610.	2
[FLINK-25709] Always delete non-deterministic working directoriesThis commit introduces the distinction between deterministic and non-deterministicworking directories. The former have an explicit configured ResourceID. The latterwill always be deleted because the assumption is that the user won't want to recoverfrom them. Otherwise, he would have given a deterministic ResourceID.	5
[FLINK-2626] [core] Add an average accumulatorThis closes #1096	1
[FLINK-12122] Calculate TaskExecutorUtilization when listing available slotsWhen listing available slots stored in the SlotPool and the SlotSharingManager, the systemwill now also calculate the utilization of the owning TaskExecutor wrt the job.	5
Removed unnecessary and unstable shutdown hooks for JobManager and TaskManager	1
[FLINK-14396][network] Implement rudimentary non-blocking network outputConsidering the mailbox model and unaligned checkpoints requirements in future, task network output should be non-blocking. In other words, as long as output is available,it should never block for a subsequent/future single record write.In the first version, we only implement the non-blocking output for the most regular case, and do not solve the following cases which still keep the previous behavior.1. Big record which might span multiple buffers2. Flatmap-like operators which might emit multiple records in every process3. Broadcast watermark which might request multiple buffers at a timeThe solution is to provide the RecordWriter#isAvailable method and respective LocalBufferPool#isAvailable for judging the output beforehand. As long as there is at-least oneavailable buffer in LocalBufferPool, the RecordWriter is available for network output in most cases. This PR doesn’t include runtime handling of this non-blocking andavailability behavior in StreamInputProcessor.Note: It requires the minimum number of buffers in output LocalBufferPool adjusting to (numberOfSubpartitions + 1) and also adjusting the monitor of backpressure future.	5
[FLINK-11359][test] LegacyAvroExternalJarProgramITCase	3
[FLINK-10235][kafka] Explicitly cast custom partitioner classes	2
[hotfix] Fix doc link to "Working with Time"	1
[FLINK-15564][yarn][test] Fix that YarnClusterDescriptorTest#testFailIfTaskSlotsHigherThanMaxVcores and #testConfigOverwrite not validating the original intended behaviors.	5
[FLINK-13823][table-planner-blink] Fix incorrect debug log in CompileUtilsThis closes #9518	2
[FLINK-28709][source] Introduce coordinatorListeningID in SourceCoordinator to listen to events from other coordinatorsThis closes #20374	2
Rename multiple Scala classes: - DataStream to DataSet - DataSourceFormat -> *InputFormat - DataSinkFormat -> *OutputFormatClean up imports in scala examples	2
[FLINK-4317, FLIP-3] [docs] Restructure docs- Add redirect layout- Remove Maven artifact name warning- Add info box if stable, but not latest- Add font-awesome 4.6.3- Add sidenav layoutThis closes #2387.	1
[FLINK-14788][documentation] Generated documentation for ExecutionCheckpointingOptionsThis closes #10222	2
[FLINK-21976] Remove fink-ml-* related configs from pom.xmlThis closes #15405.	5
Removed final modifier from QueueScheduler class	4
[FLINK-24126][connector/kafka] Use increment of bytes consumed/produced for updating numBytesIn/Out in Kafka connector	5
[FLINK-7107] [flip6] Add option to start a Flip-6 Yarn session clusterThe Flip-6 Yarn session cluster can now be started with yarn-session.sh --flip6. Perdefault, the old Yarn application master will be started.This closes #4465.	1
[FLINK-8575][runtime] Add missing synchronization in BackPressureStatsTrackerMake triggerStackTraceSampleInternal private again and add locking totriggerStackTraceSample.This closes #5422.	1
[FLINK-3375] [Kafka Connector] Add tests for per-kafka-partition watermarks.	3
[FLINK-17632][yarn] Support to specify a remote path for job jarThis closes #12143.	1
[FLINK-23209] Introduce failed heartbeat rpc threshold before marking target as unreachableThis commit introduces heartbeat.rpc-failure-threshold that can be used to configure the numberof failed heartbeat rpcs until a target is marked as unreachable. This can be used to detectdead TaskManagers faster as it has a detection time of threshold * heartbeat interval. The defaultvalue of this option is 2. If this refined heartbeat mechanism creates too many false positives,then this mechanism can be disabled by setting the threshold to -1.This closes #16357.	1
Added scala docs to actor messages.	2
[hotfix] [tableAPI] Moved tests to correct package.	3
[runtime] Fix TaskManager's BLOB service host lookup when connecting to the JobManager	0
[minor] Add parameter name in HeapSavepointStateBackendSwitchTest	3
[FLINK-19773][runtime] Implement ExponentialDelayRestartBackoffTimeStrategyApply spotless formattingThis closes #14425.	2
[FLINK-8879] [avro] Add concurrency check Avro Serializer on DEBUG level.	0
[runtime] Fix possible NPE during cancelling	0
[hotfix] Close ResourceManager LeaderRetrievalService in TaskExecutor	0
Changed debugging statement in ByteBufferedChannelManager	0
[hotfix] Forcelly remove the useless log in e2e clean up function	1
[FLINK-21679][table] Set output type for transformations from SourceProvider and DataStreamScanProvider in CommonExecTableSourceScanThis closes #15120	5
[FLINK-8729][streaming] Refactor JSONGenerator to use jacksonThis closes #5554.	1
[FLINK-10800][network][test] Abstract StreamPartitionerTest for common codes	3
[FLINK-4411] [py] Properly propagate chained dual input children	2
[hotfix] Add unit test for checkpoint failure.	0
[hotfix] Harden SlotManagerImplTest#testSlotReportWhileActiveSlotRequestThe SlotManagerImplTest#testSlotReportWhileActiveSlotRequest contained a race condition sincewe were checking the internal state of the SlotManagerImpl's state. The test has been hardenedby removing this check.	4
[FLINK-5893] [RM] Fix the bug of race condition for removing previous JobManagerRegistration in ResourceManagerThis closes #3399.	4
[FLINK-10377] Support checkpoint overtaking a savepoint in TwoPhaseCommitSinkThe precondition checkState(pendingTransactionIterator.hasNext(), "checkpoint completed, but no transaction pending"); in TwoPhaseCommitSinkFunction.notifyCheckpointComplete() seems too strict, because checkpoints can overtake checkpoints and will fail the precondition. In this case the commit was already performed by the first notification and subsumes the late checkpoint. I think the check can be removed.This can happen in the following scenario:# savepoint is triggered# checkpoint is triggered# checkpoint completes (but it doesn't subsume the savepoint, because checkpoints subsume only other checkpoints).  # savepoint completes	1
[streaming] Logging intermediate stage	2
[hotfix][Javadoc] Fix typo in YARN Utils: teh -> the	2
[FLINK-5366] SavepointUtil into SavepointMigrationTestBase/Add TestThis also changes how the savepoint is being performed and now we'rewaiting on accumulators to signal that a job is ready for savepointing.	4
[hotfix][task] Fix the code formatting in StreamTask	0
[FLINK-18074][checkpoint] Ensure task could fail when exception thrown out on notified of checkpoint completed/aborted	0
Enable additional spargel compiler test	3
[FLINK-8257] [conf] Unify the value checks for setParallelism()	1
[FLINK-5867] [flip-1] Support restarting only pipelined sub-regions of the ExecutionGraph on task failure	0
[FLINK-12042] Fix RocksDBStateBackend mistaken usage of the default filesystem[FLINK-12042] Restrict only temporary snapshot directories to the local file system by changing the signature to accept files as parameterThis closes #8068.	2
[FLINK-4580] [rpc] Report rpc invocation exceptions to the callerThis closes #2526.	2
Removed System.out.println statementsFixed RecordINput/Output Format tests	3
[FLINK-5097][gelly] Add missing input type information to TypeExtractorin MapVertices, mapEdges, fromDataSet, and groupReduceOnEdgesThis closes #2842	5
Removed TPC-H test data due to unclear license state	5
Temporarily disabled checkpoints	5
[FLINK-7233] [tests] Fix instable TaskManagerHeapSizeCalculationJavaBashTestThis fixes getRandomConfig() being prone to integer overflows and creatinginvalid configuration values.This closes #4378	5
[hotfix][tests] Let SlotSharingExecutionSlotAllocatorTest extend TestLogger	3
[FLINK-20035][tests] Use random port for rest endpoint in BlockingShuffleITCase and ShuffleCompressionITCase	1
[FLINK-17761][connector/common] Add a constructor taking capacity as a parameter for FutureCompletingBlockingQueueThis closes #12566	2
[FLINK-26709][table] Replace TableConfig.getConfiguration.set()Since `TableConfig` is a `WritableConfig`, callers should directly call`TableConfig.set()` and avoid going throught `#getConfiguration()` whichis there only for advanced internal configuration read value purposes.	5
Add serializer for primitive char array	1
[FLINK-7522] Add termination future to ClusterEntrypointThe termination future is completed when the ClusterEntrypoint shuts down. Thisallows for easier testing.This closes #4589.	3
cloudmgr continue (fixed QueueScheduler call, floating instances)	0
[FLINK-9946][tests] Update quickstart E2E script for 1.7	5
[FLINK-24635][examples] Fix deprecations in Twitter example	0
[FLINK-11233][core] Fix typo in JobID Javadoc	2
first shot at iterations with intermediate dual input tasks	5
Minor cleanups for hash partitioner	4
[FLINK-17914] Restructure HistoryServerMoves the fetcher scheduling to history server and merge HistoryServerArchiveFetcher and JobArchiveFetcherTask.This way the HistoryServer takes care of everything required for a long-running application, while the fetcher is entirely focused on a single fetch.	1
[hotfix][connectors/kafka] Fix spelling of setDeliveryGuarantee method	1
[FLINK-20485][table-runtime] Reuse internal data structures in ExternalSerializerThis closes #14309.	5
[hotfix][docs] Remove reference to CheckpointedRestoringThis closes #5627.	4
[FLINK-3212] [tests] Add RetryOnFailure rule to JobManagerCheckpointRecoveryITCase	0
[FLINK-6731] [tests] Activate strict checkstyle for flink-testsThis closes #4295	3
[FLINK-13485][docs-zh] Translate "Table API Example Walkthrough" page into ChineseThisc closes #9784	1
[FLINK-4658] [rpc] Allow RpcService to execute Runnables and Callables in its executorThis closes #2531.	1
[hotfix][docs] link tags in zh docs require .zh.md links	2
Minor changes in Java POJO WordCount example	4
[hotfix] Remove docs for the now removed web client.	4
[FLINK-1795] [runtime] Add test for duplicate elimination in the solution set.	1
Commented out GlobalSortingITCase as long as it is not supported	1
[FLINK-4366] Add 'forceNonParallel()' to stream transformations and enforce parallelism=1 for AllWindowedStreamThis closes #2354	1
[hotfix][docs] Fix groupBy() javadocs: make uniform, add links, fix UnsortedGrouping.	0
[FLINK-22688][coordination] Eases assertion on ExceptionHistoryEntry	1
[FLINK-2866] [runtime] Eagerly close FSDataInputStream in file state handleThis closes #1282	0
fixed PactProgram constructor	0
[hotfix][runtime] Removed test as it is kind of flaky but was just recently introduced in 296107e by me. A ticket will be created to address this issue again.	0
[FLINK-7728] [DataStream] Flush max watermark across all inputs once all become idlePrior to this commit, once all inputs of the StatusWatermarkValvebecomes idle, we only emit the StreamStatus.IDLE marker, and checknothing else. This makes the watermark advancement behaviourinconsistent in the case that all inputs become idle depending on theorder that they become idle.This commit fixes this by "flushing" the max watermark across allchannels once all inputs become idle. At a high-level, what this meansfor downstream operators is that all inputs have become idle and willtemporariliy cease to advance their watermarks, so they can safelyadvance their event time to whatever the largest watermark is.	1
[FLINK-7508] [kinesis] Switch to POOLED ThreadingMode in FlinkKinesisProducerKinesisProducerLibrary (KPL) 0.10.x had been using aOne-New-Thread-Per-Request model for all requests sent to AWS Kinesis,which is very expensive.0.12.4 introduced a new ThreadingMode - Pooled, which will use a threadpool. This hugely improves KPL's performance and reduces consumedresources. By default, KPL still uses per-request mode. We shouldexplicitly switch FlinkKinesisProducer's KPL threading mode to 'Pooled'.This closes #4656.	2
[FLINK-21401] Make DispatcherTest.testInvalidCallDuringInitialization not depend on underlying Scheduler implementationBy using the BlockingJobManagerRunnerFactory it is possible to decouple the DispatcherTest.testInvalidCallDuringInitializationfrom the underlying Scheduler implementation which was used for blocking the creation of the JobManagerRunner before.	1
[FLINK-15421][table-planner-blink] Fix cast exception for timestamp MAX/MIN retract aggregate functionsThis makes TimestampMaxAggFunction and TimestampMinAggFunction to accept SqlTimestamp values and also support high precision for timestamp types. This closes #10722	1
[FLINK-3293] [yarn] Respect custom CLI Yarn name in JobManager modeAdded a method to set a default application name for the Flink Yarn session CLI.Switched the order, such that this name can now be overwritten by the command line.This closes #1558	2
[docs] Fix formatting error in description of stream checkpointing	0
[FLINK-15191][kafka] Add Kafka IT cases for Table API & SQLThis closes #10536	1
Update japicmp configuration for 1.12.0	5
[FLINK-18488][python] Added additional params to CsvTableSource constructorThis closes #12824.	2
[FLINK-8843][REST] Decouple bind REST address from advertised addressBy default bind REST server on wildcard address.Rename RestServerEndpoint#getRestAddress to getRestBaseUrl.This closes #5707.	1
[hotfix] Change the parallelism of tpch end-to-end test to 2.This can help to cover the situation that parallelism is higher than the slot number, since the testing cluster only have one task manager and contains only one slot.	3
[FLINK-2806] [scala-api] Add a TypeInformation[Nothing]This closes #1212.	5
[FLINK-27902][network] remove useless isPipelined, isBlocking and isReconnectable in ResultPartitionType.This closes #19885	1
[FLINK-22136][e2e] Exception instead of system out is used for errors in DataStreamAllroundTestProgram	5
Fix missing IOException import in JobManager	2
[FLINK-2087] Add streaming mode switch to YARNThis closes #788	1
[docs] Add back pressure monitoring page	1
[FLINK-24875][ci] Add group parameter to e2e job	2
[FLINK-4148] Fix min distance calculation in QuadTreeThis closes #2442.	0
Fixes package name of default instance manager in cluster mode	0
[FLINK-18902][rest] Allow request serving while the REST handlers are shutting downIn order to serve the job execution result when using the per job mode, the RESThandlers must be able to serve requests while the RestServerEndpoint is being shutdown. Otherwise, it is not possible to serve the asynchronous operation resultssuch as the job execution result.This commit solves this problem by checking whether the InFlightRequestTrackerallows to enqueue a new request or not in the AbstractHandler. If it rejects a newrequest, this means that the handler has been shut completely shut down and that weshould close the connection to the client. If the InFlightRequestTracker still acceptsrequests, then this means that the RestHandler might still want to serve an asynchronousresult.This closes #13131.	0
[FLINK-4923] [metrics] Initializes all task's gauges in TaskIOMetricGroup and extract the used buffers interface for BufferPoolThis closes #2727.	1
[FLINK-24405][tests] Harden kafka tests based on KafkaTestBase	3
[FLINK-20267][runtime] The JaasModule didn't support symbolic links. This is fixed now.Tests were added to verify the change.This closes #14171.	4
[hotfix][network] Fix raw type usages	0
[FLINK-21257] Add Restarting state for declarative schedulerThis closes #14879	1
[FLINK-10544][build] Do not use custom settings.xml for snapshots	5
Added negative tests for TestPlan	3
[FLINK-1103] [streaming] Added Twitter streaming example and default inputs for examples	1
[FLINK-26154][tests] Improve logging in SavepointFormatITCase	2
Improved robustness of failure manager	0
[FLINK-19555] Remove unfenced execution of Disconnected message from MesosResourceManagerThis closes #13573.	4
[FLINK-3120] [runtime] Manually configure Netty's ByteBufAllocatortl;dr Change default Netty configuration to be relative to number of slots,i.e. configure one memory arena (in PooledByteBufAllocator) per slot and use oneevent loop thread per slot. Behaviour can still be manually overwritten. Withthis change, we can expect 16 MB of direct memory allocated per task slot byNetty.Problem: We were using Netty's default PooledByteBufAllocator instance, whichis subject to changing behaviour between Netty versions (happened betweenversions 4.0.27.Final and 4.0.28.Final resulting in increased memoryconsumption) and whose default memory consumption depends on the number ofavailable cores in the system. This can be problematic for example in YARNsetups where users run one slot per task manager on machines with many cores,resulting in a relatively high number of allocated memory.Solution: We instantiate a PooledByteBufAllocator instance manually and wrapit as a NettyBufferPool. Our instance configures one arena per task slot asdefault. It's desirable to have the number of arenas match the number of eventloop threads to minimize lock contention (Netty's default tried to ensure thisas well), hence the number of threads is changed as well to match the numberof slots as default. Both number of threads and arenas can still be manuallyconfigured.This closes #1593.	5
[FLINK-24978][build] Upgrade ASM to 9.2	2
[streaming] Automerge error + License fix	0
[hotfix][runtime] Checkstyle changes in TaskStateSnapshot	4
[FLINK-15347] Add SupervisorActor which monitors the proper termination of AkkaRpcActorsIn order to properly complete the termination future of an RpcEndpoint, we need to monitorwhen the underlying AkkaRpcActor has been removed from the ActorSystem. If this is not done,then it can happen that another RpcEndpoint using the same name cannot be started becausethe old RpcEndpoint is still registered.The way we achieve this monitoring is to introduce a helper actor which is responsible forstarting the AkkaRpcActors for all RpcEndpoints. Since the SupervisorActor is the parentof all RpcEndpoints, it can tell when they are being removed from the ActorSystem throughthe SupervisorStrategy.A consequence of the new actor is that the akka urls change from akka://flink@actorsystem:port/user/xyzto akka://flink@actorsystem:port/user/rpc/xyz. The respective method AkkaRpcServiceUtils.getRpcUrlhas been updated to reflect this change. This hierarchy change also warrants the bump of theAkkaRpcService.VERSION.The failure behaviour of the underlying ActorSystem has been changed so that it terminatesall running actors if an exception is thrown from the SupervisorActor. The assumption is thatsuch an exception always indicates a programming error and is unrecoverable.The same applies to failure originating from an AkkaRpcActor (children of the SupervisorActor).If such an exception is thrown, then we assume that the system is in an illegal state and shut itdown. The way it works is by recording the failure cause for the respective AkkaRpcActor andthen terminating the ActorSystem.	5
[FLINK-10440][cassandra] Add CassandraPojoOutputFormat	1
[FLINK-2891] [streaming] Set keys for key/value state in window evaluation of fast-path windows.	1
[FLINK-10011] Release JobGraph after losing leadership in JobManagerThe JobManager now releases its lock on all JobGraphs it has stored inthe SubmittedJobGraphStore if the JobManager loses leadership. This ensuresthat a different JobManager can delete these jobs after it has recoveredthem and reached a globally terminal state. This is especially importantwhen using stand-by JobManagers where a former leader might still beconnected to ZooKeeper and, thus, keeping all ephemeral nodes/locks.	1
[hotfix][hs] Clarify write access to webJobDir	0
[FLINK-12781][REST] Include the whole stack trace in error response payloadThis closes #8665	0
[FLINK-28900] Fix RecreateOnResetOperatorCoordinatorTest compilation failureThis closes #20532.	0
[hotfix] Port DefaultSlotPoolServiceSchedulerFactoryTest to use Junit5	3
[FLINK-18006] Always overwrite RestClientFactory in ElasticsearchXDynamicSinkWe always overwrite the RestClientFactory in order to workaround anissue with shading classes in lambdas deserialization method. That waywe never use the default lambda from ElasticsearchSink$Builder whichcannot be deserialized when used from aflink-sql-connector-elasticsearch module due to shading.This closes #12455	2
Fix moved comment in StreamTask	4
[docs] Add note about Znode root config for HA setups	1
[FLINK-2643] [build] Update Travis build matrix and change snapshot deploy profilesThis closes #1146	2
[hotfix][state] Fix logging in Materializer and make FLINK-28976 more explicit	2
[FLINK-7019] [gelly] Rework parallelism in Gelly algorithms and examplesFlink job parallelism is set with ExecutionConfig#setParallelism or with-p on the command-line. The Gelly algorithms JaccardIndex, AdamicAdar,TriangleListing, and ClusteringCoefficient have intermediate operatorswhich generate output quadratic in the size of input. These algorithmsmay need to be run with a high parallelism but doing so for alloperations is wasteful. Thus was introduced "little parallelism".This can be simplified by moving the parallelism parameter to the newcommon base class with the rule-of-thumb to use the algorithmparallelism for all normal (small output) operators. The asymptoticallylarge operators will default to the job parallelism, as will the defaultalgorithm parallelism.This closes #4282	1
[FLINK-19547][Runtime] Update `BufferConsumer` with `BufferConsumerWithPartialRecordLength` in PipelinedSubpartition.javaBufferConsumerWithPartialRecordLength includes BufferConsumer as well as partialRecordLengthThis commit includes two changes1. Update BufferConsumer with BufferConsumerWithPartialRecordLength in PipelinedSubpartition2. Implement partial record cleanup logic in BufferConsumer	2
[FLINK-11508][tests] Remove invalid test AkkaJobManagerRetrieverTestThis closes #7633.	3
Removed SenderHintEvent mechanism in favor of new faster RPC service	1
[hotfix] [REST] Add utility HandlerRequest constructor	0
[FLINK-18907][task] Add test coverage for watermarks with chained sources	3
[FLINK-2624] RabbitMQSource uses MessageAcknowledgingSourceBase	1
[FLINK-13663][e2e] Double curl retries count and total time for Kafka downloadsThis closes #9429.	2
[FLINK-3811] [tableAPI] Use only Java ExecutionEnvironments in TableEnvironmentsThis closes #1930	1
[streaming] Memcached, MySQl and SQLite support for state management.	1
[FLINK-16231][hive][build] Add missing jdk.tools exclusionFailed the build on Java 11 with Hive 2.x.y profiles.	2
[hotfix] Aligns state check in ZooKeeperExtension	0
[FLINK-14301][doc] add documentation for functions categories and new function resolution ordersthis closes #10110.	1
[FLINK-2968] [streaming] Let AbstractUdfStreamOperator forward output type information to WindowFunctionThe fold operation needs the output type information to serialize theinitial value of it. Therefore, the OutputTypeConfigurable interface wasdefined. It is called by the StreamGraph upon adding a StreamOperator tothe StreamGraph. Since some stream operators, such as the window streamoperator, don't work directly on the data, but instead call aWindowFunction for the actual logic, the output type information has tobe forwarded to this function to set output type information at theright place.Thus, the AbstractUdfStreamOperator checks whether its udf functionsupports the OutputTypeConfigurable interface. If this is the case, thenit forwards the output type information to the udf.This closes #1328.	5
[hotfix] Annotate interfaces in JavaGcCleanerWrapper with @FunctionalInterface	1
[FLINK-15250][docs] Update "Connect to External Systems" page to list the required formats in connectors definition sectionThis closes #10585	5
[FLINK-3993] [py] Add Environment.generateSequence()This closes #2055	1
[FLINK-10532] [docs] Fix broken links in documentation	2
Avoid unnecessary exception wrapping in PackagedProgram invokation.	5
[hotfix] [rocksdb] Clean up RocksDB state backend code  - arrange variables to properly express configuration (client side) versus runtime (task manager side)  - make all runtime-only fields properly transient  - fix confusing variable name for local directories	5
[FLINK-1660] [streaming] Increased timeout for MultiTriggerPolicyTest and introduced a constant representing it.	3
[FLINK-12959][table-planner-blink] Use BoundedInput and InputSelectable in blink	2
- extended compiler hints are used for Reduce, Match, and CoGroup	1
[hotfix][table-planner-blink] Extract primary key from resolved schemaThis closes #15539.	0
[FLINK-6170] [metrics] Don't rely on stats snapshot for checkpoint metricsThis closes #3597.	2
Add distributed cache to stratosphere	1
Add implicit generation of UDT[T]This helps when implementing custom scala data input formats.	5
[FLINK-11699] Use isEmpty() for address comparison in AbstractDispatcherResourceManagerComponentFactoryThis closes #7783.	1
- forward exception in PactRecord.updateBinaryRepresentation()	5
[FLINK-5187] [core] Port Row and related type utils to Java and move them to flink-core.This closes #2968.	2
[FLINK-19934][Connector] Add SplitEnumeratorContext.runInCoordinatorThread(Runnable)This closes #13955	1
[hotfix] Create BroadcastITCase.	1
[hotfix] [tests] Remove leftover sysout logging code	2
[hotfix][table-common] Fix grammar mistake in FunctionDefinition	5
[FLINK-25773][build] Upgrade to flink-shaded 15.0	2
[FLINK-8420] [flip6] Recognize TimeoutException in RetryingRegistrationA timeout exception will trigger an exponential backoff wrt the connection timeout.This will guarantee that we don't overload the network with connection requests butalso to quickly connect to a newly available target.This closes #5286.	1
Added failing behavior to JobManager if it is still in scheduled or created stateNew test case: Exception during ExecutionGraph construction in the JobManagerRemoved checkConfiguration method from AbstractJobVertex because it is not needed anymore	1
Improved javadoc	2
[FLINK-26920][python] Handles the dependencies properly in create_temporary_viewThis closes #19318.	1
[FLINK-14349][docs] Add documentation for HBase descriptor API	2
[FLINK-3158] Enforce maven version to be < 3.3 when building a release	1
[FLINK-21407][doc][formats] Move haddop input and output formats to hadoop.md formats page	1
Merge branch 'version011' into version02Conflicts:nephele/nephele-ec2cloudmanager/src/main/java/eu/stratosphere/nephele/instance/cloud/CloudManager.java	5
[FLINK-19205][core] Add access to configuration and hostname in the SourceReaderContext	5
[FLINK-9383][runtime] Test directories in DistributedCache E2E test	3
[tests] Add TestLogger to StreamCheckpointNotifierITCaseSaw this one failing, but it's impossible to get any insightfrom the logs, because you can't tell what is what.	1
[FLINK-1070] Change return type of "getBroadcastVariable()" to List.This closes #105	1
Added PactBoolean type.	1
Updated license headers of scala files to conform to scala-checkstyle.	5
Replace custom Java NIO TCP/IP code with Netty 4 library	5
[FLINK-12736][coordination] Release TaskExecutor in SlotManager only if there were no slot allocations after the partition checkThe ResourceManager looks out for TaskManagers that have not had any slots allocated on them for a while, as these could be released to safe resources.If such a TM is found, the RM checks via an RPC call whether the TM still holds any partitions. If no partition is held then the TM is released.However, in the RPC callback no check is made whether the TM is actually still idle. In the meantime a slot could have been allocated on the TM.Even if the slot has been freed, there can be newly allocated partitions not included in check result.To make sure there was no resource allocation in between, we can mark the taskManagerRegistration.getIdleSince() time before starting the async 'no partition' check.The TM can be released only if the idle time after the check matches the previously marked one. Otherwise we discard the release and start over after the next timeout.This closes #8988.	1
[FLINK-22475][table-common] Exclude options with '#' placeholder from validation of required options	1
[FLINK-5502] [docs] Add migration guide in docs.	2
[FLINK-11843] Pass in explicit JobGraphWriter in DispatcherTests	3
[hotfix][scaladoc] Add missing parameter in DataStreamConversions's scaladocThis closes #11272.	2
[hotfix] Remove execute() after print() in Table API examplesThis closes #735	4
[FLINK-24789][runtime] Close CheckpointCleaner after checkpoint services in `DefaultScheduler#closeAsync()` and `AdaptiveScheduler#closeAsync()`.'This closes #17693.	4
[FLINK-8145][tests] fix various IOManagerAsync instances not being shut downThis closes #5064.	0
[hotfix][docs] Fix various broken links in the docsI used this to identify broken links in the zh.md files:git grep -E "[^z][^h]\.md " -- '*.zh.md'	2
[FLINK-14398][table-planner] Further split input unboxing code into separate methods (#10000)	2
[hotfix] Prevent CheckpointCommitter from failing jobPrevents the CheckpointCommitter from failing a job, if eithercommitCheckpoint() or isCheckpointCommitter() failed. Instead, we willtry again on the next notify().This closes #2287	1
[Docs] Limit nesting of generated TOCsThe jekyll tocify plugin generates an HTML TOC based on the headingsof the markdown files. This commit limits the nesting of the TOC to 2,which means that only h1 and h2 element will be taken into account.Previously, all heading elements were used, which resulted in a verycluttered TOC.	1
[FLINK-1483] IOManager puts temp files in dedicated directory and removes that on shutdownThis closes #417	4
[FLINK-1832] [scripts] fix conversion to Windows path with spaces	0
[streaming] set/get methods written for some basic types	1
[minor] Add ES7 to list of sql connector downloads	1
[hotfix] Revert "[FLINK-15992][kafka][es] Use thread context classloader when finding TableFormatFactory (#11064)"This reverts commit c6158648	4
Worked on replay task implementation	1
[FLINK-4689] [cluster management] Implement a simple slot provider for the new job manager	1
[FLINK-19859][docs] Add document for the upsert-kafka connectorThis closes #14017	2
[FLINK-12749] [docs] Add operations Docker playground.* Add new Docker Playgrounds section to Getting Started documenation section* Add new count click events example jobsThis closes #9192.	1
[FLINK-10099][test] Improve YarnResourceManagerTestIntroduce methods to mock a Yarn Container and ContainerStatus.Properly shutdown a started ResourceManager.This closes #6499.	3
[FLINK-7021] Add UnhandledErrorListener to ZooKeeperLeaderElectionService	0
style in MulticastManager	5
[tests] Add process reaping test for TaskManager, improves process reaping test for JobManager.	3
[FLINK-5690][docs] Add note on shading to best practices guideThis closes #3300	1
[FLINK-12861][coordination] Remove legacy ListeningBehaviour	4
Adapted PACT code to compensate missing IOReadableWritable interface	2
[FLINK-7515][network] allow actual 0-length content in NettyMessage#allocateBuffer()Previously, length "0" meant "unknown content length" but there are cases wherethe actual length is 0 and so we use -1 for tagging the special case now.[FLINK-7515][network] address PR commentsThis closes #4592.	1
[hotfix][tests] Move constants in SplitFetcherTest relevant to only one test into test method	3
[FLINK-3495] [tests] Disable RocksDB tests on WindowsThis closes #1711	3
Merge pull request #52 from rmetzger/gith_ozone_travis_integrationTravis-CI configuration	5
Reworked text parser to propery work with quoted strings.	1
[FLINK-24834][connectors / filesystem] Add typed builders to DefaultRollingPolicyThis closes #17731	1
[FLINK-23621][datastream] Adding InterruptedException to Sink interfaces to facilitate async communication patterns.	1
[FLINK-8705] [flip6] Add DispatcherRestEndpoint to MiniClusterIn order to properly support the RemoteEnvironment, the Flip-6 MiniClusterneeds a REST endpoint to receive requests from the RestClusterClient.This closes #5527.	5
[FLINK-20129][docs] Add raw format link to index.zh.md	2
[hotfix] Let MemoryManager log start up values	2
[streaming] pom fix	0
Reformatting ExecutionGraph	5
[FLINK-16583][sql-client] Provide classloader during pipeline creationFixes a classloading bug that was introduced in the last release whileupdating the code for the new Pipeline abstractions.This closes #11438.	1
[FLINK-12325][metrics] Refactor StatsD tests	3
OutgoingConnections are no longer closed immediately but after being idle for 3 sec.	5
[FLINK-12996][table-common] Require equals/hashCode for type inference classes	5
[FLINK-2425] [runtime] Cleanup code for forwarding config and hostname into TaskManager's RuntimeEnvironment	1
Speeded up some CoreFunctions	1
[FLINK-13405][docs-zh] Translate "Basic API Concepts" page into ChineseThis closes #9299	1
[FLINK-21099] Introduce JobType to distinguish between batch and streaming jobs	2
[hotfix] Introduce TaskManagerSlotInformationTaskManagerSlotInformation is a super interface of the TaskManagerSlot whichgives access to the basic information of a registered TaskManagerSlot.	5
[FLINK-16089][docs-zh] Translate "Data Type" page of Table API & SQL into ChineseThis closes #11190	1
[FLINK-27901][python] Support TableEnvironment.create(configuration)This closes #19883.	5
[hotfix][docs] Fix broken link in datastream_api.md and datastream_api.zh.md	5
[FLINK-2164] Document streaming and batch modeThis closes #795	2
[FLINK-4927] [yarn] refine YARN Resource manager according to till's comments	2
[FLINK-9638][E2E Tests] Add helper script to run single testThis commit adds a helper script `run-single-test.sh` that allows you to runa single test in the context of the text runner.This provides you with* Setup of ENV variables* cleanup after test* Nicer outputUsage: ./run-single-test.sh <path-to-test-script> [<arg1> <arg2> ...]This closes #6197.	3
[hotfix][table] Simplified aggregation & projection splitting	0
Converted TeraSort to new API -- ATTENTION: Will probably not work, not tested!	3
[FLINK-18066][docs] Rename old Table source/sink doc tolegacySourceSinks.md	2
[hotfix] [REST] Extend empty request/parameters support[hotfix] [REST] Fix error message if empty request does not conform to RequestBody spec[hotfix] [REST] Add special handling for plain-text responsesThis closes #4730.	1
[FLINK-15494][table-planner-blink] Fix incorrect time field index in LogicalWindowAggregateRuleBaseThis closes #10784	2
[FLINK-25186][table-common] Fix ServiceLoaderUtil#load to work with Java 11This closes #18020.	1
[FLINK-3679] [kafka] Improve null record handling for FlinkKafkaConsumerThis commit generally improves null record handling by: - also update the offset in state holders if record is null - move null record related tests to AbstractFetcherTest, so that   behaviour is tested for all fetcher implementations - let the docs be more informative of the behaviour of the consumer   when corrupted messages are encountered.This closes #3314.	5
[FLINK-20860][core] Rename ManagedMemoryUseCase#BATCH_OP to OPERATOR.	1
Add shutdown method to LocalDistributedExecutor and remove failing CustomDataTypeTest=> the removed test functionality will be included in an upcoming test by @aljoscha	3
[FLINK-26700][docs] Document restore mode in chineseCo-authored-by: Yun Tang <myasuka@live.com>	2
[streaming] JobGraphBuilder api update with partitioning	5
[FLINK-14488][python] Update python table API with insert_into	5
[runtime] Release additional broadcast variable references early	1
[hotfix][runtime] Strengthen SpeculativeScheduler and its testsStablizes tests and better exposes exceptions for troubleshooting.	1
[FLINK-14188][runtime][yarn/mesos] Set container cpu cores into TaskExecutorResourceSpec when launching TaskExecutors on Yarn/Mesos.	1
[FLINK-16092][docs-zh] Translate dev/table/functions/index.zh.md into ChineseThis closes #11461	1
[FLINK-18058][mesos][tests] Increase heartbeat interval/timeout	1
[FLINK-21772][metrics][slf4j] Remove flink-runtime dependency	2
[FLINK-6834] [table] Support scalar functions on Over WindowThis closes #4070.	1
[FLINK-8471] [flip6] Introduce configuration switch for Flip-6Add 'mode' configuration parameter which enables and disables the Flip-6code paths. Per default this is set to the old code path.This closes #5334.	1
[FLINK-9099] Assign Execution to LogicalSlot when slot is assigned to ExecutionIn order to fail fast if an allocated slot is released by the SlotPool, we assign theExecution as payload to a LogicalSlot when the slot is assigned to the Execution.This closes #5775.	2
[FLINK-5294] Test aggregating aligned window op restore from 1.1	3
[hotfix] fix PageRank example to run with no args; some doc fixesThis closes #1714	0
[hotfix] [docs] Update docs regarding missing 'sql-jar' suffix	0
[FLINK-19662][runtime] Added helper method for generating the dynamic configuration parameters based on the underlying JobManagerProcessSpec.	2
Fixed NullPointerException due to missing topology information	5
Reenabled FileInputSplitAssigner as default assigner for FileInputSplits	2
[FLINK-23528][kinesis] Do not interrupt main thread during cancellation.This commit instead uses a future for a soft wakeup during cancellation.	1
[FLINK-22563][docs] Add migration guide for new StateBackend interfacesCo-authored-by: Nico Kruber <nico.kruber@gmail.com>This closes #15831	1
[FLINK-16331][legal] Remove source licenses for old WebUI	4
[FLINK-24869] flink-core should be provided in flink-file-sink-commonflink-core should be provided in flink-file-sink-common	2
[hotfix][legal] Add missing Scala license to rpc-akka	1
[FLINK-2919] Port FieldAccessMinibenchmark to JMH.This closes #1300	5
[FLINK-1561] [build system] Use a fresh fork for each integration test runThis closes #412	1
[FLINK-12732] [state-processing-api] Document reader for the State Processing API	2
[FLINK-18534][kafka][table] Fix unstable KafkaTableITCase.testKafkaDebeziumChangelogSource This closes #12858	3
more refactoring	4
[hotfix][conf][tests] Introduce factory method	5
added TPCH Query 10	1
[FLINK-1392] Add Kryo serializer for ProtobufConflicts:flink-java/pom.xmlflink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/KryoSerializer.java	5
[FLINK-20839][docs] Fix generics	0
[FLINK-3532] [gelly] Fix artifact ID of flink-gelly-examples moduleThe current flink-gelly-examples artifact id wrongly used an underscore to separateexamples from flink-gelly. This commit replaces the underscore with an hyphen.This closes #1731.	2
[FLINK-17506][state-processor-api] SavepointEnvironment should honour 'io.tmp.dirs' property	5
[FLINK-3722] [runtime] Don't / and % when sortingReplace division and modulus with addition and subtraction.This closes #2628	1
[hotfix][tests] Remove the dead codes of StreamTestSingleInputGate and TestInputChannel	3
[FLINK-10987] Add LICENSE & NOTICE files for flink-avro-confluent-registry	5
[FLINK-23911][table-common] Emphasize that #applyReadableMetadata must be idempotent	5
[FLINK-21945][streaming] Add StreamPartitioner#isPointwise.	1
[FLINK-17373][table] Support the NULL type for function callsEnables support for untyped NULL literals in function calls. The nulltype remains a helper type. We don't expose this type through the DDLor allow it as a function return type.More cases of NULL can be supported once we enable type coercion.This closes #11904.	0
[FLINK-23078] Add SchedulerBenchmarkBase#teardown	1
[FLINK-6294] Add close without input test for BucketingSinkAnd earlier version of the code was throwing an NPE if the sink wasclosed without ever seeing any input.	3
[FLINK-22740][docs] Drop legacy planner references in docsThis closes #15985.	2
[FLINK-17188][python] Use pip instead of conda to install flake8 and sphinx (#11836)	1
Finished refactoring	4
[hotfix][tests] Extract PendingCheckpointTest.abort method	3
[FLINK-16196][hive] FlinkStandaloneHiveRunner leaks HMS process (#11169)	2
[FLINK-24714][table-api-java] Validate partition keys for ResolvedCatalogTableThis closes #17624.	2
[FLINK-2594][client] implement a method to retrieve the accumulators of a job- move SerializedValue from runtime to core- unified code to deserialize accumulatorsThis closes #1072.	1
[FLINK-26886][metrics][docs] Document pull/push tag/identifier reporter behavior	2
[hotfix] Move SimpleSlotContext to test scope.This class is for the legacy code, and there's no usage of this class in production codes.	3
[FLINK-10345][docs] Added note with warning about removing savepoints	4
[FLINK-2724] [runtime] Fix object reuse in GroupReduceCombineDriver and ReduceCombineDriver	1
[FLINK-20379][connector/kafka] Added methods valueOnly(...) and open(..) in the KafkaRecordDeserializationSchema interface to enable the reuse of the DeserializationSchema and KafkaDeserializationSchema.	1
[hotfix][csv] Remove duplicate code	4
[FLINK-9656][scripts] Take also env.java.opts from flink-conf.yaml at the client side	5
[FLINK-27566][aws][tests] Migrate aws-kinesis-firehose to JUnit5	3
[hotfix] Replace String concatenation with Slf4j placeholders.	0
[FLINK-21084][runtime][checkpoint] CheckpointCoordinator records finished state for operators in tasks finished on restoreThis closes #16238	5
[FLINK-1389] Allow changing the filenames of the files created when writing to a directoryThis closes #301	1
[FLINK-26112][k8s]Port getRestEndpoint method to the specific service type subclassThis closes #18762.	1
[FLINK-14490][table-api] Rework insertInto method	1
[FLINK-4889] [InstanceManager] Remove ActorRef dependency from InstanceManagerThe instance manager should not know about the underlying RPC abstraction, namely Akka.Therefore, the PR removes the dependency on ActorRef from the InstanceManager.This closes #2698.	4
Fixed deserialization bug of Boolean Nodes	0
[FLINK-6068] [table] Support If() as a built-in function.This cloes #3553.	1
Fixed some bugs in nephele-common as reported by FindBugs	5
Temporarily enabled receiver side spilling to prevent channel deadlocks	0
Added two input node candidate enumeration.	5
[FLINK-24963][yarn] Improve output of queue names	1
[FLINK-17809][dist] Quote classpath and FLINK_CONF_DIR	5
[FLINK-28895][python] Perform RowRowConverter automically when writing RowData into sinkThis closes #20525.	5
[FLINK-21725][core] Update TupleGenerator to name setter/constructor arguments like fields	1
[hotfix][e2e] Refactor docker embedded job test: use pushd/popd instead of cd	1
EC2 AMI ID can also be set in global configuration now	5
[hotfix] Add missing import	2
[FLINK-21602] Let AdaptiveScheduler create the ExecutionGraph in the ioExecutorThe AdaptiveScheudler creates the ExecutionGraph now in the ioExecutor.	1
[FLINK-1671] [tests] Rename "ExecutionMode" in MultiProgramTestBase to "TestExecutionMode"... to avoid name clashes with the program execution mode.	3
[FLINK-25745] Support RocksDB incremental native savepointsIncremental savepoints do not reuse sst files from previous checkpoints.At this point they re-upload those files. Moreover they do not registerits files as reusable by future checkpoints. Lastly, all sst files arecreated in the EXCLUSIVE scope with relative paths, which makes thesavepoint relocatable.	1
[docs] Moves slots_parallelism.svg to correct directory	4
[FLINK-25983] Add API for configuring maximal watermark driftWe should be able to specify a watermark alignment group and maximaldrift from the current watermark on a per source/task/partition basis.This can be done by adding configuration parameters to theWatermarkStrategy.	2
- fixed java heap size setting bug for local mode in nephele jobmanager script nephele-jobmanager.sh	0
[FLINK-28597][state] Discard initial checkpoints without a delay in common  cases	5
Improve error message when scheduler cannot find a slot for immediate scheduling.	0
#339: JDBC tests do not create derby.log file	2
[FLINK-10774] [tests] Refactor Kafka tests to have consistent life cycle verifications	3
[FLINK-14720] Bring down ExecutionVertex#deployToSlot access modifier and mark it with @VisibleForTesting annotation	3
[FLINK-9697] Upgrade slf4j from 1.7.7 to 1.7.15	2
[FLINK-20654][tests] Temporarily ignore UnalignedCheckpointITCase	3
[streaming] connectors logging and deploy update	5
Made the default location of jars configurable	5
[FLINK-10324] Replace ZooKeeperStateHandleStore#getAllSortedByNameAndLock by getAllAndLockIn order to reduce code duplication this commit replaces ZooKeeperStateHandleStore#getAllSortedByNameAndLock by getAllAndLock and do the sorting of the entries afterwards.The implication of this change is that we no longer try to release and remove corruptedentries and instead simply ignore them.This closes #6681.	4
[hotfix][table-planner-blink] FlinkStreamProgram should not use FlinkBatchRuleSets (#13100)	2
[FLINK-13946] Refactor executor code to ban resource sharing between plan executions.	4
[hotfix] [table] Improved code documentation for external catalog.	2
[FLINK-14735][scheduler] Improve scheduling of all-to-all partitions with ALL input constraint for new schedulerThis avoids the quadratic complexity in the legacy scheduler when checking the availability of the input oncethe successor task becomes ready for scheduling.	1
[hotfix] Replace finally block with JUnit After method in SourceOperatorTest.	3
[streaming] Streaming program cancellation bugfix	0
Fixed #192	0
[FLINK-3449] createInput() no longer swallows exceptionThis closes #1675	1
[hotfix][mesos] Separate actor creation from MesosResourceManager.This improves the testability.	3
[FLINK-1687] [streaming] [api-breaking] fromCollection and generateSequence rework	1
[FLINK-29182][table] fix redundant computations in SumAggFunction. (#20738)	1
[FLINK-8830] [yarn] Log reading of Hadoop's token fileThis closes #5629.	2
[hotfix] Fix checkstyle violations in TaskManagerTest	3
[FLINK-20266][runtime] Replace dedicated thread pool in ComponentClosingUtils with use of 'FutureUtils.orTimeout()'This removes extra (non-daemon) threads, which were previously keeping the threads alive.	4
[streaming] Stratosphere dependency upgraded to 0.5.1	5
[FLINK-23854][connectors/kafka] Abort transactions on close in KafkaWriter.All transactions that have been opened since last (pre)commit are transient by definition, so cancel them asap.	5
[FLINK-20654][checkpoint] Remove capacity of ChannelStateWriteRequestExecutorImpl.Currently, there is an unhelpful exception being thrown when capacity is reached. The capacity is also independent of the parallelism - for p = 5k, there are 10k exclusive buffers, which may easily fill up the queue if there is I/O backpressure because of concurrent writes.	1
Make all scala rich stubs have apply method instead of specific nameBefore, MapStub required the user to specify a map() method, now theyspecify an apply() method. This is more in line with how Function1[] andso one works and also the same across all operators.	1
[FLINK-16251][python] Optimize the cost of function call in ScalarFunctionOpertation	1
[FLINK-9852] [table] Expose descriptor-based sink creation and introduce update modeThis commit exposes the new unified sink creation through the table environments and the external catalog table. It introduce a new update-mode property in order to distinguish between append, retract, and upsert table sources and sinks. This commit refactors the top-level API classes a last time and adds more documentation. This commit completes the unified table sources/sinks story from an API point of view.Brief change log:- Introduction of TableEnvironment.connect() and corresponding API builder classes- Introduction of property update-mode: and update of existing connectors- External catalog support with proper source/sink discovery and APIThis closes #6343.	1
[FLINK-27829][python] Remove calcite dependency (#19841)	4
[hotfix][table-planner] Added joda.convert to planner jar	1
[FLINK-10149][mesos] Replace string concatenation with slf4j placeholders	2
[FLINK-9225][core] Minor code comments fix in RuntimeContextThis closes #5883.	1
[FLINK-3965] [gelly] Delegating GraphAlgorithmA delegating GraphAlgorithm wraps a GraphAlgorithm result with adelegating proxy object. The delegated object can be replaced when thesame algorithm is run on the same input with a mergeable configuration.This allows algorithms to be composed of implicitly reusable algorithmswithout publicly sharing intermediate DataSets.This closes #2032	5
Remove unnecessary log level checksThis addresses PR comments: https://github.com/apache/flink/pull/436/	2
Introduction of a Writable type and tests	3
[FLINK-19466][runtime / state backends] Add default savepoint configuration to StreamExecutionEnvironmentIf a savepoint is specified in code it will always override anyconfiguration set in the clusters flink-conf. Conceptually savepointsare separate from checkpoints but internally they rely on the samemachinery. To avoid exposing savepoints in the CheckpointStorageinterface we instead override the SAVEPOINT_DIRECTORY configurationin the CheckpointStorageLoader	5
[hotfix] [core] Avoid Java 8 specific functions in MemorySize	1
[FLINK-16500][hive] Hive get primary key should not throw exception when Invalid method nameThis closes #11352	1
[streaming] New Source and state checkpointing interfaces that allow operations to interact with the state checkpointing in a more precise manner.	1
[FLINK-26095][metrics] Respect bind-host for MQS actor system	5
[FLINK-10141][network] move notifications outside the bufferQueue and receivedBuffers locksThis means, notifyCreditAvailable() and notifyChannelNonEmpty() are calledwithout any locks being acquired. The change is safe since these callbacks dotheir own synchronization already (if needed).This closes #6553.	4
[FLINK-28529][state/changelog] Fix unstable ChangelogPeriodicMaterializationSwitchStateBackendITCase#testSwitchFromDisablingToEnablingInClaimMode	3
Modified unit test after having removed dead code	4
[hotfix][tests] Rename ZooKeeperLeaderElectionConnectionHandlingTest to ZooKeeperLeaderRetrievalConnectionHandlingTest	3
Removed invalid test for incorrectly canceled map task.	3
[FLINK-25800][docs] Update incorrect links in the datastream/execution_mode.md pages. This closes #18491	5
Extended release script, update nightly build script	5
[FLINK-17771][python][e2e] Fix the OOM of the PyFlink end to end test on JDK11.This closes #12279.	3
[FLINK-26185] Update Elasticsearch7SinkExample to use new unified Sink interface	1
[hotfix][tests] Remove unnecessary try-catch usage	1
- fixed bug in MatchTask	0
[FLINK-9768][release] Speed up binary releaseThis closes #6285.	1
[FLINK-1805]The class IOManagerAsync should use its own Log instanceAlthough class 'IOManagerAsync' is extended from 'IOManager' in package 'org.apache.flink.runtime.io.disk.iomanager', but I think it should has its own Log instance.Author: hongsibao <hongsibao@huawei.com>Closes #546 from matadorhong/FLINK-1805 and squashes the following commits:89c0dd7 [hongsibao] Use private instead of protected56b9dab [hongsibao] The class IOManagerAsync(in org.apache.flink.runtime.io.disk.iomanager) should use its own Log instance	2
[FLINK-1646] [runtime] Improve 'insufficient number of network buffers' error msgAdd a hint about how to configure the number of network buffers.	1
[hotfix] [avro] Fix some serializability warnings and problems	0
[FLINK-16307][e2e] Use start-cluster.sh instead of manually building cluster	1
[FLINK-17899][runtime] Remove unnecessary implementation of SourceContext in SourceOperatorStreamTaskFewer implementations of the interface make de-virtualization of its methods easier.	1
[FLINK-15670] Kafka Shuffle Test Case + add log4j2 fileKafkaShuffle provides a transparent Kafka source and sink pair, through which the network traffic of a shuffle step is persisted and redirected.	1
[FLINK-1544] [streaming] POJO types added to AggregationFunctionTestThis closes #517	3
[FLINK-13634] Add CompressWriterFactory to documentation	2
[FLINK-17098][table] CatalogManager#dropTemporaryTable and dropTemporaryView should use ObjectIdentifier as its argument	1
[FLINK-16661] Report the correct ApplicationStatus when job cancelled	2
[FLINK-1018] Fix cross pipelining/daming info to resolve cross-related streaming deadlocks.	0
cloudmgr continued	5
[FLINK-24336][python] Fix the issue that jar url list may contain empty string.This closes #17322.	0
Fixed Hash Join Buck consering overflock buckets, extended test	3
[hotfix][sql-client] Update usages of SET/RESET in tests	3
[FLINK-7109] [hadoop] Remove GlobalConfiguration.loadConfiguration from HadoopUtils#getHadoopConfigurationThe HadoopUtils#getHadoopConfiguration should not load the global configuration. Insteadwe pass it in as parameter.This closes #4265.	2
[FLINK-21727][table-planner-blink] Add getter for catalogManager in ParserImplThis closes #15151	2
[FLINK-10064] [table] Fix a typo in ExternalCatalogTableThis closes #6497.	2
[FLINK-26349][test] migrate AvroParquetRecordFormatTest to AssertJ	3
[FLINK-16173][build] Reduce noise for used undeclared dependencies	1
[streaming] connectors logging and error handling fixed	0
[FLINK-1806] Improve error message when no S3 access/secret key configured	5
[FLINK-9707] Support concurrent directory creations in LocalFileSystemSupport concurrent directory creations by accepting directories which have beencreated by a different thread/process in LocalFileSystem#mkdirs.This closes #6243.	5
[FLINK-21108][web] Add custom netty HTTP request inbound/outbound handlersCloses #16463	0
[hotfix] [streaming api] Cleanup watermark initialization in window operator	1
[FLINK-14646] Add non-null checks to KeyGroupRangeAssignmentThis closes #10120.	1
Added parameters to composite operators, some clean-up	4
[hotfix][runtime] Extract SlotManager interfaceRename SlotManager -> SlotManagerImpl and let it implement the SlotManager interface	4
yarn now also starts the web interfaceextended pact-client to nicely support remote execution.	1
[FLINK-3940] [table] Add support for ORDER BY OFFSET FETCHThis closes #2282.	1
[docs] Change doc layout- Changed layout (simple as possible)- Fix broken version references in docs- Update README- Removed dead resources- Reorganized content[docs] Address PR comments[docs] Address @ktzoumas comments[docs] Fix download link[docs] Fix front page stack link to TezThis closes #606.	2
[FLINK-21852][table] Introduce NullAwareGetters to BinaryRowDataThis closes #15257	5
[FLINK-16194][k8s] Introduce Factories that chain the decorators together to construct all the client/cluster-side Kubernetes resources	1
[FLINK-19386][hive] Use blink planner util class in HiveCatalogUseBlinkITCaseThis closes #13518	2
[hotfix][tests] Don't set process variable to nullPrevents the output from being written in case of failure	0
[FLINK-11100][s3][tests] Add FS type argument to s3_setup	1
Fixed bug in method checkCancelRequestFlag of class ExecutionVertex	0
[FLINK-28588][rest] MetricStore supports to store and query metrics of multiple execution attempts of a subtask.	1
[hotfix][runtime] Cleanup for the temporary fix of FLINK-13063 which is completely solved by FLINK-162191. In FLINK-13063 the chaining strategy of AsyncWaitOperatorFactory is HEAD, AsyncWaitOperatorTest#addAsyncOperatorLegacyChained is for manually setting it to ALWAYS，and now it is no long needed since FLINK-16219 change the chaining strategy of AsyncWaitOperatorFactory to ALWAYS.2. test case rename: testStateSnapshotAndRestoreWithObjectReused -> testObjectReusedbecause the case does not contain the snapshot and restore logic in it.This closes #19961.	2
[FLINK-22338][table-planner] Clear watermark output when test finished for FromElementSourceFunctionWithWatermarkThis closes #15659	1
Make PartialSolutionHolder non-final in BulkIterationThis is needed because the scala frontend will create a customPartialSolutionHolder to allow it's magic to happen.	1
Fixed problem with instance assignment update event in event collector	5
[FLINK-23607][state/changelog] Cleanup dependencies of DSTL DFS	4
[FLINK-11463][tests] Always run in a fresh copy of the distribution	1
[FLINK-20342][docs] Move monitoring/metrics.md to ops/metrics.md	4
[FLINK-8369] Migrate SubtaskExecutionAttemptAccumulatorsHandler to Flip-6 REST endpointThis closes #5285.	0
[FLINK-21925][core] Introduce #slotSharingGroup(SlotSharingGroup) for configuring slot sharing group with its resource	5
Temporarily disabled TestPlanTest to avoid build problem on Jenkins	0
[hotfix][tests] Refactor unit tests in RemoteInputChannelTest to avoid mock way	3
[FLINK-11846] Don't delete HA job files in case of duplicate job submissionThis commit changes the cleanup logic of the Dispatcher to only clean up job HA filesif the job is not a duplicate (meaning that it is either running or has already beenexecuted by the same JobMaster).This closes #7918.	1
[FLINK-9429] run-single-test.sh: fix order of "imports"Some e2e tests that rely on FLINK_VERSION being set, such astest_quickstarts.sh, didn't work with run-single-test.sh before.The reason the tests didn't work locally is that run-single-test.sh hasthe order of "imports" wrong. i.e. we have: source "${END_TO_END_DIR}/test-scripts/test-runner-common.sh" source "${END_TO_END_DIR}/../tools/ci/maven-utils.sh"while run-nightly-tests.sh has: source "${END_TO_END_DIR}/test-scripts/test-runner-common.sh" source "${END_TO_END_DIR}/../tools/ci/maven-utils.sh"This leads to this line failing in test-runner-common.sh because mvn_runis not available:  export FLINK_VERSION=$(MVN_RUN_VERBOSE=false run_mvn --file ${END_TO_END_DIR}/pom.xml org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)	1
[temp] Added infinite test.	3
[FLINK-12868][plugins] Create an empty plugins directory in flink-dist	2
[hotfix] [webfrontend] Rename 'pending' subtask stat to 'pending_or_failed'	0
[FLINK-18238][checkpoint] Broadcast CancelCheckpointMarker while executing checkpoint aborted by coordinator RPCIn the case of aborting checkpoint RPC from CheckpointCoordinator, it will prevent executing the respective checkpoint which was already triggered before. But we also need to broadcast theCancelCheckpointMarker before exiting the execution , otherwise the downstream side wouldprobably wait for barrier alignment until deadlock.This closes #12664.	2
[FLINK-28313][rest] Add history server flag to DashboardConfigurationThis closes #20142.	5
[streaming] Invokables and tests added for fast batch/window reduce operations and aggregations	1
Adapted interesting properties generation for UnionNode	5
[FLINK-8531] [checkpoints] (part 7) Move tests specific to Checkpoint Storage and Checkpoint Stream to separate tests suites	3
[FLINK-18905][hotfix][task] Rename OperatorChain#chainEntryPoint to mainOperatorOutput	1
[FLINK-8941][serialization] make sure we use unique spilling filesAlthough the spilling files were chosen with random names of 20 bytes, it couldrarely happen that these collide. In that case, have another try (at most 10) atselecting a unique file name.This closes #5709.	2
- added wait flag for program execution in PACT CLI client	1
[hotfix] Introduce OperatorCoordinatorHandler for factoring out logic from the SchedulerBase	2
[FLINK-8242] [orc] Fix predicate translation if literal is not Serializable.This closes #5345.	0
[FLINK-14189][runtime] Do not store dynamic slots by index in TaskSlotTable	2
[FLINK-18694][web] Add unaligned checkpoint config to web uiThis closes #12962.	5
[FLINK-15688][streaming] Define DataStream API for MultipleInputStreamOperatorThis interface is still not complete - it's missing for example watermark andlatency markers support.	1
[FLINK-11935][table-planner-blink] Fix cast timestamp to string and vice-versa to avoid Gregorian cutover	0
[FLINK-17901][python] Add module interface in PyFlinkThis closes #12422.	2
[FLINK-19694][table-runtime-blink] Support upsert ChangelogMode for ScanTableSource in runtimeThis closes #13721	1
[FLINK-26331] Makes configuration for repeatable cleanups follow the configuration pattern for task restartsThe issue is that repeatable cleanups leveragethe RetryStrategy. In contrast, task restartsuse RestartBackoffTimeStrategy. We might want toalign these two approaches and provide a genericinterface to allow retries. FLINK-26359 wascreated to cover this.	1
[FLINK-2445] Improve HadoopOutputFormatTestsThis closes #1628	3
[FLINK-7720] [checkpoints] Centralize creation of backends and state related resourcesThis closes #4745.	1
[FLINK-10987] Add licenses and notice for flink-swift-fs-hadoop	2
[FLINK-14816] Let TaskManagerThreadDumpHandler return JSON responseInstead of serving plain text, this commit changes the TaskManagerThreadDumpHandlerto return a JSON response. This allows to further extend this handler to notonly generate a thread dump of all threads but also for a sub set. Morever,it allows to return a more structured return value in the future.This closes #11887.	1
[FLINK-10393] Remove legacy entrypoints from start up scriptsThis commit removes the legacy entrypoints from the startup scripts.	1
[FLINK-14796][hive][doc] Add document about limitations of different Hive versionsthis closes #10650.	2
Revert "[FLINK-25426] Disable UnalignedCheckpointRescaleITCase because it fails regularly"This reverts commit 276570e223a9b4ddb3939101b0fe3ff995ac46c5.	5
Make DistinctOperator and Keys use TupleComparatorBaseWas TupleComparator before which does not work when used from the Scala API.	1
[FLINK-20086][python][docs] Add documentation about how to override open() in UserDefinedFunction to load resourcesThis closes #15795.	1
[hotfix][doc] Mention AggregationEnabled setting in kinesis docsThis closes #6072.	2
[FLINK-10482] Fix double counting of checkpoint stat	0
[FLINK-15914][checkpointing][metrics] Miss the checkpoint related metrics for the case of two inputsWhen the StreamTwoInputSelectableProcessor was introduced before, it forgot adding the checkpoint related metrics in the constructor.But it did not cause any problems, because only the StreamTwoInputProcessor actually worked before.After StreamTwoInputProcessor is replaced by StreamTwoInputSelectableProcessor as now, this bug is exposed and we will not see thecheckpoint related metrics for the case of two inputs.The solution is to add these metrics while constructing the CheckpointBarrierHandler.	0
[FLINK-25446][state] Avoid improper sanity check on read bytes on DataInputStream#read(byte[])	5
[FLINK-2170] [connectors] Add OrcRowInputFormat and OrcTableSource.This closes #4670.	1
[hotfix][flink-streaming-java] Fix typo in variable name in StreamingJobGraphGenerator.This closes #6593.	2
[FLINK-17660][table-common] Check default constructor for structured typesThis closes #12123.	2
[FLINK-15506][State][TTL] Enable State TTL Compaction Filter by default and deprecate the optionHaving the TTL compaction filter always enabled, currently results in that it runs for all Flink states independently from whether they are configured to have TTL or not. This theoretically increases compaction time and wastes some CPU cycles on calling the filter with the disabled TTL check. To test this, we have to try it by running a job with high compaction pressure which is difficult to generate. The common performance benchmark should be at least checked. In general, we do not expect any significant performance degradation as the calling of idle filter should be a negligible internal native C++ call w/o using JNI.This option can be also quite confusing for users. We can deprecate it but keep to fallback atm. Then see if there are any actual performance degradation reported by users. If none, we can remove it completely later.	4
[FLINK-2404] add support for primitives to simple accumulator countersThis closes #942.	1
Multicast Test Case + MulticastManager readyness criteria	3
[hotfix] Move JarListInfoTest to correct package	5
[FLINK-7529] Retrieve complete REST address from gatewayWith this change, the complete REST address (protocol://hostname:port) is retrievedfrom the RestfulGateway. That way we decouple the RestHandlers from the underlyingRestServerEndpoint/WebRuntimeMonitor because they no longer have to know whetherHTTPs is enabled or not.This closes #4599.	0
[FLINK-4564] [metrics] Configurable delimiter per reporterThis closes #2517.	5
Temporarily removed non-compiling classes from testing package.	3
[FLINK-17661] Add test for new TimestampsAndWatermarksOperator	1
[hotfix] [tests] Move utility methods into correct test class.The methods were intended to be generic for tests across partitions and hence placed in theSubpartitionTestBase.However, the SubpartitionTestBase can only really test common contract behavior, like behavior ondisposal, finishing, and buffer reycling contracts in those cases. Producer / consumer behavioris sufficiently different between both implementations that it does not make sense at this pointto try and share the tests.	3
[FLINK-2913] [runtime] Ensure file streams are properly closes in FsStateBackendThis closes #1353	2
[FLINK-7842] [build] Shade org.codehouse.jackson in Hadoop	1
[FLINK-16581][table-planner-blink] Support state ttl for Mini-Batch deduplication using StateTtlConfigThis closes #11482	5
[streaming] Implemented sliding window and batchReduce	5
[FLINK-16076][docs-zh] Translate "Queryable State" page into ChineseThis closes #12139.	1
little changes for robustness	4
[FLINK-5458] [docs] Add a template for migration guide	1
[FLINK-26270][Formats][CSV] Flink SQL write data to kafka by CSV format , whether decimal type was converted to scientific notation. This closes #20127	5
[FLINK-10537][network] Fix network small performance degradation after merging [FLINK-9913]Checks removed by this commit were performed once per every record, whileBefore [FLINK-9913] those checks were executed only once per"continue writing with new buffer". Apparently those checks have some overheadonce per record while are helping to avoid the need to commit the data very rarelly.	5
[hotfix][network] Add NetworkEnviroment.fromConfiguration factory methodMove <Flink configuration> -> NetworkEnvironmentConfiguration parsing from TaskManagerServicesConfigurationto NetworkEnviroment.fromConfiguration(flinkConfiguration) factory method anduse it to create NetworkEnviroment in TaskManagerServices.This way TaskManagerServices does not depend on network internals.Memory page size is additionally parsed for TaskManagerServicesConfigurationto decouple it from NetworkEnvironmentConfiguration becausethe page size is used also for memory manager outside of NetworkEnviroment.Theoretically shuffle implementations can have their own page size in future,different from TaskManagerOptions.MEMORY_SEGMENT_SIZE.	1
[hotfix][rat] Add *.snapshot files to RAT exclusion listThis closes #6295.	2
[FLINK-17878][fs-connector] Transient watermark attribute should be initial at runtime in streaming file operatorsThis closes #12293	1
[FLINK-19035] Remove DataStream#fold references from docs	2
[FLINK-6274] Replaces usages of org.codehaus.jacksonThis closes #3780.	2
[streaming] KafkaSink, added shutdown to KafkaSource	1
[FLINK-18399][table-api-java] Fix TableResult#print can not print the result of unbounded stream queryThis closes #12728.	0
Made NetworkLayer and DefaultRoutingLayer regular objects again to avoid problems during unit tests	3
[FLINK-8866] [table] Move table type out of descriptorsThe declaration of a table type is SQL Client/context specific and should not be part of a descriptor.	4
[FLINK-3005] [core] Bump commons-collections version to fix object deserialization remote command execution vulnerabilityThis closes #1381	0
[FLINK-5446] [docs] Rework system-metrics section	5
Minor code clean upThis closes #221.	4
[FLINK-25956][kryo] Remove noisy warnings	2
[FLINK-17599][docs] Update documents due to FLIP-84	2
[FLINK-18720][k8s] Introduce KubernetesResourceManagerDriver.	2
[hotfix][tests] Add missing space to help text	1
[hotfix][javadocs] Fix typo	2
[FLINK-25094][test] Correct the LatencyTrackingMapStateTest#verifyIteratorThis closes #18111.	3
[streaming] Build clean up & Removal of streaming.index package	4
[FLINK-5567] [table] Introduce and migrate current table statistics to FlinkStatistic.This closes #3197.	2
[FLINK-28213][runtime] StreamExecutionEnvironment configure method support override pipeline.jars optionThis closes #20057.	1
[hotfix][tests] Remove dead codes in PartitionTestUtils	3
[FLINK-2601] [runtime] Install shutdown hook at the end of I/O manager initializationThis prevents possible null pointers when the JVM shuts down before the I/O manager was fully started.	5
[FLINK-28143][runtime] Introduce BlocklistHandler.This closes #20079.	0
[FLINK-19123] Remove unused JobExecutor interfacesThey were introduced to allow two different MiniCluster implementationswhen the "new" FLIP-6 code was introduced.In the previous commit we changed the TestEnvironments to directly use aMiniCluster so these interfaces are not required anymore.	1
[hotfix] [core] Fix scope format keys for metricsThis closes #2068	0
[FLINK-5693] [gelly] ChecksumHashCode DataSetAnalyticAdds a DataSetAnalytic that checksums and counts elements from aDataSet. This allows DataSetUtils.checksumHashCode to be deprecated.This closes #3244	5
[FLINK-18802] Create an uber jar for avro for sql-client	1
[FLINK-6844] [scala] Implement compatibility methods for TraversableSerializerThis closes #4081.	2
[FLINK-9656][scripts] Add DEFAULT_ENV_JAVA_OPTS_CLI & KEY_ENV_JAVA_OPTS_CLI to read env.java.opts.client from flink-conf.yaml	5
[FLINK-7575] [webui] Show "Fetching" instead of 0 when IO metrics are not yet retrievedThis closes #4647.	2
Removed superfluous imports	2
[FLINK-1984] Mesos ResourceManager - T1 milstone (3)- Fenzo usage fix - always call scheduleOnce after expireAllLeases.- increased aggressiveness of task scheduler- factored YarnJobManager and MesosJobManager to share base class`ContaineredJobManager`- improved supervision for task actors, unit tests- support for zombie tasks (i.e. non-strict slave registry)- improved javadocs- fix for style violations (e.g. line length)- completed the SchedulerProxy- final fields- improved preconditions- log lines to use {}- cleanup ZK state- serializable messages	4
[FLINK-12012] [tests] BroadcastStateITCase properly inherits from AbstractTestBaseThe test previously used the default local environment (and thus embedded mini cluster),where the parallelism depends on the number of CPU cores.That makes the network buffer consumption non-deterministic.The test now extends AbstractTestBase which uses a test environment withwell-defined parallelism and memory footprint.	3
[FLINK-22471][connector-elasticsearch] Do not repeat default value	2
[FLINK-15550][runtime] Debug logging for TaskTest	3
[streaming] default signature added to operators	1
[FLINK-6377] [table] Add additional map tests	3
[FLINK-15342][hive] add IT for querying Hive viewthis closes #10643.	1
[hotfix] [docs] Remove weasel words, fix passive voice, typos and formattingThis closes #4816	2
Integrated Bootstrap in the User Interface and made some improvements and code clean ups.	4
[FLINK-13287][table-planner] Support STREAM_RECORD_TIMESTAMP call in table planner	1
[FLINK-19243][build] Enforce snakeyaml 1.27+	1
Modified implementation of ExecutionGraph to fix compilation error	0
Merge remote branch 'warneke/master'Conflicts:pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/jobgen/JobGraphGenerator.javapact/pact-examples/src/main/java/eu/stratosphere/pact/example/terasort/TeraSort.javapact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/DataSinkTask.javapact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/PartitionTask.javapact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/SampleTask.javapact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/test/util/TaskTestBase.java	5
[FLINK-17047][runtime] Change SchedulingStrategy#onPartitionConsumable(…) to take IntermediateResultPartitionID instead of ResultPartitionIDResultPartitionID is a composition of IntermediateResultPartitionID and ExecutionAttemptID.SchedulingStrategy is not aware of ExecutionAttemptID so there is no need to expose it.	4
Implemented JobManagerProfiler and TaskManagerProfiler as actors.Renamed NepheleMiniCluster to FlinkMiniCluster.	5
Changed configuration implementation to use java concurrency classes instead of synchronized statement	1
Adapted file resource layer to support buffer duplication	1
[hotfix][doc] fix typos in RichFunction	1
[FLINK-8832] [sql-client] Create a SQL Client Kafka 0.11 fat-jarThis closes #5673.	1
Unified dynamic method and ctor resolution	5
[hotfix][test] Drop unused timeout parameter	2
[FLINK-3536] Make clearer distinction between event time and processing timeThis brings it more in line with *ProcessingTimeWindows and makes itclear what type of window assigner it is.The old name, i.e. SlidingTimeWindows and TumblingTimeWindows is stillavailable but deprecated.	1
[FLINK-21581][runtime] Mark RuntimeContext.getJobId @PublicEvolvingThe JobID added in FLINK-21570 is1) a breaking change2) may be changed after removing DataSet API	5
[hotfix] Expose AbstractFsCheckpointStorage#resolveCheckpointPointer as public	0
[FLINK-7770][QS] Hide the queryable state behind a proxy.Previously the QueryableStateClient could connect to the JMand the TMs directly to fetch the required state. Now, thereis a proxy running on each TM and the remote client connectsto one of these proxies in order to get its state. The proxyreceives the request from the client, performs all necessarymessage exchanges within the Flink cluster, receives the stateand forwards it back to the client.This architecture allows for more security features to beintegrated in the future, as the proxy is running in thecluster, it exposes less information about the cluster tothe outside world, and is more suitable for containerizedenvironments.	5
[FLINK-3490] Bump Chill version to 0.7.4This closes #1701	2
[hotfix][network] Make toNotifyOnCheckpoint field final in ChekpointBarrierHandlers	0
[hotfix][docs-zh] fix title level in State Backends document	2
[FLINK-26553][build] Add scalafmt for formatting the Scala codebaseRun 'mvn spotless:apply' for auto-formatting the code base. Usually,IntelliJ should pick it up automatically if the Scala plugin is installed.This closes #19025.	1
[FLINK-3189] Fix argument parsing of CLI client INFO actionThis closes #1493	5
[FLINK-8726][docs] Fix and normalize code-highlightingThis closes #5909.	0
[FLINK-16625][utils] Extract BootstrapTools#getEnvironmentVariables to ConfigurationUtils#getPrefixedKeyValuePairsThis closes #11458 .	5
[FLINK-21853][e2e] Reduce the number JM kills in test_ha_per_job_cluster_datastream.sh and test_ha_datastream.shThis commit reduces the number of JM kills in test_ha_per_job_cluster_datastream.sh and test_ha_datastream.sh because onCI killing the JM 3 times can take more than the current timeout (15 minutes) (2 minutes per successful checkpoint, 8successful checkpoints required to pass).This closes #17137.	4
[FLINK-19944][hive] Support sink parallelism configuration for Hive connectorThis closes #15060	5
[FLINK-5070] [types] Unable to use Scala's BeanProperty with classesThis closes #3318	5
[FLINK-5474] [docs] Extend DC/OS documentationState where you can find out the job manager's address and how to install the DC/OS CLI.This closes #3237.	1
[hotfix][docs] Fix all broken imagesCo-authored-by: Xintong Song <6509172+xintongsong@users.noreply.github.com>This closes #15865	1
[hotfix][docs] Add MAP data type docs	2
[FLINK-8165] ParameterTool serialization fixCloses #5096	0
[FLINK-18452][table-runtime-blink] Fix StateMigrationException because RetractableTopNFunction#ComparatorWrapper might be incompatibleThis closes #14150	1
[FLINK-15464][hive] Fix HiveTableSourceTest::testPartitionFilterDateTimestamp for 1.xcloses #10757.	5
[FLINK-9833] [e2e] Add a SQL Client end-to-end test with unified source/sink/formatAdds a SQL Client end-to-end test with Kafka/Filesystem and Avro/JSON/CSV components.It reads JSON from Kafka, uses a UDF for transformation, writes to Kafka Avro, readsfrom Kafka Avro, and writes to Filesystem CSV again. It also tests the availableSQL jars for correctness.This closes #6422.	3
[FLINK-2832] [tests] Hardens RandomSamplerTestIncrease the level of significance from p=0.01 to p=0.001 and add retry annotationsto random sampler tests. This should decrease the probability of failing randomsampler tests.This closes #2076	3
[FLINK-26641][rest] Introduce rest api to fetch job status	2
Extracted SJaql tests	3
[FLINK-24983][build] Upgrade surefire to 3.0.5-M5	2
[hotfix] [state backends, tests] Make StateBackendMigrationTestBase more understandableThe StateBackendMigrationTestBase previously mocked user behaviour ofupgrading serializers by using a single serializer class, that can beconfigured with different target compatibility results when they arechecked for compatibility.This is a bit hard to understand, also doesn't really reflect how a userwould actually approach the feature. Instead, instead of configuring asingle serializer class with different compatibility "personalities",this commit uses actual different classes, V1TestTypeSerializer,V2TestTypeSerializer, and IncompatibleTestTypeSerializer, to simulatethe compatibility cases in tests.This commit also refactors the serializer migration related testserializers / types / snapshots to the testutil package, so that it canbe shared by other state migration related tests in the future.	3
[hotfix] remove Special LICENSE/NOTICE for binary releaseThis closes #1316.	1
[FLINK-11996][scala][docs] Remove warning about max fields in case class	2
[FLINK-2337] [storm compat] Excluded 'logback' from Storm dependenciesThis closes #903	2
Adjust test logging for new execution graph tests to logback framework	1
[FLINK-6926] [table] Add support for SHA-224, SHA-384, SHA-512	1
[FLINK-21929][statebackend][tests] Refactor StateBackendTestBase to ensure created keyed state backend could be disposed finally	1
[FLINK-22815][checkpointing] Remove SubtaskStateMapper.DISCARD_EXTRA_STATE which doesnot workThe mapping implemented via DISCARD_EXTRA_STATE is not supported on thenetwork level. At the same time there is no use for that mapping. It'sbetter to remove the mapper for now, so that it is not used by mistake.	1
[FLINK-28075][table-planner] get statistics for partitioned table even without partition pruningThis closes #20248	1
Added README	1
[FLINK-16658] Refactor ApplicationDispatcherBootstrap and testThis simplifies the internal structure of ApplicationDispatcherBootstrapand refactors the test to not assume as much about the internals ofApplicationDispatcherBootstrap.This closes #11696.	3
[hotfix] Fix checkstyle violations in LeaderElectionService	0
[FLINK-23862][runtime] Extract interfaces from AbstractInvokableThe previous commits introduced a contractbetween Task and StreamTask about cleaning up resources.To make this contract more explicit,the relevant methods (cleanUp, invoke, restore, plus related)are moved to a separate interface TaskInvokable.Furthermore, to allow Task to explicitly reference the new interfacecheckpointing and coordination interfaces are extracted.The requirement to extend AbstractInvokable is removed from its javadoc.	2
[FLINK-17772][python] Fix to_pandas to make it work in JDK 11This closes #12198.	1
[FLINK-24474] Default rest.bind-address to localhost in flink-conf.yaml	5
[FLINK-21019][hbase] Bump Netty to 4.1.46	2
[FLINK-15797][k8s] Reduce log noise of Fabric8FlinkKubeClientThis commit reduces the log noise of the Fabric8FlinkKubeClient by changing the log levelfrom info to debug.This closes #10965.	0
[FLINK-10936][kubernetes] Implement Kubernetes command line tools to support session clusterThe FlinkKubernetesCustomCli will be added to customCommandLines of CliFrotend.This closes #10245 .	1
[FLINK-12697][state backends] Support on-disk state storage for spill-able heap backend	1
[FLINK-14490][table-api] Add createTemporaryView	1
Cleaned up connected components example and tests.	3
Update README.md	2
[FLINK-6633] Register shared state before adding to CompletedCheckpointStore	1
[FLINK-3242] Also Set User-specified StateBackend without CheckpointingBefore, the user-specified StateBackedn would not be set when generating theJobGraph if checkpointing was disabled.This closes #1516	1
[hotfix] Refactor SubtaskCheckpointCoordinatorImpl.registerAsyncCheckpointRunnable	1
[FLINK-4526][yarn] remove redundant proxy messagesThis closes #2437	4
[FLINK-21743] Document limitation of JdbcXaSinkFunction for MySQL support	1
[FLINK-14820][core] Remove unused scheduleWithDelay	1
[FLINK-2844] [docs] Remove obsolete 'new-web-frontend' optionThis closes #2927.	1
[FLINK-18426] Remove incompatible deprecated keys from ClusterOptionsClusterOptions.INITIAL_REGISTRATION_TIMEOUT, MAX_REGISTRATION_TIMEOUT and REFUSED_REGISTRATION_DELAYhave incompatible deprecated options of type Duration associated. This causes the system to failif they are specified. Since the deprecated keys have not been used for a very long time, this commitwill remove the deprecated keys from the ClusterOptions.This closes #12763.	4
[hotfix][hive] categorize primitive type conversions with AtomicDataType	5
[FLINK-11843] Allow passing collection of recovered jobs to Dispatcher	4
- removed enforced debug logger configuration	5
[FLINK-28547][runtime] Add IT cases for SpeculativeScheduler.This closes #20271.	1
Fixed Optimizer DOP changes.Added test cases for optimizer DOP changes.Fixed Optimizer Branch Handling.Added Test Cases for Branch Handling.	3
[FLINK-22697][examples-table] Update flink-examples-table pom.xmlThis closes #15948.	5
[FLINK-1171] Move Scala API tests to flink-tests projectThis closes #159	3
[FLINK-16567][table][doc] Update to TableConfig in query_configuration documentThis closes #11410	2
[FLINK-7791] [Client] Move LIST logic into ClusterClient	2
[FLINK-19539][jmx][tests] Shutdown JMXService after tests	3
[FLINK-1110] Add execution on collections for flatMap	1
[hotfix] Remove TaskManagerProcessEntryPoint	1
[FLINK-18776][avro] Avoid hardcoded scala versionThis closes #13032.	2
[FLINK-22471][connector-kinesis] Remove required from ConfigOptionThis is defined by where the factory includes the option.	5
[streaming] tuple test	3
[hotfix][k8s][test] Allowing custom slot manager in KubernetesResourceManagerTest.	3
[FLINK-9007] [kinesis] [e2e] Build Kinesis test under include-kinesis profile	2
Minor fix to recovery logic	2
[FLINK-21138][tests] Register serializer instance in AbstractQueryableStateTestBase.testCustomKryoSerializerHandlingThe test AbstractQueryableStateTestBase.testCustomKryoSerializerHandling only works if one registers an actualserializer instance.	1
Initial draft of New Datamodel API.	5
[FLINK-20016][python] Support TimestampAssigner and WatermarkGenerator for Python DataStream API.This closes #13986.	5
[FLINK-9432][table-planner] Enable EXTRACT for DECADE, ISODOW, ISOYEARThis closes #17422.	4
removed old typica library	4
[FLINK-8983] End-to-end test: Confluent schema registryThis closes #6083.	1
[FLINK-1133] TypeExtractor now also supports nested Tuple-input derivationThis closes #137	1
Simplified translation of new Java API	1
[FLINK-19420][docs-zh] Translate "Program Packaging" page into ChineseThis closes #13505	1
[FLINK-19523][conf] Hide sensitive command-line configurations	5
[FLINK-23260][docs] Fix the link for Page "docs/libs/gelly/overview" (#16382)	2
[FLINK-13704][table-planner-blink] Revert removing SUBSTR() function in blink planner to fix TPC-H e2e test failedThis closes #9427	0
[FLINK-12469][table] Clean up catalog API on default/current databaseThis PR separates concepts of "current database of a user session" and "default database of a catalog".This closes #8390.	2
[FLINK-13711][sql-client] Hive array values not properly displayed in SQL CLIFix the issue that SQL CLI doesn't display arrays properly.This closes #9450.	0
[FLINK-15792][k8s] Make Flink logs accessible via kubectl logs per default	2
[FLINK-13921] Simplify cluster level RestartStrategy configuration* If the config option `restart-strategy` is configured, then Flink uses this `RestartStrategy`* If the config option `restart-strategy` is not configured, then** If checkpointing is disabled, then choose `NoRestartStrategy`** If checkpointing is enabled, then choose `FixedDelayRestartStrategy(Integer.MAX_VALUE, "0 s")`This closes #9636.	0
[FLINK-25742][akka] Remove the serialization of rpc invocation at Flink side.This closes #18434.	2
[FLINK-17286][table][json] Integrate json to file system connectorThis closes #12010	5
[FLINK-23528][connectors/kinesis] Use proper mock of ExecutorService in KinesisDataFetcherTest.Mockito makes it so much harder to debug tests. Here, we replace Mockito with a small test class that emulates the previously dispersed functionality in a simpler way.	1
[FLINK-6293] [tests] Harden JobManagerITCaseOne of the unit tests in JobManagerITCase starts a MiniCluster and sends aLeaderSessionMessage to the JobManager without waiting until the JobManagerhas gained leadership. This can lead to a dropped TriggerSavepoint messagewhich will cause the test to deadlock.This PR fixes the problem by explicitly waiting for the JobManager to becomethe leader.This closes #3796.	0
[hotfix][network] Introduce PartititonRequestClient interface for creating simple client instance in tests	3
[streaming] IML Skeleton update	5
Modified Nephele start scripts to include dependencies of new RPC service	1
hopefully fix bug with version detection using maven for yarn deployment to sonatype	1
[FLINK-22462][connectors / jdbc] Fix XA connection leak	0
[FLINK-22290][checkpointing] Adding alignment timeout and force unaligned checkpoint options to PyFlink and polished Java API.	1
Replication properties are not pushed down.	5
[Flink-12208] [table-runtime-blink] Introduce Sort & TemporalSort & SortLimit & Limit operators for blink streaming runtimeThis closes #8203	1
[FLINK-15228][docs] Drop vendor specific deployment documentation	2
Files of 0 bytes size now result in one input split	2
[hotfix] Update japicmp configuration for 1.11.0	5
[hotfix][tests] refactor StandaloneJobClusterConfigurationParserFactoryTest to use temporary folder for global Flink configuration	5
[hotfix][table-common] Clarify serializability of CatalogTable	2
Revert "[FLINK-10911][scala-shell] Enable flink-scala-shell with Scala 2.12"This reverts commit b7ce6119158346504e0ddd8d0f110859304eacbd.Our per-push CI does not cover Scala 2.12 so we didn't notice thatScalaShellITCase does not actually pass.	4
[hotfix] [runtime] Minor javadoc fix in JobManagerThis closes #1358JobExecutionVertices should be ExecutionJobVertices?I found it while I have been drawing a Flink local execution diagram.It is still a half way but let me know if you have any feedback.https://docs.google.com/drawings/d/1lZg8LkhAlI5lMc2EGCPlYArBmv7cCj-By-phuG6rGE8/edit	5
[hotfix] [cep] Spelling corrections	0
[FLINK-10848] Remove container requests after successful container allocationThis commit removes container requests after containers have been allocated. This prevents thatwe will request more and more containers from Yarn in case of a recovery.Since we cannot rely on the reported container Resource, we remove the container request byusing the requested Resource. This is due Yarn's DefaultResourceCalculator which neglects thenumber of vCores when allocating containers.This closes #7430.	1
[FLINK-25026] UnalignedCheckpointRescaleITCase.shouldRescaleUnalignedCheckpoint fails on AZPTests that extend from UnalignedCheckpointTestBase create a lot ofMiniClusters. E.g. the rescale it case creates 72 tests * 2 clusters(pre & post rescale). Direct buffers allocated by netty are freed duringthe GC.At the same time Flink uses PooledBufferAllocator, where we return usedbuffers earlier and we do not need to wait for GC to kick in. The ideato make the test more stable is to reuse a single NettyBufferPool forall clusters that are started in those tests. That way we can reusebuffers that were previously allocated and we do not need to wait untilthey are freed.Lastly as a note. This should not be an issue in production setups, aswe do not start multiple shuffle environments in a single JVM process(TM).	1
Adjusted test to new output format names.	1
[hotfix][tests] Remove note that E2E exactly-once is not coveredThe statement is not correct because by submitting a self-verifying job thatfails if exactly-once semantics are violated, this aspect can be covered byflink-jepsen.	2
[FLINK-18291][e2e] Introduce timeout into Streaming File Sink s3 test	3
[FLINK-21976] Remove python packages under flink-python/pyflink/mlThis closes #15405.	2
[hotfix] Return NOT_FOUND in TaskManagerDetailsHandler  if TaskExecutor unknown	0
[FLINK-13128][hive] make HiveGenericUDAF expose accumulator type in order to create its corresponding AggregateFunctionDefinition	5
[hotfix][tests] Remove Task-related "@PrepareForTest" annotations	3
[FLINK-12799][table] Improve expression based TableSchema extraction from DataStream/DataSet	5
[FLINK-18208] Fix flink ES connector typosThis closes #12543	2
[FLINK-29211][hive][legal] Update 2.3.9 NOTICE	5
[FLINK-14727][hive][doc] update doc of supported Hive versionsthis closes #10165.	1
[FLINK-19292][hive] HiveCatalog should support specifying Hadoop conf dir with configuration (#13434)	5
Added methods for waiting for returned segments to the block readers and writers.	1
Revert "[FLINK-24041][connectors] Added unit and integration tests for the generic sink implementation. Corrected an inconsistency that led to prepareCommit() not fully flushing the entire contents of the buffer at checkpoint time, removed catching of RuntimeExceptions in concrete implementations, added @PublicEvolving to classes, rearranged cosmetics of classes, corrected spelling errors, changed tests to reflect removal of RuntimeException, added checks on the parameters passed to AsyncSinkWriter at construction time, simplified batch creation part of Sink, amended tests, and test harness now guarantees ordering, added Javadoc for AsyncSinkWriter, removed redundant flushIfFull, removed duplicate assertion, removed redundant overriding in SinkInitContext, refactored static class into anonymous function, cleaned up imports, all test methods now begin with "test", refactored duplication in tests, Fixed spelling error, removed ResultFuture and all references to this construct. Now using Consumer<T> to accept requeue candidates"This reverts commit 271a346920f4ff873ef21957e97332fcf1af14be.	4
[FLINK-22477][tests] Extend DeclarativeSlotPoolBridgeBuilder to support build and buildAndStartThis closes #16485.	1
[FLINK-4749] [streaming api] Remove redundant processing time timer sets from window operator	1
[FLINK-23453][core] Renaming configuration automatic-buffer-adjustment -> buffer-debloat	5
[FLINK-4832] [table] Fix global aggregation of empty tables (Count/Sum = 0).- Fix injects a union with a null record before the global aggregation.This closes #2840	0
[FLINK-16418][hive] Hide hive version to avoid user confuse (#11304)	5
[FLINK-8531] [checkpoints] (part 1) Pull CheckpointType into its own class.	2
[hotfix] Improved logging for task local recovery	2
[FLINK-14578][table] load/unloadModule() should throw RuntimeException rather than checked exceptionTo adhere to FLIP to make load/unloadModule() API throw RuntimeException rather than checked exceptions.This closes #10053.	1
[FLINK-23541][task] Optimise hot path for the SourceOperator	1
[FLINK-1604] [runtime] Fixes livelock in PartitionRequestClientFactory.createPartitionRequestClientReplaces recursive concurrent modification resolution by while loopTurns off stdout-logging of Akka. Sends proper exceptions in ErrorResponse.Proper stream closing	0
OuputEmitter reuses arrays.	1
[streaming] adapt to new APIs	1
[hotfix] Remove various '.hidden' files that seem to have been accidentally committed	2
[FLINK-7647] [flip6] Port JobManagerConfigHandler to new REST endpointThis commit lets the JobManagerConfigHandler implement theLegacyRestHandler interface in order to be ported to the new RESTendpoint. This includes the introduction of ClusterConfigurationresponse body and ClusterConfigurationHeaders.The DispatcherRestEndpoint now also registers theJobManagerConfigHandler.	5
[FLINK-1425] [streaming] Add scheduling of all tasks at onceThis closes #330.	1
[FLINK-23558][streaming] Ignoring RejectedExecutionException during s… (#16653)* [FLINK-23558][streaming] Ignoring RejectedExecutionException during submitting the throughput calculation* [hotfix] Clarification of execution thread of actionExecutor in javadoc	2
[FLINK-9928] Add LOG2 function for table/sql APIThis closes #6404.	1
[FLINK-12963] [state-processor] Introduce OperatorStateSpec wrapper classThis class is a simple container class to represent an operator statethat is either still defined by a BootstrapTransformation, i.e. newstate that has not been written out yet, or an existing OperatorState.Introducing this class improves readability of the code, instead ofusing Eithers and Tuples that would not have clear semantics for theuser.	1
[FLINK-6655] Add validateAndNormalizeUri method to MemoryArchivistThis closes #4156.	5
[FLINK-20245][hive][docs] Document how to create a Hive catalog from DDLThis closes #14227	2
[FLINK-17218][checkpointing] Ensuring that ChannelStateWriter aborts previous checkpoints before a new checkpoint is started.	1
[FLINK-24728][table-runtime] Close output stream in batch SQL file sinkThis closes #17638	2
[FLINK-16921][e2e] Disable K8s tests until instability is resolved	0
[FLINK-27044][Connectors][Hive] Drop support for Hive versions 1.*, 2.1.* and 2.2.* which are no longer supported by the Hive community	1
[FLINK-10842] [e2e] Fix broken waiting loops in common.shThis closes #7073.	0
[FLINK-18604][hbase] HBase ConnectorDescriptor can not work in Table APIThis closes #13276	1
[FLINK-7630] Allow passing a File or an InputStream to ParameterTool.fromPropertiesFile()	2
Add PartitionProperty for unique fields	5
[hotfix] Fix checkstyle violations in TaskExecutorPartitionLifecycleTest	3
[FLINK-935] Fix compiler logic that pushed work out of the iteration loop.	1
[FLINK-9159][mesos] Set default value of mesos.failover-timeout to 1 week.	0
- extended OptimizerNodes to hold new StubAnnotations- PactCompiler reads StubAnnotations and adds them to OptimizerNodes	1
[hotfix] Add log4j2 properties file to flink-yarn-tests	3
[FLINK-11837][table-runtime-blink] Improve blink internal data foramtThis closes #7913	5
[FLINK-17197][runtime] switch ContinuousFileReaderOperator state to FAILED on error	0
multicast cluster implementation continued	5
[FLINK-7250] [build] Remove jdk8 profileThis closes #4399.	2
[hotfix] Disable e2e execution in PRs	0
[FLINK-15195][kubernetes] Remove unused KubernetesConfigOptionsInternal.ENTRY_POINT_CLASS_ARGS	5
[FLINK-20114][connector/kafka] Auto offset commit should be disabled by default.	1
Improved coverage of transfer envelope deserializer test	3
[hotfix][checkstyle] fix checkstyle in PartitionRequestClientFactory	0
[FLINK-27224][build] Drop 'flink.forkCountTestPackage' property	5
[FLINK-8531] [checkpoints] (part 4) rename forCheckpoint() to forCheckpointWithDefaultLocation()	2
[FLINK-14993][metrics] Store delimiter in reporter settings	1
[FLINK-17604][csv] Implement format factory for CSV serialization and deseriazation schema of RowData typeThis closes #12065	5
[hotfix][docs] Fix inconsistencies in SQL function documentation.This closes #7940.	2
[FLINK-21945][tests] Refactor UnalignedCheckpoint(Rescale)ITCase to automatically determine slots.This change makes maintenance much easier. Also this commits refactors UnalignedCheckpointITCase to use the same enum-style topology specification as UnalignedCheckpointRescaleITCase for consistency.	2
[FLINK-17084][table] Implement input type inference and output type strategy for ARRAY/ROW/MAP built-in functions (#11701)The type strategies are implemented using the new type stack. It alsoremoves those three planner expressions from the Blink planner as theyare no longer needed. Equivalent expressions in flink planner are notyet removed as they are needed for converting to RexNodes.It disables the FunctionDefinitionConvertRule for built-in functions asthe BridgingSqlFunction call generator supports only user defined functions so far.	1
[hotfix][docs][sql] Fix typo	2
[hotfix][tests] Migrate tests relevant to FLINK-28663 to Junit5/AssertJMigrated tests include DefaultExecutionGraphConstructionTest, EdgeManagerBuildUtilTest, EdgeManagerTest, ExecutionJobVertexTest, IntermediateResultPartitionTest, RemoveCachedShuffleDescriptorTest, JobTaskVertexTest, DefaultExecutionTopologyTest, DefaultExecutionVertexTest, DefaultResultPartitionTest, AdaptiveBatchSchedulerTest and ForwardGroupComputeUtilTest.This closes #20350.	3
[FLINK-16501][table] Support IS JSON predicate in Table APIThis closes #16805.	5
[hotfix] Fixes broken TopSpeedWindowing scala exampleIntegrated PR commentsThis closes #2259.	0
[FLINK-20387][table] Support TIMESTAMP_LTZ as rowtime attributeThis closes #15485	1
Revert "[FLINK-25399][tests] Disable changelog backend in tests"This reverts commit 1d1e72f0c4677e27d19345e5465c6d4a0ef6408f.The issue has been fixed in FLINK-25395 by commits:- 4691b66545010ed812624a259869c7a522663720- e28f4e2c5d4d54f5f727b9557024c537becfd054	2
[FLINK-10006][network] improve logging in BarrierBuffer: prepend owning task nameThis closes #6470.	2
[hotfix][table-common] Add constraint argument type strategy	1
[FLINK-20719][table-planner-blink] Change BatchExecNode & StreamExecNode to interface and make each node extended from ExecNodeBase directlyThis closes #14461	1
[hotfix][datastream] Fix cache invalidate with remote session cluster	5
Changes to input format configurator (builder) pattern.Added pattern for output formats.	1
[FLINK-27063][Connectors/Hive] Upgrade Hive 2.3 connector from 2.3.6 to 2.3.9	2
[builds] Print Java process stack traces of stalled builds	5
[FLINK-3779] [runtime] Add QueryableStateClient- Adds a client, which works with the network client and location lookup service  to query KvState instances.- Furthermore, location information is cached.	5
[FLINK-14178][build] Downgrade maven-shade-plugin to 3.1.1This closes #9817.	2
Renamed cloud manager to reflect dependence on Amazon EC2	5
[FLINK-3574] Implement math functions for Table APIThis closes #1775.	1
[FLINK-15064][table-planner-blink] Remove XmlOutput util class in blink planner since Calcite has fixed the issueThis closes #15911	0
[hotfix] Add missing Override annotations to RichFoldFunction and RichReduceFunction	1
[FLINK-19645][tests] Increase akka rpc timeout for ShuffleCompressionITCaseThis closes #13936.	1
[FLINK-8956][tests] Port RescalingITCase to flip6This closes #5715.	3
[FLINK-9785][network] add remote address information to LocalTransportException instancesThis closes #6291	5
[FLINK-20592] Remove LazyFromSourcesSchedulingStrategy	4
[FLINK-8640][travis] Enable japicmp on Java 9	0
[FLINK-19777][table-runtime-blink] Fix NullPointException for WindowOperator.close()This closes #13768	1
[hotfix][runtime] Fix max number of slots check for TM registration.Should not count non-empty slots for number of matched pending slots.	0
Fixed problem in network stack to handle multiple TCP connections between a pair of TaskManagers	0
[FLINK-17547][task][hotfix] Improve error handling1 catch one more invalid input in DataOutputSerializer.write2 more informative error messages	0
[FLINK-3075] Change Either creation method names and expose Right/Left classesCloses #1402	1
[hotfix] Introduces builder factory method for single-job JobManaagerRunnerRegistry	1
Minor changes for SortedGrouping	4
[streaming] Cancellation update in connectors	5
Added Support for Wildcards. The following is now possible "*" for all fields constant and "1->*" when the first field is forwarded to all output fields.	1
[FLINK-18239][e2e] Pin minikube version to v1.8.2	5
[FLINK-12301] Fix ScalaCaseClassSerializer to support value typesWe now use Scala reflection because it correctly deals with Scalalanguage features.	1
[hotfix][connector/common] Fix typo of variable in SourceOperator	1
[FLINK-25402] Set state.backend.rocksdb.localdir to default to <WORKING_DIR>/tmpThis is a behaviour change because before the RocksDB local dir would default to io.tmp.dirs.This closes #18083.	5
Revert "[FLINK-21796] Temporarily disable SQLClientKafkaITCase"This reverts commit 18a9f02fa2c34c36ea29b9f607b88668cf04194d.	4
Added default logging to job manager (when started from within IDE).Failure to start web info server does not terminate job manager.	5
Added normalized key direction inversion to normalized key sorter.	1
[FLINK-12331][network] Refactor NetworkEnvironment#setupInputGate() to InputGate#setup()Move input gate setup from NetworkEnvironment to InputGate.This eliminates tie between Task and NetworkEnvironment.Task does not need depend on NetworkEnvironmentand can trigger setup from InputGate directly.	1
[FLINK-2268] Close Hadoop FS reflectively in TestBaseUtilsThis removes the dependency on Hadoop and ensures that we only close ifHadoop is available.	4
[FLINK-2536] [streaming] Cleanups and improvements on SocketClientSink	1
[FLINK-4660] Allow ProcessFunction on DataStreamIntroduce new ProcessOperator for this. Rename the pre-existingProcessOperator to KeyedProcessOperator.	1
[FLINK-17861][task][checkpointing] Split channel state handles sent to JMBefore this commit, if Unaligned checkpoints are enabled,channel state is written as state handles. Each channelhas a handle and each such handle references the sameunderlying streamStateHandle (this is done to havea single file per subtask).But, if the state is less then state.backend.fs.memory-threshold,the data is sent directly to JM as a byteStreamHandle.This causes each channel state handle to hold the whole subtask state.This change solves this by extracting relevant potionsof the underlying handles if they are byteStreamHandles.	3
[hotfix][table-api-java] Remove @Experimental annotation for function methods in TableEnvironment	1
[gelly] made the number of vertices an optional parameter of PageRank; added the edge weight initialization to the library methods	5
[streaming] more test in MapTest	3
[hotfix][task] Remove redundant interrupt callRegardless if task was failing or not, we would still interrupt the source threada couple of lines later inside `cancelOperator(true)` -> `interruptSourceThread()`	1
[FLINK-24657][runtime] Added metric of the total real size of input/output buffers queue	1
[FLINK-16538][python][docs] Restructure Python Table API documentation (#11375)Adds an item "Python Table API" under "Table API & SQL" and move the documentation about Python Table API under it.	2
[FLINK-19699][e2e] Collect dmesg output after tests	3
[hotfix] [docs] Fix tEnv in tableApi docsThis closes #7254.	2
[runtime] Log restart strategy on job submission	2
[hotfix] Correct comment references to flink-yarn-tests	3
[FLINK-15138][e2e][python] Add PyFlink e2e testsThis closes #12104.	3
[FLINK-14503][coordination] Add partition report to heartbeat	1
fix typo in JobMaster (#7572)	2
[hotfix][docs] Fix missing joinLateral	0
[FLINK-11796] [State Backends] Remove Snapshotable interface	4
[FLINK-17760][runtime, tests] Add test to verify allocation will be canceled when a vertex is failed or canceled	0
[FLINK-11542][config][docs] Extend memory configuration descriptions	5
refactored desition of target reusage -> moved to SopremoUtil	4
[FLINK-26023][connector/pulsar] Create a Pulsar sink config model for matching ProducerConfigurationData.	5
[FLINK-12746] Add DataStream API Walkthrough* Remove old DataStream tutorial* Update links to new API walkthrough* Update order of menu entries in "Getting Started" section* Update index pages to reflect updated "Getting Started" section.	1
Small step towards semi join. Added semi join functions.TODO: Special exec strategy (runtime + optimizer) based on hash join required.      Either no duplicates of filtering side in HT or filtered tuples removed from HT after first match.	4
[FLINK-22881] Revert toggling IDLE/ACTIVE on records in IDLE stateThis closes #16095	4
[FLINK-5239] [distributed coordination] RPC service properly unpacks 'InvocationTargetExceptions'	1
[hotfix] Introduce TestingJobMasterGatewayBuilder	3
[FLINK-14904][table] Rename ANY type to RAW typeNote: "RAW" is a reserved keyword now.This closes #10308.	2
[hotfix][test] Add TestingRetrievableStateStorageHelper which is settable with exception	1
[FLINK-17295][runtime] Remove unnecessary fields from Execution and ArchivedExecution	4
Revert "[FLINK-13791][docs] Speed up sidenav by using group_by"This reverts commit c64e167b8003b7379545c1b83e54d9491164b7a8.	4
[FLINK-1543] [runtime] Adds try and catch blocks around all method calls from an actor's receive method which can throw an exception. Sets the StoppingSupervisorStrategy as default for all guardians.This closes #394.	1
[hotfix][runtime] Simplify PipelinedSubpartitionnotifyBuffersAvailable is a quick call that doesn't need to be executed outside of the lock	0
[FLINK-6203] [docs] [batch] Fix scala GroupReduce example	0
[hotfix][connectors/filesystem] Make the compactor tests to extend TestLogger.This closes #19052.	3
[FLINK-11741] [runtime] Replace ArrayListSerializer's ensureCompatibility method with SelfResolvingTypeSerializer implementation	1
Fixed bug that nested jar files in subdirectories are not supported.	1
[FLINK-18279][docs] Simplify Table OverviewThis closes #14053	2
[FLINK-19650][jdbc][table] Support limit push down for the JDBC connectorThis closes #13800	5
[FLINK-19948][table-planner-blink] Fix calling NOW() function throws compile exceptionThis closes #13901	1
[hotfix] [build] Fix broken project references to 'flink-shaded-curator-recipes'.The project 'flink-shaded-curator-recipes' was renamed to 'flink-shaded-curator',but some references were not properly updated. This fixes the remaining references.	5
[hotfix] [core] Standardize min and max accumulatorsUpdates counting, min, and max accumulators to all include primitiveconstructors and accessors.	5
[FLINK-15467][task] Wait for sourceTaskThread to finish before exiting from invoke	5
[FLINK-28376][network] Restrict the number of threads for sort-shuffle data readThis closes #20308.	5
[FLINK-16790][python][doc] Enables the interpretation of backslash escapes (#11526)	0
[FLINK-8524] Fix TypeExtractor.getBinaryReturnType JavaDocThe JavaDoc stated that the parameter `lambdaOutputTypeArgumentIndices` was atable of indices of the type argument specifying the input type, where itactually is a table of indices of the type argument specifying the outputtype. This is now fixed.This closes #5382.	0
[FLINK-17617] Fix SQL Client autocompleteCloses #12084	0
[FLINK-20651] Remove checkstyle checks that don't work/are not needed with google-java-format	1
Manually configured JAVA_HOME is preferred over system configuration. No default JAVA_HOME is used. Instead an error message is shown. Adresses #207Added use of default java command as third option (after stratosphere-conf.yaml and JAVA_HOME).	5
[hotfix][runtime] Extract SharedStateRegistry interface	1
[FLINK-26851][docs] Document prefix for SuffixOptionAllows to define a prefix for SuffixOptions that is also written into the generated html file.This allows us to use the same file for documentating the fully-qualified option (prefix + suffix) or just the suffix option.	0
[FLINK-1323] Refactor I/O Manager Readers and Writers to interfaces, add implementation that uses callbacks on completed write requests. - This change also allows for a very simple way of plugging in a synchronous version of the I/O manager.This closes #193.	1
[FLINK-3200] Fix Triggers by introducing clear() method to clean up state/triggers	4
[FLINK-6724] Include class name in UDFUtils#checkForInstantiation exceptionsThis closes #3995.	2
[FLINK-12253][table-common] Add a TIMESTAMP type	1
Revert "[FLINK-25188][python][build] Support m1 chip."This reverts commit 7e9be789	4
[FLINK-13632] Port PrimitiveArraySerializer test to TypeSerializerUpgradeTestBase	3
[hotfix] [core] Improve error messages of the Java Closure Cleaner	4
[FLINK-21426][docs] adds English details to jdbc sink connectorThis closes #14975	5
[FLINK-19158][e2e] Fix wget timeout mechanism and cache configThis closes #14694	5
[FLINK-12688] [state] Make serializer lazy initialization thread safe in StateDescriptorThis closes #8570.	5
[FLINK-1489] Replaces blocking scheduleOrUpdateConsumers message calls with asynchronous futures. Buffers PartitionInfos at the JobManager in case that the respective consumer has not been scheduled.Conflicts:flink-runtime/src/main/scala/org/apache/flink/runtime/jobmanager/JobManager.scalaAdds TaskUpdate message aggregation before sending the messages to the TaskManagersThis closes #378	5
[FLINK-1560] [streaming] StreamExecutionEnvironment enhancement for ITCases	2
[FLINK-22857][table] Support evaluating expressions in SpecializedFunction	1
[FLINK-3286] [build] Remove not maintained JDEB profile from flink-dist	2
[tests] Decrease verbosity of ChaosMonkeyITCase	3
[hotfix][docs] Updated vendor building documentation with library that existsThis closes #7648	2
[FLINK-21401] Consolidate different JobGraphTestUtils into one class	3
[hotfix][tests][table-planner] Add two more cases to verify the conflict of multiple LOOKUP hintsThis closes #20743	5
Fixed #77	0
[FLINK-11501] [kafka] Add ratelimiting to Kafka consumer (#7679)	1
[hotfix][travis] Always execute e2e testsNo longer skip e2e tests if a unit/integration test fails.	0
[FLINK-28466][tests] Bump assertj to 3.23.1	3
[FLINK-11467][kafka][tests] Port Kafka Streaming E2E test	3
[hotfix][streaming] Fix API incompatibility	0
[FLINK-23102][rest] Return empty FlameGraph if feature is disabled	2
[hotfix][FileSource] Internal refactoring to remove duplicated code without API change. Rename method argument names from "reader" to ***Format to improve the code readability.	1
[FLINK-15628][rest] Create webSumissionHandlers List with default capacityThis closes #10882.	0
[FLINK-21346][build system] Add uploading watchdog to all tasks with stacktraces.The test/e2e task is killed before timeout and artifacts are published in the regular way. If killed jps traces and watchdog output are additionally attached to mvn.logs.	2
[FLINK-20274][docs-zh] Translate page 'testing' into ChineseThis closes #14224	1
[FLINK-5013] [kinesis] Shade AWS dependencies to work with older EMR versionsThis closes #2787.	1
Adapted code in combining unilateral sort-merger and associated test case.	3
[FLINK-21330] Optimize the performance of PipelinedRegionSchedulingStrategyThis closes #15310	2
[FLINK-16521] Remove unused FileUtils#isClassFile	2
[FLINK-23950] Revert [FLINK-23738][state] to re-enable ChangelogBackend (#17287)This reverts commits:- d6bccd13190f0dbb2505b4512a38ae71b3d78195- b4c385e41832f16e39d5cbe4fb69ead9bbe077b2- 67dd4932133d74d88666433d4d8aa4a6cbc94c78	5
Modified Makefile to match snappy directory structure	2
[FLINK-21860][table-planner-blink] Support StreamExecExpand json serialization/deserializationThis closes #15268	5
[FLINK-14043] Speed up SavepointMigrationTestBase sub classesSince all SavepointMigrationTestBase sub classes rely on theMigrationTestUtils.AccumulatorCountingSink which uses user code accumulatorsin order to communicate with the test driver, we set the heartbeat intervalto 300ms in order to speed the test execution up. The reason this works isthat Flink transports user code accumulators from the TM to the JM viathe heartbeats. Hence, the heartbeat interval represents the lower boundaryfor the test completion.This closes #9664.	3
[FLINK-1414] Move quickstarts to website	4
Added integrated test case for broadcast variables.	3
[hotfix][examples][build] Fix typo	2
Remove unused enum values from Aggregations enum.SImple cleanup to remove unused enum values from Aggregations enum.Author: Henry Saputra <henry.saputra@gmail.com>Closes #373 from hsaputra/remove_unused_enumvalues_from_aggregations and squashes the following commits:a831e44 [Henry Saputra] Remove unused enum values from Aggregations enum.	1
[FLINK-17520] [core] Extend CompositeTypeSerializerSnapshot to allow migration based on outer snapshotThis commit deprecates isOuterSnapshotCompatible, which only allowssignaling if the outer config is either compatible or not compatible, infavor of a new resolveOuterSchemaCompatibility method which additionallyallows the user to signal migration.The change is backwards compatible, and allows subclasses that stillonly implement isOuterSnapshotCompatible to work as is.	1
[FLINK-17986] Fix check in FsCheckpointStateOutputStream.write	0
[FLINK-22424][network] Prevent releasing PipelinedSubpartition while Task can still write to itThis bug was happening when a downstream tasks were failing over or being cancelled. If allof the downstream tasks released subpartition views, underlying memory segments/buffers couldhave been recycled, while upstream task was still writting some records.The problem is fixed by adding the writer (result partition) itself as one more referencecounted user of the result partition	1
[FLINK-19654][python][e2e] Merge PyFlink Table and DataStream e2e tests to avoid setting up the environment multiple times (#13652)	1
[FLINK-4595] Close FileOutputStream in ParameterToolThis closes #2478	2
[FLINK-18725][e2e] Use ClusterIP instead of NodePort and remove query port in internal jobmanager serviceJobManager rest service and TaskManager query state service are optional. They could be enabled via apply two more yaml files. Refer to https://ci.apache.org/projects/flink/flink-docs-master/ops/deployment/kubernetes.html#deploy-job-cluster for more information.	5
naive way to reuse primitives in GeneralSchema; further commenting	1
[FLINK-1201] [gelly] test mapVertices	3
[hotfix][core] Avoid self-surpression in ExceptionUtils#firstOrSuppressed.In case of OutOfMemoryError the same exception may be rethrown in several places (OOM is preallocated) and thus a self-surpression is attempted, leading to a shadowed stacktrace.	0
[FLINK-14499][metric] MetricRegistry#getMetricQueryServiceGatewayRpcAddress is NonnullThis closes #10074 .	1
[hotfix][docs] Fix ExecutionEnvironment.scala doc errorThis closes #13324	0
[FLINK-3396] [runtime] Suppress job restart if adding to job graph store failsA failure to add the job graph to the submitted job graphs in ZooKeepercould lead to a job restart w/o the job graph ever being added to thesubmitted graphs store. Although the job submission was not ACK'd inthis case before, it received job status messages. Now the job willnot be ACK'd as before, but the job will be failed.This closes #1657.	0
Add dummy test case for the TPC-H query 9. Doesn't work yet.	1
[FLINK-10406] Add meaningful message if no savepoint location for cancel with savepointThe JobMaster now returns a meaningful exception messages if a job is canceled with savepointand neither a savepoint directory has been given nor a default location has been configured.This closes #6765.	5
[FLINK-4075] Fix unstable ContinuousFileProcessingCheckpointITCase	2
[FLINK-13465][build] Bump javassist to 3.24.0-GA	2
[FLINK-24220][doc]Translate "RESET Statements" page of "SQL" into Chinese (#17224)	1
[FLINK-16996][table-runtime-blink] Remove legacy data formats (BaseRow)This closes #11925	5
[FLINK-14857][runtime] Remove remaining checkpoint lock usages from AsyncWaitOperatorAfter 9b3a0b54e2eb2d29805365a3a6c2c9bd9330fd1c every Mail actionacquires checkpoint lock automatically and all state-modifying actionsin AsyncWaitOperator are already executed as mails.	1
Removed execution service from execution graph and replaced by akka's futures.	4
[FLINK-26540][hive] Support handle join involving complex types in on conditionThis closes #19012	0
[hotfix][tests] Stabilize HistoryServerTest	3
- Finished RecordOutputFormat- MovedBinaryIntInputFormat- Minor Cleanup in other formats	4
[FLINK-2566] FlinkTopologyContext not populated completely  - extended FlinkTopologyContext to be populted with all supportable attributes  - added JUnit test  - updated README.mdadditionally: module restructuring to get cleaner package structureThis closes #1135	4
[FLINK-2140][gelly] Allowed access to the number of vertices in the GSA functionsSimilar to the vertex-centric approach, this PR enables users to access the total number of vertices from within the gather, sum and/or apply functions of a GSA iteration.Author: andralungu <lungu.andra@gmail.com>Closes #779 from andralungu/numVerticesGSA and squashes the following commits:cffd944 [andralungu] [FLINK-2140][gelly] Allowed access to the number of vertices in the GSA functions	1
[hotfix] fix table walkthrough due to removing TableSource & TableSink registration	4
[FLINK-21193][docs] Update licenses	5
[FLINK-17303][python] Return TableResult for Python TableEnvironmentThis closes #12246.	2
[FLINK-2954] Add config parameter for passing environment variables to YARNThis closes #1409	4
[FLINK-14239] Fix the max watermark in StreamSource may arrive the downstream operator early	1
[FLINK-8550][table] Iterate over entryset instead of keysThis closes #5404.	1
[FLINK-24954][network] Refresh read buffer request timeout on buffer recycling/requesting for sort-shuffleThe implementation of read buffer request timeout for sorting shuffle is a little aggressive. When a running task encounters data skew or the task is slow, a timeout exception may be triggered. To improve this situation, when at least one buffer is recycled or allocated, the buffer request timeout should be refreshed to avoid throwing a timeout exception.This closes #17936.	1
[FLINK-21148][test] Makes the test fail early when running into a timeout	1
[hotfix] Disable KryoSerializerConcurrencyCheckInactiveITCase if logging level is DEBUG	0
[hotfix][runtime][test] Adds additional test for when the JobManagerRunner result completes exceptionallyAdditionally, I moved the test's documentation into theproduction code because it makes more sense to have thereasoning over there.	1
[FLINK-4329] [distributed runtime] Clean up ScheduleModeRemove unsopported 'backtracking' option.Pick better names for 'all' and 'from sources' options.	1
[FLINK-22003][checkpointing] Prevent checkpoint from starting if any Source isn't running	1
[hotfix] Fix code formatting in window doc	2
[FLINK-1254] [compiler] Fix compiler bug for pipeline breaker placementThis closes #216	4
Merge pull request #73 from aljoscha/masterSwitch to using objects instead of classes for usercode	1
[hotfix] Let Elasticsearch7DynamicSink* test cases extend from TestLogger	3
[FLINK-21994][python] Support FLIP-27 based FileSource connector in PyFlink DataStream APIThis closes #15443.	5
[FLINK-26017][runtime] Adds log message to when a job is marked as dirtyThis log message serves as a counterpart to when the job is marked asclean which is already logged in the Dispatcher. This enables the user toverify the state of the JobResultStore through log messages.	2
[FLINK-28267][test] Disable KafkaSourceLegacyITCase#testBrokerFailure	3
[FLINK-15014][state-processor-api] Refactor KeyedStateInputFormat to support multiple types of user functionsThis closes #10382	1
[FLINK-1533] [runtime] Fixes NPE in the scheduler where the allocated shared slots are not properly checked.This closes #388.	0
[FLINK-9320] [e2e] Update test_ha e2e to use general purpose DataStream jobThis closes #5990.	5
[hotfix][runtime] Remove FailoverTopology dependency from PartitionReleaseStrategy	2
[FLINK-1866] [streaming] StreamConfig key bugfix	0
[hotfix] [checkpointing] Cleanup: Fix Nullability and names in checkpoint stats.	0
[FLINK-13134][hive] override default hadoop version from 2.4.1 to 2.7.5 in flink-connector-hiveHive 2.3.4 relies on Hadoop 2.7.2 or later version. The default hadoop version in Flink globally is 2.4.1 which misses some classes in 2.7.2 and thus doesn't meet the requirement.For hadoop 2.7, the minor version supported in flink-shaded-hadoop-2-uber is 2.7.5.This closes #9011.	2
[FLINK-25305][checkpoint] Always wait for input channel state and result partition state get completed in AsyncRunnableThis closes #18112.This PR fixes the issue that if a task is marked FINISHED_ON_RESTORE and then taking unaligned checkpoints,currently it does not include the channel states in the operators' states. This might cause that when takingunaligned checkpoints:1. The first barrier arrived.2. The unligned checkpoints would snapshot the state after the first barrier and start the asynchronous part immediately.3. The unaligned checkpoints relies on waiting till all the channel states' futures are done to ensure reporting to JM   happens after all barriers are aligned. However, if the channel states are not included, this assumption would be broken.4. If the reporting happens before all barriers are aligned, the reporting would fail due to failing to build CheckpointMetrics.	0
it compiles and starts	5
[FLINK-8139] [table] Check for proper equals() and hashCode() for stateful operatorsThis closes #5065.	1
[FLINK-21254] Add tests for Created state and State interfaceThis closes #14870	1
[FLINK-16746] Add default 'jobmanager.memory.process.size: 1600m' to flink-conf.yamlThe resulting default JVM heap size for standalone deployment is 1024Mb as before FLIP-116.The requested container size (Yarn and Kubernetes) will increase by default from 1024Mb to 1600Mb.	1
[FLINK-12670][runtime] Implement FailureRateRestartBackoffTimeStrategy* use ManualClock in unit test and add configuration descriptionThis closes #8573.	5
[FLINK-12414][runtime] Implement SchedulingTopology adapter	2
[FLINK-4373] [cluster management] Introduce SlotID, improve and test ResourceProfileThis closes #2370.	2
[hotfix][hive] unify instantiateHiveDatabase() in HiveCatalog	2
[hotfix][tests] De-duplicate code in ArchivedExecutionGraphTestMotivation: allow to test more snapshot summary valueseasier in a subsequent commit.	3
[FLINK-17375] Delete unused files in tools/- tools/qa-check.sh: not in use anymore- tools/merge_flink_pr.py: last commit created with script in 2016- tools/test_deploy_to_maven.sh: trivial	3
[FLINK-6044] Replace all unintentional calls to InputStream#read(...) with InputStream#readFully(...)	2
[hotfix] Fix YARNSessionFIFOITCaseWhen comparing the hostname, it was comparing capitalised vs.all-lowercase hostname from the yarn config.	5
[FLINK-27733][python] Rework on_timer output behind watermark bug fixThis closes #19788.	0
[streaming] addSource fix + added missing licensing	1
[FLINK-18671][docs] Update upgrade compatibility table for 1.11.0	5
[hotfix][yarn] Refactor YarnDistributedCacheITCase to avoid code duplication	4
[FLINK-19245][connectors] Set default capacity for FutureCompletingBlockingQueue.	1
[FLINK-12815] [table-planner-blink] Support CatalogManager in blink plannerThis closes #8707	2
Fixed unit tests	3
[FLINK-12747][docs] Getting Started - Table Api Walkthrough	1
[hotfix][runtime] Move hostname retrieval logic into separate methods	2
[FLINK-6313] [runtime] Fix typos; log exception in QSClient for ActorSystem shutdown failureThis closes #3728.	0
[FLINK-8805][runtime] Optimize EvenSerializer.isEvent methodFor example, previously if the method was used to check for EndOfPartitionEventand the Buffer contained huge custom event, the even had to be deserialized beforeperforming the actual check. Now we are quickly entering the correct if/else branchand doing full costly deserialization only if we have to.Other calls to isEvent() then checking against EndOfPartitionEvent were not used.	1
[FLINK-27797][python] Fix the issue that PythonTableUtils.getCollectionInputFormat cannot correctly handle None valuesThis closes #19834.	0
[FLINK-9584][connector] Properly close output streams in Bucketing-/RollingSinkThis closes #6164.	2
[hotfix][table-runtime-blink] Query converters for internal data structures	5
[hotfix][runtime] Rename method closeAsyncInteral to closeAsyncInternal	0
[FLINK-4715] Remove superfluous test	3
[hotfix][webfrontend] Added non-binary image assets to license check exceptions	1
[FLINK-6903] [runtime] Activate checkstyle for runtime/akkaThis closes #4114	1
[FLINK-20342][docs] Group standalone resource providers under resource-providers/standalone	1
[FLINK-9677][rest] Simplify logging	2
Changed Singleton annotation to more flexible DegreeOfParallelism annotation. Avoiding test plan DOP synchronization for explicitly set DOPs.	1
[minor][table-planner-blink] Improve regular expression for flink version replacement and make sure that the json plan is still valid after the node ids are replacedThis closes #14878	5
[FLINK-12122] Add EvenlySpreadOutLocationPreferenceSlotSelectionStrategyThe EvenlySpreadOutLocationPreferenceSlotSelectionStrategy is a special implementation ofthe LocationPreferenceSlotSelectionStrategy which tries to evenly spread out the workloadacross all TaskExecutors by choosing the slot with the least utilization if there is a tiewrt the locality.	1
[FLINK-21669][table-api] Support "table.dml-sync" option to execute statement in sync modeThis closes #15340	1
[hotfix][network] Remove unused EventSerializer#isEvent method	1
[FLINK-12391][travis] Limit transfer.sh upload to 1 minute	2
[FLINK-22876][tests] Migrated FileSinkMigrationITCase to SharedObjects as a showcase/test.	3
[FLINK-7650] [flip6] Port JobCancellationHandler to new REST endpointLet the JobCancellationHandler implement the LegacyRestHandler interface. Moreover,this commit adds the DELETE method to HttpMethodWrapper and theRestServerEndpoint#registerHandler method.Add PATCH methodThis closes #4697.	1
[FLINK-7623][tests] Add tests verifying isRestored flag	3
[FLINK-11524][tests] Throw descriptive error if job terminates prematurely	0
[hotfix] Only close the SourceReader and EventTimeLogic in the SourceOperator if they are not null.	1
[FLINK-15079][tests][config] Run BashJavaUtils after packaging	1
[FLINK-17028][hbase] Introduce a new HBase connector with new property keysThis closes #12178	5
[hotfix][javadoc] Add a missing param doc for JobExecutionException	2
[FLINK-24960][yarn-tests] change order of statements to avoid race condition	4
[FLINK-18492][python] Extract the Beam specific operation classes into a separate Python moduleThis closes #12903.	4
[hotfix][docs] Fix broken links	2
[FLINK-11251][metrics] Exclude variable values from logical scope of generic groups	2
[FLINK-20285][runtime] LazyFromSourcesSchedulingStrategy checks vertex's right before scheduling it	2
[FLINK-23969][connector/pulsar] Create e2e tests for pulsar connector.	3
[FLINK-15267][table-planner-blink] Fix NoSuchElementException if rowtime field is remapped in TableSource (#10596)	0
[hotfix] Deduplicate logic to build rpc method stringThis commit deduplicates the logic to build a string representation of a rpc.	2
[hotfix] [table] Refactor SqlToConverter configurationThis closes #6857.	5
[hotfix] Add RpcUtils#INF_DURATION	5
[hotfix][runtime] Remove slotProvider and slotRequestTimeout param from DefaultScheduler constructorThis makes it easier to understand that the slot allocation is conducted via ExecutionSlotAllocatorFactory but not those two legacy params.	2
[FLINK-6304] [table] Remove unused importsThis closes #3717	2
[FLINK-1761] [runtime] Fix sequence number mismatch on empty buffer drop.	4
Change python2.7 to python in KMeans Quickstart	4
[hotfix] [docs] add missing YARN options in CLI docs	2
Implements the ascending flag for basic type comparators.	5
[hotfix] [build] Change REST port to 8081 for end-to-end testing scriptsNow that the FLIP-6 code uses 8081, we need to probe that port to checkFlink's status in the end-to-end tests.	3
[FLINK-22419][coordination][tests] Rework RpcEndpoint delay tests	3
[gelly] [docs] Change the return type of groupReduceOnNeighbors exampleThis closes #650	4
[hotfix] Remove unused JsonUtils	5
[FLINK-12092][docs] Clarify when onTimer(...) in ProcessFunction is called.	1
[FLINK-8860] Change slot-report message to DEBUG	0
[hotfix][docs] Fix the wrong display of totalNumberOfCheckpoints in metric.md	0
[hotfix][docs] Improve documentation of savepointsThis closes #6766.	2
[FLINK-13451][tests] Remove use of Unsafe.defineClass() from CommonTestUtilsThe method Unsafe.defineClass() is removed in Java 11. To support Java 11, we rework the method"CommonTestUtils.createClassNotInClassPath()" to use a different mechanism.This commit now writes the class byte code out to a temporary file and create a new URLClassLoader thatloads the class from that file.  That solution is not a complete drop-in replacement, because it cannotadd the class to an existing class loader, but can only create a new pair of (classloader & new-class-in-that-classloader).Because of that, the commit also adjusts the existing tests to work with that new mechanism.This closes #9251	1
[FLINK-14573][python] Support TimestampType for Python UDFThis closes #10055.	1
[FLINK-15942] Do not log huge/infinite cpu/memory resources in profiles	2
[FLINK-10022][network][metrics] add metrics for input/output buffersThis closes #6551.	1
[hotfix][kafka-tests] Do not hide original exception in FlinkKafkaProducer011ITCaseThis closes #5383.	2
Improved robustness of buffer implementation	1
[hotfix] Fix checkstyle violations in SchedulerIsolatedTasksTest	3
[FLINK-25372] Add thread dump feature for jobmanager on Web UIThis closes #18148	1
Fix various deprecation warnings in tests	3
Wait for slots instead of TaskManagers in test environmentInstead of waiting for the number of connected task managers, the localmini cluster used for tests now waits for the total number of availableslots. Waiting for the number of connected task managers instead of theavailable slots might result in races in rare situations.In addition, rename task tracker (sic) to task manager in test classes.	3
[hotfix][runtime] Simplify SlotPoolImpl#maybeRemapOrphanedAllocation	0
- Refactored test names in pact-common/../type/base	3
address comments	1
[hotfix][jdbc] rename PostgresCatalogITCase to PostgresCatalogTest	3
[FLINK-11392][network] Rename NetworkEnviroment to NettyShuffleEnviromentThis closes #8608.	1
[FLINK-20580][rpc] Separate wire value class from user values	1
[FLINK-8835] [taskmanager] Cleanup TaskManager config keysThis closes #5808.	5
[hotfix][conf] Fix javadoc of CheckpointConfig#isUnalignedCheckpointsEnabled.	5
[FLINK-11354][tests] Port JobManagerHARecoveryTest to new code base- Moved JobManagerHARecoveryTest#testJobRecoveryWhenLosingLeadership toDispatcherHATest#testJobRecoveryWhenChangingLeadership- Moved JobManagerHARecoveryTest#testFailingJobRecovery toDispatcherHATest#testFailingRecoveryIsAFatalErrorThis closes #7539.	3
changed restarts to predecessors without checkpoints. changedrecovery to one call of checkpoint replay per instance.	4
[FLINK-13434][e2e] Change the test_resume_savepoint to use stop-with-savepoint.	1
[FLINK-17977][akka] Log target address retrieval on DEBUG	0
[FLINK-20738][table-planner-blink] Introduce BatchPhysicalSortAggregate, and make BatchExecSortAggregate only extended from ExecNodeThis closes #14562	1
[hotfix][network][tests] remove Mockito mocks in RecordWriterTest	3
Fixed #233	0
[FLINK-18363] Add user classloader to context in DeSerializationSchemaThis commit exposes the user code classloader along with the possibilityto register release hooks in the DeserializationSchema andSerializationSchema.Additionally it introduces a helper classes for easier creating theInitializationContexts from a RuntimeContext.This closes #13844	1
Rename SetId() to setId()Hopefully fixed a bug in the pact compiler for branching plans:- added a test case provided by Anja Kunkel from HU Berlin- my understanding of the bug is the following: During a check if additional pipeline breakers are necessary,the compiler checks for the LocalStrategy of a SinkJoinerPlan. The SinkJoinerPlan is a "fake" plan element to group multiple output sinks into one sink (the compiler assumes one root node, this is why a "fake" plan node is required).The local strategy of SinkJoinerPlan is initialized as NONE, which means that we just pass through the elements (which makes sence since we are talking about a sink) The initialization of a NONE-local strategy assumes only one input, not two.I replaced the LocalStrategy with BINARY_NO_OP, which is a NONE for two input.The compiler is now able to do its pipline breaker checks.	4
[FLINK-2872] [Documentation] Update the documentation for Scala part to add ExecutionEnvironment.readFileOfPrimitives.Add the missing Scala part for ExecutionEnvironment.readFileOfPrimitives API doc in theprogramming guide.Author: Henry Saputra <hsaputra@apache.org>Closes #1268 from hsaputra/add_readFileOfPrimitives_scala_guide and squashes the following commits:f543436 [Henry Saputra] Add variant of ExecutionEnvironment.readFileOfPrimitives in Java with additional delimiter.1209019 [Henry Saputra] [FLINK-2872] [Documentation] Update the documentation for Scala part to add readFileOfPrimitives.	2
[hotfix] Allow @Internal annotation on fields	1
[FLINK-9578] [sql-client] Allow to define an auto watermark interval in SQL ClientThis closes #6160.	1
[FLINK-5945] [core] Close function in OuterJoinOperatorBase#executeOnCollectionsConclude OuterJoinOperatorBase#executeOnCollections with a call toFunctionUtils.closeFunction(function) in order to close rich userfunctions.This closes #3453	1
[FLINK-16741][web] Add TM log list and TM log detail pageThis closes #11498.	1
[FLINK-5021] Remove the special EOS TimestampedFileInputSplit.Without this special split signaling that no more splits areto arrive, the ContinuousFileReaderOperator now closes bysetting a flag that marks it as closed and exiting when theflag is set to true and the pending split queue is empty.	1
Fixed spurious error message for state transition from CREATED to ASSIGNED	1
[FLINK-18050][task][checkpointing] Simplify ChannelStateCheckpointWriter interface	2
Disabled activation of input channels	5
[hotfix] [docs] Improve Supported Types section of Table API & SQL docs.	2
[FLINK-21189][runtime] Introduces ExceptionHistoryEntryExtractor	4
[FLINK-17434][hive] Hive partitioned source support streaming readThis closes #12004	1
[FLINK-7419] [build] Shade jackson dependency in flink-avroThis closes #5424	2
[FLINK-19434][DataStream API] Add source input chaining to StreamingJobGraphGenerator (part 2)This fixes issues with InputGate numbering and with Operators that have a mix of chained sourcesand network inputs.	1
[FLINK-28135][runtime] Introduce SlowTaskDetectorThis closes #20054.	2
[FLINK-26025][connector/pulsar] Replace MockPulsar with new Pulsar test tools based on PulsarStandalone.1. Drop some unused fields in test classes.2. Fix the checkstyle issues for source test.3. Fix violations for Pulsar connector according to the flink-architecture-tests.4. Create a standalone Pulsar for test.5. Add new methods to PulsarRuntimeOperator.6. Fix the bug in PulsarContainerRuntime, support running tests in E2E environment.7. Create PulsarContainerTestEnvironment for supporting E2E tests.8. Add a lot of comments for Pulsar testing tools.9. Drop mocked Pulsar service, use standalone Pulsar instead.	1
[FLINK-10201] [table] [test] The batchTestUtil was mistakenly used in some stream sql testsThis closes #6605.	3
[FLINK-26338] Cross reference savepoint format from cli.mdThis closes #18900	2
[hotfix][tests] Backup logs for failed tests	3
[hotfix] [metrics] Prevent concurrency issues in MeterView	0
[hotfix] Fix directory creation in TypeSerializerUpgradeTestBase	3
[FLINK-17289][docs]Translate tutorials/etl.md to Chinese	2
[hotfix][network] Fix field visibility.	0
[hotfix][table-planner] Remove ExecNodeConfig#getLocalTimeZoneRemove `ExecNodeConfig#getLocalTimeZone` by replacing its usages withthe newly introduced method in the utility class `TableConfigUtils`.	5
[FLINK-7533] Let LeaderGatewayRetriever retry failed gateway retrievalsAdd test caseOnly log LeaderGatewayRetriever exception on Debug log levelProperly fail outdated gateway retrieval operationsThis closes #4602.	5
[FLINK-8992] [e2e-tests] Integrate general DataStream test job with project structureThis also includes minor cleanup of WIP code in the test job.This closes #5925.	3
[FLINK-17565][k8s] Bump fabric8 version from 4.5.2 to 4.9.2This closes #12215 .	2
Renamed type configurable/queryable interfaces to more intuitive names	5
Add SemanticPropertiesTranslationTest for Scala APIFix join operator to user proper EquiJoin constructor so that semanticproperties are actually retrieved.Fix typo, getSematicProperties -> getSemanticProperties	1
[FLINK-2318] Union can be used as BroadcastVariableThis closes #1390	1
[FLINK-14495][docs] Reorganize sections of RocksDB documentationThis moves most in-depth RocksDB contents to te State Backends docs.The "tuning large state" docs only refer to actual tuning and trouble-shooting.	2
[refactor] Rename StreamConfig.setTypeSerializersIn() to setupNetworkInputs()Because that's what it does.	1
[FLINK-14484][state-backend] Control memory usage of RocksDB via Cache and WriteBufferManagerThis closes #10416	5
[FLINK-23917][table-planner] Project metadata before push-down even if projection push-down is not supportedThis closes #16984.	1
[FLINK-11591] [core] Allow injecting nested serializer snapshots via CompositeTypeSerializerUtil	1
Improved hash code calculation of StringRecord	1
[hotfix][e2e] Cleaning logs before executing single tests.Logs of successful tests are cleaned up automatically. However, logs offailing tests remain to ease debugging. However, if the developer doesnot clean them before executing a new test with exception checks, thenew test will fail independent of the actual result as the old logs willcause the checks to fail.With this fix, failing tests will not cause subsequent tests to failbecause of parsing old logs.	2
[hotfix][sql-parser] Fixed typo in flink-sql-parser (#16711)	2
[FLINK-5968] Add documentation for WindowedStream.aggregate()	2
[FLINK-4236] fix error handling for jar files with no main methodThis change shows only entry classes with a valid main method. Itignores classes which contain no main method.This closes #2347	1
[FLINK-14843][e2e] Harden bucketing sink e2e test	3
[FLINK-23616][python] Support to chain the Python DataStream operators in execute_and_collectThis closes #16804.	1
[hotfix] Use UTC when converting to/from SqlTimestamp and TimestampStringThis closes #11694	1
[FLINK-1973] [jobmanager] Task execution state messages are logged on INFO level, rather than on DEBUG level	0
[hotfix][docs-zh] Fix the link in the chinese doc	2
[FLINK-21401] Introduce JobGraphTestUtils and rework PerJobMiniClusterFactoryTest to use streaming jobs	1
Better estimations for filter operator	1
[FLINK-14326][table-planner-blink] Support to generate and apply watermark assigner in translateToPlan	1
[FLINK-16378][AZP] Disable Docker tests when running with JDK11	1
[FLINK-20895][table-planner] Support local aggregate push down in table plannerCo-authored-by: Sebastian Liu <liuyang0704@gmail.com>This closes #17344	1
[FLINK-26995][tests] Migrate tests to ITCasesThese classes were only renamed:- FileUploadHandlerTest requires exclusive usage of DeleteOnExitHooks- StreamTaskTimerTest requires exclusive access to to StreamTask#TRIGGER_THREAD_GROUP- SinkTransformationTranslatorTest fails ita) relies on initially starting out with a clean state in the streaming graph generationb) relies on test cases permanently mutating the state in the streaming graph generationSome tests of the following classes were moved into a separate ITCase:- MemoryExecutionGraphInfoStoreTest relies on static SignallingBlockingNoOpInvokable- StreamTaskTest requires exclusive usage of the OutputFlusher	1
[hotfix][runtime] Remove unused compareTo from ResourceProfileThe implementation is basically broken.One should use isMatching instead for resource checking.	1
[FLINK-3645] [tests] Force HDFSCopyUtilitiesTest to use local file systemThis closes #1825.	5
[FLINK-14869][core] Discard zero-valued extended resources in ResourceSpec	2
[hotfix] Convert ClassNotFoundException to FlinkException if the type implementing class is not found in InstantiationUtil.instantiate	2
[misc] Closing commit for outdated pull requestThis closes #3592	5
Stripped down stratosphere for ease of internal feature prototyping. - Excluded Sopremo / Meteor for now. - Excluded build-tools and EC2 scripts - Excluded buggy checkpointing tests in Nephele.Cleaned up some warnings in Maven POM Files.	2
[FLINK-9684][historyserver] HistoryServer should initialize FileSystem before using itThis closes #6225.	1
[FLINK-26126][metrics] Introduce new counter metrics for sending records by SinkWriter.We found that the new sink v2 interface will have a wrong numRecordsOut metric for the sink writers. We send a fixed number of records to the source, but the numRecordsOut of the sink continues to increase by the time.The problem is that both the SinkWriterOperator and the KafkaWriter are using the same counter metric for counting the outgoing records. Same records sent by the SinkWriterOperator to the post topology and written by the KafkaWriter to the downstream system will be count twice in the same counter metric.	5
[FLINK-4733] Port TaskManager metrics	2
[FLINK-25701][kafka] Add Flink API annotation to all connector classes based on the new Source/Sink design	1
[hotfix][akka] Fix typo in AkkaUtils methodAlso, removed unused code:- `StandaloneHaServices#RESOURCE_MANAGER_RPC_ENDPOINT_NAME`, since `ResourceManager#RESOURCE_MANAGER_NAME` is used instead- AkkaRpcServiceUtils#createInetSocketAddressFromAkkaURL()This closes #5133.	1
[FLINK-2255] [streaming] Fixed a bug in TopSpeedWindowing examplesCloses #857	0
[FLINK-26303][build] Print rat-plugin violations to the console	2
[FLINK-3880] remove mutex for user accumulators hash mapThis cloes #1976	1
{hotfix][build][es6] Small shade-plugin cleanup	4
[FLINK-12832][datastream] Make slot sharing configurable in StreamGraphGenerator	5
[FLINK-3657] [dataSet] Change access of DataSetUtils.countElements() to 'public'This closes #1829	5
[FLINK-23120][python] Fix ByteArrayWrapperSerializer.serialize to use writeInt to serialize the lengthThis closes #16258.	1
[fix] Make copies of the Configuration in the Environments.	5
[hotfix][mesos] Remove the useless env variable in MesosTaskExecutorRunner	1
[hotfix][tests] Remove legacy case	4
[FLINK-2543] [core] Make exception communication and result/failure notifications consistent with respect to serialization of exceptions	0
Switched order of parameters in ReduceContract	2
[FLINK-16940][runtime] Create currentRegion HashSet with default capacityThis closes #11613.	1
[FLINK-5598] [web frontend] Return filename after jar uploadThis closes #3469	2
Merge branch 'stage1_version02' into streamingConflicts:nephele/nephele-common/src/main/java/eu/stratosphere/nephele/execution/Environment.javanephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/InputGate.javanephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/Task.javanephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.javapact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/AbstractPactTask.javapact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/DataSourceTask.javapact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/test/util/TaskTestBase.java	5
[streaming] add clear function for StreamRecord, add framework of checkpointer.	1
[FLINK-14160][docs] Describe --backpressure option for Operations Playground.This closes #9739.	2
[FLINK-1246] Add additional debug output to flaky recovery test	3
[FLINK-9518][docs] Adjust password in SSL setup config exampleThis closes #6114.	5
[FLINK-4177] Harden CassandraConnectorITCaseThis closes #2484.	1
[FLINK-16384][table][sql-client] Support 'SHOW CREATE TABLE' statementThis closes #13011	1
[FLINK-7960] [tests] Fix race conditions in ExecutionGraphRestartTest#completeCancellingForAllVerticesOne race condition is between waitUntilJobStatus(eg, JobStatus.FAILING, 1000) and thesubsequent completeCancellingForAllVertices where not all execution are in stateCANCELLING.The other race condition is between completeCancellingForAllVertices and the fixeddelay restart without a delay. The problem is that the 10th task could have failed.In order to restart we would have to complete the cancel for the first 9 tasks. Thisis enough for the restart strategy to restart the job. If this happens beforecompleteCancellingForAllVertices has also cancelled the execution of the 10th task,it could happen that we cancel a fresh execution.[hotfix] Make WaitForTasks using an AtomicInteger[hotfix] Set optCancelCondition to Optional.empty() in SimpleAckingTaskManagerGatewayAdd assertion message to ExecutionGraphTestUtils#switchToRunningThis closes #4933.	3
[FLINK-21675][table-planner-blink] Fix that predicates can not be pushed into TableScan when there is a WatermarkAssigner between Filter and ScanCo-authored-by: fsk119 <33114724+fsk119@users.noreply.github.com>, godfreyhe <godfreyhe@163.com>This closes #15307	1
First part of adjusting runtime to compiler.	1
[streaming] add timestamp field	1
[FLINK-7643] [core] Rework FileSystem loading to use factoriesThis makes sure that configurations are loaded once and file system instances areproperly reused by scheme and authority.This also factors out a lot of the special treatment of Hadoop file systems and simplymakes the Hadoop File System factory the default fallback factory.	5
[FLINK-11328] [cep] Snapshots of NFA-related serializers should be a CompositeTypeSerializerSnapshot	2
[FLINK-8906][flip6][tests] also test Flip6DefaultCLI in org.apache.flink.client.cli testsThis closes #5671.	3
[FLINK-6515] [runtime] Fix classloading of JavaSerializer	0
Memory Manager Strict allocation for small page collections.	5
[FLINK-7821] [table] Deprecate Table.limit() and replace it by Table.offset() and Table.fetch().This closes #4813.	1
[hotfix] Fix formatting issues in generated files	2
[FLINK-26850][metrics] Add Metric#getMetricType	1
[FLINK-18461][table-planner-blink] Fix Changelog source can't be insert into upsert sink	4
[FLINK-24084][docs] Correct the examples in SQL JOIN docsThis closes #17076	2
[FLINK-28800][network] BatchShuffleReadIOExecutor using ScheduledExecutorService instead of ExecutorService.	1
[hotfix] Segregate TaskSlotPayload interface from Task for TaskSlot and TaskSlotTable	0
[FLINK-24421][table-runtime] Fix conversion of strings to TIMEFollowing calcite-avatica behaviour, fix the behaviour of parsingstring into unix time when the string is incomplete, missing 1 orboth `:` time units separator. Previously, minutes and seconds whereset to default value `1` instead of `0` when missing from the parsedstring. Issue was fixed in avatica with:https://github.com/apache/calcite-avatica/commit/cac2ffaaf97572d21cba195d7590d9ab0d32382eThis closes #17418.	0
[FLINK-12847][kinesis] update flink-connector-kinesis to use Apache 2.0 license codeThe Kinesis Connector will now be able to be built and included in the build artefacts as it no longer pulls in any Amazon licensed code.This closes #9494.	1
Improved WordCount to operate completely on mutable objects only.	1
[FLINK-15185][hive] Shade flink-hadoop-fs to use hive connectors in standalone modeThis closes #10540	1
[FLINK-21745][tests] Sets the parallelism of 1 for testing JobVertex instancesThis was necessary to make the tests comply with the AdaptiveSchedulerrequirements of having the parallelism set for each JobVertex.This closes #15262	1
[FLINK-12178] Remove legacy SchedulerThis closes #8676.	4
[FLINK-21664][sql-parser] Support to parse STATEMENT SET syntaxThis closes #15282	1
[FLINK-16346][tests] Use fixed JobIDs	0
[hotfix] Ignore failing test reported in FLINK-22559	2
[FLINK-2268] Remove Writable support from Scala TypeInformation Macro	5
[FLINK-8617] [table] Fix code generation bug while accessing Map typeThis closes #5438.	0
[FLINK-11667][checkpointing] Add Synchronous Checkpoint handling in StreamTask.This is a necessary step towards implementing the "stop with a savepoint".Essentially, a synchronous savepoint is one that waits until also thenotifyOnCheckpointComplete is successfully executed, before releasing thecheckpoint lock (on the StreamTask side).	1
[FLINK-25331][tests] FlinkImageBuilder checks for Java 17	2
[FLINK-17371][table-runtime] Add cases for decimal castingThis closes #15568	1
[hotfix][tests] Checkstyle and common style cleanups in CopyOnWriteStateMapTest	3
[hotfix][task] Throw MailboxClosedException if TaskMailbox is closing instead of IllegalStateExceptionThis will allow to handle this particular exception, instead of catching IllegalStateException	0
[FLINK-21811][blink-table-planner] Support StreamExecJoin json serialization/deserializationThis closes #15239	5
[FLINK-12250] Rewrite assembleNewPartPath to let it return a new PartPathWhile debugging some code, I've noticed assembleNewPartPath doesnot really return a new path. Also rewrote the code a bit so themutable inProgressPart is changed in a single place.	4
[FLINK-21215][task] Optimise order of cancellation AsyncCheckpointRunnable and notifing JobManagerThe order of cancelling AsyncCheckpointRunnable and notifing the JM was sub-optimal.Instead of notifing the JM first, we were first cancelling the future, which couldcreate a race condition, were the secondary failure was reported first, causingslightly less readable logs/error messages.	2
conflicts	5
[FLINK-24760][docs] Update user document for batch window tvf (#17670)	2
[FLINK-1582][streaming] SocketStream minor enhancementsThis closes #424	2
[FLINK-1201] [gelly] get rid of Vertex to Tuple2 and Edge to Tuple3 conversions in runVertexCentricIteration	1
[FLINK-24979][build][hbase] Remove MaxPermSize setting	1
Improved clean-up behavior for compression	4
[streaming] fault tolerance improvement and bugfix	0
[hotfix][elasticsearch] Make TestEmitter#createIndexRequest private	3
Fixed failing TextInputFormatTestSigned-off-by: Robert Metzger <metzgerr@web.de>	3
Fixed test casesFixed temp task (didn't work if preceding task was input task)	1
[FLINK-28000][runtime][security] Throw exception when principal is set in the configuration without keytab	5
[FLINK-24038] Move leader session id generation to LeaderElectionDriverMoving the leader session id generation into the LeaderElectionDriver will allow us to builda high availability service where we have a single leader elector for multiple components whichshare the same leader session id.	1
[streaming] Created scala GroupedDataStreamCloses #860	5
Fixed bug #269. Adapted RecordInputFormat to forward configuration to FieldParsers and extended test case.	3
[FLINK-22339][python] Fix some encoding exceptions were not thrown in cython codersThis closes #15661.	0
[FLINK-13610][hive]Refactor HiveTableSource Test use sql query and remove HiveInputFormatTestRefactor HiveTableSourceTest use sql query and remove HiveInputFormatTestThis closes #9379	3
[hotfix] Create JarUtils with common jar file tools	2
[FLINK-14495][core] Limit ResourceSpec to always specify cpu cores and task heap memory size, unless it UNKNOWN.	2
Revert "[FLINK-23875][connectors/kafka] Snapshot reduceBuffer of ReducingUpsertWriter"This reverts commit 31e5fa196de6d695e062d942e9d952e300439840.In the discussion in FLINK-23875, Jark showed that this commit is a no-op that just adds unnecessary complexity.	1
[hotfix] Move DualKeyLinkedMap to util package	2
[hotfix][yarn] Replace the require function to checkNotNull in Utils	1
fix minor build issue: deploy uber-jar only if yarn version is build	0
[FLINK-25572][connectors/filesystem] Update File Sink to use decomposed interfacesThis closes #18642.	1
[FLINK-26298][rpc][tests] Migrate tests to JUnit5	3
[FLINK-6257] [table] Consistent naming of ProcessFunction and methods for OVER windows.- Add check for sort order of OVER windows.This closes #3681.	1
[FLINK-27683][table-planner] Fix SQL hints can't work with targetColumnsThis closes #19847	1
[FLINK-19681][checkpointing] Fix barrier tracking in input channelsLocalInputChannel:Reset lastSeenBarrier for any barriers, not just UC.In local channels, there are no announcements,therefore lastSeenBarrier may not be reset for AC,therefore extra buffers may be added to state.Reduces failure frequency in UnalignedCheckpointIT par-local case.RemoteInputChannel:Don't update tracking state during conversion. Only do itupon receiving a barrier.Reduces failure frequency in UnalignedCheckpointIT par-remote case.	0
Fix typo in README.md	2
[streaming] Implemented and tested naming a component	3
[FLINK-1252] address pull request commentsThis closes #215	1
[FLINK-23201][streaming] Calculate checkpoint alignment time only for last started checkpoint	2
[FLINK-7405] [metrics] Reduce excessive warning logging from DatadogHttpReporterThis closes #4508.	5
[FLINK-22677][runtime] AdaptiveScheduler requires partition registration to be completed immediately	1
[hotfix] Fix typo in api_concepts.md	2
[FLINK-4791] [table] Fix issues caused by expression reduction	1
[FLINK-23142][table] UpdatableTopNFunction output wrong order in the same unique keyThis closes #16284	0
[FLINK-3777] Add openIF/closeIF methods to IF lifecycleThis closes #1903	1
[FLINK-7763] [table] Fix testing RowSink for enabled object reuse.	1
[FLINK-22264][docs] Fix misleading statement about Flink Job Cluster Kubernetes Support in Flink Architecture page[FLINK-22264][docs] Add Chinese documentationThis closes #15602.	2
[FLINK-21387][tests] Remove test timeout from DispatcherTest.testNonBlockingJobSubmission and .testInvalidCallDuringInitializationThe 5s test timeout for the DispatcherTest.testNonBlockingJobSubmission and .testInvalidCallDuringInitialization failed on the CIinfrastructure. Therefore, this commit removes these timeouts in order to harden the mentioned tests.This closes #15343.	3
[FLINK-17295] Make ExecutionAttemptID random again (#13929)	1
[FLINK-11051][table] Add flatAggregate api on WindowGroupedTableBrief change log:- Add flatAggregate API on WindowGroupedTable. Add java and scala API. In this commit, the implementation has not been implemented.- Resolve expression and build LogicalWindowTableAggregate. TableAggregate is added to make it different from Aggregate. The two kinds of RelNode contain different semantics. For Aggregate, it represents a relational operator that eliminates duplicates and computes totals while for TableAggregate, it can output 0 or more records for a group.- Add Plan support for window table aggregate. Logical&Physical nodes and rules are added in the commit.- Add runtime support for window table aggregate. This commit reuses the code of window aggregate and adds support for window table aggregate.- Add docs for window table aggregate. Also rename Table Aggregate to FlatAggregate as it is more consistent with the API for users.This closes #8359	1
[FLINK-21066][runtime][checkpoint] Refactor CheckpointCoordinator to compute tasks to trigger/ack/commit dynamicallyThis closes #14734	4
[hotfix] Fix broken copy in OperatorChainBefore, the StreamRecords was not copied, now it is.	1
Add proper locality of scheduling tracking to scheduler. Add local scheduling to slot sharing groups.	1
[FLINK-26658][docs] Write docs to actual directory	2
[FLINK-5274] [network] Handle reader release in LocalInputChannel	0
[FLINK-3519] [core] Add warning about subclasses to Tuple JavaDocs.- Bring TupleGenerator up to date with the Tuple classes.This closes #1724	5
[FLINK-11363][tests] Shutdown RpcServices created in TaskManagerRunnerConfigurationTestShutdown RpcServices to avoid resource leak.Split testUsePreconfiguredRpcService into separate tests.Rename tests cases.	3
Fixed typo and inconsistent naming in TaskConfig.	5
[FLINK-8704][tests] Port ClassLoaderITCase to flip6This closes #5780.	3
Fixed test cases in pact.testing	3
Added implementation for S3 input streams plus tests and javadoc improvements	1
[FLINK-14372][tests] Add category AlsoRunWithSchedulerNG to KeyedStateCheckpointingITCaseThis closes #10065.	1
[FLINK-21650][state/heap] Skip KGs not belonging to this backend on restore (instead of failing)Motivation:In the new incremental mode, heap backend wraps KeyGroupsStateHandleinto IncrementalRemoteKeyedStateHandle. The latter don't computeintersection because it is not directly aware of the offsets. So it justreturns a full keyrange if there is SOME intersection.On recovery, unused keyGroups are filtered out by RocksDB state backend.With this change, Heap state backend does the same.	4
renamed jdbc package properly to the new 0.4 naming conventions	1
[hotfix][task] Adjust the code format of OneInputStreamTask	0
Added names for recovery threads	1
[FLINK-12609][python] Add LocalZonedTimestampType/ZonedTimestampType/DayTimeIntervalType/YearMonthIntervalTypeThis closes #8847	1
[hotfix] [tests] Fix race condition in RescalingITCase that could make the test stuck in a blocking call until timeoutThis closes #2513	3
[FLINK-26077][runtime] Support operators send request to Coordinator and return a response (#18737)	1
[FLINK-11406] [core] Return INCOMPATIBLE when nested serializers arity don't match in CompositeTypeSerializerSnapshotThis closes #7557.	2
[FLINK-2576] Add outer join base operator.	1
[hotfix][runtime] Fix formatting in TaskExecutorResourceUtils and NetworkBufferPool	1
Merge branch 'version02' of https://dev.stratosphere.eu/git/stage1 intoversion02Conflicts:pact/pact-examples/src/main/java/eu/stratosphere/pact/example/datamining/KMeansIteration.java	5
[FLINK-8621][prometheus][tests] Remove endpointIsUnavailableAfterReporterIsClosed()The test is inherently unstable as it will always fail if any otherserver is started on the port between the closing of the reporter andthe polling of metrics.This closes #5473.	0
[FLINK-17295][runtime] Introduce ExecutionGraphID	2
Fixed Pact Web Servlet to produce plan description output, even when no plan preview can be created.	1
[streaming] StreamRecord created	1
[FLINK-11388][fs] Add abstract test classes for recoverable writers (s3/oss)This closes #19181	3
[FLINK-10990][metrics] Enforce minimum timespan in MeterView	5
[FLINK-23664][connectors/kafka] Mark KafkaSink as PublicEvolving	2
[FLINK-14911] [table] register and drop temp catalog functions from DDL to FunctionCatalogthis closes #10478.	2
[FLINK-27465] Handle conversion of negative long to timestamp in AvroRowDeserializationSchema	0
[FLINK-23453][refactor] Made a safe method for getting the number of buffers in the queue visible in the interface.	1
[FLINK-18809][table-planner-blink] Update ListAggFunctions	1
[streaming] explicit output flushing readded + need fix	0
[FLINK-19055] Wait less time for all memory GC in tests (MemoryManager#verifyEmpty)The waiting happens in a separate thread in production and does not disrupt anything.The problem is that tests use the same method which blocks the testing thread for too long.We do not need such big waiting time in tests. The PR refactors code to get back to the smaller waiting time in tests.This closes #13265.	3
[FLINK-20183][python] Fix the default PYTHONPATH is overwritten in client sideThis closes #14108.	0
[FLINK-8238][tests] Forbid multiple setups of StreamTaskTestHarness	3
[FLINK-5444] [webfrontend] Rebuild HTML/JS filesThis closes #3093.	2
[hotfix] [core] Move 'ThrowingConsumer' and 'RunnableWithException' to proper package (.util.function)This also adds missing stability annotations to the functional interfaces in 'util.function'.	1
[FLINK-17074] Deprecate scala Datastream.partitionCustom methods that do not use KeySelector	1
[hotfix][tests] TimestampITCase: use explicit CheckpointFailureReason to ignore exception	0
[hotfix][tests] Remove legany codes from CheckpointBarrierAlignerTestBase	3
[FLINK-19891][table-planner-blink] ScalarOperatorGens should generate a not-null type for IS NULL and IS NOT NULLThis closes #13851	1
Revert "[FLINK-26232][avro] Migrate tests to JUnit5"This reverts commit a3dff681d511a56f5d2a557e1804bbd5a10757ea.	4
Fixed execution graph state checking to accept canceling -> failing transitions	0
[FLINK-6711] Activate strict checkstyle for flink-connector-rabbitmq	2
[hotfix] Refactor to use multi-catchThis closes #3866	1
[hotfix][web] Rename Checkpoint metric fieldsNewer names are shorter and less abreviated while preserving or improving the readability.	1
[FLINK-14183] Remove scala duration usages from LeaderRetrievalUtils, ConnectionUtils and other related classes	4
[FLINK-12798][table] Add a discovery mechanism for switching between Flink/Blink Planner/ExecutorThis closes #8852.	2
[hotfix][conf] Correct config option reference in resourcemanager.standalone.start-up-time	5
Changed ShipStrategy from Enum to Classes. Partitioning Strategies hold partition keys as member variables	4
[FLINK-18295][runtime] Change result partition to explicitly have one ConsumerVertexGroup (instead of a collection of ConsumerVertexGroup)The change involves all representations of result partition, including `SchedulingResultPartition`(and all its implementations) and `IntermediateResultPartition`.	4
[FLINK-14210][metrics][influxdb] Make timeouts configurable	5
[FLINK-13548][Deployment/YARN]Support priority of the Flink YARN application.	2
[FLINK-7721] [DataStream] Only emit new min watermark iff it was aggregated from watermark-aligned inputsPrior to this commit, In the calculation of the new min watermark inStatusWatermarkValve#findAndOutputNewMinWatermarkAcrossAlignedChannels(),there is no verification that the calculated new min watermarkreally is aggregated from some aligned channel.In the corner case where all input channels are currently not alignedbut actually some are active, we would then incorrectly determine thatthe final aggregation is Long.MAX_VALUE and emit that.This commit fixes this by only emitting the aggregated watermark iff it wasreally calculated from some aligned input channel (as well as thealready existing constraint that it needs to be larger than the lastemitted watermark). This change should also safely cover the case that aLong.MAX_VALUE was genuinely aggregated from the input channels.	4
[FLINK-5969] Remove watermark callback serviceIn Flink 1.2 we only wrote timers to key-grouped state streams. With theaddition of the watermark callback service we started to also write thewatermark callbacks to the key-grouped streams. This breaks backwardscompatibility with saveoints taken on Flink 1.2This replaces usage of the watermark callback service by setting aregular timer for "current watermark + 1". These timers will fire assoon as the watermark advances, thus simulating the watermark callbackservice.	1
[hotfix][task] Remove unncessary SuppressWarnings from StreamOneInputProcessor	2
[FLINK-28808][csv] Create mapper on server-side	1
[FLINK-8381] [table] Document more flexible schema definitionThis closes #5257.	5
[FLINK-15612][table-planner-blink] Propagate the data type factory in the plannerThis closes #10917.	5
[FLINK-3691] [avro] Extend AvroInputFormat to support Avro GenericRecordThis closes #1920	1
[hotfix][docs][metrics] Fix Threads.Count metric referenceThis closes #5213.	0
fixed import warnings + further commenting	2
[hotfix] fix typo in error message	0
[FLINK-13109][docs-zh] Translate "Restart Strategies" page into ChineseThis closes #9047	1
[FLINK-9949][tests] Kill Flink processes in DB/teardown!This closes #6419.	5
[FLINK-23454][runtime] NewBufferSize migrated from long to int for bufferSize because the bufferSize is always int.	1
Reworked the TaskManager.Changed RuntimeEnvironment and TaskInputSplitProvider to work with ActorRefs.	1
[FLINK-10704][end-to-end] Fix sql client end to end test failure	0
[hotfix] fix non-exhaustive match warning	2
[docs] Add import statements to DataStream example programs (Java/Scala)New users sometimes struggle with the imports (especially for Scala API).	2
[FLINK-16317][operators] Provide support for key selector and latency marker in MultipleInputStreamOperator	1
[FLINK-9752][s3-fs-connector] Add s3 recoverable writer.Adds a recoverable writer for S3.The new recoverable writer is only available for Hadoop S3(not Presto) and uses the MultiPart feature to upload part files.	2
[FLINK-17654][core] Move Clock classes to flink-core to make them usable outside runtimeWe want to use them in the new WatermarkGenerator implementations infollow-up commits.	5
[FLINK-7379] [qs] Remove HighAvailabilityServices from QS client constructor.	4
[FLINK-19477][docs-zh][python] Translate page "python_table_api_connectors" into ChineseThis closes #13528.	1
[FLINK-1871] [gelly] Added Spargel to Gelly migration guide	1
[FLINK-22656] Fix typos	2
[FLINK-4273] adapt JobRetrievalITCase to lazy classloader reconstruction	2
[FLINK-15145][dist][config] Increase the TM process memory size in default flink-conf.yaml to 1568MB.	5
[hotfix][DataStream API] Minor code cleanups	4
[FLINK-4403] [rpc] Use relative classloader for proxies, rather than system class loader.	5
[FLINK-17306] Call open of SerializationSchema in PubSub sink	2
[FLINK-24665][s3] Update Presto Hadoop dependency to v2.7.4-9	5
[FLINK-9287][kafka] Properly clean up resources in non EXACTLY_ONCE FlinkKafkaProducer011Previously FlinkKafkaProducer was not being closed for AT_LEAST_ONCE and NONE Semanticswhen closing FlinkKafkaProducer011. This was leading to resources leaking (for exampleincreasing number of active threads)	1
[hotfix][checkstyle] Remove suppression for runtime/io.disk	1
Improved distribution of IDs. Previous implementation lost bits due to double-to-long multiplication and rounding.	1
[FLINK-17499][state-processor-api] LazyTimerService used to register timers via State Processing API incorectly mixes event time timers with processing time timersThis closes #11980	1
[FLINK-13959] Remove unnecessary method in DetachedEnvironment	4
[FLINK-1017] Add documentation for execution parallelismThis closes #114	2
[FLINK-11494][runtime] Remove WebRuntimeMonitor	1
[hotfix][python][docs] Improve the documentation about Python dependency management	2
[hotfix][tests] Mock ExecutionVertex#getID() in ScheduelrTestUtils to avoid NPE issues	0
[FLINK-18797][examples] Update deprecated forms of keyBy in examples	5
[FLINK-15081][docs-zh] Translate "Concepts & Common API" page of TableThis closes #10822	2
[scala] Change CaseClassSerializer/Comparator to not use For-Loop	1
Merge branch 'ringwald02' into annotation+newOptimizer	1
Optimizer Property Handling straightened.	5
[FLINK-12709][runtime] Add NoRestartBackoffTimeStrategy which suppresses all task restarts	1
[FLINK-5705] [WebMonitor] WebMonitor request/response use UTF-8 explicitlyThis closes #3257	1
[FLINK-23785][tests] Synchronize accesses in InMemoryReporter.Even through TestReporter methods are synchronized, InMemoryReporter needs additional synchronizations since it retains metrics and groups outside of the notify* callbacks. Thus, the callbacks and any other InMemoryReporter method may be called in parallel causing concurrent modifications to the data structures.This implementation naively uses full-fledged synchronization barriers since accesses to the InMemoryReporter are rare.	1
[FLINK-22877][table] Remove remaining comments around DataSetThis closes #16097.	5
[FLINK-26357][avro-parquet] add FLINK API annotations	2
[FLINK-11897][tests] Wait until all tasks are submitted	3
[hotfix] Refactors PackagedProgram.extractContainedLibraries()	4
[FLINK-20654][tests] Forcing network action logger on TRACE for Unaligned Checkpoint ITCases.	2
[FLINK-11884][table] WindowAggregateTableOperation construction & tranformation to RelNodes	2
[FLINK-10076][table-planner] Upgrade Calcite dependency to 1.18This closes #7607.	2
[FLINK-24325][connectors/elasticsearch] Extract common unified Elasticsearch sink for versions 6 and 7	4
[FLINK-13310][hive][build] Remove shade-plugin configuration	5
[FLINK-13757][doc] Fix description error for the built-in 'is not true' logical functionThis closes #9469	1
[FLINK-2550] Rename SplitDataStream to SplitStream	5
[FLINK-5890] [gelly] GatherSumApply broken when object reuse enabledGatherSumApplyIteration uses reduce and join for which extra care mustbe taken when object reuse is enabled. Adds a check for objects returnedby the user to prevent system objects from being overwritten.This closes #3402	5
[hotfix] Let HistoryServerStaticFileServerHandlerTest extend TestLogger	3
[FLINK-26550][checkpoint] Correct the information of checkpoint failure	0
[FLINK-6389] [connector] Upgrade hbase dependency to 1.3.1This closes #4151.	2
minor changes in decision components	4
[hotfix][network] Introduce ResultPartitionFactory	0
[FLINK-9503] Migrate integration tests for iterative aggregatorsThis closes #6129.	3
[FLINK-4099] Fix CliFrontendYarnAddressConfigurationTest failuresThis closes #2166	0
[FLINK-13137][py][docs] Remove legacy python docs	2
[FLINK-13495][table-planner-blink] Introduce isAssignable to use soft check in TableSourceUtil	1
[FLINK-4410] [runtime] Rework checkpoint stats tracking	1
[FLINK-10251][rpc] Handle oversized response messages in AkkaRpcActor	0
Added tests for project operator	1
[FLINK-11473][metrics][docs] Clarify documentation on Latency Tracking	2
[hotfix][docs] Fix typoThis closes #13241	2
[FLINK-1139] Updated Hadoop Compatibility documentation	2
Fixed AbstractObjectNode's #copyValueFrom(...).	0
[FLINK-4740] [tests] Upgrade testing librariesUpgrades  JUnit from 4.11 to 4.12  Mockito from 1.9.5 to 1.10.19  PowerMock from 1.5.5 to 1.6.5This closes #2597	3
[FLINK-10309][tests] Replace wait-notify with CountDownLatches.Replace the use of wait-notify with CountDownLatches inRestServerEndpointITCase. The wait() method can have spurious wakeups which waspreviously not considered. Also refactor the tests that use the TestHandler toavoid code duplication, and to separate concerns.	3
[FLINK-21338][test] Disable broken tests	3
[FLINK-23064][table-runtime-blink] Expose FileSystemOptions as PublicEvolving	5
[refactor][runtime] Added postfix `unsafe` for methods ResultSubpartition#getTotalNumberOfBuffers and ResultSubpartition#getTotalNumberOfBytes	1
[FLINK-12253][table-common] Add a TIMESTAMP WITH TIME ZONE type	1
[hotfix][docs] Fix image source	0
[FLINK-21080][runtime][checkpoint] Fails checkpoints if some operators has union state are partly finished	5
Started to implement communication infrastructure for Nephele plugins	5
[FLINK-26366][hive] Support INSERT OVERWRITE DIRECTORY statementThis closes #19520	1
[hotfix] Fixes error in JavaDoc	2
- fixed exception message	0
[FLINK-22476][docs] Extend the description of the config option `execution.target`This closes #15777.	1
[FLINK-16070] [table-planner-blink] Stream planner supports remove constant keys from an aggregateThis closes #11158	4
[FLINK-6707] [examples] Activate strict checkstyle for flink-examples	2
[hotfix][streaming] Allow to override methods from TwoPhaseCommitSinkFunctionThis allow for some custom user logic during handling checkpoints.	2
Added event subscription / publication methods to mutable reader interface and implementations.	1
[FLINK-14117][docs-zh] Translate changes on index page to Chinese (#9815)	4
[hotfix] Minor cleanups in classes FileSystem, OperatingSystem, CopyableValue, GenericCsvInputFormat	5
[FLINK-17636][tests] Fix unstable test SingleInputGateTest#testConcurrentReadStateAndProcessAndClose	3
[FLINK-25257][TE] Let TaskExecutor use TaskExecutorBlobService interface instead of concrete BlobCacheService implementationThis commit decouples the TaskExecutor from the BlobCacheService implementation by introducing a TaskExecutorBlobServiceinterface that abstracts the concrete implementation details away. Due to this change we also introduced a JobPermanentBlobServiceto decoupled the TaskExecutor from relying on the PermanentBlobCache implementation. Moreover, this commit introduces aNoOpTaskExecutorBlobService that simplifies testing.This closes #18081.	3
[FLINK-21255] Add WaitingForResources state for DeclarativeScheduler	1
[tests] Remove redundant copies of the JUnit RetryRulesThe classes were noved to 'flink-test-utils-junit', but apparently copies remained in 'flink-core'.	2
[FLINK-4410] [runtime, runtime-web] Remove old checkpoint stats tracker code	4
[hotfix] Remove unused JobMasterGateway#requestClassloadingProps	1
[FLINK-16587][checkpointing] Introducing IndexedInputGate for abstracting single channel InputGates with a specific index.This commit facilitates promoting the index of all non-union gates to first class citizens and allows them to be reliably referenced by their index.	1
[FLINK-15425][csv][docs] Improve docs that only old CSV format is supported in filesystem connector (#10718)	5
[FLINK-18573][metrics] Add test for loading reporters via service loader	3
[hotfix][runtime] Check managed memory fraction range when setting it into StreamConfig	5
[FLINK-11334] Initialize EnumSerializer in constructorWe also don't check the state on every call anymore.	5
Fixed CsvInputFormat for multi-part input files	2
[hotfix] Remove redundant FutureUtils#getFailedFutureFutureUtils#completedExceptionally does exactly the same.	0
Implemented generic aggregators for iterations in the API and configuration.	5
Changed key handling for key-selector combiners	4
[hotfix][mesos] Remove unused methods and extract interface for MesosArtifactServer.This makes testing easier for mesos deployment, by allowing using of testing implementation rather than mocking for MesosArtifactServer.	3
[FLINK-7125] [yarn] Remove Configuration loading from AbstractYarnClusterDescriptorInstead the AbstractYarnClusterDescriptor is passed in a Configuration instance whichis sent to the started application master.Pass in configuration directory manuallyRemove configurationDirectory resolution from AbstractYarnClusterDescriptorAddress PR commentsThis closes #4280.	1
Removed final modifier again to fix problem with PowerMock testsRemoved final modifier again to fix problem with PowerMock tests	3
[hotfix][network] Refactor the class name AsyncDataInput to PullingAsyncDataInput	5
[FLINK-20738][table-planner-blink] Introduce BatchPhysicalLocalHashAggregate, and make BatchPhysicalLocalHashAggregate only extended from FlinkPhysicalRelThis closes #14562	2
Add Scala Page Rank examples	1
Added Test Case for empty cross task	3
[FLINK-8084][build] Remove unnecessary japicmp pom entriesThis closes #5020.	4
[FLINK-8209][network-tests] Make LocalBufferPoolDestroyTest less implementation dependent	3
[FLINK-13361][docs] Add documentation for JDBC connector for Table API & SQLThis closes #9802	5
Fix bug in topological sort	2
[FLINK-10987] Deactive ApacheLicenseResourceTransformer to add vanilla LICENSE and NOTICE file to every module	2
Updated library version	5
[hotfix][runtime] Delete unused interface ExecutionStatusListenerThis closes #7977.	1
[FLINK-20694][coordination] Do not rematch freed slotsWhen a slot was freed the slot pool was trying to find another requirement it could potentially fulfill, using the same code paths as for newly offered slots, which also includes an increase in acquired resources.As a result we were potentially counting a single slot as multiple resources, causing an inconsistent state. The slot pool hence believed it had enough slots to fulfill the requirements, causing it to reject slots, while the Scheduler was waiting for enough slots to arrive and the RM repeatedly trying to provide the actually required slots.While it is not necessarily a bad thing to try an find another matching requirement, it is currently not necessary to do so, since the scheduler will use slots however it sees fit anyway. In the worst case we go through another slot allocation cycle.As such freed slots now remain assigned to the originally matched requirement, and this mapping will only change whe the slot is explicitly reserved for a different requirement.In the long-term it would be desirable for the slot pool to automatically adjust the matching if a slot was freed. This could prevent cases where we request new slots although we still have idling slots around that we could use, or release slots as idle although there are still outstanding requirements.However this needs a more sophisticated approach, it has to account for cases where:- a freed slot could not be matched to another requirement (i.e., it is truly an excess resource)- a freed slot was matched against another profile, which should go through the same codepath as for slot reservations for a different profile- also try to re-assign currently excess resources if the requirements are increased	1
[FLINK-13393][table-planner-blink] Fix generic TableSource doesn't work in blink plannerThe reason is that blink-planner use TypeExtractor to extract class from TableSource, and use this class to DataFormatConverter. However, blink should use conversion class of DataType in TableSource#getProducedDataType.This closes #9211	5
[FLINK-4314] [tests] Fix test instability in JobManagerHAJobGraphRecoveryITCaseThe test was relying on the JobManager shutting down before theTaskManager, which is not necessarily the case. If the TaskManagershuts down before the JobManager, the JobGraph could reach the finalstate FAILED, in which case all HA state is removed.To circumvent this, we add a restart strategy.	1
Improved logging of buffer utilization	2
[hotfix] [tests] Use random actor names in JobManagerHARecoveryTest to avoid name collisions	3
towards compensations	5
[FLINK-17226][metrics][prometheus] Remove relocations	4
[FLINK-19403][python] Support Pandas Stream Group Window AggregationThis closes #13483.	1
[FLINK-9914][docs] Update Docker docs	2
[storm-compat] Added Storm compatibility word count examples	1
[FLINK-11370] Port ZooKeeperLeaderElectionITCase#testJobExecutionOnClusterWithLeaderReelection to new code base	1
FLINK-3022: Broken link 'Working With State' in Fault Tolerance Section of Stream Programming Guide	1
[hotfix][coordination] Remove unused class ExecutionJobVertexCoordinatorContextThis class was left over from a prior refactoring.	4
[FLINK-10414][cep] Added skip to next strategy	1
[hotfix] Fix various typosThis closes #5497.	2
[FLINK-27394][Documentation] Document how you can add externally hosted documentation in a virtual filemounted system that's only known to Hugo, using Hugo Modules.	1
[docs] Add custom searchThis closes #563.	1
[hotfix][table, tests] Increase slot count in blink batch tests to avoid resource deadlocks if a job has multiple logical regionsThis is needed before FLINK-13708 is fixed.Cases having too many queries are split as well.	0
[FLINK-16316][task] Remove StreamTask dependency from AbstractStreamOperator#snapshotState	1
[FLINK-6317] Fix wrong default directory for history serverThis closes #3731.	0
[streaming] taskinstance id update	5
Small serialization improvment for PactRecord.	5
[FLINK-20455][build][legal] Bundle LICENSE/NOTICE in various deployed jars	2
[hotfix][docs] Specify operators behaviour on processing watermarks	1
[FLINK-11877][runtime] Abstract AbstractTwoInputStreamTask from TwoInputStreamTask	2
- fixed dependency of WordCount example on AsciiUtils	0
[hotfix] Add generics to FutureUtils.toJava calls in ClusterClient	1
[FLINK-14940][travis] Fix error code handling for maven calls	0
[FLINK-12325][metrics] StatsDReporter properly handles negative values	0
[hotfix][runtime] Remove ExecutionSlotAllocator#stop() which is never used in production	1
[hotfix][docs]  Fix some typos in state_processor_api docs (#11033)	2
[FLINK-20291][table][filesystem] Optimize the exception message of FileSystemTableSink when missing format dependenciesThis closes #14198	5
[FLINK-13964] Let HighAvailabilityServices create cluster and client side HA servicesLet HighAvailabilityServices extend ClientHighAvailabilityServices. This ensures thatthe HighAvailabilityServices can create cluster and client side HA services. This againis useful for components which need to create both types of services such as the MiniCluster.	5
[hotfix][kubernetes] Correct exception typoThis closes #6677.	2
[FLINK-2628] [tests] CoStreamCheckpointingITCase prints a warning when test is inconclusiveThe test is inconclusive when the test failure happens before the first checkpoint.	0
[FLINK-5406] [table] Add normalization phase for predicate logical plan rewritingThis closes #3101.	2
[FLINK-18117][e2e] Dynamically allocate port causing test instabilities (#13894)	3
Fixed refitting of PactRecords for ObjectSchemas	0
added ignore	1
[FLINK-11329] [DataStream] Migrating the UnionSerializer to use new compatibility API	1
[hotfix][coordination] Clarify shared slot number & allocation ids	0
Merge branch 'stage1' into version021Conflicts:meteor/meteor-meteor/pom.xml	5
[FLINK-27148][checkpoint] Skip snapshotting the coordinators state or the master state if the pending checkpoint has been disposed.This closes #19464.	2
[FLINK-19720][table-api] Introduce new Providers and parallelism APIThis closes #13694	1
[refactor] [tests] Refactor CliFrontend mocking into utility class	4
[FLINK-14947] Remove unused LocalExecutor that extends PlanExecutor	1
[FLINK-19135] Strip ExecutionException in (Stream)ExecutionEnvironment.execute()In FLINK-14850 we changed the execute() method to be basicallyfinal JobClient jobClient = executeAsync(...);return jobClient.getJobExecutionResult(userClassloader).get();Unfortunately, this means that execute() now throws anExecutionException instead of a ProgramInvocationException orJobExecutionException as before. The ExecutionException is wrapping theother exceptions that we were throwing before.We didn't notice this in tests because most tests useTest(Stream)Environment which overrides the execute() method and sodoesn't go through the PipelineExecutor logic or the normal code path ofdelegating to executeAsync().This change brings us back to the previous behaviour.	4
[hotfix][test] Replace junit.Assert.assertThat with hamcrest.MatcherAssert.assertThat in RemoteAkkaRpcServiceTest	3
[hotfix] Fix checkstyle violations in MainThreadValidationTest	5
[FLINK-7695] [flip6] Add JobConfigHandler for new RestServerEndpointThis closes #4737.	1
[FLINK-26580][connectors/filesystem] Fix the bug that FileSink CompactCoordinator adds in-progress committable as toCompacted	1
Progress on Data Model Evolution	5
[streaming] Fix out-of-sync class-level docs of SourceFunction	1
[FLINK-14874][table-planner-blink] add local aggregation to solve data skew for ROLLUP/CUBEThis closes #10271	5
[FLINK-10705][web]: Remove angularjs project	4
[FLINK-16608][python] Support VarBinaryType in vectorized Python UDF	1
[FLINK-12228][runtime] Implement Eager Scheduling StrategyThis closes #8296.	2
[FLINK-21590][build] Avoid hive logs in the SQL client console (#15384)	2
[FLINK-7629] [scala] Fix KeyedStream.aggregate for nested field expressions	0
[hotfix][TE] Remove redundant HeartbeatManager calls	4
[FLINK-20337] Let FileSink restore state from StreamingFileSinkThe FileWriterBucketStateSerializer is bumped past version 2 to allow itto restore the same old versions as BucketStateSerialize (fromStreamingFileSink).	2
[FLINK-1523] [gelly] Added Vertex Centric Configuration TestsThis commit squashes the following:Pratially addressed inline commentsAdded test for removal of a non-SP-edge	4
[hotfix] Fix typo in TestingTaskManagerResourceInfoProvider	5
[FLINK-15517][Runtime][Configuration][Network] Use back 'network' in 'shuffle' memory config option names	5
[hotfix][43w5] Fix logging argument	2
[hotfix] [travis] Set distinct cache for Flip-6 build profiles	2
[FLINK-10987] Add LICENSE & NOTICE files for flink-test-utils	3
[FLINK-23215][table-code-splitter] Move NOTICE file into META-INFThis closes #16350	5
[FLINK-5283] Fix closing streams when restoring old savepoint in keyed backends	0
[hotfix] Extend OptionalConsumer to accept ThrowingRunnable	1
[FLINK-15192][table][docs] Restructure "SQL" page into multiple sub-pages and reorder pages under Table API & SQLThe new sub-pages of "SQL":- Overview- Queries- CREATE Statements- DROP Statements- ALTER StatementsThis closes #10669	4
[FLINK-24193][rest][tests] Migrate tests to ClassLoaderExtension	3
[FLINK-13972] Move PreviewPlanEnv to flink-tests	3
[FLINK-26176] Fix scala savepoint migration tests- Remove test parameters and artifacts for tests of rocksb state backend since artifacts are no  rocksdb savepoints but actually memory state savepoints- Remove test parameters and artifacts for tests of savepoints with Flink version 1.7 or below  as those are not safe to restore due to bug FLINK-10493	2
[FLINK-7205] [table] Add UUID() for Table API & SQLThis closes #6381.	1
[FLINK-23111][runtime-web] Fix missing table component's nzFrontPagination inputThis closes #16854.	0
[FLINK-12307][table-planner-blink] Support translation from StreamExecWindowJoin to StreamTransformation.This closes #8261	1
[FLINK-10181][rest][docs] Add anchor links to rest requests	2
[hotfix][source] Use only one watermark class in SourceOperatorEventTimeTest.	3
[FLINK-14053][table-planner-blink] Fix DenseRankAggFunction first row bug.We should consider the possibility that first row's order by key is equal to the initial last value.This closes #9966	5
Fixes a bug when using Double types as sorting key	1
[FLINK-17374][travis] Further removals of travis-mentions	4
[FLINK-6570] update queryable state documentation* adapt a left-over "QueryableStateClient client = new QueryableStateClient(config);"* remove use of TestingUtils as it is only available to Flink testsThis closes #4028.	3
[FLINK-7149] [connectors] Add checkpoint ID to 'sendValues()' in GenericWriteAheadSink	1
[hotfix][build][python][tests] Remove Scala suffix	0
[hotfix] Add EvictingWindowOperatorContractTestThe existing WindowOperatorContractTest is turned into a test base whileRegularWindowOperatorContract test tests WindowOperator andEvictingWindowOperatorTest tests EvictingWindowOperator. For this towork, the base tests now always use List windows and we have specifictests for reducing/folding windows in RegularWindowOperatorContractTest.This also patches in the missing side output support forEvictingWindowOperator.	1
[FLINK-6695] Activate strict checkstyle for flink-storm-examples	2
Improved robustness of checkpoint replay manager	1
[FLINK-23475][runtime][checkpoint] Supports repartition partly finished broacast states (#16714)* [FLINK-23475][runtime][checkpoint] Supports repartition partly finished broacast states* Fix the judgement of unfinished and wrong comment / variable* Fix the tests* Add todo	2
[FLINK-15875][python] Bump Beam to 2.19.0This closes #11050.	2
[FLINK-22002][tests] Let taskmanager.slot.timeout fall back to akka.ask.timeoutThis commit lets taskmanager.slot.timeout fall to akka.ask.timeout so that the MiniClusterwill run by default with a 5 min taskmanager.slot.timeout. This should harden against CIpauses.This closes #16995.	1
[FLINK-14091][coordination] Allow updates to connection state when ZKCheckpointIDCounter reconnects to ZK	5
[FLINK-23647][checkpointing] Wait for CheckpointsCleaner to complete before closing clusterThis change should prevent errors in tests that are checking for existence ofcheckpoint files. Before this change, checkpoint files could have disappearedafter job submitted via mini cluster has already finished/closed, which wasleading to some unexpected test failures.	0
[FLINK-13904][checkpointing] Encapsule and optimize the time relevant operation of CheckpointCoordinator	2
[FLINK-2556] [core] Refactor/fix pre-flight key validationThis closes #1044	5
[hotfix][checkstyle] Enable checkstyle for flink-core/api.common.restartstrategy	2
[hotfix][runtime] Make SchedulerBase#getInputsLocationsRetriever() final	1
[FLINK-4268] [core] Add a parsers for BigDecimal/BigIntegerThis closes #2304.	1
[FLINK-2406] [streaming] Abstract and improve stream alignment via the BarrierBuffer - Add an interface for the functionaliy of the barrier buffer (for later addition of other implementatiions) - Add broader tests for the BarrierBuffer, inluding trailing data and barrier races. - Checkpoint barriers are handled by the buffer directly, rather than being returned and re-injected. - Simplify logic in the BarrierBuffer and fix certain corner cases. - Give access to spill directories properly via I/O manager, rather than via GlobalConfiguration singleton. - Rename the "BarrierBufferIOTest" to "BarrierBufferMassiveRandomTest" - A lot of code style/robustness fixes (proplery define constants, visibility, exception signatures)	0
added some checkpoint configuration	5
No explicit caching when hash table is cachedAdd tests for explicit cache removal when hash table is cached	4
[FLINK-13004][table-runtime-blink] Correct the logic of needToCleanupState in KeyedProcessFunctionWithCleanupStateThis closes #8909	4
Added Hash Partition Class with new paged memory manager classes	1
[hotfix] Fix wrong Java doc comment of BroadcastStateBootstrapFunction.Context	1
[FLINK-20654][checkpointing] Decline checkpoints until restored channel state is consumedIn scenarios with multiple inputs (e.g. co-group; not union) one input may receive acheckpoint barrier while the second input is still restoring state. This (previous)state is currently not included into the snapshot, which therefore will be incomplete.	2
First draft of test case for partitioning property when dop changes	4
[FLINK4429] Remove redis connector (now in Apache Bahir)	4
[hotfix][tests] Consolidate the instantiation of the RocksDBKEyesStateBackendBuilder for tests in a utility class.	3
[FLINK-22865][python] Optimize state serialize/deserialize in PyFlinkThis closes #16069.	2
[hotfix] Improve exception message for parsing kryo serializer classes from config	5
[FLINK-4306] [storm compatibility] Fix dependencies in flink-storm and flink-storm-examples  - Flink dependencies are now 'provided'  - flink-storm-examples has no direct storm-core dependency, but only depends through flink-storm	2
[FLINK-14170][fs-connector] Add tests for hadoop<2.7 support in StreamFileSink	2
[FLINK-5807] [docs] Improved wording for home pageThis closes #3320.	1
[FLINK-13774][table-planner-blink] Blink extended expressions should implement ResolvedExpression	0
[FLINK-28801][oss] Bump OSS SDK to 3.13.2This closes #20450	2
[FLINK-10426] Port TaskTest to new code base[FLINK-10426] (Part 1) testRegularExecution[FLINK-10426] (Part 2) porting fails1. testCancelRightAway2. testFailExternallyRightAway3. testLibraryCacheRegistrationFailed4. testExecutionFailsInNetworkRegistration5. testInvokableInstantiationFailed6. testExecutionFailsInInvoke7. testFailWithWrappedException8. testCancelDuringInvoke9. testFailExternallyDuringInvoke10. testCanceledAfterExecutionFailedInInvoke11. testExecutionFailsAfterCanceling12. testExecutionFailsAfterTaskMarkedFailed13. testCancelTaskException14. testCancelTaskExceptionAfterTaskMarkedFailed[FLINK-10426] (Part 3) partition state update testsSee also FLINK-10319, some of these tests would be removed based on that.[FLINK-10426] (Part 4) watch dog[FLINK-10426] (Part 4) config	5
[FLINK-12719][python] Add the Python catalog APIThis closes #8623	2
Increased coverage of sopremo.common.base	3
[FLINK-7499][io] also let AsynchronousBufferFileWriter#writeBlock() recycle the buffer in case of failuresThis fixes a double-recycle in SpillableSubpartitionView and also makes surethat even if adding the (asynchronous) write operation fails, the buffer isproperly freed in code that did not perform this cleanup. It avoids codeduplication of this cleanup and it is also more consistent to take overresponsibility of the given buffer even if an exception is thrown.[FLINK-7499][io] complete the idiom of ResultSubpartition#add() taking over ownership of the bufferThe buffer will now always be released once and at the right time and the callermust not worry about the buffer release if a called function threw an exception.This closes #4581.	1
[FLINK-28577][web] Fix the null error of reading checkpointed_size in checkpoint tab	0
[FLINK-19314][coordination] Add DeclarativeSlotPoolBridge	1
[FLINK-8858] [sql-client] Add support for INSERT INTO in SQL ClientThis closes #6332.	1
[FLINK-21886][table-api] Loosen argument of TableEnvironmentInternal#executeInternal from QueryOperation to Operation (#15296)	2
[FLINK-1094] Reworked, improved, and testes split assigners	3
[FLINK-13327][table-planner-blink] Fixed scala 2.12 compilation	0
Added MathUtility function	1
[FLINK-14962] Fix various inefficient use of keySet iterator instead of entrySet iteratorThis closes #10328	1
[FLINK-19996][kafka] Add IT case for Debezium + Kafka + temporal joinThis closes #14080	1
[FLINK-17473][tests] Remove unused test utilitiesRemove classes:  - ArchivedExecutionBuilder  - ArchivedExecutionJobVertexBuilder  - ArchivedExecutionVertexBuilderThis closes #11958.	4
[FLINK-11167] Optimize RocksDBListState#put by removing the clear before every put operationThis closes #7421.Differential Revision: https://aone.alibaba-inc.com/code/D816268	4
[FLINK-3653] [docs] Add recovery.zookeeper.storageDir docs to config pageThis closes #1828.	1
[hotfix][table-common] Add a new Row.deepEquals for all conversion classes	1
Class ExecutionGroupEdge is now thread-safe	5
[FLINK-23063][python] Remove TableEnvironment#connect APIThe TableEnvironment#connect API has been replaced by CREATE TABLE DDLin SQL and TableDescriptors in Table API via TableEnvironment#create_temporary_table(String, TableDescriptor).Note that the new method uses the FLIP-95 interfaces.	1
[FLINK-2641] integrate off-heap memory configuration- add offheap configuration parameter taskmanager.memory.off-heap- remove offheap ratio parameter and reuse memory fraction parameter- set JVM -XX:MaxDirectMemorySize parameter correctlyThis closes #1129	2
[FLINK-14853][docs] Updated documentation generator to print MemorySize andDuration in a nicer wayThis closes #10829	2
[hotfix][tests] Always respond to task cancellation requestsThe previous cancel setup doesn't make sense if you aren't aware that one of the tests forces a restart.We now immediately respond to any task cancellation request instead.	1
[FLINK-23765][python] Fix the NPE in Python UDTFThis closes #16843.	0
[FLINK-12254][table-common] Add a class to data type converter	5
[FLINK-27420] Recreate metric groups for each new RM to avoid metric lossThis closes #19607	1
[FLINK-6198] [cep] [doc] Update CEP documentation.	2
[FLINK-18719][runtime] Introduce new ActiveResourceManager.This closes #13004.	1
refactoring...	4
[FLINK-12777][network] Rename existing classes to make them in sync with the refactor1. Rename BarrierBuffer to CheckpointedInputGateCheckpointedInputGate was an interface, while BarrierBuffer wasit's implementation. This rename means that we are dropping the interfaceand keeping only the concrete class.2. Rename BarrierBuffer and BarrierTracker tests to match this renameand previous refactorings.	4
[hotfix][scripts] Fix comment for default GC configuration	5
Straightened out ValueSerializer and ValueComparator	5
[hotfix] [tests] Speed up CoStreamCheckpointingITCase	3
Relieve 1. travis worker by deploying only one version to sonatype	1
[FLINK-5877] [docs] Fix Async I/O Scala snippetThis closes #3383	0
[FLINK-3367] Add PublicEvolving and Internal annotations to flink-streaming-java and flink-streaming-scalaThis closes #1606	2
Removed static split assignment, prepared code for lazy split assignment	4
[hotfix] Add general options to cli options in SQL cli LocalExecutorWithout the general options the SQL cli deployment code does not forwardthe jobmanager/m setting to the execution configuration.	5
[hotfic][doc] Fix JavaDoc of chapter ETL. This closes #20077Co-authored-by: MartijnVisser <martijn@2symbols.com>	2
[hotfix] Rename ClusterEntrypoint.ShutdownBehaviour enum valuesRenamesShutdownBehaviour.STOP_APPLICATION -> ShutdownBehaviour.GRACEFUL_SHUTDOWNShutdownBehaviour.STOP_PROCESS -> ShutdownBehaviour.PROCESS_FAILURE	0
[FLINK-16828][prometheus][metrics] Support factories	1
[streaming] Aggregation rework to support field expression based aggregations for Pojo data streams	5
[FLINK-25387][FLINK-25388][FLINK-25389][table-planner] Introduce ExecNodeMetadata- Introduce a new annotation `ExecNodeMetadata` on `ExecNode`s which is used toimprove the serialization/deserialization to/from JSON plan of `ExecNode`s andfacilitate the upgrade of the pipeline, since every ExecNode has now also a versionattached.- List all the JSON plan eligible `ExecNode`s in `ExecNodeMetadataUtil` and use a static list to register them in Jackson.- Annotate all those eligible `ExecNode`s with the new annotation and provide aname constructed by the class name using `-` separators. All versions are set nowto 1.- Use an `ExecNodeContext` POJO which uses the uniqueId, name and version toserialize/deserialize them in a JSON plan in the form of `<id>_<exec-node-name>_<version>`.- Fix issues with `@JsonIgnoreProperties` and `@JsonIgnore`, and opt for the classbased annotation instead of the per field annotation of `@JsonIgnore`.- Update the test plans with the new JSON scheme derived by the changes.This closes #18479.	4
[FLINK-8659] Add migration itcases for broadcast state.This closes #5955.	1
Fixes an issue with wrong ClassLoader when submitting JobJars.	0
[hotfix] [docs] fix typos	2
[FLINK-21312][checkpointing] Reset OperatorChain.isStoppingBySyncSavepoint properlyReset OperatorChain.isStoppingBySyncSavepoint fromLegacySourceFunctionThread so that StreamTask can readit without relying on completionFuture callbacks whichcan fire later.	1
[hotfix][docs][table] Fix string concatenation in avro example	0
[FLINK-15999][doc] Add reference to windowing and ProcessFunction doc in event_time.mdAlso fix section formatting.	0
Clean up checkstyle and JavaDoc errors in core project	0
[FLINK-15389][jdbc] Improve JDBCUpsertOutputFormat to schedule flusher when flushMaxSize is not oneThis closes #10712	5
Refactored sopremo; enhanced simple jaql parser	4
[hotfix] [tests] Reset state to allow retry on failureThis closes #1611	0
[FLINK-23402][streaming-java] Refactor ShuffleMode to StreamExchangeMode	4
[FLINK-13523][table-planner-blink] Refactor AVG aggregate function to keep it compatible with old plannerThe behavior of AVG aggregate function in blink planner always return double/decimal type which is not standard.	2
[hotfix][docs] Improve the filesystem connector docThis closes #14325	2
[FLINK-2605] [runtime] Unclosed RandomAccessFile may leak resource in StaticFileServerHandlerThis closes #1089.	2
[FLINK-17950][Scala DataStream API] Fix StreamExecutionEnvironment.continuousSource(...) method  - Fix return type from Unit to DataStream  - Forward inferred TypeInformation  - Add test	3
[FLINK-24371][datastream] Call preCommit on SinkWriter although no committer is availableBefore this change if no committer was after the SinkWriter in thepipeline preCommit was never called. With this change preCommit is nowcalled as well but the return values are discarded as before.	4
[FLINK-14347][test] Filter out expected exception string in YARN testsThis closes #9880.	3
[FLINK-7386] [elasticsearch] Evolve ES connector API to make it working with Elasticsearch 5.3+This closes #6043.	1
[FLINK-25817] Add LocalRecoveryITCaseAdds an integration test for local recovery under process faults using the newlyintroduce working directory feature to persist state locally.	1
[FLINK-16996][orc] Refactor ORC connector to use new data structuresThis closes #11925	5
[hotfix] Fix checkstyle violations in ZooKeeperCompletedCheckpointStore	0
[FLINK-21946][table-planner-blink] FlinkRelMdUtil.numDistinctVals produces exceptional Double.NaN result when domainSize is in range(0,1)This closes #15357	2
[FLINK-23279][tests] Randomly use Changelog Backend in testsUnless LocalRecovery is enabled which is currentlynot supported by the Changelog State Backend.	4
[FLINK-18765][python] Support map() and flat_map() for Python DataStream API. (#13066)	5
Merge branch 'version02' into checkpointingConflicts:nephele/nephele-server/src/main/java/eu/stratosphere/nephele/executiongraph/ExecutionStage.javanephele/nephele-server/src/main/java/eu/stratosphere/nephele/jobmanager/scheduler/AbstractScheduler.java	5
[FLINK-6932] [doc] Update inaccessible Dataflow Model paper linkThis closes #4131.	2
Memory Manager allows to deallocate memory by task (part 2), Enhancement of tests to check more thoroughly for memory leaks.	3
[FLINK-19036][docs-zh] Translate page 'Application Profiling & Debugging' of 'Debugging & Monitoring' into ChineseThis closes #13235.	1
[FLINK-18930][docs-zh] Translate "Hive Dialect" page of "Hive Integration" into ChineseThis closes #13176	1
[FLINK-1201] [gelly] Added PageRank as a library method and example	1
[FLINK-28451][table][hive] Use UserCodeClassloader instead of the current thread's classloader to load functionThis closes #20211	1
[FLINK-21466][sql-client] Make "embedded" parameter optional when start sql-client.shThis closes #15255	2
[streaming] StreamComponentHelper refactor to Generics	4
[hotfix][scripts] Fix zookeeper quorum regex	0
[FLINK-2652] [tests] Temporary ignore flakey PartitionRequestClientFactoryTest	3
Reworked Input formats for correct handling of cached statistics.	1
Fix typo in kinesis-connector module	2
Maven POM file cleanups.Added missing primitive type wrappers.Adjusted API for ozone-scala.	4
[FLINK-4545] [network] Allow LocalBufferPool to limited the number of used buffersUse "a * <number of channels> + b" buffers for bounded pipelined partitions:Default: a = 2, b = 8* 1 buffer for in-flight data in the subpartition/input channel* 1 buffer for parallel serialization* + some extra buffers (8 seems a good default given bandwidth-delay products of current networks)This closes #3480	1
[FLINK-21136] Adjust timeouts for reactive modeThis closes #15159	2
[hotfix][metrics] Exit early if not reporters are configured	5
[FLINK-23696][connectors/rabbitmq] Fix RMQSourceTest.testRedeliveredSessionIDsAck test	3
[FLINK-18552][tests] Update migration tests of StatefulJobSavepointMigrationITCase to cover migration till release-1.11	3
[hotfix][runtime] Support copy ResourceProfile with its Builder.	2
[FLINK-12868][plugins] Log warnings if the plugins directory doesn't exist	2
[FLINK-6395] [tests] Mark test bases as abstractThis closes #3790	3
[FLINK-25060][table-common] Replace projection methods of FLINK-24399 with the new Projection utilThis closes #17906.	1
[contrib] Added log properties files to contrib & minor clean ups	4
[FLINK-24858][release][docs] Recommend users to upgrade to 1.14.3 from 1.13.x to use state serializer fix	0
[FLINK-11781][yarn] Remove "DISABLED" as possible value for yarn.per-job-cluster.include-user-jarRemove this feature because it is broken since Flink 1.5This closes #7883.	2
Revert "[FLINK-16276][tests] Introduce a builder and factory methods to create DefaultScheduler for testing"This reverts commit bd757cb2a29cc2d9046d39aee9684d5b2e5ec036.	4
[hotfix][flink-core] fix errors in MemorySegment descriptionThis closes #7916.	0
[FLINK-2448] [tests] Create new Test Environments on every call to getExecutionEnvironment and allow sharing of job execution results	1
[hotfix] Remove Netty shutdown work around in RestServerEndpointWith upgrading Netty to 4.1.24, it is no longer necessary to have the timeout safe guardwhen shutting down the Netty server in RestServerEndpoint.	1
[FLINK-8995][tests] Add keyed state that uses custom stateful serializer to allround test jobThis closes #6909.	3
[FLINK-2357] [web dashboard] Add auto-refresh to dashboard	1
[FLINK-11765] Update Java / Scala StatefulJobWBroadcastStateMigrationITCase for 1.8	5
[FLINK-7956] [flip6] Add support for queued scheduling with slot sharing to SlotPoolThis commit adds support for queued scheduling with slot sharing to theSlotPool. The idea of slot sharing is that multiple tasks can run in thesame slot. Moreover, queued scheduling means that a slot request must notbe completed right away but at a later point in time. This allows tostart new TaskExecutors in case that there are no more slots left.The main component responsible for the management of shared slots is theSlotSharingManager. The SlotSharingManager maintains internally a tree-likestructure which stores the SlotContext future of the underlyingAllocatedSlot. Whenever this future is completed potentially pendingLogicalSlot instantiations are executed and sent to the slot requester.A shared slot is represented by a MultiTaskSlot which can harbour multipleTaskSlots. A TaskSlot can either be a MultiTaskSlot or a SingleTaskSlot.In order to represent co-location constraints, we first obtain a rootMultiTaskSlot and then allocate a nested MultiTaskSlot in which theco-located tasks are allocated. The corresponding SlotRequestID is assignedto the CoLocationConstraint in order to make the TaskSlot retrievable forother tasks assigned to the same CoLocationConstraint.Port SchedulerSlotSharingTest, SchedulerIsolatedTasksTest andScheduleWithCoLocationHintTest to run with SlotPool.Restructure SlotPool components.Add SlotSharingManagerTest, SlotPoolSlotSharingTest andSlotPoolCoLocationTest.This closes #5091.	3
[FLINK-5170] [akka] Fix hostname usage in AkkaUtils.getConfigThis closes #2879.	5
[FLINK-18295][runtime] Change IntermediateDataSet to explicitly have exactly one consumer vertexThe corresponding DefaultLogicalResult is updated as well.This closes #18218.	5
[FLINK-2961] [table] Add support for basic type Date in Table APIFix nullCheck enabledFix testTableConfig introducedImprovements and bug fixingThis closes #1322.	0
[FLINK-13158][rest] Remove WebMonitor interface	4
[hotfix] [javadoc] Fix typo in StreamExecutionEnvironment javadocThis closes #5164.	2
[hotfix][docs] Fix typo	2
[FLINK-19427][FLINK-19489][tests] Fix test conditions for 'SplitFetcherTest.testNotifiesWhenGoingIdleConcurrent()'The changed logic also fixes flaky thread shutdown logic as a side effect, because it no longer relieson thread interrupting.This closes #13593	1
[FLINK-11741] [core] Add getNestedSerializerSnapshots utility method in CompositeTypeSerializerConfigSnapshotWe often want to get only the restored serializer snapshots from alegacy CompostieTypeSerializerConfigSnapshot when attempting to redirectcompatibility checks to new snapshots. This commit adds agetNestedSerializerSnapshots utility method for that purpose.	1
[FLINK-10076][table-planner-blink] Upgrade Calcite dependency to 1.18	2
Added composite operators	1
Added json verification to json generator tests.	3
[FLINK-13318][table-planner-blink] Fix Blink planner tests failing on Scala 2.12 by setting SerialVersionUID to Scala UDFsThis is because:1. we print the udf's md5 into the node explanation2. blink planner uses XML to verify plan, the XML content is immutable between different Scala versions3. the serialization behavior is different between Scala 2.11 and 2.12 when version id is not defined.That's why we add version id to all existing scala udfs. But this doesn't mean we force users to set this. This is just a workaround for the plan test for different Scala versions. Users can still use a Scala udf without version id in blink planner and flink planner.This closes #9193	2
[FLINK-9398][cli] Only list non-terminal jobs in running section	1
Fixed bug in replay logic	2
[FLINK-3964] add hint to job submission timeout exception messageThis closes #2168	1
[FLINK-23742][python][followup] Fix the checkstyle issue in test_data_stream.py	5
Changed default settings for compression libraries	1
[FLINK-9185] [runtime] Fix potential null dereference in PrioritizedOperatorSubtaskState#resolvePrioritizedAlternativesThis closes #5894.	0
[FLINK-8789] Throw IllegalStateException when calling Task#stopExecution on not running TaskBefore we threw an UnsupportedOperationException when calling Task#stopExecution on a Taskwhere we did not set the invokable yet. This can be a bit misleading and, thus, this committhrows an IllegalStateException with an respective message.This closes #5753.	1
[FLINK-18938][table-api] Throw better exception message for querying sink only or source only connectorThis closes #13214	1
[FLINK-3020][streaming] set number of task slots to maximum parallelism in local executionThis closes #1360.	1
[FLINK-1327] [core] Fix wrapping of MemorySegments in ByteBuffers	0
[FLINK-23358][core] Refactor CoreOptions parent first patterns to List optionsThis closes #16821	4
Minor fixes for POM files : Inherited versions where possible, suppress unnecessary warnings	2
[FLINK-19094][docs] Revise the description of watermark strategy in Flink Table documentThis closes #13282	2
[FLINK-25807][rest][docs] Deduplicate fields that only differ by naming convention	2
[FLINK-23280][python] Fix the issue that Python ExplainDetails does not have JSON_EXECUTION_PLAN optionThis closes #16407.	5
[FLINK-1024] Enable automated snapshot deployment through Apache's Maven infrastructure	5
[FLINK-10987] Add LICENSE & NOTICE files for flink-sql-client	2
[hotfix][core] Improve/fix JavaDocs in SplitEnumeratorContext class.	2
[hotfix][docs] Fix loop redirection in /dev/projectsetup/dependencies.html (#9177)	1
[FLINK-13435] Remove ShuffleDescriptor.ReleaseType and make release semantics fixed per partition typeIn a long term we do not need auto-release semantics for blocking (persistent) partition. We expect them always to be released externally by JM and assume they can be consumed multiple times.The pipelined partitions have always only one consumer and one consumption attempt. Afterwards they can be always released automatically.ShuffleDescriptor.ReleaseType was introduced to make release semantics more flexible but it is not needed in a long term.FORCE_PARTITION_RELEASE_ON_CONSUMPTION was introduced as a safety net to be able to fallback to 1.8 behaviour without the partition tracker and JM taking care about blocking partition release. We can make this option specific for NettyShuffleEnvironment which was the only existing shuffle service before. If it is activated then the blocking partition is also auto-released on a consumption attempt as it was before. The fine-grained recovery will just not find the partition after the job restart in this case and will restart the producer.	1
Fix ScalaPostPassFixed doc warnings for MemorySegment	2
[hotfix][test] Do not hide original exceptions in CheckpointCoordinatorTest	3
Removed coarse-grained locking from CheckpointDecisionCoordinator	4
[hotfix][tests] TestingLogicalSlot should only respect the first slot release requestOtherwise it may return itself to the slotOwner several times, which may lead toerrors or more available slots than expected.	0
[FLINK-13505][docs-zh] Translate "Java Lambda Expressions" page into ChineseThis closes #9348	1
[FLINK-15994][table-planner-blink]Support byte array argument for FROM_BASE64 function (#11060)	1
[hotfix] [core] Fix checkstyle in org.apache.flink.api.common.typeinfo	5
[FLINK-4639] [table] Introduce CalciteConfig to make Calcite features more pluggable.This closes #2521This closes #1617 // closing PR after discussion	1
[hotfix][metrics] Fix typos	2
dist pattern fix	0
[hotfix][docs] Correct the check for hugo installation in build_docs.sh	2
[FLINK-1201] [gelly] use type hints for mapVertices, mapEdges and create	1
[FLINK-22290][checkpointing] Use duration for alignment timeout.	1
[FLINK-5063] [checkpointing] Discard state handles of declined or expired state handlesWhenever the checkpoint coordinator receives an acknowledge checkpoint message which belongsto the job maintained by the checkpoint coordinator, it should either record the state handlesfor later processing or discard to free the resources. The latter case can happen if acheckpoint has been expired and late acknowledge checkpoint messages arrive. Furthremore, itcan happen if a Task sent a decline checkpoint message while other Tasks where still drawinga checkpoint. This PR changes the behaviour such that state handles belonging to the job ofthe checkpoint coordinator are discarded if they could not be added to the PendingCheckpoint.This closes #2812	1
[FLINK-2288] [runtime] Cleanups and comments for ZooKeeper based initialization	5
[FLINK-17869][task][checkpointing] Revert "[FLINK-17218][checkpointing] Ensuring that ChannelStateWriter aborts previous checkpoints before a new checkpoint is started."This reverts commit 24ff415f1b76392f75dea7c3538558d24fcb7058which introduced a race condition when task thread and nettythread compete for ChannelStateWriteResult.Instead, next commits fix it by:1. Map size validation error will be prevented simply by increasing the limit2. When a checkpoint is subsumed, it's write result will be removed from on future completion	4
[streaming] IncrementalLearning skeleton updated	5
[FLINK-14231][runtime] Introduce and use ProcessingTimeServiceAware to pass ProcessingTimeService to operator	1
[hotfix][runtime] Throw IllegalConfigurationException instead of NumberFormatException for negative memory sizes in TaskExecutorResourceUtils.	5
Revert "[FLINK-24724][build] Update japicmp jaxb dependencies"This reverts commit 76fdff9d54ffeb2ab68137218593119955fe7ee2.	4
[FLINK-1418] [apis] Change print() to print on the client and to eagerly execute the program.print() now uses collect() internally	1
[hotfix] Change result of WindowedStream ops to SingleOutputStreamOperator	1
[FLINK-23848][connector/pulsar] Make sure the topic would only be sought once.	1
[FLINK-11530] [docs] Copy all the English markdown files to xx.zh.mdThis closes #7754	2
[FLINK-25190][coordination][metrics] Add "numPendingTaskManagers" metrics	1
[FLINK-3174] Add MergingWindowAssigner and SessionWindowsThis introduces MergingWindowAssigner, an extension of WindowAssignerthat can merge windows. When using a MergingWindowAssigner theWindowOperator eagerly merges windows when processing elements.For keeping track of in-flight windows and for merging windows this addsMergingWindowSet, this keeps track of windows per key.Only when using a MergingWindowAssigners is the more costly merginglogic used in the WindowOperator.For triggers there is a new method Trigger.onMerge() that notifies thetrigger of the new merged window. This allows the trigger to set a timerfor the newly merged window. Only triggers that return truefrom Trigger.canMerge() can be used with MergingWindowAssigner. Triggerhas default implementations for canMerge() and onMerge(), we returnfalse and onMerge() throws an Exception.This also adds AbstractStateBackend.mergePartitionedStates for mergingstate of several source namespaces into a target namespace. This is onlypossible for the newly introduced MergingState which is an extension ofAppendingState. Only ReducingState and ListState are MergingState whileFoldingState is now an AppendingState.This enables proper support for session windows.This also adds the EventTimeSessionWindows and ProcessingTimeSessionWindowswindow assigners and adapts an existing session example and adds test cases.	3
[FLINK-9799][state] Generalize and unify state meta infosThis closes #6308.	5
[FLINK-19235][python] Support mixed use with most built-in aggs for Python UDAFThis closes #13854.	1
[FLINK-26810][connectors/elasticsearch] Use local timezone for TIMESTAMP_WITH_LOCAL_TIMEZONE fields in dynamic index	1
[FLINK-5101] Refactor CassandraConnectorITCaseThis closes #2866.	1
Tasks submissions are now bundled in groups to reduce deployment latency	5
Update commons-io artifact to same version as everywhere else.Use the new cooridnates for it.Fix a warning in pact-hbase/pom.xml.	5
[FLINK-24236][metrics][tests] Migrate tests to factory approach	3
[hotfix][tests] Remove try/catch from SavepointWindowReaderITCase.testApplyEvictorWindowStateReader	3
[hotfix][cep] Fixed argument list code style	0
[FLINK-15656][k8s][doc] Add documentation for pod templateThis closes #14629.	2
[FLINK-21523][hive] Fix ArrayIndexOutOfBoundsException when running hive partitioned source with projection push downCo-authored-by: zouyunhe <zouyunhe@bigo.sg>This closese #15068	1
[FLINK-15466][table-planner-blink] Fix the wrong plan when use distinct aggregations with filterThis closes #10760	1
[FLINK-4391] Add timeout parameter for asynchronous I/OThe timeout defines how long an asynchronous I/O operation can take. If the operationtakes longer than the timeout, then it is failed with an TimeoutException.Annotate classes with internal Annotation	0
[FLINK-4695] Introduce MetricRegistryConfiguration to encapsulate MetricRegistry parametersIn order to decouple the MetricRegistry object instantiation from the global configurationthe MetricRegistryConfiguration class has been introduced. This class encapsulates allrequired information to create a MetricRegistry object. Furthermore, it encapsulates theconfiguration parsing logic by offering a static method fromConfiguration, which constructsa MetricRegistryConfiguration object from a Configuration.This closes #2555.	5
[FLINK-28783] [flink-core] Fix typo in ConfigOptions's example codeThis closes #20427.	5
Initial support for Group Sorting (only key positions and Reduce operators).	1
[FLINK-11349][tests] Port CoordinatorShutdownTest to new code baseThe relevant tests of the CoordinatorShutdownTest have been moved to theExecutionGraphCheckpointCoordinatorTest which executes the same test justwithout spawning an actual cluster.	3
[hotfix][yarn,test] Deduplicate YarnClusterDescriptor construction in YarnClusterDescriptorTest	3
[FLINK-9495][kubernetes] Implement ResourceManager for KubernetesThe KubernetesResourceManager will dynamically allocate TaskManager Pods from Kubernetes on demand.	3
[hotfix] Fix typo in some API comments (#7867)* Fix typos in DataStream* merge other fixes into one PR	0
[FLINK-21535][tests] Improved the detection of the attempt number in UnalignedCheckpointITCase.Attempt number was inferred from the times a specific source reader was created. However, there was a race condition between the induced failure in FailureMapper#initializeState and the creation of the source reader. If the failure was induced first, no restart was detected and thus the test never finishes.The solution is now to track the restarts of all source tasks through Enumerator#addSplitsBack, which is called on recovery. Additionally, instead of just tracking only one specific source operator, all operators are now tracked and the results are consolidated when all readers are initialized.	5
[FLINK-27206][metrics] Deprecate reflection-based reporter instantiation	2
[FLINK-12362] Remove legacy container number config option for Flink on yarnThis closes #9678.	2
[FLINK-16033][table-api] Introduced Java Table API Expression DSL	2
[FLINK-21302][table-planner-blink] Fix NPE when use row_number() in overAggThis closes #14880	1
Partitioning obeys order	5
[gelly-doc] Correct Scala code example	2
[FLINK-23025][upsert-kafka] Fix upsert-kafka produce duplicates when enable object reuseThis closes #16257	1
[Hotfix] Fix typos.	2
Cleaned up pact-examples: 1) Removed PigMix package, removed Manifest files, removed CoGroupSecondarySort job, renamed ReduceSecondarySort job	4
Cleaned up Nephele Grep example	4
[hotfix][connectors] Every connector now shades the flink-connector-base in its uber jarSigned-off-by: slinkydeveloper <francescoguard@gmail.com>	2
[FLINK-9580][rest] Close streams in RestClient#readRawResponseThis closes #6166.	1
[FLINK-19411][task] Fix construction of MultipleInputStreamTask with union inputsPreviously number of input gates was assumed to be the same as number of logicalinputs, which is not true in case of union inputs.	2
[FLINK-1794] [test-utils] Adds test base for scala tests and adapts existing flink-ml tests[FLINK-1794] [test-utils] Adds scala docs to FlinkTestBaseThis closes #540.	3
[FLINK-15840][table-planner-blink] Fix ClassCastException when use tEnv.from for temp/catalog table (#10989)	2
started to comment expressions	5
- workaround fix for bug #96	0
[FLINK-8027] Generalize existing rest handlers to work with an arbitrary RestfulGatewayBy letting the existing REST handlers work with an arbitrary RestfulGateway,they can be used by the Dispatcher as well as the JobMaster, once it implementsthe RestfulGateway.This closes #4985.	1
[FLINK-4939] WriteAheadSink: Decouple creation and commit of a pending checkpointSo far the GenericWriteAheadSink expected thatthe subtask that wrote a temporary buffer to thestate backend, will be also the one to commit it tothe third-party storage system.This commit removes this assumption. To do thisit changes the CheckpointCommitter to dynamicallytake the subtaskIdx as a parameter when askingif a checkpoint was committed and also changes thestate kept by the GenericWriteAheadSink to alsoinclude that subtask index of the subtask that wrotethe pending buffer.This closes #2707.	4
[refactor][state/changelog] Extract StateChangeUploadScheduler interface from StateChangeUploaderMotivation: the two interfaces should have different semanticsregarding returning upload result vs completing upload tasks with it calling upload().That would allow to discard unnecessarily uploaded state in subsequent commit.	1
Minimal HashPartition tuning	5
[FLINK-11073] [core] Replace GenericArraySerializerConfigSnapshot with new GenericArraySerializerSnapshot	1
[FLINK-7012] remove user-JAR upload when disposing a savepoint the old wayThis closes #4245.	1
Fixed instance leak bug in case of canceled jobs	0
[FLINK-16198] Fix FileUtilsTest on macOS1. Fix concurrent delete failure on macOS2. Fix relative compression path test failure	0
[FLINK-22232][network] Add task name to output recovery tracing.	1
[FLINK-28621] Enable Date/Time&Optional support for all mappers	1
[FLINK-14965] [table-planner-blink] Correct the logic of convertToTableStats method in CatalogTableStatisticsConverterCorrect the following logic:1. CatalogTableStatistics and CatalogColumnStatistics do not override equals method, and the given parameters may be unknown but is not (CatalogTableStatistics/CatalogColumnStatistics) UNKNOWN instance. equals method should not be used here.2. Should only care about rowCount value of CatalogTableStatistics now3. Even if tableStatistics is null or tableStatistics is CatalogTableStatistics.UNKNOWN, the columnStatistics may be not UNKNOWN. It also needs to be convert to column stats.This closes #10429	2
[FLINK-6561] Disable glob test on Windows	3
[FLINK-1191] Add support for Scala Collections and Special Types"The special types" are Option and Either. This should work for allScala collections except SortedSet and SortedMap, for which the typechecker prints an error message.	0
[FLINK-2862] [Storm Compatibility] FlinkTopologyBuilder should use proper generic typesThis closes #1274	1
fixed bug in event deserialization	0
[FLINK-14709] Allow outputting elements in user defined close method, executed by chained driver.	1
[FLINK-23453][streaming] Integration BufferDebloater to StreamTask	2
[hotfix][coordination] Add safety guard against uncaught exceptions for Future dependent lambdas	1
[FLINK-15744] Log erroneous Task state changes at warn level	4
- added fine-grained logging- fixed caching bug	0
[FLINK-22759][docs] Correct the applicability of some RocksDB related options as per operator	1
[FLINK-26771][hive] Fix incomparable exception between boolean type and numeric type in Hive dialectThis closes #19182	0
[FLINK-3426] Fix JobManagerLeader[Re]ElectionTest.testleaderElection on Windowsremoved unused importuse new Path().toUri()added missing bracesThis closes #1651.	1
[FLINK-1446] Fix Kryo createInstance() methodThis closes #336	1
[FLINK-2953] fix chaining of sortPartition() calls in Scala DataSet API- Added tests for Scala DataSet sortPartitionThis closes #1317.	5
[FLINK-21442][connectors/jdbc] Fix XaSinkStateSerializer serialization	0
[docs] Update obsolate cluster execution guideCloses #835	5
[hotfix][metric] MetricRegistryImpl#LOG is private	2
[FLINK-14104][build] Pin jackson version to 2.10.1	2
[hotfix] Force not null types for literals with non null value	1
[FLINK-13702][flink-table-planner] Fix digest of GenericRelDataType	5
[hotfix][coordination] Make failed event valve shutting smoother.Failing to shut the event valve is quite common, it happens whenever a checkpoint gets canceled.So we don't handle this as an IllegalState, because it is very much an expected state.	1
[FLINK-5570] [table] Register ExternalCatalogs in TableEnvironment.This closes #3409.	2
[FLINK-14260] Replace TestingJobManagerRunnerFactory with TestingJobManagerRunnerFactoryNG in DispatcherTest	3
[hotfix] [tests] Workaround for WaitForAllVerticesToBeRunning not working in TestingCluster	3
added testcases for MissingNode, Object- and ArrayNode	3
[FLINK-21801][table-api] Use ResolvedSchema in QueryOperationThis closes #15242.	0
[FLINK-21748][sql-client] Fix unstable LocalExecutorITCase (#15563)	0
[FLINK-25430][runtime] Renames PartialDispatcherServicesWithJobGraphStore into PartialDispatcherServicesWithJobPersistenceComponentsSeparate commit to prepare the further JobResultStoreintegration. PartialDispatcherServicesWithJobGraphStorebecomes PartialDispatcherServicesWithJobPersistenceComponentsbecause we want to integrate the initialization analogouslyto how the JobGraphStore initialization is integrated.	5
[hotfix][tests] RocksDBAsyncSnapshotTest: use test harness helper method to wait until task is running	1
Implemented sorting for failure event table	0
[FLINK-15010][network] Add shut down hook to ensure cleanup netty shuffle directoriesWhen the cluster is shut down in standalone mode, the task manager is shut down via SIG_TERM signal. In this case, the shuffle directories created by FileChannelManager would not be removed finally.To solve this issue, we register the shut down hook before creating directories in the constructor of FileChannelManagerImpl.This closes #10736	2
[FLINK-8731] Replaced mockito with custom mock in TestInputChannelThis closes #6338	3
[FLINK-10565][tests] Refactor SchedulerTestBase to remove legacy code pathsThis closes #6856.	4
[FLINK-9415] [scala, test] Remove ScalaStreamingMultipleProgramsTestBaseThis closes #6058.	3
[FLINK-9374] [kinesis] Enable FlinkKinesisProducer backpressuringThis closes #9374.	2
Updated jar for end-to-end testing of packaged programs.	3
[FLINK-12906][table-planner][table-api-java] Ported OperationTreeBuilder to table-api-java module	2
[FLINK-23767][streaming] Update definition of StreamStatus.	5
[FLINK-6023] fix process function doc examplesThis closes #3510.	2
[hotfix][docs] Fix NullPointerExceptionOffset is Long type, the default value is null, and executing offset+=1 in Java 1.8.x will throw a NullPointerException	1
[FLINK-1376] [runtime] Add proper shared slot release in case of a fatal TaskManager failure.Fixes concurrent modification exception of SharedSlot's subSlots field by synchronizing all state changing operations through the associated assignment group. Fixes deadlock where Instance.markDead first acquires InstanceLock and then by releasing the associated slots the assignment group lockcan block with a direct releaseSlot call on a SharedSlot which first acquires the assignment group lock and then the instance lock in order to return the slot to the instance.Fixes colocation shared slot releasing. A colocation constraint is now realized as a SharedSlot in a SharedSlot where the colocated tasks allocate sub slots.This cloes #317	0
[FLINK-21836][table] Support parsing special commands by introducing ExtendedParserThis closes #15265	1
[FLINK-12914][runtime] Remove legacy InstanceListener	4
[hotfix] Remove unnecessary dependencies in flink-runtime.  - Removes Apache Commons HTTP Client  - Removes Apache Commons IO  - Removes Jettison JSONparser and consolidates tests to use Jackson instead (which is included anyways)	1
[FLINK-7350] [travis] Only execute japicmp in misc profileThis closes #4461.	2
[FLINK-17058] Adding ProcessingTimeoutTrigger of nested triggers.	1
[FLINK-21627][table-planner-blink] The digest of TableScan should consider table hintsThis closes #15559	2
[hotfix] Let TaskExecutorTest.testReleaseInactiveSlots use TaskExecutorGateway	1
[FLINK-3569] [build] Adjust test cases due to shading plugin base directory changes	4
[jobmanager] Add a process reaper to kill the JobManager process when the main actor dies.Also adds various tests for failure behavior during job submission.	0
[FLINK-1579] [webui] Implement History ServerArchives jobs to a file system directory and adds a history serverthat can display the archived jobs.	1
[FLINK-13873][rocksdb][metrics] Optionally expose column_family as variable	5
[FLINK-20365][python] The native k8s cluster could not be unregistered when executing Python DataStream jobs in attach modeThis closes 14232.	5
[FLINK-22912][python] Support state ttl in Python DataStream APIThis closes #16667.	5
[FLINK-22217][runtime][logging] Add quotes around job name	1
[hotfix] Undo DEBUG log setting for Blob Server in runtime tests	3
[FLINK-17869][task][checkpointing] Abort writing of channel state by RPCnotification	2
[FLINK-21620][table] Use TIMESTAMP_LTZ as summary string for LocalZonedTimestampTypeThis closes #15124.	1
[FLINK-7521][flip6] Return HTTP 413 if request limit is exceeded.Remove unnecessary PipelineErrorHandler from RestClient.Rename config keys for configuring request and response limits.Set response headers for all error responses.This closes #5685.	0
[docs] Group monitoring/debugging docs	2
[hotfix] Fix isClosed() for operator wrapper and proxy operator close to the operator chainPreviously isClosed() is marked after the finish() is called, which isnot as expected. This would break the assumption that checkpoints arealso supported after finish() is called. Currently we keep the codethat checks whether the operators are closed on checkpoints as asafeguard, but in realistic it should not happen.Besides, we also proxy the operator close to OperatorChain so that inthe following we could skip the lifecycle of the operators uniformly.	1
[FLINK-23434][table-planner] Fix the inconsistent type in IncrementalAggregateRule when the query has one distinct agg function and count star agg functionThis closes #16539	1
[FLINK-4604] [table] Add support for standard deviation/varianceThis closes #3260.Old PR: This closes #2762.	1
[FLINK-16703][rpc] Set AkkaRpcActor state to TERMINATING when terminatingThis commit fixes a bug where we did not update the state of the AkkaRpcActorin case of terminating it. Moreover, this commit fixes the problem that theonStop action could have been called multiple times. Last but not least, itchanges the enum names of the state implementations for better diagnostics.This closes #11549.	1
[hotfix] [e2e] Remove explicit Maven plugin version	4
[FLINK-25277][flink-runtime] add shutdown hook to stop TaskExecutor on SIGTERM	1
[FLINK-21193][docs] Update Rest API Generator to Hugo expand syntax	5
[FLINK-18282][docs-zh] Retranslate the home page documentThis closes #12642	2
[hotfix] Replace HighAvailabilityOptions#HA_ZOOKEEPER_NAMESPACE with HA_CLUSTER_ID	0
[FLINK-8210][network-tests] Collect results into proper mock in MockEnvironment	3
Merge branch 'examples02' into annotation+newOptimizerConflicts:pact/pact-examples/src/main/java/eu/stratosphere/pact/example/relational/TPCHQuery3.java	5
[FLINK-16687][python] Support Python UDF in Java Correlate (#11650)	1
[hotfix] [docs] Improve S3 file system docs	2
[hotfix][table-common] Improve terminology for data types in formats	5
[FLINK-8539] [checkpointing] (part 1) Introduce CompletedCheckpointStorageLocation to properly handle disposal of checkpoints.That concept allows us to properly handle deletion of a checkpoint storage, for example deleting checkpointdirectories, or the dropping of a checkpoint specific table.This replaces the current workaround for file systems, where every file disposal checks if the parentdirectory is now empty, and deletes it if that is the case. That is not only inefficient, butprohibitively expensive on some systems, like Amazon S3.	5
[FLINK-20663][runtime] Migrate use cases of MemorySegment#wrap to MemorySegment#processAsByteBuffer.	1
[FLINK-15444][runtime] Make the component AbstractInvokable in CheckpointBarrierHandler NonNullThe current component AbstractInvokable in CheckpointBarrierHandler is annotated as @Nullable. Actually in real code path it is passed via the constructor and never be null.The nullable annotation is only used for unit test purpose. But this way would mislead the real usage in practice and bring extra troubles, because you have to alway checkwhether it is null before usage in related processes.We can refactor the related unit tests to implement a dummy AbstractInvokable for tests and remove the @Nullable annotation from the related class constructors.	4
[FLINK-21206] Write savepoints in unified format from HeapStateBackendThis closes #14925	2
[FLINK-25827][task] Move and rename MultipleInputAvailabilityHelper	4
[hotfix][runtime] Fixes ArchivedExecutionGraphTestThe previously used globalFailure only set the failureInfo on a ExecutionGraph-level. I switched to updateTaskExecutionState which will also set thefailureInfo on an Execution-level	5
[FLINK-16744][task][refactor] Extract SubtaskCheckpointCoordinatorMotivation:1. move checkpoint-related responsibilities out of StreamTask2. ability to cache checkpoint storage locations for unaligned checkpoints	4
[FLINK-17361] Refactor JdbcTableSourceITCase to use TableResult instead of StreamITCaseUsing the static sink approach of StreamITCase is potentiallyproblematic with concurrency, plus the code is just plain nicer likethis.	0
Added test case to check compiler with plans branching directly after a loop.	3
[streaming] StreamRecord basicTypes update	5
[FLINK-3853] [gelly] Reduce object creation in Gelly utility mappersThis closes #1951	1
Revert "[hotfix][ci] Always print environment information"This reverts commit f5819cec01eab914e8d4e7db41587b715a557e3b.	5
Merge branch 'arvid'Conflicts:sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/DefaultFunctions.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/aggregation/TransitiveAggregationFunction.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/expressions/MethodCall.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/function/Aggregation.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/function/MaterializingAggregationFunction.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/io/JsonParser.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/AbstractArrayNode.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/JavaToJsonMapper.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/JsonUtil.javasopremo/sopremo-common/src/main/java/eu/stratosphere/util/reflect/ReflectUtil.javasopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/BuiltinFunctionsTest.javasopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/expressions/BatchAggregationExpressionTest.javasopremo/sopremo-common/src/test/java/eu/stratosphere/sopremo/expressions/FunctionCallTest.java	5
[FLINK-27016][hive] Support access array type in a struct and support access fields in a struct arrayThis clsoes #19283Co-authored-by: Jark Wu <jark@apache.org>	1
Parsed first small jaql scripts	5
[FLINK-24721][build] Remove unnecessary relativePath to parent	4
[FLINK-10934][dist] Set log4j for Kubernetes cli	2
[FLINK-20018] Allow escaping in 'pipeline.cached-files' and 'pipeline.default-kryo-serializers'This commit enables escaping in options that expect a map ofstring-string entries. It lets users pass options such as e.g.pipeline.cached-files=name:file1,path:'oss://bucket/file1'	2
[hotfix] [runtime] SerializedThrowable copy constructor preserves cause	1
[hotfix] Rename and move MesosEntrypointUtils to o.a.f.mesos.util.MesosUtils	1
[FLINK-10205] Introduce fault tolerance for InputSplits in batch executionThis closes #8125.	2
[FLINK-11544] [rest] Extend JarRequestBody with job ID	2
test	3
[FLINK-4245] Expose all defined variablesThis closes #2300.	2
[FLINK-23616][python] Support to chain the Python DataStream operators as much as possibleThis closes #16777.	1
[FLINK-15072][client] Hijack executeAsync instead of execute for create pipeline	1
- removed unnecessary TODO flag in CombinerNode	2
[FLINK-12717][python] Add windows support for PyFlink (#11960)	2
[FLINK-11755] [core] Drop no longer used class CompatibilityResult	1
[FLINK-8415] Unprotected access to recordsToSend in LongRecordWriterThread#shutdown()This closes #5724.	2
[FLINK-11741] [runtime] WritableSerializer's ensureCompatibility method should have been removed	4
[FLINK-19814] FeedbackTransformation is not supported in BATCH modeThis closes #13795.	1
Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.The failing test actually revealed an edge case during recovery with local channels.	3
[hotfix] [utils] Change the parameter 'numSample' in DataSetUtils.sampleWithSize() to 'numSamples', remove redundant Java 6 codeThis closes #1362	4
[FLINK-8472] [DataStream, test] Refactor StatefulJobSavepointFrom*MigrationITCase to single ITCaseThis commit refactors the StatefulJobSavepointFrom12MigrationITCase andStatefulJobSavepointFrom13MigrationITCase to a single class,StatefulJobSavepointMigrationITCase. The new ITCase is parameterized toensure that all previous versions and state backend variants arecovered.	2
[FLINK-7907][docs][metrics] Add scala examplesThis closes #7907.	1
[FLINK-16098][docs-zh] Translate "Overview" page of "Hive Integration" into ChineseThis closes #11455	1
[FLINK-28629][sql-gateway] Return operation schema until operation is in terminal state	2
[FLINK-3776] Flink Scala shell does not allow to set configuration for local executionThis closes #1945	5
[FLINK-8349] [flip6] Remove Yarn specific commands from YarnClusterDescriptorRemove Yarn specific commands from YarnClusterDescriptor. This is a preparationalstep to make the FlinkYarnSessionCli work with the Flip-6 RestClusterClient.This closes #5229.	1
[runtime] [logging] Fix log messageThis closes #736.	1
[FLINK-24806][connectors/rabbitmq] Fix container startup in RMQSourceITCaseThis closes #17709.	1
[streaming] jobgraphbuilder refactor	4
[FLINK-26105][e2e] Removes printing of logs to stdout for pyflink_testI removed the test_pyflink.sh to align it with how errors arehandled in other e2e tests. The logs are accessible through thebuild artifacts and shouldn't spill into stdout. The rollingfilenames in flink might lead to a strange ordering anyway.	2
[FLINK-23259][docs] Fix the link for page "docs/dev/datastream/operators/overview" (#16381)	5
[FLINK-19947][table] Support 'sink.parallelism' configuration for 'print' connectorThis closes #13932	5
Added IT Case for count() agrgegation function.	1
[FLINK-18809][table-planner-blink] Introduce interface for InternalAggregateFunctionSimplifies the implementation because internal functions usually don’t have verycomplex types or need annotations and therefore don't need access to DataTypeFactory.	5
[hotfix][doc] fix the mismatch result in Window Join example (#19665)Signed-off-by: TennyZhuang <zty0826@gmail.com>	0
[FLINK-13634] Add compression format for use with StreamingFileSink	2
[docs][streaming] fix code examples which use 'implements'- replace "implements" with "extends" where applicable	1
[FLINK-3450] Duplicate TypeSerializer in StateDescriptor.writeObjectThe StateDescriptor can be serializer asynchronously in case ofasynchronous checkpoints. In that case two threads would try toconcurrently use the TypeSerializer: The normal state updating and thecheckpoint serialization. If the TypeSerializer is a KryoSerializer thiscan lead to problems. Therefore the need to duplicate it before using in"writeObject".	1
Implemented piggybacking of lookup information	5
[hotfix][table-planner-blink] revert commons-codec exclusion.	4
[FLINK-3579] Improve String concatenation in the Table APIThis closes #1821	1
[FLINK-23165][python] Add StreamExecutionEnvironment#registerSlotSharingGroup to PyFlink and ScalaThis closes #16405.	2
[FLINK-14019][python] Add necessary changes on shell script and boot.py to support pip installation and changing working directory.	1
[FLINK-4776] [distributed coordination] Move ExecutionGraph initialization into the dedicated class ExecutionGraphBuilder	5
[FLINK-26658][docs] Add missing quotes	1
[FLINK-23978][scala] Move Scala-reliant FieldAccessors to flink-streaming-scala	2
[hotfix] Remove unused imports from SharedBuffer	5
[FLINK-6729] Activate checkstyle in runtime/accumulators	1
[FLINK-26191][connectors/elasticsearch] Revert Elasticsearch dependencies to 7.10.2 to keep Apache 2 license	4
[FLINK-4838] [docs] Remove STREAM keyword in StreamSQLExampleThis closes #2645	4
[FLINK-9427] Fix registration and request slot race condition in TaskExecutorThis commit fixes a race condition between the TaskExecutor and the ResourceManager. Before,it could happen that the ResourceManager sends requestSlots message before the TaskExecutorregistration was completed. Due to this, the TaskExecutor did not have all information it neededto accept task submissions.The problem was that the TaskExecutor sent the SlotReport at registration time. Due to this, the SlotManager could already assign these slots to pending slot requests. With this commit, theregistration protocol changes such that the TaskExecutor first registers at the ResourceManagerand only after completing this step, it will announce the available slots to the SlotManager.This closes #6067.	4
[FLINK-15355][plugins]Classloader restricted to whitelisted system classes.No class/resource in the system class loader (everything in lib/) can be seen in the plugin except those starting with a whitelist prefix.	0
[FLINK-7811] Disambiguate ZooKeeperHAJobManagerTest for Scala 2.12The new Scala 2.12 typechecker didn't like this.	1
[FLINK-3147] Expose HadoopOutputFormatBase fields as protectedThis closes #1442	2
[FLINK-24213][qs] Use single lock in ServerConnection	1
[FLINK-20897][table-planner] Support batch mode in StreamTableEnvironmentThis enables batch mode for StreamTableEnvironment.Both StreamExecutionEnvironment, TableEnvironment, and StreamTableEnvironmentuse StreamGraphGenerator with the same configuration. Previous work ensuredthat when execution.runtime-mode is set to BATCH all batch properties areeither set consistently (e.g. shuffle mode) or have no impact on the pipeline(e.g. auto watermark interval, state backends).Most of the changes are removing checks and ensuring that internal (e.g. values)and external (e.g. data stream, table source) source transformations are setto BOUNDED. The latter is a complex topic as we currently use 4 different waysof expressing external sources:- InputFormatProvider: Boundedness needs to be explicitly set by the plannerdue to custom formats that don't extend from FileInputFormat.- SourceFunctionProvider: Boundedness needs to be explicitly set by the plannervia custom transformation to also disable progressive watermarks.- DataStreamScanProvider: Boundedness needs to be explicitly set by the plannerto ensure old behavior again. New source interfaces + FileInputFormat are fine.- TransformationScanProvider: Boundedness can be derived automatically and willonly work with new source interfaces + FileInputFormat.This closes #16793.	2
[FLINK-20513][table-planner-blink] Introduce StreamPhysicalExchange, and make StreamExecExchange only extended from ExecNodeThis closes #14384	4
[FLINK-25045][runtime] Introduce AdaptiveBatchSchedulerThis closes #18462.	2
[hotfix][build] Move jaxb copy into executionThis allows us to specify multiple executions that copy different file sets without having to worry what side-effects it may have.	1
[FLINK-15338][python] Cherry-pick BEAM-9006#10462 to fix the TM Metaspace memory leak problem when submitting PyFlink UDF jobs multiple times.This closes #10772.	2
Fix NepheleJobGraphGenerator bug with iterationsWhen traversing it is not checked whether iterations where alreadyvisited, this led to a bug when you used the output of an iterationtwice.	1
[FLINK-10366] [s3] Create an S3 base module as the common denominator of the S3 connectors	1
[FLINK-3974] Fix object reuse with multi-chainingBefore, a job would fail if object reuse was enabled and multipleoperators were chained to one upstream operator. Now, we create shallowcopies in BroadcastingOutputCollector and DirectedOutput if object reuseis enabled.	0
[hotfix][docs] Fix typo in k8s docsThis closes #15886	2
[FLINK-27297][python] Add get_execution_environment method with configuration argument.This closes #19685.	5
[FLINK-27319] Duplicated '-t' option for savepoint format and deployment target	1
[FLINK-15919][core][mem] MemoryManager shouldn't allow releasing more memory than reservedThis closes #11025.	1
[FLINK-21277] Bump testcontainers version	3
[FLINK-12916][tests] Rework regex	1
[FLINK-17990][python] Fix the test of ArrowSourceFunctionTestBase.testParallelProcessing to use synchronized listThis closes #12404.	1
[FLINK-25817] Expose rest and rpc port at ClusterEntrypoint	1
[hotfix][runtime] Extract method cancelVerticesAsync() in ExecutionGraph	4
[hotfix][typo] fix some typos	2
[FLINK-7694][flip6] Migrate JobMetricsHandler to new RestServerEndpointMigrate logic inorg.apache.flink.runtime.rest.handler.legacy.metrics.JobMetrisHandler to newhandler, and add new handler to DispatcherRestEndpoint.[FLINK-7694][flip6] Use jobid path parameter constant in JobMetricsHandlerTestThis closes #5084.	3
[FLINK-26410][hive] Hive dialect supports "transform using 'xxx'"This closes #19818	1
[FLINK-4121] Add timeunit (ms) to docs for timestamps and watermarksThis closes #2165	2
[FLINK-4382] [rpc] Buffer rpc calls until the RpcEndpoint has been startedThis PR allows the AkkaRpcActor to stash messages until the corresponding RcpEndpointhas been started. When receiving a Processing.START message, the AkkaRpcActorunstashes all messages and starts processing rpcs. When receiving a Processing.STOPmessage, it will stop processing messages and stash incoming messages again.Add test case for message stashingThis closes #2358.	3
[FLINK-3660][hotfix] Add missing default value in ConfigConstants	5
Replaced Tarjan's algorithm with a simpler depth-first traversal cycle detection algorithm. By doing so, one gets rid off a possible linear time check whether a node is contained in the stack.	1
[FLINK-10041][state] Extract iterators from RocksDBKeyedStateBackend (inner or static inner classes) into full classesThis closes #6501.	5
[FLINK-15306][network] Adjust the default netty transport option from nio to autoThe default option of `taskmanager.network.netty.transport` in NettyShuffleEnvironmentOptions is `nio` now.As we know, the `epoll` mode can get better performance, less GC and have more advanced features which are only available on linux.Therefore it is better to adjust the default option to `auto` instead, and then the framework would automatically choose the propermode based on the platform.	1
Remove obsolete broadcast job.	4
Fixed bug in PactRecord (case columns % 8 == 0)	0
[FLINK-17448][sql-parser-hive] Implement alter DDL for Hive dialectThis closes #12108	2
[FLINK-16576][state backends] Fix the problem of wrong mapping between stateId and metaInfo in HeapRestoreOperation	5
[hotfix][hive] return early in alterTable() to improve readability	1
- Ported UnionITCase to contract builder pattern	5
Finished implementation of channel throughput measurements	5
Moved iterative examples to a separatre project.	4
[FLINK-21609][tests] Remove usage of LocalCollectionOutpuFormat from SimpleRecoveryITCaseBaseThe LocalCollectionOutputFormat does not work well together with restarts because it records resultsfrom different attempts. Hence, instead of using this format we now use the collect() call in theSimpleRecoveryITCaseBase.This closes #15389.	1
[hotfix] Update standalone-job.sh usage string	5
[FLINK-17456][hive][test] Update hive connector tests to execute DDL & DML via TableEnvironmentThis closes #12281	3
[FLINK-18237][fs-connector] Exception when reading filesystem partitioned table with stream modeThis closes #12576	5
[FLINK-17156][checkpointing][hotfix] simplify cancellation in CheckpointBarrierUnaligner	1
[hotfix][network] Extract a general buffer manager for future reuse by recovered input channel	1
[FLINK-19026][network] Moving priority event handling from BufferReceivedListener to CheckpointedInputGate.This commit renders BufferReceivedListener obsolete and will allow a following commit to remove it entirely.A side-effect of this commit is that all events are handed over from CheckpointedInputGate to StreamTaskNetworkInput and break up the poll loop. However, since events are rare, it should have no visible impact on the throughput.	4
[FLINK-9467][metrics] Rebuild UI	2
[hotfix] Fix checkstyle violations in TaskExecutorResourceUtilsTest	3
[FLINK-11952][1/3] Make ChildFirstClassLoader a top-level class in flink-core	2
[FLINK-4422] [kafka] Convert all time interval measurements to System.nanoTime()This closes #3422.This closes #3421.This closes #3420.This closes #3419.	5
[FLINK-16194][k8s] Remove Flink Configuration out of KubernetesResource	5
[hotfix][docs]correct configuration key "taskmanager.network.detailed-metrics" in metrics document	2
[FLINK-11884][table] PlannerTableOperation construction &transformation to RelNodes	2
[FLINK-24034] Upgrade apache commons dependencies	2
[FLINK-21969][python] Invoke finish bundle method before emitting the max timestamp watermark in PythonTimestampsAndWatermarksOperatorThis closes #15401	1
[FLINK-7788][QS] Allow specification of port range for queryable state proxy.The queryable state client proxy can now take a port range as argumentso that if multiple proxies run on one machine, they can all start withoutproblems.	0
[FLINK-24196][docs-zh] Translate "EXPLAIN Statements" page of "SQL" into Chinese (#17195)	2
[FLINK-1106] Deprecate Record API	2
Fixed enumeration / pruning for two-input contracts.	1
[FLINK-13594][python] Improve the 'from_element' method of flink python api to apply to blink planner.This closes #9370	2
[FLINK-6703][docs] Document how to take a savepoint on YARNThis closes #4721.	2
[hotfix] Consider INITIALIZING JobState also as scheduled in CliFrontend	5
-Properly forward order information	5
[hotfix] Makes FileSystemBlobStore.(delete|deleteAll) comply to the BlobStore interface	5
[hotfix][tests] Move field definitions before method definitions	5
[FLINK-16661][cli] Fix log configuration forwarding for yarn application mode	5
[FLINK-5652] [asyncIO] Cancel timers when completing a StreamRecordQueueEntryWhenever a StreamRecordQueueEntry has been completed we no longer need the registered timeout.Therefore, we have to cancel the corresponding ScheduledFuture so that the system knows thatit can remove the associated TriggerTask. This is important since the TriggerTask contains areference on the StreamRecordQueueEntry. Consequently, such a task will prevent theStreamRecordQueueEntry from being garbage collected.This closes #3264.	1
[FLINK-2136] [streaming] Added test for scala DataStream	5
Merge branch 'serializer' into version021Conflicts:nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/AbstractJobVertex.java	5
[hotfix][travis] Activate hadoop profile via property	5
[hotfix] Fix ArchivedExecutionGraphTest	3
[FLINK-15533] Consolidate parallelism in Environment constructor	5
[FLINK-18552][tests] Update migration tests of FlinkKafkaProducerMigrationTest to cover migration from 1.11	3
[hotfix][table-common][table-api-java] Add various equals/hashCode to catalog-related classes	2
[FLINK-4485] close and remove user class loader after job completionKeeping the user class loader around after job completion may lead toexcessive temp space usage because all user jars are kept until theclass loader is garbage collected. Tests showed that garbage collectioncan be delayed for a long time after the class loader is not referencedanymore. Note that for the class loader to not be referenced anymore,its job has to be removed from the archive.The fastest way to minimize temp space usage is to close and remove theURLClassloader after job completion. This requires us to keep aserializable copy of all data which needs the user class loader afterjob completion, e.g. to display data on the web interface.This closes #2499	5
[FLINK-14370][kafka][test-stability] Fix the cascading test failure in KafkaProducerTestBase.	3
[streaming] Updated Streaming function interfaces to match main project	1
[FLINK-19597][network] Introduce SortBuffer and PartitionSortedBuffer for sort-merge based blocking shuffleData of different channels can be appended to a SortBuffer and after the SortBuffer is finished, the appended data can be copied from it in the given channel index order. PartitionSortedBuffer is an implementation of SortBuffer and it sorts all appended records only by subpartition index. Records of the same subpartition keep the appended order.	5
[FLINK-13486][tests] Harden AsyncDataStreamITCase to alleviate race condition	5
[FLINK-21190][test] Adds comment about hashCode/equals implementation	1
Adapted ITCases for contracts to new datamodel	5
[FLINK-7461] Remove Backwards compatibility with <= Flink 1.1	2
[hotfix][tests] Enrich timeout exception messageThis closes #6414.	1
[FLINK-14014][python][table-common] Adds basic classes PythonFunction, PythonEnv, PythonFunctionInfoIntroduces basic classes such as PythonEnv, PythonFunction, PythonFunctionInfointo flink-table-common which hold the information such as the Python executionenvironment, the serialized Python functions, etc. These classes are located inflink-table-common because they will be used by the added RelNode which will beintroduced later.	1
[hotfix][docs] Cleanup grammar in python table walkthrough	4
- added methods to compute output schema and write sets	1
[FLINK-23005][coordination] Pass ConsumedPartitionGroup to TaskDeploymentDescriptorFactory as the key of cache	4
[FLINK-19493] In CliFrontend, make flow of Configuration more obviousBefore, it was up to the CustomCommandLine implementation whether anyConfiguration was passed through from the flink-conf.yaml or whereverthe base Configuration came from.Now, we make the flow of the Configuration explicit inCliFrontend.getEffectiveConfiguration(). Instead of relying on theConfiguration we get from the CustomCommandLine we ask theCustomCommandLine to materialize its settings and add them manually toan effective Configuration that the CliFrontend controls.This removes the Configuration parameter from CustomCommandLines thatdon't need it anymore, such as DefaultCLI, which means we also have totouch tests.This adds a new integration test in CliFrontendITCase that verifiescorrect parameter passing and also verifies that command line argumentsoverride base settings.	1
[FLINK-5047] [table] Add sliding group-windows for batch tablesThis closes #3364.	1
[FLINK-21628][python] Support Python UDAF in Tumbling WindowThis closes #15212	1
Revert "[FLINK-5808] Move max keygroup constants to ExecutionConfig"This reverts commit e4fbae36207c563363eed39886c24eea51d7db01.The fixes around FLINK-5808 introduced follow-up issues.	0
Merge branch 'stratosphere'Conflicts:pom.xml	5
[FLINK-12485][python] Add completeness test for Table and TableEnvironment.This closes #8439	3
[FLINK-13256] Ensure periodical checkpointing continues when regional failover aborts pending checkpointsThis closes #9128.	0
[FLINK-8341] [flip6] Remove not needed options from CommandLineOptionsThis closes #5227.	4
[FLINK-13782][table-api] Implement type strategies for IF ELSEexpressionThis closes #12410	2
[FLINK-8354] Add KafkaDeserializationSchema that uses ConsumerRecordWe now directly use the ConsumerRecord from the Kafka API instead oftrying to forward what we need to the deserialization schema ourselves.This makes it more future-proof, if Kafka adds new fields to theConsumerRecord.The previously used KeyedDeserializationSchema now extendsKafkaDeserializationSchema and has a default method to bridge theinterface. This way existing uses of KeyedDeserializationSchema stillwork.	1
[hotfix][test] Extract SourceOperatorTestBase from SourceOperatorTest	3
[FLINK-23976][metrics] Add additional job status metrics	1
[FLINK-3011] [runtime] Fix cancel during restart	0
[FLINK-17009] Move Supported Data Type from api_concepts.md to types_serialization.mdThis seems like a better fit, plus we want to get rid of theapi_concepts.md page.	1
[FLINK-24344][runtime] testTriggerCheckpointAfterIoException throws exception from initializeLocationForCheckpoint rather than from getAndIncrement	1
[FLINK-3296] Remove 'flushing' behavior of the OutputFormat support of the DataStream APIThis closes #1563	5
[FLINK-16922][table-common] Fix DecimalData.toUnscaledBytes() should be consistent with BigDecimla.unscaledValue.toByteArray()This closes #12265	5
[FLINK-3218] Fix overriding of user parameters when merging Hadoop configurationsThis closes #1496	5
Increased size of envelope consumption log	2
[FLINK-26986][python] Remove deprecated string expressions in Python Table APIThis closes #19326.	4
[FLINK-15660][runtime] request slot should success if the slot is already allocated with the same allocation id	2
Allow empty paths in FileInputFormat to fix a problem with the job preview	0
Added Int, Short, Float, Double, and Long Serializer Tests	3
[FLINK-13982][core] Introduce arithmetic operations (add, subtract, multiply) for MemorySize.	1
Continued to work on channel refactoring	4
[FLINK-3779] [runtime] Add getSerializedValue(byte[]) to KvState[statebackend-rocksdb, core, streaming-java]- Adds the getSerializedValue(byte[]) to KvState, which is used to query single  KvState instances. The serialization business is left to the KvState in order  to not burden the accessor -- e.g. the querying network thread -- with setting  up/accessing the serializers.- Adds quaryable flag to the StateDescriptor. State, which sets a queryable state  name will be published for queries to the KvStateRegistry.- Prohibts null namespace and enforces VoidNamespace instead. This makes stuff  more explicit. Furthermore, the concurrent map used for queryable memroy state  does not allow working with null keys.	1
[hotfix][docs] Formatted match_recognize.md to keep line length under 100 characters.	2
Clean up for file line reader	2
[FLINK-1201] [gelly] added missing javadocs	2
[FLINK-10958] [table] Add UDF's eval method parameters support subclass matching.This closes #7152	1
[hotfix] [state backends] New namespace serializer in HeapKeyedStateBackend should always be compatiblePreviously, we were only checking if the new namespace serializer isincompatible, while properly we should be checking that it is strictlycompatible.This doesn't affect any user expected behaviour, since the namespaceserializer is never exposed to users.	1
[FLINK-1488][yarn] Fix broken log file access	2
[FLINK-9144][network] fix SpillableSubpartition causing jobs to hang when spillingThis closes #5842.	1
[FLINK-15999][doc] Move flink components doc from runtime.md to flink-architecture.mdAlso rename and reformat to get up-to-date with current naming.	5
[FLINK-9035] [core] Fix state descriptor equals() and hashCode() handling	0
[FLINK-25085][runtime] Support schedule task in MainThreadExecutor local thread poolThis closes #18303.	1
[streaming] streamcomponent cleanup	4
[FLINK-15347] Add dedicated termination future executor to SupervisorActorThe SupervisorActor must never block its own main thread. Due to this constraint,we must not complete the external termination futures from the main thread, becauseone does not know what the user does with this future. Hence, this commit introducesa dedicated termination future executor which is responsible for completing thetermination futures.This closes #11683.	1
[FLINK-11235][es] Close transportclient if no connection could be established	2
Merge pull request #129 from uce/add_plan_dump_to_local_executorAdd methods to get optimized plan from LocalExecutor	1
[FLINK-10230][table] Support 'SHOW CREATE VIEW' syntax to print the query of a viewThis closes #17352	1
[FLINK-23512][checkpoint] Store whether a subtask is finished in the checkpoint	5
[FLINK-16742][runtime] Ignore unknown command line options for BashJavaUtils.	2
[hotfix][avro] Link to Hadoop Integration in Avro format documentationThis closes #12580	2
[FLINK-2432] Custom serializer supportThis closes #962	1
[FLINK-1149] DataSource sets DOP to 1 for NonParallelInputs.	1
[FLINK-25526][table-common] Deprecate the classes of the old factory stackThis closes #18269.	2
Renamed ID to AbstractID	5
[FLINK-25405] Let BlobServer check and delete corrupted blobs at start upThis commit introduces the BlobUtils.checkAndDeleteCorruptedBlobs that is called by theBlobServer at start up to delete all potentially corrupted blobs.	4
[FLINK-15487][table-common] Make TypeInference mandatory for function definitionsThis makes TypeInference mandatory for function definitions and updatesFunctionDefinition, UserDefinedFunction, and ScalarFunction to FLIP-65.This closes #10928.	1
[FLINK-11123][docs] fix the import of the class is missing in ml quick start document.This closes #7269	2
[CLI] Set current class loader to user-class loader and disable class initialization.Enalbes submission of Flink programs written in Clojure.This closes #1457	2
[FLINK-13627] Update TypeSerializerSnapshotMigrationITCase to restore from 1.9 savepointThis closes #9659.	5
[hotfix][table][connector] Use CollectionUtil#iteratorToList instead of Guava Lists	1
[streaming] Temporal operator windowing syntax update	5
Corrected error messages for PackagedProgram	0
[FLINK-11180][tests] Use random port in ProcessFailureCancelingITCase	0
Fixed bug in management graph iterator implementation	0
[FLINK-16834] Add flink-clients dependency to flink-walkthroughsWith inverting the dependency between flink-clients and flink-streaming-java,it is now necessary to explicitly add the flink-clients dependency in orderto execute the walkthrough jobs from within the IDE.This closes #11551.	2
[FLINK-10710] [core] Implement new CompositeSerializerSnapshot and migrate EitherSerializer / GenericArraySerializer	1
Additional modifications to instance sharing unit test	3
[FLINK-8647] [flip6] Introduce JobMasterConfigurationThis commit introduces a JobMasterConfiguration which contains JobMaster specificconfiguration settings.This closes #5478.	1
[hotfix] Add JavaDocs to CheckpointMetadataOutputStream	5
[FLINK-9258][metrics] Thread-safe initialization of variables map	5
[FLINK-21757][metrics] Add LogicalScopeProvider interface	2
[FLINK-3055] [runtime] Remove redundant version of "Executionvertex.getSubTaskIndex()"This closes #1438	1
[FLINK-2477] [streaming] Add tests for SocketClientSinkThis closes #977	3
[FLINK-10490][tests] OperatorSnapshotUtil should use SavepointV2SerializerPlease not that state written with OperatorSnapshotUtil before this commit was written in the V1 format.Now we are using the current V2.This closes #6910.	1
[FLINK-4209] Separate build dependencies in the docker image and remove them once it is ready	4
[hotfix] Fix checkstyle violations in SlotReport and SlotStatus	0
[FLINK-12481][runtime] Move checkpoint lock outside of SystemProcessingTimeService	5
[FLINK-18502][FLINK-18505][docs] Add the missing 'legacySourceSinks.zh.md' page and synchronize content of 'sourceSinks.zh.md'This closes #12854	1
[FLINK-17904][runtime] Add scheduleWithFixedDelay to ProcessingTimeService	0
Add javadocs documentation to user-facing classes.	1
[FLINK-21401] Use JobGraphTestUtils in ClientUtilsTest	3
[FLINK-4606]  Integrate the new ResourceManager with the existed FlinkResourceManager	2
[FLINK-24658][runtime] Added debug logs for BufferDebloater	2
[java api] Fix various compiler warnings through code cleanups	4
[FLINK-11718][rpc] Add onStart method to RpcEndpointAdd a dedicated onStart method to the RpcEndpoint which is called when the RpcEndpointis started via the start() method. Due to this change it is no longer necessary for theuser to override the start() method which is error prone because it always requires tocall super.start(). Now this contract is explicitly enforced. Moreover, it allows toexecute the setup logic in the RpcEndpoint's main thread.	2
[FLINK-24607] Make OperatorCoordinator closure more robust.	1
[refactor] Delegate option printing fully to CLIsBefore, the "-t" option was hardcoded in CliFrontendParser although thatoption comes from GenericCLI.Now, print printHelpForRunApplication() has the same signature andbehaviour as the other printHelp...() methods.This lessens coupling but introduces the problem that we now filtermanually on the CLIs that support application mode in CliFrontendParser.If we really wanted we could add a "supportsApplicationMode()" flag toCLIs but I think that would be pushing it a bit.	1
[FLINK-3097] [table] Add support for custom functions in Table APIThis closes #2265.	1
[hotfix] [tests] Correct EitherTypeInfoTest to respect equals-hashcode contractequality implies equal hash codes but not vice versa. Thus, if two objects are not equal,then we cannot assume that their hash codes differ as well.EitherTypeInfoTest#testEitherTypeInequality, however, did exactly that.	5
[FLINK-5906] [table] Add support to register UDAGGs for Table API and SQL.This closes #3809.	2
[hotfix][tests] Remove unused temp folder in CheckpointMetadataLoadingTest	5
[FLINK-10987] Exclude packaged LICENSEs from license check by the apache-rat-plugin	2
[FLINK-7928] Move Resource out of ResourceSpec	4
[FLINK-23569][docs] Fix typo	2
[FLINK-21850][docs] Improve config descriptions of sort-merge blocking shuffle and remove outdated documentThis closes #15490.	2
[FLINK-4021] [network] Add test for staged buffers auto read behaviourThis closes #2141.	3
Added new iterator for mutable objects.	1
[FLINK-18168][table-runtime-blink] Fix array reuse for BinaryArrayData in convertersThis closes #12542.	5
[FLINK-21073][docs] Mention that RocksDB would ignore java's equals/hashCode during comparing objects	5
Combine Task now operates only in-memory and pushes out results early.	1
[FLINK-13269][table] Copy RelDecorrelator & FlinkFilterJoinRule to flink planner to fix CALCITE-3169 & CALCITE-3170This closes #9122	0
[FLINK-1450] Added fold operator for the Streaming API	1
[FLINK-25076][table-planner] Improve vertex name for sql jobThis closes #18042	1
[FLINK-20433][tests] Stabilizing UnalignedCheckpointITCase.Improves UnalignedCheckpointITCase in the following ways to avoid running into rare issues or better deal with them:- Reduce load on test machine: Executing a test with p=10 may spawn up to 70 tasks that until backpressured can potentially lead to a full load on 70 cores. This may causes larger GC pauses and other JVM freezes that will trigger the rare PartitionNotFound exception. Now, sources are throttled until the sink backpressures.- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly.- Avoid relying completely on notifyCheckpointComplete to finish test: notifyCheckpointComplete is not guaranteed to be called but the test completely relied on it. This may lead to indefinite test runs: Some sources are finished while others are still running, but new checkpoints are canceled because of the finished sources. Thus, too many aborted checkpoints will also lead to a completed test.- Readding splits to enumerator (after FLINK-20290 has been fixed). Any unexpected failure may have caused all splits to be dropped, which causes indefinite running tests.- Removing test-class level timeout - AZP has its own timeout that also provides thread dumps - something that would require a tremendous effort in JUnit4.	3
[FLINK-4080] Guarantee exactly-once for Kinesis consumer for failures in the middle of aggregated recordsThis closes #2180	0
[FLINK-13143][checkpointing] Remove unnecessary CheckpointExceptionHandler class (#9777)	0
[FLINK-5748] [jobmanager] Make the 'future executor' a ScheduledExecutorServiceThis closes #3289	1
[hotfix][table-planner][tests] Remove configuration for default legacy-cast-behaviourSince `table.exec.legacy-cast-behaviour` is disabled by default, thereis no need to explicitely set it in the configuration of the Castrelated IT tests.Call `super.getConfiguration()` to inherit the configuration set in thesuperclass and add/override with more config options in the subclass.	5
[FLINK-28701] Split HYBRID result partition type to HYBRID_FULL and HYBRID_SELECTIVE.	2
[FLINK-13067][docs] Fix broken links to contributing docsThis closes #8964	2
[FLINK-8113][build] Bump maven-shade-plugin to 3.0.0This closes #5042.	2
[FLINK-9881] [table] Fix a typo in table.scalaThis closes #6354.	2
[FLINK-1512] [documentation] Added CSV to POJO feature to documenation.	2
Parser can now be tested with a JUnit test and supports Tuple arrays. Some minor bug fixes are also included.	0
[FLINK-19607][table-runtime-blink] Implement streaming window TopN operatorThis closes #15291	1
[FLINK-21155][tests] Fix FileSourceTextLinesITCaseThe problem of the test case was that it is reusing the MiniCluster. Moreover, it kills for everyTaskManager failure the TaskManager at the index 0. Since this is only possible once, all precedingTaskManager failure test will succeed because not TaskManager is killed.This commit fixes the problem by not reusing the MiniCluster across multiple tests.This closes #14855.	3
[FLINK-2386] [kafka connector] Add comments to all backported kafka sources and move them to 'org.apache.flink.kafka_backport'	2
[FLINK-24409][kafka] Fix collection of KafkaSourceReaderMetrics for topics containing periodsInternally, Kafka translates the periods in topic names to underscore.This led to that Flink could not collect the metrics and logged awarning. With this commit we also translate the topic name before tryingto collect the metrics.	1
[FLINK-25266][tests] Disable StreamingKafkaITCase	3
[FLINK-16608][python] Support FloatType in vectorized Python UDF	1
[FLINK-20901] Add DeclarativeSlotPool.setResourceRequirementsThis commits adds DeclarativeSlotPool.setResourceRequirements which sets the absolutelyrequired resources. Hence, this method can be used to overwrite the currently setresource requirements.This closes #14589.	1
[FLINK-18084][docs] Document the Application ModeThis closes #12549.	2
[FLINK-17240][docs] Add tutorial on Event-driven AppsThis closes #11845.	1
[FLINK-12683][chkpt] Simplify task manager location info generation for logging statementsThis closes #8580.	2
[FLINK-1817] Fix ClassLoaderObjectInputStream to support primitive type classesThis closes #565	1
[FLINK-16205][table-planner] Test base for aggregation functions	1
[streaming] CoRecordReader and iterator added + ConnectedDataStream refactor	4
Improved cancelling for file output tasks to better handle HDFS write abortions.	0
[FLINK-16437][runtime] Create SlotManagerImpl with default WorkerResourceSpec.	1
[FLINK-14118][benchmarks] Add network throughput benchmark for data skew scenario. (#9850)	5
[FLINK-13621][Tests] Update ContinuousFileProcessingMigrationTest to restore from 1.9 savepointThis closes #9600.	3
[hotfix][javadocs] Fix typo in RichFunctionThis closes #14148	1
[FLINK-5969] Add CEPFrom12MigrationTestThe binary snapshots have been created on the Flink 1.2 branch.	2
[FLINK-8475][config][docs] Integrate TM optionsThis closes #5471.	5
[hotfix] [dist. coordination] Clean up exception signature of ExecutionGraph	4
[hotfix][docs] Improve description of 'high-availability.jobmanager.port' config option.	5
[hotfix] Fix checkstyle violations in JobStatus	0
[FLINK-3848] [table] follow-up: Refactor TableSource tests.	3
[FLINK-13724][docs] Remove unnecessary whitespace from the generated pagesStarting command tags with "{%-" will drop all whitespace to the left and endingwith "-%}" will drop all whitespace to the right (including newlines!).Code like the following would otherwise create quite some unnecessarywhitespace:  {% if parent_id %}    {% assign parent_id = current[0].nav-parent_id %}  {% else %}    {% break %}  {% endif %}This closes #9440	4
[hotfix] [core] Make some fields final in LimitedConnectionsFileSystem	5
[FLINK-19547][Runtime] Add the partialRecordLength when creating a BufferConsumerPartial records happen if a record can not fit into one buffer, then the remaining part of the same recordis put into the next buffer. Hence partial records only exist at the beginning of a buffer.Partial record clean-up is needed in the mode of approximate local recovery.If a record is spanning over multiple buffers, and the first (several) buffers have got lost due to the failureof the receiver task, the remaining data belonging to the same record in transition should be cleaned up.`partialRecordLength` is the length of bytes to skip in order to start with a complete record,from position index 0 of the underlying MemorySegment. `partialRecordLength` is used in approximatelocal recovery to find the start position of a complete record on a BufferConsumer, so-called`partial record clean-up`.This commit includes1). API change to add `partialRecordLength` when creating a BufferConsumer2). Add `partialRecordLength` in `BufferWritingResultPartition` when emitRecord and `broadcastRecord`	1
[FLINK-10906][docker] Don't print configuration in docker-entrypoint.shIn order to not leak secrets we should not print the configuration in docker-entrypoint.sh.	2
[streaming] [scala] Restructured streaming scala project and examplesThis closes #275	5
[FLINK-5678] [table] Fix User-defined Functions do not support all types of parametersThis closes #3233.	2
[FLINK-12749][docs] Add operations playground.This closes #9543.[ci skip]	1
[FLINK-20342][docs] Move memory configuration from ops to deployment	5
[FLINK-16242][table-runtime-blink] Duplicate field serializers in BaseRowSerializer (#11194)	2
Revert "[hotfix][docs] Temporarily disable liveserve"This reverts commit f802e16b06b0c3a3682af7f9017f9c0a69e5d4de.	4
[FLINK-1679] deprecate old parallelism config entryold config parameter can still be usedOLDparallelization.degree.defaultNEWparallelism.default	1
Add support for multiple joins with the solution set.	1
[FLINK-25583][connectors/filesystem] Add IT cases for compaction in FileSink.This closes #18680.	2
[FLINK-21925][core] Introduce public SlotSharingGroupUsers can use this class to describe the name and the the different resource components of a slot sharing group.	1
[FLINK-13431][hive] Fix nameNode HA configuration was not loaded when running HiveConnector on YarnThis closes #9237	1
[streaming] StreamExecutionEnvironment restructure to match main project	5
Implemented lazy task deployment	5
[FLINK-28373][network] Read a full buffer of data per file IO read request for sort-shuffleThis closes #20335.	2
[hotfix][docs] Correct the examples in Python DataStream API	5
[FLINK-27256][runtime] Log the root exception in closing the task manager connectionThis closes #19481.	2
[FLINK-28589][runtime-web] enable expanded rows of other concurrent attempts for subtasksThis closes #20380.	0
[hotfix] Minor JavaDocs fixes for File Source classes.	2
[FLINK-8695] [rocksdb] Move flink-statebackend-rocksdb from 'flink-contrib' to 'flink-state-backends'.This closes #5523	2
[hotfix] Remove @nonnull annotatation from all the Executor-related interfaces	4
Moved bytebuffered channels to nephele-server package	4
[hotfix][table] Add missing generics to TableFunctionDefinition	5
[FLINK-8881][runtime] Send accumulator updates via heartbeats	5
[hotfix] [docs] Fix typo in docs (Souce -> Source)Includes such typos in:1. docs/fig/state_partitioning.svg2. docs/dev/table_api.mdThis closes #4119.	2
[FLINK-12897][python][docs] Improve the Python Table API docs by adding more examples.This closes #8916	1
[FLINK-18152][Depl] Fail fast in JM scripts if memory configuration failedThis closes #12521.	0
[hotfix][network] Fix InputGate#isAvailable not completed while InputGate#isFinished is trueFinished InputGates should be available for reading, otherwise reader can deadlock waiting ona future that won't be completed ever.	5
[FLINK-13526][sql-client] Switching to a non existing catalog or database crashes sql-clientAvoid crashing sql-client when switching to non-existing catalog or database.This closes #9399.	5
GroupReduce testcases for the new java api	1
[FLINK-8264] [core] Add 'scala.' to the 'parent-first' classloading patterns.This closes #5166	1
Removes deprecated assignment of file names for file channels	2
[FLINK-9215][resourcemanager] Simply print the exception message in the log in SlotPool#releaseSlot().This closes #5879	2
[hotfix] Correct wrong log level in TaskLocalStateStoreImpl#storeLocalStateThis closes #10321 .	3
[FLINK-1790]Remove the redundant import codeRemove the redundant import code in TaskManagerAuthor: hongsibao <hongsibao@huawei.com>Closes #538 from matadorhong/RemoveRedundantImport and squashes the following commits:1f80c0d [hongsibao] Remove the redunant import code	2
[FLINK-20342][docs] Move deployment/config.md and deployment/memory/index.md to position 3 and 4	5
[FLINK-18214][Runtime] Remove Job Cache size check against JVM Heap sizeChecking that the job cache size is less than JVM heap for JM, may be inconclusive and confusing for users. The job cache size option does not strictly limit the real size and stays an advanced emergency mean. The job size calculation is approximate and the real cache size can be larger than its configured limit (`jobstore.cache-size`).Therefore, this PR removes the related code from `JobManagerFlinkMemoryUtils`, tests and memory tuning guide.This closes #12590.	3
Add some options for slot-based scheduling and changed default parallelism to one.	4
[FLINK-26780][tests] Force RPC serialization	1
[FLINK-4040] [dist] Allow JobManager/TaskManager-specific JVM args- Adds two new config keys for the start up scripts:    * env.java.opts.jobmanager    * env.java.opts.taskmanager- These are used in addition to the regular env.java.opts for the JobManager  and TaskManager, respectively.- Current behaviour is not changed. This does not address the JMX port  setting, because that is handled differently.This closes #2143.	0
[hotfix] [py] Code cleanup - SerializationUtils	4
Added support for local distributed execution environments.Conflicts:stratosphere-tests/src/main/java/eu/stratosphere/test/util/AbstractTestBase.java	5
Fix some typos and naming inconsistencies in new Windowing Code	1
[FLINK-3282] add FlinkRelNode interface.	2
[FLINK-13290][table-planner-blink] SinkCodeGenerator should not compare row type field names	2
[FLINK-13421] Exclude releasing root slots from slot allocationMake MultiTaskSlot not available for allocation when it’s releasing childrento avoid ConcurrentModificationException.This closes #9288.	1
[FLINK-22944][state] Re-use output in StateChangeLogger	4
Split between source distribution license/notice and binary distribution license/notice.Add a DEPENDENCIES file to list all maven dependencies with licenses and notices.[ci skip]	2
[FLINK-19554][connector/testing-framework] Base test class for source with fundamental test cases	3
[FLINK-25155] Support claim mode in rest api	1
[FLINK-17510][tests] Enable StreamingKafkaITCase	0
[hotfix][tests] Harden AdaptiveSchedulerTest	3
Correctly extract the workset flag from the configuration.	5
Fix Bug with forced repartitioning in DOP changes.	4
Changed interface to handle callbacks of allocated resources	0
[hotfix][table] Fix scalastyle issue	0
Fixed bug in PactRecord serialization.	0
[FLINK-14824][csv][json] Make derivation schema as default option for CSV and JSON formats	5
[FLINK-18951][python][docs-zh] Translate Python Table API dependency management documentation into chinese.	2
Fixed serialization warnings.Marked transient fields.Minor formattings.	2
Merge branch 'dima'Conflicts:pom.xml	5
[FLINK-4409] [build] Exclude JSR 305 from Hadoop dependencies	2
[FLINK-13465][legal] Update licensing	5
[FLINK-19832][coordinator] Do not use the allocator sharedSlots to create a bulk in SlotSharingExecutionSlotAllocatorWe need to pass the slots map to the createBulk method instead of using the allocator's 'sharedSlots'because if any physical slots have already failed, their shared slots have been removedfrom the allocator's 'sharedSlots' by failed logical slots.This closes #13879.	2
[FLINK-19946][hbase] Add sink parallelism option for HBase connectorThis closes #13933	1
[FLINK-4237] [runtime] Cancel savepoints on declined snapshots	1
Added documentation for first-n operator.	1
Removed slf4j-simple dependency from streaming component.	4
[FLINK-8073][kafka-tests] Disable timeout in testsTo get stacktraces in case of deadlock do not timeout tests programatically.This closes #5718.	3
Reworked input channels with respect to returning events and buffers. Simplified logic and fixed bugs and reduced number of status polls.Reworked record readers to properly support unions and events.	1
[FLINK-15231][table-runtime-blink] Remove useless methods in AbstractHeapVectorThis closes #10562	1
[FLINK-4775] [metrics] Simplify MetricStore access	2
[FLINK-28402][runtime] Create FailureHandlingResultSnapshot with the truly failed executionThis closes #20221.	0
[FLINK-15445][jdbc] Support new type system and check unsupported data types for JDBC table sourceThis bridges the JDBC table source to new type system to support precisions of types. In the meanwhile, this also adds a validation to check unsupported types and precisions by various dialects to avoid surprising results.This closes #10745	1
[tachyon] Minor fix in codestyle and warnings	2
[FLINK-24049][python] Handle properly for field types need conversion in TupleTypeInfoThis closes #17046.	5
[FLINK-1279] [streaming] Forward partitioning changed to use round-robin method	1
[FLINK-22894][table-runtime] Fix rankEnd validation of WindowRank to support top1This closes #16088	1
[FLINK-16641][network] (Part#5) Send empty buffers to the downstream tasks to release the allocated credits if the exclusive credit is 0Currently,the empty buffers are not sent to the downstream tasks. This patch changes the logic and sends empty buffers to the downstream tasks when the exclusive credit is 0 release the allocated floating credits. If we do not do that, the downstream task may allocate more credits than needed which may lead to dead lock without exclusive credits.	2
[FLINK-17416][e2e][k8s][hotfix] Disable failing test	3
[FLINK-12993][runtime] Refactor forceReleaseOnConsumption to JM conceptThe forceReleaseOnConsumption option/flag is now only evaluated on the JobMaster side and transparent to task managers,	1
[FLINK-16339][metrics][datadog] Log configuration	5
[FLINK-23789][rocksdb] Remove unnecessary setTotalOrderForSeek for Rocks iteratorThis fix #16834.	0
[FLINK-11843] Add DispatcherLeaderProcessImpl	1
[FLINK-8849][docs] Fix links to chaining docsThis closes #5630.	2
[FLINK-12683] Provide task manager location information for checkpoint coordinator specific log messages	2
[hotfix] Fix typos in ExecutionGraph	2
[FLINK-4074] Make metric reporters less blockingThis closes #2105	1
[hotfix][table] Fix the comments of Operation	0
[FLINK-21752] Add a call to TypeSerializer#duplicate in migration testsWe should verify that a TypeSerializer even after migration can besafely duplicated. In order to do that we can duplicate a new serializerin the TypeSerializerUpgradeTestBase before we try to use fordeserialization.	1
[FLINK-9464] Remove duplicate maven-jar-plugin entry in flink-clients pom.xml	5
fixed: multiplexing deadlock	0
[FLINK-4160][yarn] Show input validation errorsThis closes #2207	0
[FLINK-11059][runtime] Add slot reconciliation between JM and TEWith this commit we introduce an AllocatedSlotReport which is periodically sent from theJM to the TE. This report is then used to reconcile the JM's and the TE's view on the stateof allocated slots.Furthermore, with this commit we drop slots which could not be freed viaTaskExecutorGateway#freeSlot and instead rely on the heartbeat reconciliation logic.This closes #7227.	2
[FLINK-13098][datastream] Add a new type UNDEFINED of shuffle mode	1
[FLINK-5821] [state backends] Rename the 'StateBackend' to 'StateBinder' and create root StateBackend interfaceStateBinder more correctly reflects what the interface does and clears up the name 'StateBackend'The 'StateBackend' interface is now the root of the State Backend hierarchy (previously that was 'AbstractStateBackend')This also extends a lot the JavaDocs of the core state classes, like StateBackend and StateObject	2
[FLINK-19801][checkpoint] Recover data with virtual channels.This commit adds virtual channel support to SequentialChannelStateReader. The reader now replicates data on input and output side according to the InflightDataRescalingDescriptor and adds VirtualChannelSelector events before buffers.	1
[FLINK-9981][state] Testing and performance tuning for RocksDB-based priority queueThis closes #6438.	5
[FLINK-22074][runtime][test] Harden FineGrainedSlotManagerTest#testRequirementCheckOnlyTriggeredOnce in case deploying on a slow machineThis closes #15751	3
[hotfix] [checkpoints] fix warnings and make minor improvements to CheckpointCoordinatorTest and SharedStateRegistry	1
[FLINK-12306][Runtime] Change the name of log into LOG	2
[FLINK-7131] [streaming] Include WordCountData in example jars	5
[FLINK-28060][kafka] Bump Kafka to 3.2.1	2
[hotfix][dist] Include flink-gs-fs-hadoop into flink-dist	2
[FLINK-17697][jdbc] Fix JdbcFullTest.testEnrichedClassCastException is failed in JDK11This closes #12158	0
[FLINK-9751] [filesystem] Add PersistentResumableWriter interface.	1
[hotfix][table-common] Remove COLLECTION family from MAP type root	4
[FLINK-28150][sql-gateway][hive] Introduce the hiveserver2 endpoint and factoryThis closes #20101	2
[runtime] Fix Netty watermark configurationThe watermarks of the NettyServer, which is responsible for data transfers, werenot configured correctly. Instead they were configured for the NettyClient, whichdoes need this fine-grained control as it does not transfer a lot of data.Previously, the default watermarks matched our desired watermarks of 64k (for ourdefault page size) by chance.	5
[FLINK-21089][runtime] Skip the execution of new sources if finished on restore	5
[FLINK-1102] [streaming] Projection operator added to DataStreamConflicts:flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.javaConflicts:flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/JobGraphBuilder.javaflink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/StreamConfig.javaflink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/ConnectedDataStream.javaflink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java	5
[FLINK-25669][runtime] Support register operator coordinators for newly initialized ExecutionJobVertexThis closes #18407.	5
[FLINK-8151] [table] Fix map type equalityThis closes #5070.	0
[streaming] Sink results added	1
[hotfix] [docs] Use markdown hyperlink instead of writing out the URL.	2
[streaming] StreamInvokable refactor and javadoc update + StreamRecordSerializer update	5
[hotfix][docs] Fix comment error in ZooKeeperSubmittedJobGraphStore	0
[FLINK-6747] [docs] Add documentation for QueryConfig.This closes #4256.	5
Revert "[FLINK-12143][e2e] Change end-to-end tests with file system to use plugins mechanism"This reverts commit 9e6ff81e22d6f5f04abb50ca1aea84fd2542bf9d.	4
[FLINK-17340][docs] Update docs which related to default planner changing.This closes #12429	4
[FLINK-1411] Fix standalone plan visualizer	0
[hotfix][docs] Stream joins don't support tuple position keys	1
+	5
[hotfix] Fix checkstyle violations in Execution	0
[hotfix][docs] Removes link formatting of anchorsThe anchors for the docker-compose.yml were formatted like actual links whichmight be confusing to readers. A click wouldn't have had any impact.	5
[FLINK-11901][build] Update NOTICE files with year 2019This closes #7975.	2
[FLINK-25532] Improve Documentation of Flink Docker-Compose (#18725)* [FLINK-25532] add Flink SQL Client example to docker-compose docs* [hotfix] restructure docker docs and remove docker swarm	2
[FLINK-7262][blob] remove the unused FallbackLibraryCacheManagerThis class was basically only used in unit tests and not really needed thereeither. The code path inside TaskManager was also dead.This closes #4403.	3
[FLINK-25609][table] Anonymous/inline tables don't require ObjectIdentifier anymore- Move TableLookupResult to the upper level, rename to ContextResolvedTable and support anonymous tables (tables without identifier)- Renamed CatalogQueryOperation and CatalogSinkModifyOperation to SourceQueryOperation and SinkModifyOperation and propagate ContextResolvedTable- Moved and renamed InlineCatalogTable to ExternalCatalogTable. Now it accepts the unresolved schema.- Add CatalogManager#getTableOrError- Methods in Table, TableEnvironment and StatementSet with anonymous tables now don't generate ObjectIdentifier anymore, while  methods using ObjectIdentifier will perform a lookup at the call site, rather than later during the planning.- QueryOperationConverter manually creates the RelNode for anonymous tables, skipping Calcite table resolution- Propagate ContextResolvedTable throughout the stack up to the ExecNodes.This closes #18349.	0
[FLINK-18419] Make user ClassLoader available in TableEnvironment	1
[hotfix][table-planner] Use scala isInstanceOf to check lookup function type instead of one-level parent class compartion in LookupJoinCodeGeneratorThis bug can be reproduced by AsyncLookupJoinITCase#testAsyncJoinTemporalTableWithLookupThresholdWithInsufficientRetry when caching is disabled in FLINK-28849This closes #20482	2
[FLINK-23168][table-common][table-api-java] GenericInMemoryCatalog shouldn't merge properties for alter DB operation	5
[FLINK-21939][python] Support batch mode in Python DataStream API for process operation and reduce operationThis closes #15362.	5
[streaming] test minor refactor	4
[FLINK-18533][coordination] Disable cancellation of unknown deploymentsTemporarily disabled due to stability issues.	0
[FLINK-16579][table] Upgrade Calcite version to 1.26 for Flink SQL (#13577)* Update Calcite version of pom and NOTICE fileAs a dependency, the Guava version upgrade to 29.0-jre, janino version upgrade to 3.0.11* Upgrade SQL parser Calcite version to 1.26.0* Fix the API change for plannerSqlParser, SqlValidator and SqlToRelConverter now have a Config bean for configurationSince CALCITE-2082, all the UDF needs a SqlOperandMetadata for operand type inference (before the change, it is SqlOperandTypeChecker)Since CALCITE-4215, Statistic default collations change from empty list to null* Replace the rule instance with new one since CALCITE-3923The core rules are changed to support new way of parameterization, and moved to CoreRules.* Since CALCITE-3877, the default over window bounds does not print out in the plan digest* Since CALCITE-3877, the default over window bounds does not print out in the plan digest* Since CALCITE-4220, the aggregate is promoted automatically after sql to rel conversion* The NDV algorithm has been tweaked since CALCITE-4132* All kinds of left plan changesThe predicate normalization now only happens during planning, that means it does not change in the digest anymoreThe HOP and SESSION window names changes to $HOP and $SESSION, both are deprecatedIS NOT DISTINCT FROM is expanded in the plan nowMany sort aggregate changes to hash aggregate which are more efficient	4
The Hadoop Compatibility has been refactored and extended to support the new Java API.	1
[FLIN-12663]Implement HiveTableSource to read Hive tablesThis PR created HiveTableSource to read Hive tables.This closes #8809.	1
[FLINK-11850][zk] Tolerate concurrent child deletions when deleting owned zNodeWhen calling ZooKeeperHaServices#closeAndCleanupAllData it can happen that a child of the ownedzNode of the ZooKeeperHaServices is being concurrently deleted (e.g. a LeaderElectionService hasbeen shut down). In order to tolerate concurrent deletions, we use now ZKPaths#deleteChildren.This closes #7928.	4
[FLINK-10379][docs,table] Fix TableFunction docsOld syntax of joining with Table Functions in Java Table API:```// Register the function.tableEnv.registerFunction("split", new Split("#"));myTable.join("split(a) as (word, length)");```is no longer supported and this the reason why the documentation needed to be updated. Currently supported syntax is:```orders.join(new Table(tEnv, "split(a)");```This closes #6744.	1
[hotfix][testutil] Return Optional in MetricListener getters	1
[FLINK-13266] [table] remove definedTimeAttributes file in blink plannerthose classes are already in table-common module	2
[hotfix][build] Remove duplicate dependency	4
[FLINK-9188] [kinesis] Generic mechanism to set ClientConfiguration properties.This closes #5889.	5
[FLINK-22063][table] Fix bug that some join conditions are lost when building Lookup Join ExecNodeThis closes #15533	0
[FLINK-14926][state-backend-rocksdb] (follow-up) Replace OptionsFactory for RocksDBOptionsFactoryOptionsFactory was breaking existing implementations by adding a method to the interface without default method.To solve this, we keep OptionsFactory but replace it in the RocksDB State Backend with the RocksDBOptionsFactory which hasthe evolved signature. The OptionsFactory is still accepted and wrapped into a RocksDBOptionsFactory, for compatibility.	5
[FLINK-27693][changelog] Support local recovery for non-materialized part	1
[FLINK-1820] Consistent behavior of numeric value parsers.	2
- reworked stub annotations- added read and write set computation to optimizer nodes- adapted example programs	1
[hotfix] [quickstarts] Fix indentation in Java Quickstart pom.xml	5
Improved robustness of forwarding barrier	1
[hotfix][rest] Introduce MinMaxAvgStatistics.valueOf helper method	0
[FLINK-25474][table-planner] Fix Idea Scala plugin can not compile RexExplainUtilThis closes #18226	0
[FLINK-4406] [cluster management] Implement job master registration at resource manager[FLINK-4406] [cluster management] Skip new connection if new resource manager's address and leader id are both not changing[FLINK-4406] [cluster management] Verify registration response with leader idThis closes #2565.	4
Fixed #38	0
[hotfix] Backwards compatible deserialization of RocksDB backend UUIDs	5
[FLINK-12539] [fs-connector] Make StreamingFileSink customizable (#8469)	2
[FLINK-9074] [e2e] Add e2e test for resuming jobs from retained checkpointsThis closes #5969.	3
[FLINK-23960][streaming] checkScheduledTimestamps changed according to semantic of the calculation processing time delay	4
[FLINK-15872][javadoc] Remove unnessary javadocs in InputFormat	2
[hotfix] Minor cleanup in FlinkKafkaConsumerBase and Test	3
[checkpointing][refactor] Extract ChannelStatePersisterMotivation: unit testing	3
[FLINK-25892][hadoop][test] add ArchUnit tests for the test code	3
[FLINK-1679] extend faq and programming guide to clarify parallelism	2
[hotfix] Fix failing JobManagerRunnerMockTest	3
[FLINK-14997][state-backends] Avoid unnecessary delete() calls in RocksDBState's mergeNamespaces implementationThis helps to improve the performance after the changed from FLINK-7700.This closes #10383	2
[FLINK-1201] [gelly] isWeakly connected corrections and test	3
JobManager/TaskManager stdout/stderr now goes to a file (ticket #58)	2
Fixes #242. Excludes nephele-examples, pact-examples, and pact-scala-examples from distribution lib folder	0
[hotfix][tests] Prevent HistoryServerTest to print to STDOUT	3
[FLINK-13887][core] Ensure ExConfig#defaultInputDependencyConstraint is non-null	5
[hotfix] [tests] Stabilize SystemProcessingTimeServiceTest	5
Fixed IT of sopremo server	0
[FLINK-5519] [build] scala-maven-plugin version all change to 3.2.2This closes #3132	4
[FLINK-22625][connectors] Waiting for all tasks running before triggering savepoint in FileSinkMigrationITCase	2
[FLINK-13632] In PojoSerializerUpgradeTest also check against Flink 1.9	2
[hotfix][docs] Fix typo in name for data_stream_api.md	5
[streaming] Added cloneable versions of MultiEvictionPolicy and MultiTriggerPolicy	1
[hotfix] [tests] Consolidate mocking of ResultPartition in one utility classThis also removes the use of Mockito from these classes.	1
[FLINK-5468] [savepoints] Improve error message for migrating semi async RocksDB snapshotThis closes #3119.	5
[FLINK-1201] [gelly] mapVertices allows changing the value type	4
[FLINK-6602] [table] Prevent TableSources with empty time attribute names.This closes #4135.	2
[FLINK-10052][tests] Extend test suite for handling of ZooKeeper connectionsAdded some more tests to ZooKeeperLeaderElectionConnectionHandlingTest and ZooKeeperLeaderRetrievalConnectionHandlingTest.	3
[FLINK-3025] [kafka consumer] Bump transitive ZkClient dependency to 0.7 for bugfixesThis closes #1365	0
[FLINK-13587][table-planner-blink] Fix some operator names are not set in blink plannerThis closes #9363	2
[FLINK-27219][sql-client] Print exception stack when get errorsThis closes #19796.	0
[hotfix][doc] update document since ParquetAvroWriters has been deprecated and replaced by AvroParquetWriters.	2
[FLINK-2135] Fix faulty cast to GroupReduceFunctionThis closes #769	1
[scripts] Exclude .git in source release	5
[FLINK-8320][docs] Clarify that only Java 8 is supported	1
[FLINK-23014][table-planner] Support streaming window Deduplicate in plannerThis closes #17632	1
[FLINK-20613][table-planner-blink] Support unidirectional ExternalSerializer	1
[FLINK-11163][tests] Use random port in RestClusterClientTest	3
Minor deprecation cleanup and comments.	4
[FLINK-27659][table-planner] Support to use jar that is registered by 'CREATE FUNCTION USING JAR' syntaxThis closes #20001	1
[FLINK-6859][table] remove delete useless times for improve StateCleaningCountTriggerThis closes #4085.	4
[hotfix] Add better error reporting in case of wrongly specified retry delay	1
[hotfix] Fix checkstyle violations in TaskManagerLocation	0
[streaming] iteration test fix	0
Update pom.xmlThe configured dependency version for pact-array-datamodel should be the same as the one of the enclosing project.	5
[FLINK-8607] [table] Add a basic embedded SQL CLI clientThis closes #5441.	1
Minor cleanup and fix warnings	2
[FLINK-11803][table-planner-blink] Improve FlinkTypeFactory for Blink (#7898)	2
[FLINK-14494][docs] Add ConfigOption type to the documentation generator	2
[hotfix][test] Cleans up unused local variable	1
[FLINK-4664] [gelly] Add translator to NullValueThis translator is appropriate for translating vertex and edge values toNullValue when the values are not used by an algorithm. Also, addedtests and moved translators into a subpackage.This closes #2536	4
[FLINK-28006][tests] Run prod architecture tests in 1 JVM	3
[FLINK-24603][e2e] Allow arbitrary jars to be added to the distributionRequired for adding a user-provided Scala library to lib.	1
[FLINK-11684][checkstyle] Bump checkstyle to 8.12	2
[FLINK-18218][python][e2e] Add PyFlink YARN per-job e2e testsThis closes #12554.	3
[FLINK-13632] Port KryoSerializer upgrade test to TypeSerializerUpgradeTestBase	3
[FLINK-4269] [webfrontend] Decrease log level in RuntimeMonitorHandlerThis closes #2307.	0
Fix checkstyle warning for Writable	2
[FLINK-10980][docs] Fix CEP documentation error.This closes #7158	0
[FLINK-12253][table-common] Introduce a logical type skeleton	2
[FLINK-10585][runtime] Use java.net.URL to build restBaseUrlIn URLs, IPv6 addresses have to be put inside "[" and "]", which is handled bythe URL class.	0
add shading for guava	1
[hotfix][table][docs] Fix typo	2
[FLINK-21112][python] Expose MapState to users	1
[webclient] Remove obsolete arrow images	4
[FLINK-21356][state/changelog] Implement checkpointing using changelogBoth materialized and non-materialized state are checkpointed.But materialization and recovery from changelog will be implemented in subsequent commits.For now,- changelog grows indefinitely (not truncated)- state changes are not applied on recovery, tests fail with incorrect results	0
[FLINK-10675][sql-client][table] Fixed depdency issues in cep & table/sql-client integrationSql-client depends table api which results that table-api is included inthe classloader of sql-client. As table api extends some interfaces fromcep library for MATCH_RECOGNIZE it has to be in the same classloader ascep library, therefore we need to add dependency on cep to sql-client aswell.As cep library may be in user classloader, we should use thatclassloader for checking presence of cep library.	1
[hotfix][core] Transformation#setResources validates resources paramsCurrently resources is only validated in DataStream. But table planner may directly set resources to Transformation via Transformation#setResources which is a public interface.We must validate the resources params in Transformation#setResources.	1
[FLINK-15686][sql-client] Use old type system in CollectStreamTableSink	5
[FLINK-15652][kubernetes] Change imagePullSecrets option to list ConfigOptionThis closes #11166 .	5
[FLINK-12237][hive]Support Hive table stats related operations in HiveCatalogThis pull request makes HiveCatalog support Hive table stats related operations.This closes #8636.	1
[FLINK-27119][tests] Use try-with-resources for JobMasters	1
[FLINK-3179] [dataSet][optimizer] Log a WARN message if combiner is not added in front of PartitionOperatorThis closes #1822This closes #1553	1
[FLINK-23402][streaming-java] Default to GlobalStreamExchangeMode.ALL_EDGES_BLOCKING in batch mode	4
[FLINK-11436] [avro] Manually Java-deserialize AvroSerializer for backwards compatibilityDuring the release of Flink 1.7, the value of serialVersionUID was uptick to 2L (was 1L before)And although the AvroSerializer (along with it's snapshot class) were migrated to the new serializationabstraction (hence free from Java serialization), there were composite serializers that were not migratedand were serialized with Java serialization.This commit manually Java-Deserializes the AvroSerializer to support backwards compatability.This closes #7580.	1
Close hanging GitHub PRsThis closes #1033This closes #1944This closes #1979This closes #2029This closes #2809This closes #3043This closes #3627	5
[hotfix][doc] Fix sql functions name typo	2
cloud manager working	1
[FLINK-15933][catalog][doc] Update content of how generic table schema is stored in hive via HiveCatalogcloses #11029	2
[FLINK-12552][table]: Combine HiveCatalog and GenericHiveMetastoreCatalogThis PR is to combine GenericHiveMetastoreCatalog and HiveCatalog into one single class.This closes #8480.	2
[FLINK-9857] Delay firing of processing-time timers by 1 ms	2
[FLINK-1827] [tests] Move test classes in test folders and fix scope of test dependencies.This closes #1915	3
Renamed sopremo relational to sopremo base	5
[FLINK-6537] [checkpoint] First set of fixes for (de)registration of shared state in incremental checkpoints	0
[FLINK-21996][refactor] Pull in-line serialization call into separate statement to improve Exception handling accuracy.	1
[FLINK-1882] Removed RemotedCollector classesThis closes #985	4
[FLINK-6488] [scripts] Deprecate 'start-local.sh' and 'stop-local.sh' scriptsThis closes #4074.	2
[FLINK-18854][docs-zh] Translate the 'API Migration Guides' page of 'Application Development' into ChineseThis closes #13172	1
[FLINK-6107] Enable Javadoc checks in streaming checkstyle	2
[FLINK-26941][cep] Support Pattern end with notFollowedBy in case time constraint is definedThis closes #19295.	5
[FLINK-5123] [docs] Add description how to build a properly shaded build with different Maven versions	1
[FLINK-13186][clients] Remove unused fields	1
[hotfix] Add resourceManagerGateway null check to SlotPoolImplSlotPoolImpl's resourceManagerGateway field can be null if JM hasnot connected to the ResourceManager yet. SlotPoolImpl's methodsshould respect this contract.	1
[FLINK-23845][docs] Improve PushGatewayReporter config:deleteOnShutdown descriptionThis closes #16823.	5
- replaced compiler hint "Selectivity" by "AvgRecordsEmittedPerStubCall"- adapted size estimations to new compiler hint- adapted JSONGenerator to new compiler hint- Adapted examples to new compiler hint	1
[hotfix][task,runtime] Make MailboxProcessor implement Closeable	1
[FLINK-28992][table-planner] Fix: Change Ndv takes the max value instead of sum of all partitions when getting partition table column statsThis closes #20595	1
[hotfix][python][tests] Refactor the test cases in DataStreamTests to reduce the number of itcases	5
[FLINK-23297] Upgrade Protobuf to 3.17.3	2
[FLINK-24459][table] Performance improvement of file sink (#17416)	2
[hotfix] [javadoc] Fix typo in Javadoc of ManagedSnapshotContext#getCheckpointId()This closes #4913	1
[hotfix][metrics] Remove MetricRegistryConfiguration#createScopeConfigThis method duplicates ScopeFormats#fromConfig	5
[FLINK-15049][table-planner-blink] Fix compile error when hash join with timestamp type key (#10415)	0
[FLINK-27672][tests][table] Migrate flink-table-common to JUnit5	3
[hotfix][docs] Fix typehint in state documentationThis closes #5919.	2
Merge branch 'michael'Conflicts:sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/jsondatamodel/BigIntegerNode.javasopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/jsondatamodel/IntNode.java	5
[FLINK-1201] [gelly] count to use Graph's execution environment	1
[hotfix][table] Fix not-equals code generationThis was using != before, now uses !(a.equals(b))	1
[FLINK-1512] [scala api] Add CsvReader for reading into POJOs	1
[hotfix][test] Abstract TestingLongStateHandleHelper from ZooKeeperStateHandleStoreTest so that it could be reused	1
[FLINK-5869] [flip-1] Add basic abstraction for Failover Strategies to ExecutionGraph  - Rename 'ExecutionGraph.fail()' to 'ExecutionGraph.failGlobally()' to differentiate from fine grained failures/recovery  - Add base class for FailoverStrategy  - Add default implementation (restart all tasks)  - Add logic to load the failover strategy from the configuration	5
[FLINK-22911][python] Optimize the output format of RowTypeInfo and ExternalTypeInfoThis closes #16611.	5
[hotfix] Introduce TestingSlotPoolImpl to expose trigger timeout methodsIn order to not clutter the production implementation with testing methods, thiscommit introduces the TestingSlotPoolImpl and moves the trigger timeout methodsand the convenience constructor to this class.	4
[FLINK-16641][network] (Part#1) Introduce a new network message BacklogAnnouncement which can bring the upstream buffer backlog to the downstream	2
Added the webserver to the job manager.	1
[FLINK-14029] Update Mesos scheduling behavior to reject all expired offersThis closes #9652.	5
[hotfix] Enable killing mesos job manager in e2e clean up function	1
Added java code generator for sopremo trees that have been parsed with SimpleParser (should ease test development)	3
[FLINK-11935][table-planner] Fix cast timestamp/date to string to avoid Gregorian cutover	5
[FLINK-8674][runtime] Improve performance of flushAlways in StreamRecordWriterReduce the number of data notifications in case of flushAlways = true. Instead of notifying all ofthe channels/subpartitions, notify only the one that has just been written to.This closes #5526.	5
[FLINK-6364] [checkpoint] Additional minor review changes	4
[hotfix] [core] Improve FlinkFuture synchronous actions by avoiding creation of ExecutionContext	1
[hotfix][test] Add tests for releasing memory by BufferPoolOwner with different ResultPartitionType	3
[FLINK-11656][hadoop] Remove redundant test path in WordCountMapredITCase	2
[FLINK-26616][tests] Remove deadlines from CommonTestUtils	3
[FLINK-8350][config] replace "taskmanager.tmp.dirs" with "io.tmp.dirs"This replaces "taskmanager.tmp.dirs" with the new "io.tmp.dirs"configuration parameter to define temporary directories in (cluster)environments for all components, i.e. JobManager, JobMaster, Dispatcher,...Please note that this (kind of internal and thus undocumented) configurationparameter is set by our YARN and Mesos integrations.[FLINK-8350][cluster] initialise "io.tmp.dirs" for JobManager as wellIn a YARN and Mesos environment, this initialises Flink's temporary directoryconfiguration with YARN/Mesos application-specific paths for JobManager,JobMaster, Dispatcher, etc. components as well (Mesos integration actually stilllacks a proper integration of this, but once done, the new hooks fall in placejust fine).	1
[FLINK-24631][k8s] Use a stable subset of labels to select jobManager and taskManager podsThis closes #17685.	1
[FLINK-16417][e2e] Slightly increase offheap memory for ConnectedComponents testThe calculated off-heap size was 130 MB.The test passes on JDK 11 when setting it to 270 MB.The test fails on JDK 11 when setting it to 135 MB.The test passes on JDK 11 when setting it to 160 MB.This commit sets the memory to 160MB.	1
[FLINK-21816][table-planner-blink] Support StreamExecMatch json serialization/deserializationThis closes #15272	5
[FLINK-18905][hotfix][task] Move output and collector helper classes out of OperatorChain	1
[FLINK-3034] Redis Sink ConnectorThis closes #1813	2
[FLINK-6379] Remove internal methods from MesosResourceManagerGatewaySome internal methods which are required for the interplay between the TaskMonitor,LaunchCoordinator and the MesosResourceManager were exposed as RPC methods. In orderto keep the RPC interface as lean as possible, these methods have been removed.Fix checkstyle violations	4
Moved record API example jobs to stratosphere-tests	3
[hotfix] [table-api-java] correct the logic of `truncateString` method in PrintUtils	3
[FLINK-27317][build] Don't fork build for attaching sources	2
[yarn] set the same user for the services running in the YARN containers.Fix #584Fix #568	0
- Added new InputFormats that read from stdout of external processes- Moved input and output formats into separate packages (many files affected by this)- Renamed GenericDataSource and GenericDataSink into GenericDataSourceContract and GenericDataSinkContract- Fixed bug in Compiler to handle GenericDataSourceContracts and GenericDataSinkContracts- Fixed bug in FixedLengthFileInputFormat	2
added ExEnv.registerCachedFile()	2
[hotfix][kafka] Undo DataGenerators changes (use inline kafka producer again	1
[FLINK-16795][e2e] Increase e2e execution timeout +20m	1
[FLINK-19184][python] Introduce BatchExecPythonAggregateRule and BatchExecPythonGroupAggregateThis closes #13388	2
[FLINK-25414][metrics] Split backPressuredTime metric into soft and hardThis will allow user to differentiate between hard (blocked) back pressuretime and soft, and also it will allow us to present the maxSoft/HardBlockedTimesseparately for sort and hard case.	5
[flink-yarn-tests] Add check for exceptions in the flink logs.	2
[FLINK-13216][FLINK-13153][table-planner-blink] Fix Max_Retract and Min_Retract may produce incorrect resultThe reason is we didn't set null to acc.max/min which may have an old value when we need to get a new max/min from an empty MapView.And the old value will be output to downstream instead of a null value. This influences the final result.This causes many unstable cases, including:- AggregateITCase.testNestedGroupByAgg- SplitAggregateITCase.testMinMaxWithRetractionThis closes #9120	3
[FLINK-10508] Remove JobManagerITCaseThe session timeout test cases are obsolete with the Flip-6 code base.The savepoint failure message handling should be covered by tests inSavepointITCase.This closes #6834.	3
Adopted first set of task classes to new data model and mutable objects.	5
[FLINK-17719][task][checkpointing] Provide ChannelStateReader#hasStates for hints of reading channel statesCurrently we rely on whether unaligned checkpoint is enabled to determine whether to read recovered states during task startup,then it will block the requirements of recovery from previous unaligned states even though the current mode is aligned. We canmake `ChannelStateReader` provide the hint whether there are any channel states to be read during startup, then we will neverlose any chances to recover from them.	1
[FLINK-8661] Replace Collections.EMPTY_MAP with Collections.emptyMap()This closes #5864.	2
Added connectNetwork() methodAdjusted PageRank Implementation to use network channel for broadcast.	1
[FLINK-28417][table] Add interfaces for LookupCache and default implementation (#20196)	1
[FLINK-8260] [kafka] Fix usage of deprecated instantiation methods in FlinkKafkaProducer docs	2
[hotfix] Add directory flink-python/apache-flink-*.dev0 to gitignore	2
[FLINK-2962] Cluster startup script refers to unused variable	1
[FLINK-18921][python][docs] Add a SQL link in PyFlink Table API documentationThis closes #13262.	2
[FLINK-12987][metrics] fix DescriptiveStatisticsHistogram#getCount() not returning the number of elements seenDescriptiveStatisticsHistogram#getCount() only returned the number of currentlystored elements, not the total number seen.Also add a unit test for verifying any Histogram implementation (based onthe previous test from DropwizardFlinkHistogramWrapperTest) and run this withDescriptiveStatisticsHistogram.	1
[FLINK-20145][task] Ignore double notification in StreamTwoInputProcessor.Currently, when a priority event is enqueued as the first event, it triggers both a priority and availability notification through respective futures.If the priority event is processed through CheckpointedInputGate#processPriorityEvent, the InputProcessor pulls on an empty gate.While we could try to avoid the double notification, there are a few race condition that may lead to no notifications and blocked application.It's much easier to simply allow double notification and ignore it when they are not useful.Note that StreamOneInputProcessor and StreamMultipleInputProcessor are already doing it.	1
[FLINK-22893][zookeeper] Replace NodeCache with TreeCache	2
[FLINK-24993][core] Harden ExceptionUtils against changes to exceptions	4
[FLINK-27208][docs] Add scalafmt docs	2
[hotfix][docs] Fix typo	2
[FLINK-7055][blob] refactor getURL() to the more generic getFile()The fact that we always returned URL objects is a relic of the BlobServer's onlyuse for URLClassLoader. Since we'd like to extend its use, returning Fileobjects instead is more generic.This closes #4236.	2
refactored copyNormalizedKey & getMaxNormalizedKeyLen -> JsonNode implements a standard behavior which can be overriden if another behavior is necessary	5
[FLINK-22471][connector-kafka] Use proper Description for connector options	1
[FLINK-13314][table-planner-blink] Correct resultType of some PlannerExpression when operands contains DecimalTypeInfo or BigDecimalTypeInfo in Blink plannerThis also fix some minor bugs:- Fix minor bug in RexNodeConverter when convert between and not between to RexNode.- Fix minor bug in PlannerExpressionConverter when convert DataType to TypeInformation.This closes #9152	5
[FLINK-16049] Remove outdated "Best Practices" section from Application Development Section	5
[FLINK-28821][table-planner] Adjust join cost for dpp query pattern which could help more plans use dppThis closes #20462	1
[FLINK-16264][table] Fix ConnectTableDescriptor loose time attribute bug (#11204)In CatalogTableImpl.fromProperties, we can not remove all schema.* for TableSchema, because Schema (it is a descriptor) is not same to TableSchema. Schema contains time attribute, so we need keep them in properties.	1
[FLINK-1440] [docs] Fix missing plan visualizer image.	0
[hotfix] Remove unused TaskExecutorLocalStateStoresManagerTest.TOTAL_FLINK_MEMORY_MB	3
Implemented coordinated checkpoint decision	5
[tests] Hardens TaskManagerRegistrationTest.testTaskManagerResumesConnectAfterJobManagerFailure test case by checking testing actor's complete mailbox for a Terminated message	3
[runtime] Cleanup channel events. Add comments and move some classes to test scope.	3
[FLINK-11173][table] Fix the exception message of proctime attribute validation in TableSourceUtil#validateTableSourceThis closes #7374.	5
Run tests in parallelThis uses the forkCount parameter of surefire/failsafe. This alsochanges the JVM memory size for the testing VMs so that more can fitinto memory.For this to work, NepheleMiniCluster must recognize when it is run ina parallel testing environment and change ports accordingly. AlsoAbstractTestBase and TaskTestBase must prefix temp files with the classname to prevent name clashes.This closes #96	2
[FLINK-11764] Update BucketingSinkMigrationTest for Flink 1.8	2
[FLINK-15971][python] Adjust the default value of bundle size and bundle time (#11881)	2
[FLINK-27907][runtime] Introduce HsSubpartitionFileReader and HsResultPartitionReadScheduler.	2
[hotfix][runtime] Remove useless local variable in CompletedCheckpointStoreTest3testAddCheckpointMoreThanMaxRetainedThis closes #12066	3
[FLINK-7299][AVRO] Write GenericRecord using AvroOutputFormat	1
[hotfix] Remove unused ProcessingTimeService from Evictor	1
[FLINK-19410][rest] API stability covers enum value changes	4
[FLINK-27651][table] Support CREATE FUNCTION USING JAR syntaxThis closes #19742	1
Fix for memory views	0
[hotfix][metrics][docs] Update documentation	2
[FLINK-8713][tests] Ensure outdated mod time is smaller than minimumThis closes #5534.	5
[hotfix][runtime] Refactor configuration preparations for resource managers.	5
[FLINK-15561] Unify Kerberos credentials checkingBefore, we had duplicate code in HadoopModule and YarnClusterDescriptor,now we use the same code for both. That code is refactored to a util.	4
[hotfix][docs] Enforce reading files in UTF-8 in include_without_header.rbAll our documentation pages are encoded in UTF-8. However if notspecified, File.read will use the system default encoding. Thereforemaking it impossible to build docs in a system with a different defaultencoding. It is the case e.g. when building docs through the dockercontainer.	2
[FLINK-20404][zookeeper] Disable JMX log4j integration	2
[FLINK-9464] Remove version and scope from flink-test-utils-junit dependency in multiple modulesflink-connectors, flink-orc, flink-connector-wikiedits, flink-dist, flink-metrics-*, flink-queryable-state-*This closes #6093.	2
[FLINK-10411] Move System.exit out of ClusterEntrypointMove the logic of when to exit the JVM process out of the ClusterEntrypointso that the caller is now responsible to make this call. This improves theusage of the ClusterEntrypoint for testing purposes.	3
[FLINK-15171] [serialization] fix performance regression caused by too many buffer allocations on string serialization	1
Hash Join Test V0.1	3
[FLINK-14312][runtime] Introduce DefaultLogicalTopologyIt is an adapter of JobGraph to LogicalTopology.With it we can get logical pipelined regions of the underlying JobGraph.This closes #10006.	2
[FLINK-10193][runtime] Add @RpcTimeout to JobMasterGateway.triggerSavepoint.This closes #6601.	1
Renames TPCH Query 9 to be not match the integration name pattern, because it is broken.	1
[FLINK-10137][YARN] Log completed containers.	2
[FLINK-11504][runtime] Remove legacy JobManagerConnectionTest	3
[FLINK-13946] Make the ClusterClient autocloseable	1
[FLINK-22689][doc] Fix Row-Based Operations Example in Table API documentation (#16036)	2
[FLINK-4998][yarn] fail if too many task slots are configuredThis fails the deployment of the Yarn application if the number of taskslots are configured to be larger than the maximum virtual cores of theYarn cluster.This closes #2741.	5
added PowerMock,Mockito in pom.xml, new Tests	3
[FLINK-25905][build] Add Experimental to japicmp exclude list	1
[hotfix][checkstyle] Remove suppression for runtime/network.serialization	1
[FLINK-27779][connectors/cassandra] Remove `flink-table-planner` in favor of `flink-table-test-utils`	3
[hotfix][network-tests] Simplify TestPooledBufferProvider	5
Remove Record API dependencies from CC iteration tests	3
[hotfix][tests] Make ClientTest extend TestLogger	3
Added interfaces for new memory manager views.Removed defunct mem-manager service provider.	1
[hotfix] [tests] Increase stability of SavepointITCase	1
[FLINK-13326] Add closeInterruptibly()	1
[FLINK-13632] Port JavaSerializer upgrade test to TypeSerializerUpgradeTestBase	3
[FLINK-15854][hive] Use the new type inference for Hive UDTF (#18958)	5
[FLINK-7661][network] Add credit field in PartitionRequest messageThis closes #4698.	1
[FLINK-22914][connector/kafka] Use FLIP-27 KafkaSource in table connectorThis closes #16809	1
[FLINK-16699][k8s] Support accessing secured services via K8s secretsThis closes #12899.	1
Added missing types to list of RPC types	1
[FLINK-9679] Add Schema Registry version as parameter + update version	5
[streaming] Proper hash join added for window joins	1
[FLINK-2098] Ensure checkpoints and element emission are in orderBefore, it could happen that a streaming source would keep emittingelements while a checkpoint is being performed. This can lead toinconsistencies in the checkpoints with other operators.This also adds a test that checks whether only one checkpoint isexecuted at a time and the serial behaviour of checkpointing andemission.This changes the SourceFunction interface to have run()/cancel() methodswhere the run() method takes a lock object on which it needs tosynchronize updates to state and emission of elements.	5
[FLINK-20616][python] Support row-based operation to accept user-defined function directlyThis closes #14410.	1
[FLINK-15109][runtime] Null out restoredTimersSnapshot when it is no longer neededInternalTimerServiceImpl references restored state after use, taking up resources unnecessarily.This PR just nullifies its restoredTimersSnapshot field in startTimerService().	1
[cleanup] Remove spark repl detection code from closure cleanerThis closes #1549.	4
[FLINK-15495][sql-cli] Set default planner to Blink planner for SQL Client (#10787)	2
[hotfix][test] Deduplicate code in LargeRecordsTest and SpanningRecordSerializationTestDedupilcated code was effectively identical, but implemented in a slightly different way.	3
[FLINK-18195] Remove references to Expressions.interval(Duration) from (java)docsThis closes #12535	2
[FLINK-12006][tests] Wait for Curator background operation finishedIn order to wait for the NodeCache's background operation which generates theparent zNodes for the ZooKeeperLeaderRetrievalService, we wait for a new leaderin the ZooKeeperHaServicesTest.This closes #8046.	3
[FLINK-18552][tests] Update migration tests of BucketingSinkMigrationTest to cover migration till release-1.11	3
[FLINK-2820] Configuration not passed to JobGraphGeneratorThis was previously reported as FLINK-2625 (commit 8a84937215ea575fa94a00d11c2517902d252756).The Client class was concurrently refactored with FLINK-2097 (commit 71bf2f570861daae53b24bfcf1d06aedb85311b9).This closes #1278	5
[FLINK-11311][datastream] Fix StreamSource implements StreamOperator interface multiple timesThis closes #7492.	1
[FLINK-25244][hbase] Enable Java 11 tests for HBase 2.2	3
[FLINK-1502] [core] Temporarily set no default metrics reporter (instead of JMX)	1
Post merge cleanup of Union operator.	1
Rebuild web-dashboard	5
Added extra profile entries in the pom.xml files in order to fix the hadoop_v1 compilation problems.	0
[FLINK-2499] [scripts] Warning message for hosts starting multiple daemonsCloses #1071	2
Unit tests to check for valid parameters of cogroup	2
Renamed class to reflect abstract character	5
[FLINK-18797][docs] Update deprecated forms of keyBy in docsThis closes #13135	2
[FLINK-20153] Add documentation for BATCH execution modeThis adds documentation for the new `BATCH` execution mode. We alsoexplain `STREAMING` execution mode because there is no central page thatexplains the basic behavior, so far.	1
[FLINK-11843] Introduce DispatcherRunnerLeaderElectionLifecycleManagerThe DispatcherRunnerLeaderElectionLifecycleManager is responsible for stopping theLeaderElectionService.	1
[FLINK-25656][Kinesis] Upgrade software.amazon.glue:schema-registry-common and software.amazon.glue:schema-registry-serde dependency from 1.1.5 to 1.1.8	1
[FLINK-7269] Refactor passing of dynamic propertiesThis closes #4415.	4
[hotfix][network] fix codestyle issues in ResultPartitionFactory	0
Added maven-profiles to enable switching between yarn and non-yarn hadoop	0
[FLINK-1084] Fix broken links in "How to add an operator"	1
[hotfix] Fix checkstyle violations in CheckpointCoordinator	0
CsvInputFormat can optionally skip an initial header line.	5
[streaming] Refactored BatchReduceTest	3
[FLINK-4256] [distributed runtime] Clean up serializability of ExecutionGraph	4
[FLINK-7675] [metrics] LatestCompletedCheckpointExternalPathGauge should check if external path is existThis closes #4709.	3
[FLINK-26519][table-planner] Remove FlinkTypeFactory singletonThe FlinkTypeFactory should not be a singleton as it caches typeinstances that could lead to classloading issues. Also, whenintroducing user-defined types a singleton could cause issues.This closes #19113.	0
Increased robustness of envelope routing in presence of execution failures	0
[FLINK-27794][connectors/jdbc] Fix the wrong primary key for MysqlCatalog when there are tables with same name in different databasesThis closes ##20025.	5
[FLINK-19123] Move PerJobMiniClusterJobClient to runtime.minicluster package	5
Changed default number of task slots per machine to one.Add logging for task slots.	2
Fixed sopremo client IT	0
[FLINK-5849] [kafka] Move FlinkKafkaConsumer start offset determination to open()This closes #3378.	1
[hotfix][docs] Remove general operator task/operator metrics in Kafka Sink docs.	2
[FLINK-13263] [python] Supports explain DAG plan in flink-pythonThis closes #9114	2
[FLINK-20130][core] Add ZStandard to FileInputFormat	2
[streaming] Decomposing project mv	5
[FLINK-18552][tests] Update migration tests of FlinkKinesisConsumerMigrationTest to cover migration from 1.11	3
Added normalized key generation to PactString.	1
[FLINK-17645][runtime] Reset SafetyNetCloseableRegistry#REAPER_THREAD if it fails to start	0
[FLINK-6635] [test] Fix ClientConnectionTestThe ClientConnectionTest passed even though it was failing the test because wewere expecting an exception and checking a special word to contained in theexception's message. Unfortunately, we generated an AssertionError with the sameword if the actual logic we wanted to test failed. That cause the test to pass.	4
[FLINK-20152] Document supported execution.target valuesThis closes #14070.	1
[FLINK-1520] [gelly] Read edges and vertices from CSV filesThis squashes the following commit:[FLINK-1520] [gelly]Changed the methods for specifying types.Created a new file for tests. Made appropriate changes in gelly_guide.md	4
[hotfix][doc] Change link format in internal dir	2
[FLINK-20705][table-planner-blink] Introduce StreamPhysicalValues, and make StreamExecValues only extended from ExecNodeThis closes #14454	1
[FLINK-16660] Introduce the ApplicationDispatcherBootstrapThis adds the functionality needed for dispatcher to be ableto execute applications in "Application Mode", as describedin FLIP-85. The idea is that the bootstrap is responsible for:1) launching the recovered job graphs --when recovering from a failure2) launch the application's main()3) submit the non-executing job graphs of the application for execution   or re-attach a job client to the already running recovered ones4) terminate the cluster when the application is terminated   either normally or abruptly.	1
[FLINK-19026][network] Using PrioritizedDeque on input side.PriorityDeque is also used in InputGates. BufferOrEvent and InputWithData are enriched with a flag indicating that there are more priority events.(Note relaying the DataType as on the output side would require lock acquisitions which are not warranted at this point in time)	1
[FLINK-13197][table-planner-blink] Fix Hive view row type mismatch when expanding in planner* Add `FlinkRelOptUtils#createCastRel` to add cast rel based on specific conditions;* Remove the type mismatch check in `FlinkPlannerImpl` for the planner.This closes #10595	2
[docs] Fixes Java broadcast variable example	0
[FLINK-22706][legal] Update NOTICE regarding docs/ contents	2
[hotfix] Remove unused parameters from Execution#allocateAndAssignSlotForExecutionDue to the introduction of the SlotProviderStrategy which encapsulats the SlotProvider,the allowQueuedScheduling property and potentially the allocation timeout, some of theparameters of the allocateAndAssignSlotForExecution were no longer needed. This commitremoves these parameters.	2
[FLINK-20284][python] Change default DESTROY_DELAY_SECONDS to 0For PyFlink jobs, the underlying netty server releases resources asynchronously in a separate thread when job finished.As PyFlink classes runs in user classloader which will be closed after job finished. ClassNotFoundError may be thrown andappear in the log. It doesn't affect the correctness, however, is very confusing for users.This commit changes the DESTROY_DELAY_SECONDS to 0 (original is 1) to improve this situation.This closes #14217.	1
[hotfix] [tests] Remove verbose logging in SavepointITCase	2
[FLINK-24347][connectors/kafka] Keep idle source readers if parallelism is higher than partitions in KafkaSourceBefore this commit the enumerator signalled the leftover source readers without a partition to finish.This caused that checkpointing was not possible anymore because it is only supported if all tasks arerunning or FLIP-147 is enabled.This closes #17327	0
[FLINK-15458][conf][docs] Introduce SuffixOption annotationThey key of a SuffixOption is only a suffix, with the prefix being determined at runtime.In the case of reporters the prefix is "metrics.reporter." with a user-provided infix.For these options it doesn't make sense to check whether they are clashing with other options;in practive this is entirely dependent on the prefix.	0
[FLINK-3165] [py] Windows OS supportThis closes #1454	1
Fixed WebLogAnalysis example to work with the new datamodel	5
[FLINK-21808][table-planner-blink] Add getter for RelOptCluster in PlannerContextThis closes #15253	1
[hotfix][docs] Clarify semantic of tolerable checkpoint failure number	0
[FLINK-16745][yarn] Start Yarn JM with FLIP-116 JVM memory args	2
[FLINK-3819] Replace Guava Preconditions usage in flink-gelly-scalaThis closes #1937	2
[FLINK-6660] [docs] Expand the connectors overview pageThis closes #3964.	1
[hotfix] [docs] Add notice about buggy dateFormat() function	1
[FLINK-8687] [sql-client] Make MaterializedCollectStreamResult#retrievePage to have resultLockThis closes #5647.	1
[FLINK-22350][python][docs] Add documentation for user-defined window in Python DataStream APIThis closes #15702.	5
[FLINK-14745] Wire the configuration to the ClientUtils.executeProgram	5
[FLINK-13284][table-planner-blink] Correct some builtin functions' return type inference in Blink plannerThis closes #9146	2
Modified transfer envelope serializer/deserializer to handle with non-existing event lists properly	0
[FLINK-13095][state-processor-api] Introduce window bootstrap writer for writing window operator stateThis closes #13510	1
[FLINK-20327][doc] The Hive's read/write page should redirect to SQL Fileystem connectorThis closes #14231	2
[FLINK-5402] [tests] Increase JUnit timeouts in AkkaRpcServiceTestThis closes #3430.	3
[hotfix] Ensure pristine release in tools/releasing/create_source_release.sh	1
[FLINK-19544][k8s] Implement CheckpointRecoveryFactory based on Kubernetes APIThis closes #13871.	2
[FLINK-21796][FLINK-17510] Disable tests that use KafkaResource	1
[FLINK-11650][tests] Remove TestingUtils#removeResourceManager	3
[FLINK-24550][rpc] Use ContextClassLoader for message deserialization	1
[FLINK-17232][k8s] Disable the implicit behavior to use the Service externalIP as the address of the Endpoint	1
[hotfix] [tests] Remove console poluting output in tests of flink-streaming-java	2
[streaming] connectWith and partitioning added to newapi	1
[FLINK-24441][source] Block SourceOperator when watermarks are out of alignment	1
[FLINK-19318] Remove mentions of timeWindow*() from documentationIt's deprecated and we want to encourage users to use the explicitwindow assigners.	1
[streaming] My stream refactored, JobGraphbuilder update	5
[FLINK-24027][filesystems] Remove excessive dependencies from NOTICE files	2
[FLINK-22054][dist] Suppress the verbose log in kubernetes informerThis closes #15501.	5
[FLINK-19803][connector files] Make PendingSplitCheckpoint and its Serializer generic to support sub-classes of FileSourceSplit	2
[FLINK-2950] [ml] [docs] Fix markdown rendering problem in SVM documentation  - Remove unnecessary indentation of table  - Fix wrong `strong` end tag  - Simplify lambda expression in map operationThis closes #1312	0
[FLINK-16626][runtime] Prevent REST handler from being closed more than once	0
[hotfix][config] Remove CheckpointConfig#enableUnalignedCheckpoints without parameters.CheckpointConfig#enableUnalignedCheckpoints(boolean) makes it explicit and also is more future-proof. When unaligned checkpoints become the default, this method will be mostly useless and we would need to add a #disableUnalignedCheckpoints() for consistency.	1
[FLINK-2089] Fix possible duplicate buffer releaseProblem: RecordWriter instances have stateful serializers, which include thebuffer that they currently work with. If the serializer state is not clearedcorrectly by the writers after writing a buffer to the respective resultpartition, it is possible that buffers are recycled multiple times in failurecases. This results in an IllegalStateException.Solution: After writing a buffer to a ResultPartition, the RecordWriter makessure that the serializer clears the reference to the respective buffer. Therecycling of the buffer is then the responsibility of the result partition.	1
[FLINK-4884] Eagerly Store MergingWindowSet in State in WindowOperator	1
[FLINK-15058][runtime] Log required config options if TaskManager memory configuration is invalidThis closes #10549.	5
[FLINK-13048][hive] support decimal in Flink's integration with Hive user defined functionsThis PR adds support for decimal in Flink's integration with Hive user defined functions.This closes #8941.	1
[hotfix] Remove Exception from ZooKeeperUtils#createLeaderRetrievalService	1
[FLINK-15741][docs][TTL] Fix TTL docs after enabling RocksDB compaction filter by default	5
[hotfix][runtime] Propagate execution graph execution state update result to JobMasterAlso only perform scheduler internal update if the execution graph executionstate update succeeded.	5
[FLINK-5038] [streaming runtime] Make sure Canceleables are canceled even them "cancelTask" throws an exception	1
Added more thorough test for primitive DataTypes (Fixed #205)	0
[FLINK-16662] Let PackagedProgramUtils create JobGraph under the user classloaderCurrently, in web submission JobGraph creation happens using the system classloader.This can lead to failures when, for example, the JobGraph creation uses code generationand needs the user code. This PR fixes it by doing the Jobgraph generation under theuser classloader.	1
[FLINK-20492][runtime] SourceOperator.dispose() should close the source reader.	1
[hotfix][tests] Harden DispatcherTest#testJobSubmissionErrorAfterJobRecoveryWait until the Dispatcher has been started before adding new JobGraphs to the SubmittedJobGraphStore	1
Revert "[FLINK-20033] Ensure that stopping a JobMaster will suspend the running job"This reverts commit 86a96c7909a1c1db35157ebec4164529c0290c7d.	5
[FLINK-2358] [dashboard] Adding comments to web dashboard files, add LICENSE file entries	2
[hotfix][cassandra][tests] Close sources/sinks in finally block	3
[FLINK-11334] Remove old deserialization logic from new EnumSerializer SnapshotThis code will never be used to deserialize from an oldSerializerConfigSnapshot.	5
[FLINK-17000][table] Ensure that every logical type can be represented as TypeInformationIntroduces a WrapperTypeInfo that can replace most (if not all) TypeInformation classesin the Blink planner. It is backed by logical types and uses internal serializers.This closes #12852.	1
[hotfix][doc] Fix typos.	2
Enhanced record linkage	2
[FLINK-27933][coordination] Fix/document RPC serializability violations- allow tests to opt-out of serializability force- never force serialization in AkkaRpcActorOversizedResponseMessageTest, because it affected the payload size- DispatcherTest no longer relies on retrieving the same object instance via RPC- ResourceManager#requestTaskExecutorThreadInfoGateway is just not serializable; see FLINK-27954- ClassLoaderITCase wrongly assumed that serialization occurs	0
[hotfix][docs] Removed duplicate wordThis closes #15756 .	4
[FLINK-12767][python] Support user defined connectors/formatThis closes #8719	1
[FLINK-13110][hive] add shim of SimpleGenericUDAFParameterInfo for Hive 1.2.1 and 2.3.4This PR adds shim of SimpleGenericUDAFParameterInfo for Hive 1.2.1 and 2.3.4.This closes #9001.	5
[hotfix][network] Remove unused method from NettyConfig class	5
Continued to improve robustness of cancelling logic	2
[FLINK-13562][table-planner-blink] Fix incorrect input type for local stream group aggregate in FlinkRelMdColumnIntervalThis closes #9346	2
[hotfix] Speed up MiniClusterITCase	5
[FLINK-1651] Fix test case at JobManagerStartupTest to avoid hang on certain usersJobManagerStartupTest should not assume user could not create /does-not-exist-no-sir dir.Sometimes, user that run tests could have write access to root directory so creating /does-not-exist-no-sir is possible,hence no exception thrown.Need to construct a Flink test directory under directory specified under "java.io.tmpdir" and change the permissionto not allow create new directory.Author: Henry Saputra <henry.saputra@gmail.com>Closes #460 from hsaputra/FLINK-1651_fix_jobmanager_fail_test and squashes the following commits:5d46716 [Henry Saputra] [FLINK-1651] Fix test case at JobManagerStartupTest should not assume user could not create /does-not-exist-no-sir dir.	1
[streaming] [scala] ITCases for streaming scala examples	5
Fixed several POM file-related warnings reported by the eclipse maven plugin	2
[FLINK-11136] [table] Fix the merge logic of DISTINCT aggregates.This closes #7284.	2
[FLINK-13417][build] Bundle Zookeeper 3.5 in opt	2
Adding comments to removeField and uncommenting its test method	3
[FLINK-24535][Formats] Upgrade Glue Schema Registry library to the latest version	3
[FLINK-15375][core] Add factory method for creating MemorySize from mebibytes.This closes #10785.	1
[FLINK-200137][python] Handle the timestamp of elements properly in Python DataStream APIThis closes #14068.	5
[FLINK-8421] [core] Allow InstantiationUtil.deserializeObject() to use FailureTolerantObjectInputStreamThis makes it possible to use the FailureTolerantObjectInputStream inInstantiationUtil.deserializeObject. This behaviour is controlled via aisFailureTolerant flag argument. All previous calls to the methodremains to have identical behaviour (the ClassloaderObjectInputStream).	0
[FLINK-16587][checkpointing] Provide the method of getting in-flight buffers from input gate.	1
Fixed Bug in OutputEmitter	0
[FLINK-24137][python] Fix the issue that tests planned to run in process mode was actually executed in loopback modeThis closes #17214.	1
The maven pom.xml file has been adapted to build a separate jar file coontaining the TPC-H query. The jar also contains the testdata, so that it can be executed without any further parameters.	2
[FLINK-27908] Extends onResultPartitionClosed to HsSpillingStrategy.	2
[FLINK-18820] Emit MAX_WATERMARK at the end in SourceOperatorStarting from this commit we emit a MAX_WATERMARK when all records areproduced in SourceOperator or a stop with savepoint was triggered.This closes #13073	1
Updated Contributors list.	5
[FLINK-13689] [Connectors/ElasticSearch] Fix thread leak in Elasticsearch connector when cluster is down	0
Revert "[hotfix][travis] Install jars in parallel"This reverts commit faabf0a2af3f238ebbde836c13482a64c81d4f85.Building scala projects in parallel interacts badly with incremental compilation	4
[hotfix] [docs] Fix typo in Table SQL docThis closes #7491.	2
[FLINK-24488][connectors/kafka] Fix KafkaRecordSerializationSchemaBuilder does not forward timestamp	0
[FLINK-17345][python][table] Support register and get Python UDF in Catalog (#11884)	2
[FLINK-3578] [streaming scala] Support RichFunctions for Scala WindowFunction and AllWindowFunctionThis also consolidates the various wrapper classes for fold() and reduce() functions.This closes #1765	1
[hotfix][rest] Remove redundant comments in TaskStateStats	3
Use constant sets for output estimation.	1
[FLINK-14723][table-planner-blink] Java(Scala)DataStreamQueryOperation should remember the registered object pathJava(Scala)DataStreamQueryOperation represent a registered DataStream from `registerDataStream` methodor a unregistered DataStream from `fromDataStream`. However the name under which the DataStreamis registered is missing when converting a Java(Scala)DataStreamQueryOperation to a RelNode.So add a `qualifiedName` member field in it to remember the original name.	1
[FLINK-6025] [core] Add Flink's own JavaSerializer for Kryo serializationThis commit adds a reimplemented JavaSerializer to be registered withKryo. This is due to a know issue with Kryo's JavaSerializer that mayuse the wrong classloader for deserialzation.Instead of registering Kryo's JavaSerializer for Throwables, it is nowchanged to register the reimplemented JavaSerializer. Users who bumpinto ClassNotFoundExceptions if they are using Kryo's JavaSerializer fortheir own types are also recommended to change to Flink's JavaSerializer.This closes #3517.	2
Modified profiling to work with new RPC service	1
[FLINK-1962] Add Gelly Scala APIThis closes #1004	1
[hotfix][legal] Sort gs-fs-hadoop NOTICE entries	0
[FLINK-8997] Added sliding window aggregation to datastream test job	3
[FLINK-28078][tests] Mitigate likelihood to run into test stability issues caused by CURATOR-645CURATOR-645 covers a bug in the LeaderLatch implementation that causes a race condition if a child node, participating in the leader election, is removed too fast. This results in a different code branch being executed which triggers a reset of the LeaderLatch instead of re-collecting the children to determine the next leader.The issue occurs because LeaderLatch#checkLeadership is not executed transactionally, i.e. retrieving the children and setting up the watcher for the predecessor is not done atomically. This leads to the race condition where a children (the previous leader's node) is removed before setting up the watcher which results in an invalid handling of the situation using reset.Adding some sleep here (simulating the leader actually doing something) will reduce the risk of falling into the race condition because it will give the concurrently running LeaderLatch instances more time to set up the watchers properly.This is only meant as a temporary solution until CURATOR-645 is resolved and the curator dependency on the Flink side is upgraded.	2
[FLINK-17474][parquet][hive] Parquet reader should be case insensitive for hiveThis closes #12241	2
[FLINK-14253][table-planner-blink] Add hash distribution and sort grouping only when dynamic partition insertThis closes #9796	1
[FLINK-5132] [core] Introduce the ResourceSpec to define required resource factors in APIThis closes #3114	1
[FLINK-3755] Ignore QueryableStateITCaseThis doesn't work yet because the state query machinery is not yetproperly aware of key-grouped state.	1
Add avro to stratosphere-dist, thus adding it to the lib/ folder	1
[docs] [streaming] Flume connector temporarily removed from docsAs the Flume source is not working currently.Closes #719	1
[FLINK-1992] [ml] Adds convergence criterion to Flink's SGD algorithmAdded test case for convergenceThis closes #692.	3
Worked on fault tolerance	1
[FLINK-17632][yarn] Always build the packaged program in the cluster for application mode	2
Enabled general chaining logic in AbstractPactTask. Chaining now works for - any Mapper - any combinerthat is attached to its predecessor via a forward connection and has the same degree of parallelism.	1
Implemented branch handling in UnionNode	5
[FLINK-2138] [streaming] Added custom partitioning to DataStream	5
Clean up bytes to memory pages computations. Fix number overflow errors for very large memory sizes.	0
[FLINK-26444][python] Align the WindowAssigners with the Java DataStream APIThis closes #18957.	5
[FLINK-16979][hive][build] Exclude jdk.tools	2
[FLINK-23818][python][docs] Add documentation about tgz files for python archivesThis closes #16993.	2
[FLINK-1968] [runtime] Clean up and improve the distributed cache. - Gives a proper exception when a non-cached file is accessed - Forwards I/O exceptions that happen during file transfer, rather than only returning null when transfer failed - Consistently keeps reference counts and copies only when needed - Properly removes all files when shutdown - Uses a shutdown hook to remove files when process is killed	2
[FLINK-12789][table] Fix java docs in UserDefinedAggregateFunction.This closes #8674	2
[FLINK-4033] Polish up Kinesis connector documentationIncludes:1. Scala examples for consumer and producer2. Add information about AWS Kinesis service usage3. Add Kinesis connecter to the fault tolerance guarantees table4. Minor typo fix in Kafka documentationThis closes #2181	2
[FLINK-15033] Remove unused RemoteStreamEnvironment.executeRemotely() (FLINK-11048)	2
- pact modules are builed with tests- removed println statements from test- improved pact examples (K-Means and WordCount)	1
[hotfix] Make ExecutionGraphTestUtils#createSimpleTestGraph return DefaultExecutionGraph	3
[FLINK-16033][table-api] Updated a test to use java expression dsl	1
[FLINK-1026] Fix PojoComparatorWas not using the user code class loader and therefore could not clonethe serializer that is internally used.Also modify KMeansForTest to make use of the PojoComparator to preventsuch bugs in the future.Also fix PackagedProgramEndToEndITCase, AvroExternalJarProgramITCase andthe external jar file class loader tests in flink-clients. The pom wasnot configured to remove the code that should only be in the externaljar from the test-classes directory.	3
[FLINK-1789][core][runtime] Allow adding of URLs to the usercode class loaderThis closes #593.	1
[FLINK-22312][yarn][test] Fix test instabilities due to expected heartbeat exceptions in logThis closes #16127	2
[FLINK-1201] [gelly] fromCollection(vertices, edges) implemented and tested	3
[FLINK-25650][docs] Added "Interplay with long-running record processing" limit in unaligned checkpoint documentation	2
[FLINK-2356] Add shutdown hook to CheckpointCoordinator to prevent resource leaksThis closes #1063.	1
Added comments to parsers and improved error handling.	0
Added custom equals to rules	1
[hotfix][build] Disable dependency convergence in flink-distPreviously mvn javadoc:aggregate goal was failing	0
Add ASM to LICENSE file[ci skip]	2
Extended compiler tests for K-Means.Fixed Cost formulas to properly distinguish between sorted, hashed, and arbitrary materialization.	0
[Flink-671] Python API additionsFixes several minor issuesRequesting non-available data throws ExceptionPython process shutodwn more reliableSynchronization done via TCP	5
fixup: address feedback (update javadoc)	2
[FLINK-26923] Do not trigger global failover if failed during commiting side-effects during stop-with-savepoint for adaptive scheduler	0
[hotfix] Fix typos and other small things	2
[FLINK-5795] [table] Improve UDF&UDTF to support constructor with parameterthis closes #3330	2
[FLINK-5609] [docs] Add last built time	1
Improved robustness of EC2 cloud manager	1
[FLINK-14795][tests] Rework TaskExecutorPartitionLifecycleTest	3
Finished customizable aggregator implementation.Added DanglingPageRank example.Reworked iterative tests.Reduced logging verbosity for iterations (temporarily commented out monitoring facility for time tracing)	2
[hotfix][network] Remove redundant word from comment	4
[FLINK-15629] Unify DefaultSchedulerBatchSchedulingTest with BatchSchedulingTestBaseThis closes #10883.	3
Added global enumeration	1
[FLINK-20619][runtime] Remove setup of InputDependencyConstraintExeucutorUtils.setBatchProperties(StreamExecutionEnvironment) does not setInputDependencyContraint anymore as it's not used anywhere.FLINK-20589	2
[FLINK-28851][sql-gateway][hive] Remove useless OperationType	1
[FLINK-13214][hive] Add jdk.tools exclusion for Java 9	1
[hotfix][network] Define AsyncDataInput interfaceThis is intendend as a common base for couple of classes in the following commits.	5
[FLINK-14119][table-planner-blink] Fix idle state is not cleaned for RetractableTopNFunctionThis closes #9741	1
[hotfix][yarn] Remove yarn app master env keys that are not used.	1
[hotfix] [table] Disable event-time OVER RANGE UNBOUNDED PRECEDING window.	0
[FLINK-7835][cep] Fix duplicate() in NFASerializer.	0
[FLINK-13490][jdbc] Fix return null in JDBCUtils::getFieldFromResultSet	5
[streaming] Refactor: added interfaces to abstract invokable classes	1
[FLINK-17942][table-planner-blink] Fix WindowOperator not call StateMapView.cleanup when destroying windowsThis closes #12358	4
[FLINK-4876] [webfrontend] Allow to bind to a specific interface- Adds config key 'jobmanager.web.address' to configure listening address- Default is Netty's default, picking anyLocalAddress()This closes #2680.	1
[FLINK-19919][runtime] Remove legacy scheduling in ExecutionGraph components	4
[FLINK-14623][table-api] Add computed column information into TableSchemaThis closes #10096	5
Fixed problem in MockEnvironment	0
[FLINK-3804][docs] Fix YARN and Kafka docs	2
[FLINK-23909][connector-jdbc][scala-shell][yarn] Remove redundant variables and improve some style format in coding.This closes #16931.	1
[hotfix] [clustermgnt] Set pending registration properly in TaskExecutorToResourceManagerConnection	1
[FLINK-2021] Rework examples to use ParameterToolThis closes #1581	2
Fixes in fault tolerance test	3
[FLINK-10095][state] Swap serialization order in TTL value: first timestamp then user valueThis closes #6510.	1
Added grouping operator of DAP algorithm.	1
[FLINK-15835][build][oss] Exclude hadoop-common	2
Fixed Bug that looses Memory Buffer in HashJoin.	0
[FLINK-21411][rocksdb] Update FRocksDB to bump bzip2 dependency versionThis closes #16568.	5
[FLINK-13279][table-sql-client] Fully qualify sink name in sql-clientThis closes #9229.	2
Merge pull request #874 from vasia/fix_min_aggr_tostringFixes toString return value of MinAggregationFunction	1
[FLINK-15868][es] Add tests for different formats	3
- added OutputSchemaProvider interface for input formats to specify the schema of records they produce- implemented OutputSchemaProvider interface for RecordInputFormat and extended unit test- extended PactOptimizer to derive output schema for optimizer nodes	3
[scala] Add Field Name Key Support for Scala Case ClassesThis does not change the runtime behavious. The key field names aremapped to tuple indices at pre-flight time.Also extends tests to cover the new feature.	1
[FLINK-8703][tests] Port NotSoMiniClusterIterations to MiniClusterResourceThis closes #5667.	5
[FLINK-13545] [table-planner-blink] JoinToMultiJoinRule should not match SEMI/ANTI LogicalJoinThis closes #9329	2
[hotfix][benchmarks] Remove unused field from benchmark environment	1
[FLINK-1525] Implement a tool for parsing input parameters and provide facilities to use them in the system.This closes #664	5
[FLINK-4410] [runtime-web] Add new layout for checkpoint stats	1
Removed an unused test.	3
[FLINK-11780] Change version scheme of Hadoop-based modules to conform to SNAPSHOT guidelinesThis also adadpts update_branch_version.sh to correctly update versionsthat have a prefix.	0
[hotfix][tests] Replaced some manual TestingFatalErrorHandler usages with TestingFatalErrorHandlerResource	3
[FLINK-1325] [streaming] Added clousure cleaning to streamingThis closes #273	4
Minor cleanup.	4
[hotfix] [tests] Small simplification in 'CheckedThread'.	3
[FLINK-8780] [docs] Add Broadcast State documentation.This closes #5922.	2
[FLINK-26460][table-planner] Fix Unsupported type when convertTypeToSpec: MAPThis closes #18967	1
[hotfix][docs] clean up schema evolution page	4
Add CONTRIBUTING.md file with pointers to our guidesCloses #778	2
[FLINK-19223][connectors] Simplify Availability Future Model in Base ConnectorThis implements a model closer to the AvailabilityListener and AvailabilityHelper in the flink-runtime.This closes #13385	2
[FLINK-19850] Add e2e tests for the new FileSink in streaming mode	2
[docs] Clarify restart strategy defaults set by checkpointing- Added info about checkpointing changing the default restartstrategy in places where it was missing: the config page and thesection about the fixed-delay strategy- Replaced no-restart with "no restart" so people don't think we're referring to a config value- Replaced invalid <it> html tag with <code>- Fixed bad link to restart strategies page from state.md	2
[FLINK-25569][core] Add decomposed Sink V2 interface.The new interface separates concerns and will make future refactorings and extensions easier. The user immediately which methods needs to be implemented.	1
[tools] add more defaults to .editorconfigThe tab default also applied to Scala files which could lead to editingproblems in IntelliJ.	2
[FLINK-3849] [table] Add FilterableTableSource interface and rules for pushing it (2)This closes #3520.fix compilation failurefix compilation failure again.1. Deep copy TableSource when we copy TableSourceScan2. unify push project into scan rule for both batch and streamaddress comments.expand project list before creating new RexProgramupdate tests	3
[FLINK-3112] Remove unused RecordModelPostPass and replace JavaPlan by Plan.This closes #1436	4
[FLINK-1111] Move Basic and Array Type Information into "flink-core" Project	2
[FLINK-18162][connector/common] Serialize the splits in the AddSplitsEvent.	1
Maven requirements [ci skip]	1
[FLINK-11665] Add DispatcherRunnerImplTest for FLINK-11665	2
[FLINK-28084][Connector/pulsar] Disable retry and delete reconsume logic on PulsarUnorderedPartitionSplitReader.	1
[hotfix] HsMemoryDataSpiller's spilling thread will trigger fatal error when an exception is encountered.	0
[hotfix][runtime] Cleanup IOManager code	4
More generated Tuples up to 25.	5
[FLINK-2550] Simplify Stream Java API Class NamesKeyedDataStream -> KeyedStreamKeyedWindowDataStream -> WindowedStreamNonParallelWindowDataStream -> AllWindowedStreamKeyedWindowFunction -> WindowFunctionWindowFunction -> AllWindowFunction(along with rich functions and reduce function wrappers)WindowedStream.mapWindow -> WindowedStream.applyAllWindowedStream.mapWindow -> AllWindowedStream.applyAlso renamed the tests to match the new names.	1
[FLINK-18721][yarn] Introduce YarnResourceManagerDriver	2
[hotfix] Speed up flink container creation in testcontainers	3
[hotfix] [docs] Fix typos in MemorySegment classThis closes #5199	2
[FLINK-11843] Port and remove DispatcherTest[FLINK-11843] Remove DispatcherTest#testLeaderElectionDispatcherTest#testLeaderElection is superseded byDispatcherRunnerImplNGTest#grantLeadership_validLeader_confirmsLeaderSession.[FLINK-11843] Port DispatcherTest#testJobSuspensionWhenDispatcherLosesLeadershipChanged DispatcherTest#testJobSuspensionWhenDispatcherLosesLeadership intoDispatcherRunnerImplNGTest#revokeLeadership_withExistingLeader_stopsLeaderProcess tocover test logic of #testJobSuspensionWhenDispatcherLosesLeadership.[FLINK-11843] Port DispatcherTest#testFatalErrorAfterJobRecoveryFailurePort DipsatcherTest#testFatalErrorAfterJobRecoveryFailure toDispatcherLeaderProcessImplTest#recoverJobs_withRecoveryFailure_failsFatally[FLINK-11843] Port DispatcherTest#testFatalErrorAfterJobIdRecoveryFailurePort DispatcherTest#testFatalErrorAfterJobIdRecoveryFailure toDispatcherLeaderProcessImplTest#recoverJobs_withRecoveryFailure_failsFatally.[FLINK-11843] Port DispatcherTest#testJobSubmissionErrorAfterJobRecoveryPort DispatcherTest#testJobSubmissionErrorAfterJobRecovery to[FLINK-11843] Port DispatcherTest#testJobRecoveryReplace DispatcherTest#testJobRecovery withDispatcherRunnerImplNGITCase#leaderChange_afterJobSubmission_recoversSubmittedJob.[FLINK-11843] Clean up DispatcherTest	3
[FLINK-19671] Update .editorconfig to conform to checkstyle and import orderingThis puts in place an opinionated code style that matches ourcheckstyle/import ordering requirements.	1
Check constantsets as well as updatesets for checking which keys remainunchanged	4
[streaming] Project version set to 0.2-SNAPSHOT	1
[FLINK-5692] [core] Add an Option to Deactivate Kryo Fallback for SerializersThis closes #3373	1
[hotfix][test] Rename and reformat testCancellationFailsWithBlockingLockNew name testCanceleablesCanceledOnCancelTaskError better reflects what the test is doingwhile CancelFailingTask closer to the test case makes reading the test easier.	3
[hotfix] Add the legacy config option 'taskmanager.heap.size' back.This makes it convenient for later decouple 'taskmanager.heap.size' from 'taskmanager.memory.process.size'.	1
[FLINK-7006] [gelly] Base class using POJOs for Gelly algorithmsGelly algorithms commonly have a Result class extending a Tuple type andimplementing one of the Unary/Binary/TertiaryResult interfaces.Add a Unary/Binary/TertiaryResultBase class implementing each interfaceand convert the Result classes to POJOs extending the base resultclasses.This closes #4201	1
[FLINK-18250] Enrich OOM error messages with more details in ClusterEntrypointThis closes #.	1
[FLINK-14262][table-planner-blink] Add getCatalogManager to FlinkContextThis closes #10039	2
[hotfix][docs] Correct english typo in streamfile sinksThis closes #11678	2
[FLINK-5147] Prevent NPE in LocalFS#delete()This closes #2859.	4
[hotfix] Fix checkstyle violations in TaskManagerServicesBuilder	0
[FLINK-26998][state] Activate default log-level options in RocksDB state backendthis closes #19335.	5
[FLINK-10736] [tests] Use staticly hosted test data for S3 wordcount testsThis avoids issues with eventual consistency/visibility on S3.	0
[FLINK-22210][task] Log conversion of input channels on DEBUG	0
[FLINK-18226][runtime] Fix ActiveResourceManager request extra workers on termination of existing workers.ActiveResourceManager decides whether and how many new wokers to request based on the following equation.workersToRequest = workersRequiredBySlotManager - workersRequestedByResourceManagerNotRegisteredwhere previsoutly 'workersRequestedByResourceManagerNotRegistered' was 'workersRequestedByResourceManagerNotAllocated'.This closes #12620.	5
[hotfix][util] Add a util class to help closing components with timeout.	1
[FLINK-8692][docs] Remove extra parenthesis in scala code samples	4
Fixed Bug with incorrect output directory preparation.	0
Introduced notion of immutable types and stateful/stateless serializers.	2
[hotfix][dist][config] Update the comments of TM process memory size in default flink-conf.yaml.- Correct the description of process memory size.- Provide the alternative flink memory size.	2
[FLINK-1638] [streaming] Added Kafka topic creator and custom offset consumer	1
Functions can now implement ResultTypeQueryable to supply TypeInformation manually.	5
re-openable hashjoin integration test	3
[FLINK-12364] Introduce CheckpointFailureManager for centralized checkpoint failure handling	0
[hotfix][runtime] Do state check before input check in LAZY_FROM_SOURCES scheduling for better performanceState check is much more lightweight than the input check.	1
[FLINK-2909] [gelly] Graph GeneratorsInitial set of scale-free graph generators:- Complete graph- Cycle graph- Empty graph- Grid graph- Hypercube graph- Path graph- RMat graph- Singleton edge graph- Star graphThis closes #1807	1
[FLINK-14450][runtime] Refactor SchedulingTopology to extend base topology[FLINK-14450][runtime] Refactor SchedulingTopology to extend base topology (for review - Part2: implementations)[FLINK-14450][runtime] Refactor SchedulingTopology to extend base topology (for review - Part3: usages)This closes #9936.	2
more test	3
[FLINK-2357] [web dashboard] Added tooltips to timeline	1
[FLINK-26762][network] Add the overdraft buffer in ResultPartition	1
[FLINK-15537][table-planner-blink] Fix code generation to use BinaryRow instead of GenericRow for distinct keysCode generation should use BinaryRow instead of GenericRow for distinct keys to have a consistent behavior of equals and hashcode. Because the distinct key will be deseraizlied as BinaryRow from state when job recovery. This closes #10815	1
[FLINK-17248] Introduce configuration for pool size of io-executor for ClusterEntrypoint and MiniClusterThis closes #11957.	5
[FLINK-21984][table] Change precision argument from optional to required in TO_TIMESTAMP_LTZ(numeric, precision)This closes #15379.	1
[FLINK-18500][table] Make the legacy planner exception more clear when resolving computed columns types for schema	1
[hotfix] Remove Scala dependency from ZooKeeperLeaderElectionTest	3
[quickfix] Made recursive enumeration parameter flag public in FileInputFormat	2
[FLINK-16222][metrics] Support loading reporters as plugins	1
[FLINK-3093] Introduce annotations for interface stability in remaining modulesThis closes #1428	5
[FLINK-16961][hive] Bump Netty to 4.1.44	2
[FLINK-22715][table-runtime] Implement streaming window assigner table function operatorThis closes #16521	1
[FLINK-3817] Remove unused guava dependency from RocksDb backendThis closes #1934	5
Added binary input and output format which uses the objects' TypeSerializer to serialize them.Added InputTypeConfigurable to TypeSerializerOutputFormat to support a more seamless integration.This closes #218.	1
Added setter and getter for numTaskManager in NepheleMiniCluster. Updated WordCountITCase and PackagedProgramEndToEndITCase accordingly.	5
[FLINK-15519][configuration]Preserve logs from BashJavaUtils and make them part of TM logsWe build a separate jar for BashJavaUtils with bundled log4j classes anda configuration that logs to the stdout. Using this jar we run theutility to capture the output. Out of the last line we extract jvmparameters. The rest we pass as an environment variable (INHERITED_LOGS)to the TaskManager process.As part of the EnvironmentInformation printing we log whatever waspassed through the INHERITED_LOGS in the TM/JM process.This closes #10850	2
[FLINK-23629][tests] Remove redundant file-async and mem-async test runs from EventTimeWindowCheckpointingITCaseBecause all snapshots are async, the MEM and MEM_ASYNC, as well as FILE and FILE_ASYNC are now the same.This removes unneccessary cases to save testing time.	3
Added configuration subsection in webinterfaceCloses #16 (GitHub pull request)Also closes FLINK-919	2
[FLINK-17387][hive] Implement LookupableTableSource for Hive connectorThis closes #11990	2
[FLINK-28178][runtime-web] Show the delegated StateBackend and whether changelog is enabled in the UI	0
[FLINK-28312][rest] Introduce REST APIs for log URL retrievalThis closes #20179.	2
[hotfix][connectors/jdbc] Rename JdbcDynamicOutputFormatBuilder to JdbcOutputFormatBuilder	5
[FLINK-20609][table-planner-blink] Introduce BatchPhysicalDataStreamScan, and make BatchExecDataStreamScan only extended from ExecNodeThis closes #14428	5
Merge branch 'datamodel' of https://stratosphere.eu/sewen into datamodel	5
[FLINK-27351][tests] Use sane TM resource spec	1
[hotfix][docs] Fix typo in class doc of KafkaTopicPartitionStateWithPunctuatedWatermarksThis closes #10849 .	2
[FLINK-8338] [flip6] Make CustomCommandLines non static in CliFrontendThis commit changes how CustomCommandLines are registered at the CliFrontend.Henceforth, the CliFrontend is initialized with the set of CustomCommandLinesinstead of registering them statically. This improves maintainability andtestability.This closes #5224.	3
[FLINK-23064][format-json] Make JsonOptions PublicEvolving	5
[FLINK-13312][hive] move tests for data type mappings between Flink and Hive into its own test classThis PR moves UT for data type mapping between Flink and Hive to its own test class.This closes #9151.	3
[FLINK-23041][streaming] Calculation of timeout for switching from AC to UC is based on the global checkpoint start time rather than the local first barrier received time	2
[FLINK-7153] Introduce LocationPreferenceConstraint for schedulingThe LocationPreferenceConstraint defines whether all or any preferred locationshave to be taken into consideration when scheduling tasks. Especially for batchjobs where we do lazy scheduling not all input locations might be known for aconsumer task. Therefore, we set the location preference constraint to any whichmeans that only those location are taken into consideration which are known atscheduling time.[FLINK-7153] Add test casesReplace AtomicReference with AtomicReferenceUpdaterFixUse static imports Preconditions.checkNotNullInitialize ANY array with number of returned futuresRevert formatting changes in SchedulerSet flink-runtime log level in log4j-test.properties to OFFRevert changes to ExecutionVertex#getPreferredLocationsBasedOnInputsFix failing FailoverRegionTestThis closes #4916.	3
[hotfix] Remove unnecessary surefire plugin version in flink-connector-elasticsearch5	2
[FLINK-24772][docs] Add documentation for individual window table-valued function (#17885)	1
[streaming] Twitter connector prototype	5
- Adapted Stratosphere start scripts for MacOS compatibility	5
[FLINK-20921][python] Fixes the Date/Time/Timestamp type in Python DataStream APIThis closes #14607.	5
[streaming] StreamCollector2 added to streamcomponenthelper with fix	0
[FLINK-5454] [docs] Add documentation how to tune streaming applications for large state	2
[docs] Fixes broken links on the setup_quickstart.html site	1
[FLINK-23208] let late processing timers fired immediatelyThis speeds up triggering of the timers, as we don't have to always wait1ms between triggering next timer if all of them are from the past.	2
[FLINK-16512][task] Unaligned checkpoints: API for persistence	2
[FLINK-17050][runtime] Remove methods getVertex() and getResultPartition()Remove methods- SchedulingTopology#getVertex(ExecutionVertexID);- SchedulingTopology#getResultPartition(IntermediateResultPartitionID);	2
[taskmanager] do not process message if not connected to job managerThis commit makes sure that task messages are only processed whenconnected to a job manager. Otherwise, they are dropped. Before, themessage were processed in any case.This closes #914.	4
Create UnionNode in optimized plan when contract has more than onepredecessor per input	1
[FLINK-11519][table] Add function related catalog APIsThis closes #8275	2
Revert "[FLINK-20946][python] Optimize ValueState implementation"This reverts commit cf443681e89e3e942b200253e1b494aa02641bcb	4
[FLINK-16554][task][refactoring] split StreamTask1. Extract static CheckpointingOperation and AsyncCheckpointRunnablefrom StreamTask to separate files to reduce complexity.No changes in logic or structure, just a simple refactoring.2. Cleanup CheckpointingOperation and AsyncCheckpointRunnable:Don't pass StreamTask as an argument3. move registering AsyncCheckpointRunnable Closeable to its run() method	1
[release] Upgrade current version to 1.15 for FlinkKinesisConsumerMigrationTest and create snapshots	1
[hotfix] [end-to-end-tests] fix test_kubernetes_embedded_job.sh and test_docker_embedded_job.sh broken by FLINK-12788	2
[FLINK-14441][table-api] Fix ValueLiteralExpression#getValueAs when value is PeriodWhen value is Period, getValueAs(Integer.class) returns a Long value.This closes #9931	1
[FLINK-25795][python][connector/pulsar] Support pulsar sink connector in PyFlink DataStream APIThis closes #19682.	5
[streaming] Changed String UID to byte array	4
[hotfix] [streaming] Fix race in stream tasks when canceling tasks early.	0
[FLINK-7046] [travis] Hide download logging messagesThis closes #4226.	2
[FLINK-21713][table] Correct function CURRENT_TIMESTAMP/CURRENT_TIME/CURRENT_DATE/NOW/LOCALTIME/LOCALTIMESTAMPThis closes #15303	5
[FLINK-27143][docs][tests] Migrate flink-docs to JUnit 5	3
[FLINK-10282][rest] Separate REST and Dispatcher RPC thread pools	2
[FLINK-9313] [security] (part 3) Activate mutual authentication for RPC/akka	2
[FLINK-7850][build] Add activation property to maven profilesThis closes #5840.	2
[FLINK-6327] [table] Bug in CommonCalc's estimateRowCount() methodThis closes #3740.	0
[FLINK-2793] [runtime-web] Rework JobManagerRetriever to avoid race conditionsThe JobManagerRetriever sets the new leaderGatewayPortFuture directly in the notifyLeaderAddressmethod instead of in one of the futures. This avoids race conditions between multiple futureswhich finish in a different order than they were started. Furthermore, this replaces promisesby futures where a promise is not needed.Add logging statementFix WebRuntimeMonitorITCase to use random port and proper state backendAdd ChannelHandler.Sharable to RuntimeMonitorHandlerRemove sanity check from WebInfoServer to let it work on Yarn	1
[hotfix] Move TestingYarnClusterDescriptor#TestJarFinder into YarnTestUtilsIn order to reuse the TestJarFinder class, this commit moves it into the YarnTestUtilsclass.	3
[FLINK-18926][python][docs] Add a "Environment Variables" document under the "Python API" -> "User Guide" -> "Table API" sectionThis closes #13935.	1
[FLINK-23498][table] Introduce a full planner configurationThis is an MVP version of a layered configuration of Executor and Table API.This closes #16626.	5
[FLINK-17628][python] Remove the unnecessary py4j log information. (#12098)	5
[FLINK-2059] Changed flink-compiler to flink-optimizer in the pom.xmlThis closes #701	5
[FLINK-19495] add documentation for avro-confluent format (#13534)	5
[FLINK-989] Improve error message when not finding enough task slots.	0
[FLINK-11502][tests] Remove obsolete test FlinkActorTest (#7627)	3
[hotfix][release-notes] Update release notes for 1.13 with accumulators semantics change in MiniClusterJobClientFLINK-18685 changed the semantics of the MiniClusterJobClient. This commit updates the 1.13 release notesaccordingly.This closes #16256.	5
[FLINK-2587] [streaming] Make sure that close() is not called while checkpoint methods are in progress.	1
[FLINK-9424] [security] Set default cipher suite to a more compatible cipher suite.The upgraded ciphers are not yet supported on all platforms and JDK versions, makingthe getting-started process rough. Instead, we document our recommendation to set thesevalues in the configuration.This reverts "[FLINK-9310] [security] Update standard cipher suites for secure mode"	5
[FLINK-23519][metrics] Expose state name as varibale if enable state latency tracking	0
[FLINK-7305] [checkstyle] Allow imports from org.apache.flink.shaded + add new import blockThis closes #4425.	2
[FLINK-24017][kryo] Pin registration IDs of Java types	2
Cleaned up ChannelSelector interface	4
[hotfix] Add setupFlinkConfig to KubernetesTestBase to make sure flinkConfig is always setup before used	1
[FLINK-21793][k8s] Use RM generated JVM memory options.This closes #15214	1
towards repeatable hashjoins on constant data path	5
[hotfix][docs] Regenerate config docs	2
[FLINK-19274][table] Update source validation for metadata columns and improve messages	1
[hotfix] [tests] Unimplemented mock methods in RecoverableMultiPartUploadImplTest throw UnsupportedOperationException	1
[FLINK-18893][python] Fix Table.to_pandas for TableEnvironment created via EnvironmentSettingsThis closes #13120.	1
[FLINK-4204] [gelly] Clean up gelly-examplesMoves drivers into separate package. Adds default main class to printusage listing included classes. Includes documentation for runningGelly examples.This closes #2670	1
[FLINK-28993][table-planner] Fix adjusting join cost for dpp query pattern errorThis closes #20596	0
[FLINK-12734][table-planner-blink] remove getVolcanoPlanner method from FlinkOptimizeContext and make RelNodeBlock not depend on TableEnvironmentThis closes #8619	1
[hotfix] [docs] Update docs about streaming joins	2
[FLINK-26148][runtime] Change the format of adaptive batch scheduler config option to jobmanager.adaptive-batch-scheduler.XXXThis closes #18782.	5
[FLINK-23492][runtime] Harder testCachedStatsCleanedAfterCleanupInterval	3
[FLINK-19173][python] Introduce BatchArrowPythonGroupAggregateFunctionOperatorThis closes #13369	1
[FLINK-14574][core/e2e] Wrap FileSystem to use plugin context classloader.Filesystems loaded through PluginManager are wrapped inPluginFileSystem, which swaps the context classloader for all directmethods. Thus, lazily loaded classes (security, optimizations) areloaded with the expected classloader. In particular,java.util.ServiceLoader will use that context classloader to load newservices.This change will fix the s3-hadoop plugin while writing.Also added minio-based s3 batch tests that write to s3.Modified existing s3 batch tests to also write to s3.Modified existing s3 streaming test to checkpoint onto s3.	3
[FLINK-705] [license] Add license reference for TPC-H sample data in tests.	3
[hotfix][docs] Use non deprecated syntax in SinkFunction code sampleThis closes #16116	1
[FLINK-19026][network] Adding PrioritizedDeque and use it in PipelinedSubpartition.PrioritizedDeque supports enqueue elements with priority such that it will be polled after all existing priority elements but before any non-priority element.It is a building block for fair scheduling with priority elevation that will be used also on input side in the next commits.	1
[FLINK-4469] [table] Minor improvements- Fixed typos- Removed implicit conversion with TableCallBuilder- Fixed bugs about expression parser alias and static eval methods- Refactored testsThis closes #2653.	3
[FLINK-5794] [doc] Update the documentation about “UDF/UDTF" support have parameters constructor.This closes #3450	2
[FLINK-6381] [connector] Unnecessary synchronizing object in BucketingSink.	2
[FLINK-2939] add cancel button to web frontendThis closes #1313.	1
Removed unnecessary System.out.println in unit test	3
[hotfix][build][e2e] Invert Java 11 activation conditionIf we are not running on Java 11, then tests failing on Java 11 should still be run. Conversely, these tests should be excluded on Java 11.	3
[FLINK-11578][tests] Port BackPressureStatsTrackerImplITCase to new code baseThis closes #7697.	1
[FLINK-19959][table-planner-blink] Add IT cases for multiple input	1
[FLINK-17284][jdbc][postgres] Fix serial type columns not work in Postgres catalogThis closes #11900	2
[FLINK-18668][table-runtime-blink] BytesHashMap#growAndRehash should release newly allocated segments before throwing the exceptionThis closes #12968	1
Revert "[FLINK-21178][Runtime/Checkpointing] Task failure should trigger master hook's reset() (#14890)"This reverts commit 816ce969	4
[FLINK-21187][runtime] Adds exception historyThe initial implementation only collects the actual exception withoutconsidering any other failures that might happen concurrently.This closes #14798.	0
[FLINK-5541] Missing null check for localJar in FlinkSubmitter#submitTopologyThis closes #4315.	2
[FLINK-3229] Shade Google Protobuf into Kinesis connector to avoid runtime version conflict	5
[hotfix] Only use types defined in CaseClassFieldAccessorTest in the test	3
[ml] Adds convenience functions for Breeze matrix/vector conversion[ml] Adds breeze to flink-dist LICENSE file[ml] Optimizes sanity checks in vector/matrix accessors[ml] Fixes scala check style error with missing whitespaces before and after +[ml] Fixes DenseMatrixTest	3
[FLINK-17876][python][docs] Add documentation on how to use Python UDF in SQL DDLThis closes #12295.	1
[FLINK-917] Rename netty IO thread count parameters	2
Merge branch 'networkfix' into version02Conflicts:nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/NetworkConnectionManager.java	5
[FLINK-19472] Add an option to enable sorted inputs for operatorsI added an option in StreamConfig to enable sorted input forOneInputStreamOperator. If the option is set, the network input will bewrapped with a sorting one.For now the option is never set (unless manually on a StreamGraph, asin a corresponding test). A way for users to use it will be introducedlater.	1
[FLINK-5701] [kafka] FlinkKafkaProducer should check asyncException on checkpointsThis closes #3278.	2
[FLINK-9306] Execute YARN ITCases in both legacy and new modeBefore, always setting mode to LEGACY_MODE when security settings arepresent caused the test never to run with the new code. Now we use thesystem property for determining whether to run in old or new mode.For this, we also need to actually execute an example. Otherwise, noTaskExecutors would be brought up.	1
[FLINK-4952] [scala] Add KeyedStream.flatMap(TimelyFlatMapFunction)	1
[FLINK-9160] Make subclasses of RuntimeContext internal that should be internal	1
New Datamodel runtime integration - adopted hash join	1
[FLINK-13995][legal] Properly exclude netty license directory	2
[hotfix] Remove Mockito from RemoteStreamExecutionEnvironmentTestThis also makes the test actually verify the argument forwarding.Before, the test was ineffectual.	3
Merge branch 'fhueske'Conflicts:pact/pact-examples/pom.xml	5
[hotfix] [core] Consolidate serializer duplication tests in StateDescriptorTest where possible	3
[FLINK-7013] Introduce flink-shaded-netty-4This closes #4452.	2
[FLINK-12765][coordinator] Add the remaining resources to the slot selection strategy	5
[streaming] Added JobGraphBuilder getter to StreamExecEnv	1
[FLINK-23746][tests] Harden SuccessAfterNetworkBuffersFailureITCase.testSuccessfulProgramAfterFailureThis commit decreases the parallelism used by the test job in order to reduce the time it takes to deploythe whole job.This closes #16812.	3
[hotfix] [tests] Fix mini cluster usage and logging/printing in CustomDistributionITCase	2
[dist] Excludes the empty *-tests.jar from being copied to the flink-dist/../examples directory	2
[FLINK-22609][runtime] Generalize AllVerticesIterator	2
[hotfix] Remove throws exception clause from DefaultJobLeaderService#removeJobWith this commit we remove the throws exception clause from DefaultJobLeaderService#removeJob.Even if closing the LeaderRetrievalService fails, we still have removed the entry from theDefaultJobLeaderService and we have stopped the JobManagerLeaderListener so that we won'treact to leader change notifications.	4
[FLINK-28588][rest] Add blocked task manager count and blocked slot count in ResourceOverview and ClusterOverview	1
Fixed start scripts in cluster mode	0
[FLINK-1450] Added GroupFoldFunction and GroupedFoldInvokable with a test. Integrated them into DataStream	5
[FLINK-27890][examples] Fix the bug introduced By [FLINK-19317] to use the return result after assignTimestampsAndWatermarks	1
[hotfix][hdfs] Fixed error message when using HadoopRecoverableWriter on non hdfs.	1
Add "How to contribute" and "coding guidelines" to the project.[ci skip]	1
[FLINK-17554] Allow to register release hooks for the classloaderThis closes #13355	1
[FLINK-17062][python] Fix the conversion from Java row type to Python row typeThis closes #11680.	0
[FLINK-14287] Decouple leader address from LeaderContenderChange LeaderElectionService#confirmLeadership to accept leader address so thatthe LeaderContender does not need to know the address of the potential leaderbefore gaining leadership. This allows to decouple the leader election from theactual leader component.This closes #9813.	1
[FLINK-20455][oss][legal] Move license to META-INF directory	5
[hotfix][docs] Fix typo in sourceSinks.md.	2
[FLINK-23479][table-planner] Fix the unstable test cases about json planThe reason about the unstable test cases is the inner serializer instance in RawType is serialized directly as String to json which is mutable. While for a RawType representing DataView, the inner logical type is stable and accessible, we should serialize the inner logical type to make the json plan stable. For other case, we just keep the previous behavior.This closes #16599	5
Fixed possible NullPointerException when cloud instances are reused	1
